
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08000000 <__gVectors>:
 8000000:	2000c000 	andcs	ip, r0, r0
 8000004:	08000165 	stmdaeq	r0, {r0, r2, r5, r6, r8}
 8000008:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 800000c:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000010:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000014:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000018:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
	...
 800002c:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000030:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 800003c:	080038c1 	stmdaeq	r0, {r0, r6, r7, fp, ip, sp}
 8000040:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000044:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000048:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 800004c:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000050:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000054:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000058:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 800005c:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000060:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000064:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000068:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 800006c:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000070:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000074:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000078:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 800007c:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000080:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000084:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000088:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 800008c:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000090:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000094:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000098:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 800009c:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000a0:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000a4:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000a8:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000ac:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000b0:	08001c1d 	stmdaeq	r0, {r0, r2, r3, r4, sl, fp, ip}
 80000b4:	08001ccd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, fp, ip}
 80000b8:	08001d35 	stmdaeq	r0, {r0, r2, r4, r5, r8, sl, fp, ip}
 80000bc:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000c0:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000c4:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000c8:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000cc:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000d0:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000d4:	00000000 	andeq	r0, r0, r0
 80000d8:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000dc:	08001a29 	stmdaeq	r0, {r0, r3, r5, r9, fp, ip}
 80000e0:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000e4:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000e8:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000ec:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000f0:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000f4:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000f8:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 80000fc:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000100:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000104:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000108:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 800010c:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000110:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000114:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000118:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 800011c:	08001d49 	stmdaeq	r0, {r0, r3, r6, r8, sl, fp, ip}
 8000120:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000124:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000128:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 800012c:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}

Disassembly of section .text:

08000130 <console_init>:
 8000130:	b508      	push	{r3, lr}
 8000132:	f003 fb67 	bl	8003804 <uart0_init>
 8000136:	4804      	ldr	r0, [pc, #16]	; (8000148 <console_init+0x18>)
 8000138:	f003 fb94 	bl	8003864 <uart0_puts>
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <console_init+0x1c>)
 800013e:	f003 fb91 	bl	8003864 <uart0_puts>
 8000142:	2000      	movs	r0, #0
 8000144:	bd08      	pop	{r3, pc}
 8000146:	bf00      	nop
 8000148:	0800533c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, ip, lr}
 800014c:	08005342 	stmdaeq	r0, {r1, r6, r8, r9, ip, lr}
 8000150:	080053fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, ip, lr}
 8000154:	20000000 	andcs	r0, r0, r0
 8000158:	200000ec 	andcs	r0, r0, ip, ror #1
 800015c:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8000160:	20001824 	andcs	r1, r0, r4, lsr #16

08000164 <Reset_Handler>:
 8000164:	2100      	movs	r1, #0
 8000166:	e003      	b.n	8000170 <DataInit>

08000168 <CopyData>:
 8000168:	4b0a      	ldr	r3, [pc, #40]	; (8000194 <Zerobss+0x10>)
 800016a:	585b      	ldr	r3, [r3, r1]
 800016c:	5043      	str	r3, [r0, r1]
 800016e:	3104      	adds	r1, #4

08000170 <DataInit>:
 8000170:	4809      	ldr	r0, [pc, #36]	; (8000198 <Zerobss+0x14>)
 8000172:	4b0a      	ldr	r3, [pc, #40]	; (800019c <Zerobss+0x18>)
 8000174:	1842      	adds	r2, r0, r1
 8000176:	429a      	cmp	r2, r3
 8000178:	d3f6      	bcc.n	8000168 <CopyData>
 800017a:	4a09      	ldr	r2, [pc, #36]	; (80001a0 <Zerobss+0x1c>)
 800017c:	e002      	b.n	8000184 <Zerobss>

0800017e <FillZerobss>:
 800017e:	2300      	movs	r3, #0
 8000180:	f842 3b04 	str.w	r3, [r2], #4

08000184 <Zerobss>:
 8000184:	4b07      	ldr	r3, [pc, #28]	; (80001a4 <Zerobss+0x20>)
 8000186:	429a      	cmp	r2, r3
 8000188:	d3f9      	bcc.n	800017e <FillZerobss>
 800018a:	f003 fba1 	bl	80038d0 <SystemInit>
 800018e:	f000 f89f 	bl	80002d0 <main>
 8000192:	4770      	bx	lr
 8000194:	080053fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, ip, lr}
 8000198:	20000000 	andcs	r0, r0, r0
 800019c:	200000ec 	andcs	r0, r0, ip, ror #1
 80001a0:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 80001a4:	20001824 	andcs	r1, r0, r4, lsr #16

080001a8 <__aeabi_d2f>:
 80001a8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80001ac:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 80001b0:	bf24      	itt	cs
 80001b2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 80001b6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 80001ba:	d90d      	bls.n	80001d8 <__aeabi_d2f+0x30>
 80001bc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80001c0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 80001c4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 80001c8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 80001cc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 80001d0:	bf08      	it	eq
 80001d2:	f020 0001 	biceq.w	r0, r0, #1
 80001d6:	4770      	bx	lr
 80001d8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 80001dc:	d121      	bne.n	8000222 <__aeabi_d2f+0x7a>
 80001de:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 80001e2:	bfbc      	itt	lt
 80001e4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 80001e8:	4770      	bxlt	lr
 80001ea:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80001ee:	ea4f 5252 	mov.w	r2, r2, lsr #21
 80001f2:	f1c2 0218 	rsb	r2, r2, #24
 80001f6:	f1c2 0c20 	rsb	ip, r2, #32
 80001fa:	fa10 f30c 	lsls.w	r3, r0, ip
 80001fe:	fa20 f002 	lsr.w	r0, r0, r2
 8000202:	bf18      	it	ne
 8000204:	f040 0001 	orrne.w	r0, r0, #1
 8000208:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 800020c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000210:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000214:	ea40 000c 	orr.w	r0, r0, ip
 8000218:	fa23 f302 	lsr.w	r3, r3, r2
 800021c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000220:	e7cc      	b.n	80001bc <__aeabi_d2f+0x14>
 8000222:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000226:	d107      	bne.n	8000238 <__aeabi_d2f+0x90>
 8000228:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 800022c:	bf1e      	ittt	ne
 800022e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000232:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000236:	4770      	bxne	lr
 8000238:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 800023c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000240:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000244:	4770      	bx	lr
 8000246:	bf00      	nop

08000248 <__aeabi_uldivmod>:
 8000248:	b953      	cbnz	r3, 8000260 <__aeabi_uldivmod+0x18>
 800024a:	b94a      	cbnz	r2, 8000260 <__aeabi_uldivmod+0x18>
 800024c:	2900      	cmp	r1, #0
 800024e:	bf08      	it	eq
 8000250:	2800      	cmpeq	r0, #0
 8000252:	bf1c      	itt	ne
 8000254:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000258:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 800025c:	f000 b80c 	b.w	8000278 <__aeabi_idiv0>
 8000260:	f1ad 0c08 	sub.w	ip, sp, #8
 8000264:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000268:	f000 fc26 	bl	8000ab8 <__udivmoddi4>
 800026c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000270:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000274:	b004      	add	sp, #16
 8000276:	4770      	bx	lr

08000278 <__aeabi_idiv0>:
 8000278:	4770      	bx	lr
 800027a:	bf00      	nop

0800027c <ADC0_1_IRQHandler>:
 800027c:	e7fe      	b.n	800027c <ADC0_1_IRQHandler>

0800027e <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800027e:	b470      	push	{r4, r5, r6}
 8000280:	790a      	ldrb	r2, [r1, #4]
 8000282:	680b      	ldr	r3, [r1, #0]
 8000284:	7801      	ldrb	r1, [r0, #0]
 8000286:	2a20      	cmp	r2, #32
 8000288:	bf28      	it	cs
 800028a:	2220      	movcs	r2, #32
 800028c:	189c      	adds	r4, r3, r2
 800028e:	b191      	cbz	r1, 80002b6 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x38>
 8000290:	f100 010b 	add.w	r1, r0, #11
 8000294:	f100 050a 	add.w	r5, r0, #10
 8000298:	42a3      	cmp	r3, r4
 800029a:	d107      	bne.n	80002ac <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x2e>
 800029c:	f880 202b 	strb.w	r2, [r0, #43]	; 0x2b
 80002a0:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80002a2:	b170      	cbz	r0, 80002c2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x44>
 80002a4:	6803      	ldr	r3, [r0, #0]
 80002a6:	bc70      	pop	{r4, r5, r6}
 80002a8:	689b      	ldr	r3, [r3, #8]
 80002aa:	4718      	bx	r3
 80002ac:	f813 6b01 	ldrb.w	r6, [r3], #1
 80002b0:	f805 6f01 	strb.w	r6, [r5, #1]!
 80002b4:	e7f0      	b.n	8000298 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x1a>
 80002b6:	f100 0151 	add.w	r1, r0, #81	; 0x51
 80002ba:	42a3      	cmp	r3, r4
 80002bc:	d103      	bne.n	80002c6 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x48>
 80002be:	f880 2072 	strb.w	r2, [r0, #114]	; 0x72
 80002c2:	bc70      	pop	{r4, r5, r6}
 80002c4:	4770      	bx	lr
 80002c6:	f813 5b01 	ldrb.w	r5, [r3], #1
 80002ca:	f801 5f01 	strb.w	r5, [r1, #1]!
 80002ce:	e7f4      	b.n	80002ba <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3c>

080002d0 <main>:
 80002d0:	b570      	push	{r4, r5, r6, lr}
 80002d2:	f5ad 7d74 	sub.w	sp, sp, #976	; 0x3d0
 80002d6:	a804      	add	r0, sp, #16
 80002d8:	f003 f912 	bl	8003500 <Hardware::Hardware()>
 80002dc:	a80c      	add	r0, sp, #48	; 0x30
 80002de:	f002 fa25 	bl	800272c <Network::Network()>
 80002e2:	a814      	add	r0, sp, #80	; 0x50
 80002e4:	f003 f8ea 	bl	80034bc <LedBlink::LedBlink()>
 80002e8:	a81a      	add	r0, sp, #104	; 0x68
 80002ea:	f002 febb 	bl	8003064 <Display::Display()>
 80002ee:	a805      	add	r0, sp, #20
 80002f0:	f002 fad0 	bl	8002894 <ConfigStore::ConfigStore()>
 80002f4:	a82d      	add	r0, sp, #180	; 0xb4
 80002f6:	f000 fd43 	bl	8000d80 <Widget::Widget()>
 80002fa:	2300      	movs	r3, #0
 80002fc:	4619      	mov	r1, r3
 80002fe:	2201      	movs	r2, #1
 8000300:	a82d      	add	r0, sp, #180	; 0xb4
 8000302:	f001 fe3b 	bl	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000306:	a806      	add	r0, sp, #24
 8000308:	f002 fc6a 	bl	8002be0 <StoreWidget::StoreWidget()>
 800030c:	a906      	add	r1, sp, #24
 800030e:	a810      	add	r0, sp, #64	; 0x40
 8000310:	f001 f8e8 	bl	80014e4 <WidgetParams::WidgetParams(WidgetParamsStore*)>
 8000314:	a810      	add	r0, sp, #64	; 0x40
 8000316:	f001 f8ed 	bl	80014f4 <WidgetParams::Load()>
 800031a:	b128      	cbz	r0, 8000328 <main+0x58>
 800031c:	a810      	add	r0, sp, #64	; 0x40
 800031e:	f001 f988 	bl	8001632 <WidgetParams::Dump()>
 8000322:	a810      	add	r0, sp, #64	; 0x40
 8000324:	f001 f962 	bl	80015ec <WidgetParams::Set()>
 8000328:	a808      	add	r0, sp, #32
 800032a:	f002 fc1b 	bl	8002b64 <StoreRDMDevice::StoreRDMDevice()>
 800032e:	a908      	add	r1, sp, #32
 8000330:	a821      	add	r0, sp, #132	; 0x84
 8000332:	f002 f9a5 	bl	8002680 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 8000336:	a834      	add	r0, sp, #208	; 0xd0
 8000338:	4950      	ldr	r1, [pc, #320]	; (800047c <main+0x1ac>)
 800033a:	f7ff ffa0 	bl	800027e <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800033e:	a821      	add	r0, sp, #132	; 0x84
 8000340:	f002 f9b0 	bl	80026a4 <RDMDeviceParams::Load()>
 8000344:	b130      	cbz	r0, 8000354 <main+0x84>
 8000346:	a821      	add	r0, sp, #132	; 0x84
 8000348:	f002 f9ee 	bl	8002728 <RDMDeviceParams::Dump()>
 800034c:	a934      	add	r1, sp, #208	; 0xd0
 800034e:	a821      	add	r0, sp, #132	; 0x84
 8000350:	f002 f9b3 	bl	80026ba <RDMDeviceParams::Set(RDMDevice*)>
 8000354:	2301      	movs	r3, #1
 8000356:	f88d 30d0 	strb.w	r3, [sp, #208]	; 0xd0
 800035a:	f50d 7391 	add.w	r3, sp, #290	; 0x122
 800035e:	930a      	str	r3, [sp, #40]	; 0x28
 8000360:	a90a      	add	r1, sp, #40	; 0x28
 8000362:	f89d 3142 	ldrb.w	r3, [sp, #322]	; 0x142
 8000366:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800036a:	a834      	add	r0, sp, #208	; 0xd0
 800036c:	f7ff ff87 	bl	800027e <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 8000370:	f89d 3142 	ldrb.w	r3, [sp, #322]	; 0x142
 8000374:	f89d 50fb 	ldrb.w	r5, [sp, #251]	; 0xfb
 8000378:	f10d 01da 	add.w	r1, sp, #218	; 0xda
 800037c:	2200      	movs	r2, #0
 800037e:	42aa      	cmp	r2, r5
 8000380:	d375      	bcc.n	800046e <main+0x19e>
 8000382:	f8ad 3144 	strh.w	r3, [sp, #324]	; 0x144
 8000386:	4b3e      	ldr	r3, [pc, #248]	; (8000480 <main+0x1b0>)
 8000388:	f89d 404b 	ldrb.w	r4, [sp, #75]	; 0x4b
 800038c:	4a3d      	ldr	r2, [pc, #244]	; (8000484 <main+0x1b4>)
 800038e:	493e      	ldr	r1, [pc, #248]	; (8000488 <main+0x1b8>)
 8000390:	9300      	str	r3, [sp, #0]
 8000392:	483e      	ldr	r0, [pc, #248]	; (800048c <main+0x1bc>)
 8000394:	4b3e      	ldr	r3, [pc, #248]	; (8000490 <main+0x1c0>)
 8000396:	f000 fb7f 	bl	8000a98 <printf>
 800039a:	4b3e      	ldr	r3, [pc, #248]	; (8000494 <main+0x1c4>)
 800039c:	483e      	ldr	r0, [pc, #248]	; (8000498 <main+0x1c8>)
 800039e:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 80003a2:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 80003a6:	4621      	mov	r1, r4
 80003a8:	f000 fb76 	bl	8000a98 <printf>
 80003ac:	f89d 30d6 	ldrb.w	r3, [sp, #214]	; 0xd6
 80003b0:	9302      	str	r3, [sp, #8]
 80003b2:	f89d 30d5 	ldrb.w	r3, [sp, #213]	; 0xd5
 80003b6:	9301      	str	r3, [sp, #4]
 80003b8:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 80003bc:	f89d 20d2 	ldrb.w	r2, [sp, #210]	; 0xd2
 80003c0:	f89d 10d1 	ldrb.w	r1, [sp, #209]	; 0xd1
 80003c4:	9300      	str	r3, [sp, #0]
 80003c6:	4835      	ldr	r0, [pc, #212]	; (800049c <main+0x1cc>)
 80003c8:	f89d 30d3 	ldrb.w	r3, [sp, #211]	; 0xd3
 80003cc:	f000 fb64 	bl	8000a98 <printf>
 80003d0:	f10d 02db 	add.w	r2, sp, #219	; 0xdb
 80003d4:	4629      	mov	r1, r5
 80003d6:	4832      	ldr	r0, [pc, #200]	; (80004a0 <main+0x1d0>)
 80003d8:	f000 fb5e 	bl	8000a98 <printf>
 80003dc:	2102      	movs	r1, #2
 80003de:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80003e2:	f003 fbef 	bl	8003bc4 <fwdgt_config>
 80003e6:	2801      	cmp	r0, #1
 80003e8:	bf0c      	ite	eq
 80003ea:	2301      	moveq	r3, #1
 80003ec:	2300      	movne	r3, #0
 80003ee:	f88d 3010 	strb.w	r3, [sp, #16]
 80003f2:	d101      	bne.n	80003f8 <main+0x128>
 80003f4:	f003 fbd6 	bl	8003ba4 <fwdgt_enable>
 80003f8:	2c03      	cmp	r4, #3
 80003fa:	d108      	bne.n	800040e <main+0x13e>
 80003fc:	2301      	movs	r3, #1
 80003fe:	a82d      	add	r0, sp, #180	; 0xb4
 8000400:	461a      	mov	r2, r3
 8000402:	2100      	movs	r1, #0
 8000404:	f001 fdba 	bl	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000408:	a82d      	add	r0, sp, #180	; 0xb4
 800040a:	f001 f9f5 	bl	80017f8 <Widget::SnifferFillTransmitBuffer()>
 800040e:	4d25      	ldr	r5, [pc, #148]	; (80004a4 <main+0x1d4>)
 8000410:	4c25      	ldr	r4, [pc, #148]	; (80004a8 <main+0x1d8>)
 8000412:	2601      	movs	r6, #1
 8000414:	f003 fbce 	bl	8003bb4 <fwdgt_counter_reload>
 8000418:	a82d      	add	r0, sp, #180	; 0xb4
 800041a:	f000 ff7b 	bl	8001314 <Widget::ReceiveDataFromHost()>
 800041e:	a82d      	add	r0, sp, #180	; 0xb4
 8000420:	f000 fd28 	bl	8000e74 <Widget::ReceivedDmxPacket()>
 8000424:	a82d      	add	r0, sp, #180	; 0xb4
 8000426:	f000 fded 	bl	8001004 <Widget::ReceivedDmxChangeOfStatePacket()>
 800042a:	a82d      	add	r0, sp, #180	; 0xb4
 800042c:	f000 fe78 	bl	8001120 <Widget::ReceivedRdmPacket()>
 8000430:	a82d      	add	r0, sp, #180	; 0xb4
 8000432:	f000 feeb 	bl	800120c <Widget::RdmTimeout()>
 8000436:	a82d      	add	r0, sp, #180	; 0xb4
 8000438:	f001 f988 	bl	800174c <Widget::SnifferRdm()>
 800043c:	a82d      	add	r0, sp, #180	; 0xb4
 800043e:	f001 f95f 	bl	8001700 <Widget::SnifferDmx()>
 8000442:	a805      	add	r0, sp, #20
 8000444:	f002 fabc 	bl	80029c0 <ConfigStore::Flash()>
 8000448:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800044a:	2a00      	cmp	r2, #0
 800044c:	d0e2      	beq.n	8000414 <main+0x144>
 800044e:	682b      	ldr	r3, [r5, #0]
 8000450:	9919      	ldr	r1, [sp, #100]	; 0x64
 8000452:	1a5b      	subs	r3, r3, r1
 8000454:	429a      	cmp	r2, r3
 8000456:	d8dd      	bhi.n	8000414 <main+0x144>
 8000458:	682b      	ldr	r3, [r5, #0]
 800045a:	9319      	str	r3, [sp, #100]	; 0x64
 800045c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800045e:	2b01      	cmp	r3, #1
 8000460:	f083 0201 	eor.w	r2, r3, #1
 8000464:	9218      	str	r2, [sp, #96]	; 0x60
 8000466:	bf14      	ite	ne
 8000468:	6126      	strne	r6, [r4, #16]
 800046a:	6163      	streq	r3, [r4, #20]
 800046c:	e7d2      	b.n	8000414 <main+0x144>
 800046e:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8000472:	4403      	add	r3, r0
 8000474:	b29b      	uxth	r3, r3
 8000476:	3201      	adds	r2, #1
 8000478:	e781      	b.n	800037e <main+0xae>
 800047a:	bf00      	nop
 800047c:	08004c20 	stmdaeq	r0, {r5, sl, fp, lr}
 8000480:	08004b6e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9, fp, lr}
 8000484:	08004b44 	stmdaeq	r0, {r2, r6, r8, r9, fp, lr}
 8000488:	08004c28 	stmdaeq	r0, {r3, r5, sl, fp, lr}
 800048c:	08004b4f 	stmdaeq	r0, {r0, r1, r2, r3, r6, r8, r9, fp, lr}
 8000490:	08004b38 	stmdaeq	r0, {r3, r4, r5, r8, r9, fp, lr}
 8000494:	08004c2c 	stmdaeq	r0, {r2, r3, r5, sl, fp, lr}
 8000498:	08004b77 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r8, r9, fp, lr}
 800049c:	08004bd1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, fp, lr}
 80004a0:	08004bfb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r8, r9, fp, lr}
 80004a4:	2000181c 	andcs	r1, r0, ip, lsl r8
 80004a8:	40011000 	andmi	r1, r1, r0

080004ac <_itostr>:
 80004ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004ae:	0fc7      	lsrs	r7, r0, #31
 80004b0:	b091      	sub	sp, #68	; 0x44
 80004b2:	bf18      	it	ne
 80004b4:	4240      	negne	r0, r0
 80004b6:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 80004ba:	b9c8      	cbnz	r0, 80004f0 <_itostr+0x44>
 80004bc:	2330      	movs	r3, #48	; 0x30
 80004be:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80004c2:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 80004c6:	b132      	cbz	r2, 80004d6 <_itostr+0x2a>
 80004c8:	4668      	mov	r0, sp
 80004ca:	2530      	movs	r5, #48	; 0x30
 80004cc:	1ae6      	subs	r6, r4, r3
 80004ce:	4296      	cmp	r6, r2
 80004d0:	da01      	bge.n	80004d6 <_itostr+0x2a>
 80004d2:	4283      	cmp	r3, r0
 80004d4:	d81c      	bhi.n	8000510 <_itostr+0x64>
 80004d6:	b117      	cbz	r7, 80004de <_itostr+0x32>
 80004d8:	222d      	movs	r2, #45	; 0x2d
 80004da:	f803 2901 	strb.w	r2, [r3], #-1
 80004de:	3301      	adds	r3, #1
 80004e0:	1ae0      	subs	r0, r4, r3
 80004e2:	3901      	subs	r1, #1
 80004e4:	aa10      	add	r2, sp, #64	; 0x40
 80004e6:	4293      	cmp	r3, r2
 80004e8:	d315      	bcc.n	8000516 <_itostr+0x6a>
 80004ea:	3001      	adds	r0, #1
 80004ec:	b011      	add	sp, #68	; 0x44
 80004ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80004f0:	4623      	mov	r3, r4
 80004f2:	250a      	movs	r5, #10
 80004f4:	46ec      	mov	ip, sp
 80004f6:	fb90 f6f5 	sdiv	r6, r0, r5
 80004fa:	fb05 0016 	mls	r0, r5, r6, r0
 80004fe:	3030      	adds	r0, #48	; 0x30
 8000500:	f803 0901 	strb.w	r0, [r3], #-1
 8000504:	4630      	mov	r0, r6
 8000506:	2e00      	cmp	r6, #0
 8000508:	d0dd      	beq.n	80004c6 <_itostr+0x1a>
 800050a:	4563      	cmp	r3, ip
 800050c:	d1f3      	bne.n	80004f6 <_itostr+0x4a>
 800050e:	e7da      	b.n	80004c6 <_itostr+0x1a>
 8000510:	f803 5901 	strb.w	r5, [r3], #-1
 8000514:	e7da      	b.n	80004cc <_itostr+0x20>
 8000516:	f813 2b01 	ldrb.w	r2, [r3], #1
 800051a:	f801 2f01 	strb.w	r2, [r1, #1]!
 800051e:	e7e1      	b.n	80004e4 <_itostr+0x38>

08000520 <_xputch>:
 8000520:	4603      	mov	r3, r0
 8000522:	b410      	push	{r4}
 8000524:	4c09      	ldr	r4, [pc, #36]	; (800054c <_xputch+0x2c>)
 8000526:	68da      	ldr	r2, [r3, #12]
 8000528:	4608      	mov	r0, r1
 800052a:	6821      	ldr	r1, [r4, #0]
 800052c:	3201      	adds	r2, #1
 800052e:	60da      	str	r2, [r3, #12]
 8000530:	b141      	cbz	r1, 8000544 <_xputch+0x24>
 8000532:	691b      	ldr	r3, [r3, #16]
 8000534:	429a      	cmp	r2, r3
 8000536:	da02      	bge.n	800053e <_xputch+0x1e>
 8000538:	1c4b      	adds	r3, r1, #1
 800053a:	6023      	str	r3, [r4, #0]
 800053c:	7008      	strb	r0, [r1, #0]
 800053e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000542:	4770      	bx	lr
 8000544:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000548:	f002 bfb3 	b.w	80034b2 <console_putc>
 800054c:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08000550 <_format_int>:
 8000550:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000554:	4698      	mov	r8, r3
 8000556:	b091      	sub	sp, #68	; 0x44
 8000558:	ea52 0308 	orrs.w	r3, r2, r8
 800055c:	4606      	mov	r6, r0
 800055e:	4617      	mov	r7, r2
 8000560:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8000564:	d133      	bne.n	80005ce <_format_int+0x7e>
 8000566:	2330      	movs	r3, #48	; 0x30
 8000568:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800056c:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8000570:	6833      	ldr	r3, [r6, #0]
 8000572:	07d8      	lsls	r0, r3, #31
 8000574:	d507      	bpl.n	8000586 <_format_int+0x36>
 8000576:	6871      	ldr	r1, [r6, #4]
 8000578:	466a      	mov	r2, sp
 800057a:	2030      	movs	r0, #48	; 0x30
 800057c:	1b2f      	subs	r7, r5, r4
 800057e:	428f      	cmp	r7, r1
 8000580:	da01      	bge.n	8000586 <_format_int+0x36>
 8000582:	4294      	cmp	r4, r2
 8000584:	d839      	bhi.n	80005fa <_format_int+0xaa>
 8000586:	0699      	lsls	r1, r3, #26
 8000588:	d507      	bpl.n	800059a <_format_int+0x4a>
 800058a:	68b1      	ldr	r1, [r6, #8]
 800058c:	466a      	mov	r2, sp
 800058e:	2030      	movs	r0, #48	; 0x30
 8000590:	1b2f      	subs	r7, r5, r4
 8000592:	428f      	cmp	r7, r1
 8000594:	da01      	bge.n	800059a <_format_int+0x4a>
 8000596:	4294      	cmp	r4, r2
 8000598:	d832      	bhi.n	8000600 <_format_int+0xb0>
 800059a:	071a      	lsls	r2, r3, #28
 800059c:	bf44      	itt	mi
 800059e:	222d      	movmi	r2, #45	; 0x2d
 80005a0:	f804 2901 	strbmi.w	r2, [r4], #-1
 80005a4:	065b      	lsls	r3, r3, #25
 80005a6:	d407      	bmi.n	80005b8 <_format_int+0x68>
 80005a8:	68b2      	ldr	r2, [r6, #8]
 80005aa:	466b      	mov	r3, sp
 80005ac:	2120      	movs	r1, #32
 80005ae:	1b28      	subs	r0, r5, r4
 80005b0:	4290      	cmp	r0, r2
 80005b2:	da01      	bge.n	80005b8 <_format_int+0x68>
 80005b4:	429c      	cmp	r4, r3
 80005b6:	d826      	bhi.n	8000606 <_format_int+0xb6>
 80005b8:	1b2d      	subs	r5, r5, r4
 80005ba:	3401      	adds	r4, #1
 80005bc:	ab10      	add	r3, sp, #64	; 0x40
 80005be:	429c      	cmp	r4, r3
 80005c0:	d324      	bcc.n	800060c <_format_int+0xbc>
 80005c2:	68b3      	ldr	r3, [r6, #8]
 80005c4:	42ab      	cmp	r3, r5
 80005c6:	dc27      	bgt.n	8000618 <_format_int+0xc8>
 80005c8:	b011      	add	sp, #68	; 0x44
 80005ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80005ce:	462c      	mov	r4, r5
 80005d0:	46e9      	mov	r9, sp
 80005d2:	4638      	mov	r0, r7
 80005d4:	4641      	mov	r1, r8
 80005d6:	220a      	movs	r2, #10
 80005d8:	2300      	movs	r3, #0
 80005da:	f7ff fe35 	bl	8000248 <__aeabi_uldivmod>
 80005de:	3230      	adds	r2, #48	; 0x30
 80005e0:	f804 2901 	strb.w	r2, [r4], #-1
 80005e4:	463a      	mov	r2, r7
 80005e6:	4643      	mov	r3, r8
 80005e8:	2a0a      	cmp	r2, #10
 80005ea:	f173 0300 	sbcs.w	r3, r3, #0
 80005ee:	4607      	mov	r7, r0
 80005f0:	4688      	mov	r8, r1
 80005f2:	d3bd      	bcc.n	8000570 <_format_int+0x20>
 80005f4:	454c      	cmp	r4, r9
 80005f6:	d1ec      	bne.n	80005d2 <_format_int+0x82>
 80005f8:	e7ba      	b.n	8000570 <_format_int+0x20>
 80005fa:	f804 0901 	strb.w	r0, [r4], #-1
 80005fe:	e7bd      	b.n	800057c <_format_int+0x2c>
 8000600:	f804 0901 	strb.w	r0, [r4], #-1
 8000604:	e7c4      	b.n	8000590 <_format_int+0x40>
 8000606:	f804 1901 	strb.w	r1, [r4], #-1
 800060a:	e7d0      	b.n	80005ae <_format_int+0x5e>
 800060c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000610:	4630      	mov	r0, r6
 8000612:	f7ff ff85 	bl	8000520 <_xputch>
 8000616:	e7d1      	b.n	80005bc <_format_int+0x6c>
 8000618:	2120      	movs	r1, #32
 800061a:	4630      	mov	r0, r6
 800061c:	f7ff ff80 	bl	8000520 <_xputch>
 8000620:	3501      	adds	r5, #1
 8000622:	e7ce      	b.n	80005c2 <_format_int+0x72>

08000624 <_format_hex>:
 8000624:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000626:	b091      	sub	sp, #68	; 0x44
 8000628:	6804      	ldr	r4, [r0, #0]
 800062a:	4606      	mov	r6, r0
 800062c:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8000630:	bb61      	cbnz	r1, 800068c <_format_hex+0x68>
 8000632:	2330      	movs	r3, #48	; 0x30
 8000634:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8000638:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 800063c:	07e5      	lsls	r5, r4, #31
 800063e:	d507      	bpl.n	8000650 <_format_hex+0x2c>
 8000640:	6870      	ldr	r0, [r6, #4]
 8000642:	4669      	mov	r1, sp
 8000644:	2530      	movs	r5, #48	; 0x30
 8000646:	1ad7      	subs	r7, r2, r3
 8000648:	4287      	cmp	r7, r0
 800064a:	da01      	bge.n	8000650 <_format_hex+0x2c>
 800064c:	428b      	cmp	r3, r1
 800064e:	d831      	bhi.n	80006b4 <_format_hex+0x90>
 8000650:	06a0      	lsls	r0, r4, #26
 8000652:	d507      	bpl.n	8000664 <_format_hex+0x40>
 8000654:	68b0      	ldr	r0, [r6, #8]
 8000656:	4669      	mov	r1, sp
 8000658:	2530      	movs	r5, #48	; 0x30
 800065a:	1ad7      	subs	r7, r2, r3
 800065c:	4287      	cmp	r7, r0
 800065e:	da01      	bge.n	8000664 <_format_hex+0x40>
 8000660:	428b      	cmp	r3, r1
 8000662:	d82a      	bhi.n	80006ba <_format_hex+0x96>
 8000664:	0661      	lsls	r1, r4, #25
 8000666:	d407      	bmi.n	8000678 <_format_hex+0x54>
 8000668:	68b0      	ldr	r0, [r6, #8]
 800066a:	4669      	mov	r1, sp
 800066c:	2420      	movs	r4, #32
 800066e:	1ad5      	subs	r5, r2, r3
 8000670:	4285      	cmp	r5, r0
 8000672:	da01      	bge.n	8000678 <_format_hex+0x54>
 8000674:	428b      	cmp	r3, r1
 8000676:	d823      	bhi.n	80006c0 <_format_hex+0x9c>
 8000678:	1ad5      	subs	r5, r2, r3
 800067a:	1c5c      	adds	r4, r3, #1
 800067c:	ab10      	add	r3, sp, #64	; 0x40
 800067e:	429c      	cmp	r4, r3
 8000680:	d321      	bcc.n	80006c6 <_format_hex+0xa2>
 8000682:	68b3      	ldr	r3, [r6, #8]
 8000684:	429d      	cmp	r5, r3
 8000686:	db24      	blt.n	80006d2 <_format_hex+0xae>
 8000688:	b011      	add	sp, #68	; 0x44
 800068a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800068c:	f014 0f02 	tst.w	r4, #2
 8000690:	bf0c      	ite	eq
 8000692:	2757      	moveq	r7, #87	; 0x57
 8000694:	2737      	movne	r7, #55	; 0x37
 8000696:	4613      	mov	r3, r2
 8000698:	466d      	mov	r5, sp
 800069a:	f001 000f 	and.w	r0, r1, #15
 800069e:	2809      	cmp	r0, #9
 80006a0:	bf94      	ite	ls
 80006a2:	3030      	addls	r0, #48	; 0x30
 80006a4:	19c0      	addhi	r0, r0, r7
 80006a6:	0909      	lsrs	r1, r1, #4
 80006a8:	f803 0901 	strb.w	r0, [r3], #-1
 80006ac:	d0c6      	beq.n	800063c <_format_hex+0x18>
 80006ae:	42ab      	cmp	r3, r5
 80006b0:	d1f3      	bne.n	800069a <_format_hex+0x76>
 80006b2:	e7c3      	b.n	800063c <_format_hex+0x18>
 80006b4:	f803 5901 	strb.w	r5, [r3], #-1
 80006b8:	e7c5      	b.n	8000646 <_format_hex+0x22>
 80006ba:	f803 5901 	strb.w	r5, [r3], #-1
 80006be:	e7cc      	b.n	800065a <_format_hex+0x36>
 80006c0:	f803 4901 	strb.w	r4, [r3], #-1
 80006c4:	e7d3      	b.n	800066e <_format_hex+0x4a>
 80006c6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006ca:	4630      	mov	r0, r6
 80006cc:	f7ff ff28 	bl	8000520 <_xputch>
 80006d0:	e7d4      	b.n	800067c <_format_hex+0x58>
 80006d2:	2120      	movs	r1, #32
 80006d4:	4630      	mov	r0, r6
 80006d6:	f7ff ff23 	bl	8000520 <_xputch>
 80006da:	3501      	adds	r5, #1
 80006dc:	e7d1      	b.n	8000682 <_format_hex+0x5e>
	...

080006e0 <_vprintf>:
 80006e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80006e4:	f04f 0800 	mov.w	r8, #0
 80006e8:	b096      	sub	sp, #88	; 0x58
 80006ea:	e9cd 8004 	strd	r8, r0, [sp, #16]
 80006ee:	4614      	mov	r4, r2
 80006f0:	af06      	add	r7, sp, #24
 80006f2:	780b      	ldrb	r3, [r1, #0]
 80006f4:	b91b      	cbnz	r3, 80006fe <_vprintf+0x1e>
 80006f6:	9804      	ldr	r0, [sp, #16]
 80006f8:	b016      	add	sp, #88	; 0x58
 80006fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80006fe:	2b25      	cmp	r3, #37	; 0x25
 8000700:	f101 0601 	add.w	r6, r1, #1
 8000704:	d005      	beq.n	8000712 <_vprintf+0x32>
 8000706:	4619      	mov	r1, r3
 8000708:	a801      	add	r0, sp, #4
 800070a:	f7ff ff09 	bl	8000520 <_xputch>
 800070e:	4631      	mov	r1, r6
 8000710:	e7ef      	b.n	80006f2 <_vprintf+0x12>
 8000712:	784b      	ldrb	r3, [r1, #1]
 8000714:	f8cd 800c 	str.w	r8, [sp, #12]
 8000718:	2b30      	cmp	r3, #48	; 0x30
 800071a:	e9cd 8801 	strd	r8, r8, [sp, #4]
 800071e:	d129      	bne.n	8000774 <_vprintf+0x94>
 8000720:	2320      	movs	r3, #32
 8000722:	9301      	str	r3, [sp, #4]
 8000724:	1c8e      	adds	r6, r1, #2
 8000726:	2200      	movs	r2, #0
 8000728:	4635      	mov	r5, r6
 800072a:	4613      	mov	r3, r2
 800072c:	f04f 0c0a 	mov.w	ip, #10
 8000730:	7829      	ldrb	r1, [r5, #0]
 8000732:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8000736:	2809      	cmp	r0, #9
 8000738:	462e      	mov	r6, r5
 800073a:	f105 0501 	add.w	r5, r5, #1
 800073e:	d91d      	bls.n	800077c <_vprintf+0x9c>
 8000740:	b12a      	cbz	r2, 800074e <_vprintf+0x6e>
 8000742:	9303      	str	r3, [sp, #12]
 8000744:	b11b      	cbz	r3, 800074e <_vprintf+0x6e>
 8000746:	9b01      	ldr	r3, [sp, #4]
 8000748:	f043 0310 	orr.w	r3, r3, #16
 800074c:	9301      	str	r3, [sp, #4]
 800074e:	292e      	cmp	r1, #46	; 0x2e
 8000750:	d123      	bne.n	800079a <_vprintf+0xba>
 8000752:	7873      	ldrb	r3, [r6, #1]
 8000754:	2b2a      	cmp	r3, #42	; 0x2a
 8000756:	d015      	beq.n	8000784 <_vprintf+0xa4>
 8000758:	2100      	movs	r1, #0
 800075a:	1c70      	adds	r0, r6, #1
 800075c:	460a      	mov	r2, r1
 800075e:	250a      	movs	r5, #10
 8000760:	7803      	ldrb	r3, [r0, #0]
 8000762:	3b30      	subs	r3, #48	; 0x30
 8000764:	2b09      	cmp	r3, #9
 8000766:	4606      	mov	r6, r0
 8000768:	f100 0001 	add.w	r0, r0, #1
 800076c:	d958      	bls.n	8000820 <_vprintf+0x140>
 800076e:	b181      	cbz	r1, 8000792 <_vprintf+0xb2>
 8000770:	9202      	str	r2, [sp, #8]
 8000772:	e00e      	b.n	8000792 <_vprintf+0xb2>
 8000774:	2b2d      	cmp	r3, #45	; 0x2d
 8000776:	d1d6      	bne.n	8000726 <_vprintf+0x46>
 8000778:	2340      	movs	r3, #64	; 0x40
 800077a:	e7d2      	b.n	8000722 <_vprintf+0x42>
 800077c:	fb0c 0303 	mla	r3, ip, r3, r0
 8000780:	2201      	movs	r2, #1
 8000782:	e7d5      	b.n	8000730 <_vprintf+0x50>
 8000784:	f854 3b04 	ldr.w	r3, [r4], #4
 8000788:	2b00      	cmp	r3, #0
 800078a:	bfb8      	it	lt
 800078c:	425b      	neglt	r3, r3
 800078e:	3602      	adds	r6, #2
 8000790:	9302      	str	r3, [sp, #8]
 8000792:	9b01      	ldr	r3, [sp, #4]
 8000794:	f043 0301 	orr.w	r3, r3, #1
 8000798:	9301      	str	r3, [sp, #4]
 800079a:	7833      	ldrb	r3, [r6, #0]
 800079c:	2b6c      	cmp	r3, #108	; 0x6c
 800079e:	bf04      	itt	eq
 80007a0:	3601      	addeq	r6, #1
 80007a2:	9b01      	ldreq	r3, [sp, #4]
 80007a4:	7831      	ldrb	r1, [r6, #0]
 80007a6:	bf04      	itt	eq
 80007a8:	f043 0304 	orreq.w	r3, r3, #4
 80007ac:	9301      	streq	r3, [sp, #4]
 80007ae:	2958      	cmp	r1, #88	; 0x58
 80007b0:	f000 8169 	beq.w	8000a86 <_vprintf+0x3a6>
 80007b4:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 80007b8:	b2da      	uxtb	r2, r3
 80007ba:	2a15      	cmp	r2, #21
 80007bc:	d8a4      	bhi.n	8000708 <_vprintf+0x28>
 80007be:	2b15      	cmp	r3, #21
 80007c0:	d8a2      	bhi.n	8000708 <_vprintf+0x28>
 80007c2:	a201      	add	r2, pc, #4	; (adr r2, 80007c8 <_vprintf+0xe8>)
 80007c4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80007c8:	08000829 	stmdaeq	r0, {r0, r3, r5, fp}
 80007cc:	0800083b 	stmdaeq	r0, {r0, r1, r3, r4, r5, fp}
 80007d0:	08000709 	stmdaeq	r0, {r0, r3, r8, r9, sl}
 80007d4:	08000871 	stmdaeq	r0, {r0, r4, r5, r6, fp}
 80007d8:	08000709 	stmdaeq	r0, {r0, r3, r8, r9, sl}
 80007dc:	08000709 	stmdaeq	r0, {r0, r3, r8, r9, sl}
 80007e0:	0800083b 	stmdaeq	r0, {r0, r1, r3, r4, r5, fp}
 80007e4:	08000709 	stmdaeq	r0, {r0, r3, r8, r9, sl}
 80007e8:	08000709 	stmdaeq	r0, {r0, r3, r8, r9, sl}
 80007ec:	08000709 	stmdaeq	r0, {r0, r3, r8, r9, sl}
 80007f0:	08000709 	stmdaeq	r0, {r0, r3, r8, r9, sl}
 80007f4:	08000709 	stmdaeq	r0, {r0, r3, r8, r9, sl}
 80007f8:	08000709 	stmdaeq	r0, {r0, r3, r8, r9, sl}
 80007fc:	080009c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, fp}
 8000800:	08000709 	stmdaeq	r0, {r0, r3, r8, r9, sl}
 8000804:	08000709 	stmdaeq	r0, {r0, r3, r8, r9, sl}
 8000808:	080009f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp}
 800080c:	08000709 	stmdaeq	r0, {r0, r3, r8, r9, sl}
 8000810:	08000a67 	stmdaeq	r0, {r0, r1, r2, r5, r6, r9, fp}
 8000814:	08000709 	stmdaeq	r0, {r0, r3, r8, r9, sl}
 8000818:	08000709 	stmdaeq	r0, {r0, r3, r8, r9, sl}
 800081c:	08000a8f 	stmdaeq	r0, {r0, r1, r2, r3, r7, r9, fp}
 8000820:	fb05 3202 	mla	r2, r5, r2, r3
 8000824:	2101      	movs	r1, #1
 8000826:	e79b      	b.n	8000760 <_vprintf+0x80>
 8000828:	4625      	mov	r5, r4
 800082a:	a801      	add	r0, sp, #4
 800082c:	f855 1b04 	ldr.w	r1, [r5], #4
 8000830:	f7ff fe76 	bl	8000520 <_xputch>
 8000834:	3601      	adds	r6, #1
 8000836:	462c      	mov	r4, r5
 8000838:	e769      	b.n	800070e <_vprintf+0x2e>
 800083a:	9901      	ldr	r1, [sp, #4]
 800083c:	074d      	lsls	r5, r1, #29
 800083e:	bf4b      	itete	mi
 8000840:	3407      	addmi	r4, #7
 8000842:	4625      	movpl	r5, r4
 8000844:	f024 0407 	bicmi.w	r4, r4, #7
 8000848:	f855 2b04 	ldrpl.w	r2, [r5], #4
 800084c:	bf45      	ittet	mi
 800084e:	6863      	ldrmi	r3, [r4, #4]
 8000850:	4625      	movmi	r5, r4
 8000852:	17d3      	asrpl	r3, r2, #31
 8000854:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8000858:	2b00      	cmp	r3, #0
 800085a:	da05      	bge.n	8000868 <_vprintf+0x188>
 800085c:	f041 0108 	orr.w	r1, r1, #8
 8000860:	4252      	negs	r2, r2
 8000862:	9101      	str	r1, [sp, #4]
 8000864:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000868:	a801      	add	r0, sp, #4
 800086a:	f7ff fe71 	bl	8000550 <_format_int>
 800086e:	e7e1      	b.n	8000834 <_vprintf+0x154>
 8000870:	3407      	adds	r4, #7
 8000872:	f024 0507 	bic.w	r5, r4, #7
 8000876:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 800087a:	f7ff fc95 	bl	80001a8 <__aeabi_d2f>
 800087e:	9b01      	ldr	r3, [sp, #4]
 8000880:	ee07 0a90 	vmov	s15, r0
 8000884:	07dc      	lsls	r4, r3, #31
 8000886:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800088a:	bf4c      	ite	mi
 800088c:	9c02      	ldrmi	r4, [sp, #8]
 800088e:	2406      	movpl	r4, #6
 8000890:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000894:	bf48      	it	mi
 8000896:	eef1 7a67 	vnegmi.f32	s15, s15
 800089a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800089e:	bf4a      	itet	mi
 80008a0:	f10d 0a19 	addmi.w	sl, sp, #25
 80008a4:	46ba      	movpl	sl, r7
 80008a6:	232d      	movmi	r3, #45	; 0x2d
 80008a8:	ee17 0a10 	vmov	r0, s14
 80008ac:	f04f 0200 	mov.w	r2, #0
 80008b0:	4651      	mov	r1, sl
 80008b2:	bf48      	it	mi
 80008b4:	f88d 3018 	strbmi.w	r3, [sp, #24]
 80008b8:	f7ff fdf8 	bl	80004ac <_itostr>
 80008bc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80008c0:	232e      	movs	r3, #46	; 0x2e
 80008c2:	f80a 3000 	strb.w	r3, [sl, r0]
 80008c6:	eb0a 0900 	add.w	r9, sl, r0
 80008ca:	230a      	movs	r3, #10
 80008cc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80008d0:	1c62      	adds	r2, r4, #1
 80008d2:	f109 0901 	add.w	r9, r9, #1
 80008d6:	4619      	mov	r1, r3
 80008d8:	2c00      	cmp	r4, #0
 80008da:	dc3d      	bgt.n	8000958 <_vprintf+0x278>
 80008dc:	ee07 3a10 	vmov	s14, r3
 80008e0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80008e4:	4649      	mov	r1, r9
 80008e6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80008ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80008ee:	ee17 0a90 	vmov	r0, s15
 80008f2:	f7ff fddb 	bl	80004ac <_itostr>
 80008f6:	4448      	add	r0, r9
 80008f8:	1bc0      	subs	r0, r0, r7
 80008fa:	1e44      	subs	r4, r0, #1
 80008fc:	193a      	adds	r2, r7, r4
 80008fe:	5d3b      	ldrb	r3, [r7, r4]
 8000900:	2b34      	cmp	r3, #52	; 0x34
 8000902:	d911      	bls.n	8000928 <_vprintf+0x248>
 8000904:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 8000908:	292e      	cmp	r1, #46	; 0x2e
 800090a:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
 800090e:	d029      	beq.n	8000964 <_vprintf+0x284>
 8000910:	469c      	mov	ip, r3
 8000912:	f04f 0e30 	mov.w	lr, #48	; 0x30
 8000916:	4663      	mov	r3, ip
 8000918:	f81c 1901 	ldrb.w	r1, [ip], #-1
 800091c:	2939      	cmp	r1, #57	; 0x39
 800091e:	d01e      	beq.n	800095e <_vprintf+0x27e>
 8000920:	292e      	cmp	r1, #46	; 0x2e
 8000922:	d01f      	beq.n	8000964 <_vprintf+0x284>
 8000924:	3101      	adds	r1, #1
 8000926:	7019      	strb	r1, [r3, #0]
 8000928:	f104 0358 	add.w	r3, r4, #88	; 0x58
 800092c:	446b      	add	r3, sp
 800092e:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8000932:	2b2e      	cmp	r3, #46	; 0x2e
 8000934:	bf08      	it	eq
 8000936:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800093a:	46a1      	mov	r9, r4
 800093c:	9b03      	ldr	r3, [sp, #12]
 800093e:	4599      	cmp	r9, r3
 8000940:	db3b      	blt.n	80009ba <_vprintf+0x2da>
 8000942:	46b9      	mov	r9, r7
 8000944:	2c00      	cmp	r4, #0
 8000946:	f77f af75 	ble.w	8000834 <_vprintf+0x154>
 800094a:	f819 1b01 	ldrb.w	r1, [r9], #1
 800094e:	a801      	add	r0, sp, #4
 8000950:	f7ff fde6 	bl	8000520 <_xputch>
 8000954:	3c01      	subs	r4, #1
 8000956:	e7f5      	b.n	8000944 <_vprintf+0x264>
 8000958:	434b      	muls	r3, r1
 800095a:	3c01      	subs	r4, #1
 800095c:	e7bc      	b.n	80008d8 <_vprintf+0x1f8>
 800095e:	f88c e001 	strb.w	lr, [ip, #1]
 8000962:	e7d8      	b.n	8000916 <_vprintf+0x236>
 8000964:	3b01      	subs	r3, #1
 8000966:	f04f 0c30 	mov.w	ip, #48	; 0x30
 800096a:	7819      	ldrb	r1, [r3, #0]
 800096c:	2939      	cmp	r1, #57	; 0x39
 800096e:	d112      	bne.n	8000996 <_vprintf+0x2b6>
 8000970:	42bb      	cmp	r3, r7
 8000972:	d20d      	bcs.n	8000990 <_vprintf+0x2b0>
 8000974:	1c5c      	adds	r4, r3, #1
 8000976:	1c99      	adds	r1, r3, #2
 8000978:	428c      	cmp	r4, r1
 800097a:	eba2 0203 	sub.w	r2, r2, r3
 800097e:	d913      	bls.n	80009a8 <_vprintf+0x2c8>
 8000980:	4619      	mov	r1, r3
 8000982:	441a      	add	r2, r3
 8000984:	428a      	cmp	r2, r1
 8000986:	d10b      	bne.n	80009a0 <_vprintf+0x2c0>
 8000988:	2231      	movs	r2, #49	; 0x31
 800098a:	705a      	strb	r2, [r3, #1]
 800098c:	4604      	mov	r4, r0
 800098e:	e7cb      	b.n	8000928 <_vprintf+0x248>
 8000990:	f803 c901 	strb.w	ip, [r3], #-1
 8000994:	e7e9      	b.n	800096a <_vprintf+0x28a>
 8000996:	42bb      	cmp	r3, r7
 8000998:	d3ec      	bcc.n	8000974 <_vprintf+0x294>
 800099a:	292d      	cmp	r1, #45	; 0x2d
 800099c:	d0ea      	beq.n	8000974 <_vprintf+0x294>
 800099e:	e7c1      	b.n	8000924 <_vprintf+0x244>
 80009a0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80009a4:	704c      	strb	r4, [r1, #1]
 80009a6:	e7ed      	b.n	8000984 <_vprintf+0x2a4>
 80009a8:	4414      	add	r4, r2
 80009aa:	440a      	add	r2, r1
 80009ac:	428a      	cmp	r2, r1
 80009ae:	d0eb      	beq.n	8000988 <_vprintf+0x2a8>
 80009b0:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 80009b4:	f802 cd01 	strb.w	ip, [r2, #-1]!
 80009b8:	e7f8      	b.n	80009ac <_vprintf+0x2cc>
 80009ba:	2120      	movs	r1, #32
 80009bc:	a801      	add	r0, sp, #4
 80009be:	f7ff fdaf 	bl	8000520 <_xputch>
 80009c2:	f109 0901 	add.w	r9, r9, #1
 80009c6:	e7b9      	b.n	800093c <_vprintf+0x25c>
 80009c8:	4625      	mov	r5, r4
 80009ca:	2308      	movs	r3, #8
 80009cc:	f855 4b04 	ldr.w	r4, [r5], #4
 80009d0:	9303      	str	r3, [sp, #12]
 80009d2:	2130      	movs	r1, #48	; 0x30
 80009d4:	2320      	movs	r3, #32
 80009d6:	a801      	add	r0, sp, #4
 80009d8:	9301      	str	r3, [sp, #4]
 80009da:	f7ff fda1 	bl	8000520 <_xputch>
 80009de:	2178      	movs	r1, #120	; 0x78
 80009e0:	a801      	add	r0, sp, #4
 80009e2:	f7ff fd9d 	bl	8000520 <_xputch>
 80009e6:	4621      	mov	r1, r4
 80009e8:	a801      	add	r0, sp, #4
 80009ea:	f7ff fe1b 	bl	8000624 <_format_hex>
 80009ee:	e721      	b.n	8000834 <_vprintf+0x154>
 80009f0:	4625      	mov	r5, r4
 80009f2:	2400      	movs	r4, #0
 80009f4:	f855 9b04 	ldr.w	r9, [r5], #4
 80009f8:	f819 3004 	ldrb.w	r3, [r9, r4]
 80009fc:	b993      	cbnz	r3, 8000a24 <_vprintf+0x344>
 80009fe:	9b01      	ldr	r3, [sp, #4]
 8000a00:	07d9      	lsls	r1, r3, #31
 8000a02:	d503      	bpl.n	8000a0c <_vprintf+0x32c>
 8000a04:	9b02      	ldr	r3, [sp, #8]
 8000a06:	429c      	cmp	r4, r3
 8000a08:	bfa8      	it	ge
 8000a0a:	461c      	movge	r4, r3
 8000a0c:	9b01      	ldr	r3, [sp, #4]
 8000a0e:	065a      	lsls	r2, r3, #25
 8000a10:	f104 0a01 	add.w	sl, r4, #1
 8000a14:	d403      	bmi.n	8000a1e <_vprintf+0x33e>
 8000a16:	9b03      	ldr	r3, [sp, #12]
 8000a18:	429c      	cmp	r4, r3
 8000a1a:	db05      	blt.n	8000a28 <_vprintf+0x348>
 8000a1c:	4654      	mov	r4, sl
 8000a1e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8000a22:	e00d      	b.n	8000a40 <_vprintf+0x360>
 8000a24:	3401      	adds	r4, #1
 8000a26:	e7e7      	b.n	80009f8 <_vprintf+0x318>
 8000a28:	2120      	movs	r1, #32
 8000a2a:	a801      	add	r0, sp, #4
 8000a2c:	f7ff fd78 	bl	8000520 <_xputch>
 8000a30:	4654      	mov	r4, sl
 8000a32:	e7eb      	b.n	8000a0c <_vprintf+0x32c>
 8000a34:	a801      	add	r0, sp, #4
 8000a36:	f7ff fd73 	bl	8000520 <_xputch>
 8000a3a:	9b02      	ldr	r3, [sp, #8]
 8000a3c:	3b01      	subs	r3, #1
 8000a3e:	9302      	str	r3, [sp, #8]
 8000a40:	9b01      	ldr	r3, [sp, #4]
 8000a42:	07db      	lsls	r3, r3, #31
 8000a44:	d501      	bpl.n	8000a4a <_vprintf+0x36a>
 8000a46:	9b02      	ldr	r3, [sp, #8]
 8000a48:	b11b      	cbz	r3, 8000a52 <_vprintf+0x372>
 8000a4a:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8000a4e:	2900      	cmp	r1, #0
 8000a50:	d1f0      	bne.n	8000a34 <_vprintf+0x354>
 8000a52:	9b03      	ldr	r3, [sp, #12]
 8000a54:	429c      	cmp	r4, r3
 8000a56:	f6bf aeed 	bge.w	8000834 <_vprintf+0x154>
 8000a5a:	2120      	movs	r1, #32
 8000a5c:	a801      	add	r0, sp, #4
 8000a5e:	f7ff fd5f 	bl	8000520 <_xputch>
 8000a62:	3401      	adds	r4, #1
 8000a64:	e7f5      	b.n	8000a52 <_vprintf+0x372>
 8000a66:	9b01      	ldr	r3, [sp, #4]
 8000a68:	f013 0304 	ands.w	r3, r3, #4
 8000a6c:	bf1d      	ittte	ne
 8000a6e:	3407      	addne	r4, #7
 8000a70:	f024 0407 	bicne.w	r4, r4, #7
 8000a74:	4625      	movne	r5, r4
 8000a76:	4625      	moveq	r5, r4
 8000a78:	bf1a      	itte	ne
 8000a7a:	f855 2b08 	ldrne.w	r2, [r5], #8
 8000a7e:	6863      	ldrne	r3, [r4, #4]
 8000a80:	f855 2b04 	ldreq.w	r2, [r5], #4
 8000a84:	e6f0      	b.n	8000868 <_vprintf+0x188>
 8000a86:	9b01      	ldr	r3, [sp, #4]
 8000a88:	f043 0302 	orr.w	r3, r3, #2
 8000a8c:	9301      	str	r3, [sp, #4]
 8000a8e:	4625      	mov	r5, r4
 8000a90:	f855 1b04 	ldr.w	r1, [r5], #4
 8000a94:	e7a8      	b.n	80009e8 <_vprintf+0x308>
 8000a96:	bf00      	nop

08000a98 <printf>:
 8000a98:	b40f      	push	{r0, r1, r2, r3}
 8000a9a:	b507      	push	{r0, r1, r2, lr}
 8000a9c:	aa04      	add	r2, sp, #16
 8000a9e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8000aa2:	f852 1b04 	ldr.w	r1, [r2], #4
 8000aa6:	9201      	str	r2, [sp, #4]
 8000aa8:	f7ff fe1a 	bl	80006e0 <_vprintf>
 8000aac:	b003      	add	sp, #12
 8000aae:	f85d eb04 	ldr.w	lr, [sp], #4
 8000ab2:	b004      	add	sp, #16
 8000ab4:	4770      	bx	lr
	...

08000ab8 <__udivmoddi4>:
 8000ab8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000abc:	9e08      	ldr	r6, [sp, #32]
 8000abe:	460d      	mov	r5, r1
 8000ac0:	4604      	mov	r4, r0
 8000ac2:	460f      	mov	r7, r1
 8000ac4:	2b00      	cmp	r3, #0
 8000ac6:	d14a      	bne.n	8000b5e <__udivmoddi4+0xa6>
 8000ac8:	428a      	cmp	r2, r1
 8000aca:	4694      	mov	ip, r2
 8000acc:	d965      	bls.n	8000b9a <__udivmoddi4+0xe2>
 8000ace:	fab2 f382 	clz	r3, r2
 8000ad2:	b143      	cbz	r3, 8000ae6 <__udivmoddi4+0x2e>
 8000ad4:	fa02 fc03 	lsl.w	ip, r2, r3
 8000ad8:	f1c3 0220 	rsb	r2, r3, #32
 8000adc:	409f      	lsls	r7, r3
 8000ade:	fa20 f202 	lsr.w	r2, r0, r2
 8000ae2:	4317      	orrs	r7, r2
 8000ae4:	409c      	lsls	r4, r3
 8000ae6:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000aea:	fa1f f58c 	uxth.w	r5, ip
 8000aee:	fbb7 f1fe 	udiv	r1, r7, lr
 8000af2:	0c22      	lsrs	r2, r4, #16
 8000af4:	fb0e 7711 	mls	r7, lr, r1, r7
 8000af8:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000afc:	fb01 f005 	mul.w	r0, r1, r5
 8000b00:	4290      	cmp	r0, r2
 8000b02:	d90a      	bls.n	8000b1a <__udivmoddi4+0x62>
 8000b04:	eb1c 0202 	adds.w	r2, ip, r2
 8000b08:	f101 37ff 	add.w	r7, r1, #4294967295	; 0xffffffff
 8000b0c:	f080 811c 	bcs.w	8000d48 <__udivmoddi4+0x290>
 8000b10:	4290      	cmp	r0, r2
 8000b12:	f240 8119 	bls.w	8000d48 <__udivmoddi4+0x290>
 8000b16:	3902      	subs	r1, #2
 8000b18:	4462      	add	r2, ip
 8000b1a:	1a12      	subs	r2, r2, r0
 8000b1c:	b2a4      	uxth	r4, r4
 8000b1e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000b22:	fb0e 2210 	mls	r2, lr, r0, r2
 8000b26:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000b2a:	fb00 f505 	mul.w	r5, r0, r5
 8000b2e:	42a5      	cmp	r5, r4
 8000b30:	d90a      	bls.n	8000b48 <__udivmoddi4+0x90>
 8000b32:	eb1c 0404 	adds.w	r4, ip, r4
 8000b36:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8000b3a:	f080 8107 	bcs.w	8000d4c <__udivmoddi4+0x294>
 8000b3e:	42a5      	cmp	r5, r4
 8000b40:	f240 8104 	bls.w	8000d4c <__udivmoddi4+0x294>
 8000b44:	4464      	add	r4, ip
 8000b46:	3802      	subs	r0, #2
 8000b48:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000b4c:	1b64      	subs	r4, r4, r5
 8000b4e:	2100      	movs	r1, #0
 8000b50:	b11e      	cbz	r6, 8000b5a <__udivmoddi4+0xa2>
 8000b52:	40dc      	lsrs	r4, r3
 8000b54:	2300      	movs	r3, #0
 8000b56:	e9c6 4300 	strd	r4, r3, [r6]
 8000b5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b5e:	428b      	cmp	r3, r1
 8000b60:	d908      	bls.n	8000b74 <__udivmoddi4+0xbc>
 8000b62:	2e00      	cmp	r6, #0
 8000b64:	f000 80ed 	beq.w	8000d42 <__udivmoddi4+0x28a>
 8000b68:	2100      	movs	r1, #0
 8000b6a:	e9c6 0500 	strd	r0, r5, [r6]
 8000b6e:	4608      	mov	r0, r1
 8000b70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b74:	fab3 f183 	clz	r1, r3
 8000b78:	2900      	cmp	r1, #0
 8000b7a:	d149      	bne.n	8000c10 <__udivmoddi4+0x158>
 8000b7c:	42ab      	cmp	r3, r5
 8000b7e:	d302      	bcc.n	8000b86 <__udivmoddi4+0xce>
 8000b80:	4282      	cmp	r2, r0
 8000b82:	f200 80f8 	bhi.w	8000d76 <__udivmoddi4+0x2be>
 8000b86:	1a84      	subs	r4, r0, r2
 8000b88:	eb65 0203 	sbc.w	r2, r5, r3
 8000b8c:	2001      	movs	r0, #1
 8000b8e:	4617      	mov	r7, r2
 8000b90:	2e00      	cmp	r6, #0
 8000b92:	d0e2      	beq.n	8000b5a <__udivmoddi4+0xa2>
 8000b94:	e9c6 4700 	strd	r4, r7, [r6]
 8000b98:	e7df      	b.n	8000b5a <__udivmoddi4+0xa2>
 8000b9a:	b902      	cbnz	r2, 8000b9e <__udivmoddi4+0xe6>
 8000b9c:	deff      	udf	#255	; 0xff
 8000b9e:	fab2 f382 	clz	r3, r2
 8000ba2:	2b00      	cmp	r3, #0
 8000ba4:	f040 8090 	bne.w	8000cc8 <__udivmoddi4+0x210>
 8000ba8:	1a8a      	subs	r2, r1, r2
 8000baa:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000bae:	fa1f fe8c 	uxth.w	lr, ip
 8000bb2:	2101      	movs	r1, #1
 8000bb4:	fbb2 f5f7 	udiv	r5, r2, r7
 8000bb8:	fb07 2015 	mls	r0, r7, r5, r2
 8000bbc:	0c22      	lsrs	r2, r4, #16
 8000bbe:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000bc2:	fb0e f005 	mul.w	r0, lr, r5
 8000bc6:	4290      	cmp	r0, r2
 8000bc8:	d908      	bls.n	8000bdc <__udivmoddi4+0x124>
 8000bca:	eb1c 0202 	adds.w	r2, ip, r2
 8000bce:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8000bd2:	d202      	bcs.n	8000bda <__udivmoddi4+0x122>
 8000bd4:	4290      	cmp	r0, r2
 8000bd6:	f200 80cb 	bhi.w	8000d70 <__udivmoddi4+0x2b8>
 8000bda:	4645      	mov	r5, r8
 8000bdc:	1a12      	subs	r2, r2, r0
 8000bde:	b2a4      	uxth	r4, r4
 8000be0:	fbb2 f0f7 	udiv	r0, r2, r7
 8000be4:	fb07 2210 	mls	r2, r7, r0, r2
 8000be8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000bec:	fb0e fe00 	mul.w	lr, lr, r0
 8000bf0:	45a6      	cmp	lr, r4
 8000bf2:	d908      	bls.n	8000c06 <__udivmoddi4+0x14e>
 8000bf4:	eb1c 0404 	adds.w	r4, ip, r4
 8000bf8:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8000bfc:	d202      	bcs.n	8000c04 <__udivmoddi4+0x14c>
 8000bfe:	45a6      	cmp	lr, r4
 8000c00:	f200 80bb 	bhi.w	8000d7a <__udivmoddi4+0x2c2>
 8000c04:	4610      	mov	r0, r2
 8000c06:	eba4 040e 	sub.w	r4, r4, lr
 8000c0a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000c0e:	e79f      	b.n	8000b50 <__udivmoddi4+0x98>
 8000c10:	f1c1 0720 	rsb	r7, r1, #32
 8000c14:	408b      	lsls	r3, r1
 8000c16:	fa22 fc07 	lsr.w	ip, r2, r7
 8000c1a:	ea4c 0c03 	orr.w	ip, ip, r3
 8000c1e:	fa05 f401 	lsl.w	r4, r5, r1
 8000c22:	fa20 f307 	lsr.w	r3, r0, r7
 8000c26:	40fd      	lsrs	r5, r7
 8000c28:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000c2c:	4323      	orrs	r3, r4
 8000c2e:	fbb5 f8f9 	udiv	r8, r5, r9
 8000c32:	fa1f fe8c 	uxth.w	lr, ip
 8000c36:	fb09 5518 	mls	r5, r9, r8, r5
 8000c3a:	0c1c      	lsrs	r4, r3, #16
 8000c3c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000c40:	fb08 f50e 	mul.w	r5, r8, lr
 8000c44:	42a5      	cmp	r5, r4
 8000c46:	fa02 f201 	lsl.w	r2, r2, r1
 8000c4a:	fa00 f001 	lsl.w	r0, r0, r1
 8000c4e:	d90b      	bls.n	8000c68 <__udivmoddi4+0x1b0>
 8000c50:	eb1c 0404 	adds.w	r4, ip, r4
 8000c54:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8000c58:	f080 8088 	bcs.w	8000d6c <__udivmoddi4+0x2b4>
 8000c5c:	42a5      	cmp	r5, r4
 8000c5e:	f240 8085 	bls.w	8000d6c <__udivmoddi4+0x2b4>
 8000c62:	f1a8 0802 	sub.w	r8, r8, #2
 8000c66:	4464      	add	r4, ip
 8000c68:	1b64      	subs	r4, r4, r5
 8000c6a:	b29d      	uxth	r5, r3
 8000c6c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000c70:	fb09 4413 	mls	r4, r9, r3, r4
 8000c74:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000c78:	fb03 fe0e 	mul.w	lr, r3, lr
 8000c7c:	45a6      	cmp	lr, r4
 8000c7e:	d908      	bls.n	8000c92 <__udivmoddi4+0x1da>
 8000c80:	eb1c 0404 	adds.w	r4, ip, r4
 8000c84:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
 8000c88:	d26c      	bcs.n	8000d64 <__udivmoddi4+0x2ac>
 8000c8a:	45a6      	cmp	lr, r4
 8000c8c:	d96a      	bls.n	8000d64 <__udivmoddi4+0x2ac>
 8000c8e:	3b02      	subs	r3, #2
 8000c90:	4464      	add	r4, ip
 8000c92:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000c96:	fba3 9502 	umull	r9, r5, r3, r2
 8000c9a:	eba4 040e 	sub.w	r4, r4, lr
 8000c9e:	42ac      	cmp	r4, r5
 8000ca0:	46c8      	mov	r8, r9
 8000ca2:	46ae      	mov	lr, r5
 8000ca4:	d356      	bcc.n	8000d54 <__udivmoddi4+0x29c>
 8000ca6:	d053      	beq.n	8000d50 <__udivmoddi4+0x298>
 8000ca8:	b156      	cbz	r6, 8000cc0 <__udivmoddi4+0x208>
 8000caa:	ebb0 0208 	subs.w	r2, r0, r8
 8000cae:	eb64 040e 	sbc.w	r4, r4, lr
 8000cb2:	fa04 f707 	lsl.w	r7, r4, r7
 8000cb6:	40ca      	lsrs	r2, r1
 8000cb8:	40cc      	lsrs	r4, r1
 8000cba:	4317      	orrs	r7, r2
 8000cbc:	e9c6 7400 	strd	r7, r4, [r6]
 8000cc0:	4618      	mov	r0, r3
 8000cc2:	2100      	movs	r1, #0
 8000cc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cc8:	f1c3 0120 	rsb	r1, r3, #32
 8000ccc:	fa02 fc03 	lsl.w	ip, r2, r3
 8000cd0:	fa20 f201 	lsr.w	r2, r0, r1
 8000cd4:	fa25 f101 	lsr.w	r1, r5, r1
 8000cd8:	409d      	lsls	r5, r3
 8000cda:	432a      	orrs	r2, r5
 8000cdc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ce0:	fa1f fe8c 	uxth.w	lr, ip
 8000ce4:	fbb1 f0f7 	udiv	r0, r1, r7
 8000ce8:	fb07 1510 	mls	r5, r7, r0, r1
 8000cec:	0c11      	lsrs	r1, r2, #16
 8000cee:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000cf2:	fb00 f50e 	mul.w	r5, r0, lr
 8000cf6:	428d      	cmp	r5, r1
 8000cf8:	fa04 f403 	lsl.w	r4, r4, r3
 8000cfc:	d908      	bls.n	8000d10 <__udivmoddi4+0x258>
 8000cfe:	eb1c 0101 	adds.w	r1, ip, r1
 8000d02:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 8000d06:	d22f      	bcs.n	8000d68 <__udivmoddi4+0x2b0>
 8000d08:	428d      	cmp	r5, r1
 8000d0a:	d92d      	bls.n	8000d68 <__udivmoddi4+0x2b0>
 8000d0c:	3802      	subs	r0, #2
 8000d0e:	4461      	add	r1, ip
 8000d10:	1b49      	subs	r1, r1, r5
 8000d12:	b292      	uxth	r2, r2
 8000d14:	fbb1 f5f7 	udiv	r5, r1, r7
 8000d18:	fb07 1115 	mls	r1, r7, r5, r1
 8000d1c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000d20:	fb05 f10e 	mul.w	r1, r5, lr
 8000d24:	4291      	cmp	r1, r2
 8000d26:	d908      	bls.n	8000d3a <__udivmoddi4+0x282>
 8000d28:	eb1c 0202 	adds.w	r2, ip, r2
 8000d2c:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8000d30:	d216      	bcs.n	8000d60 <__udivmoddi4+0x2a8>
 8000d32:	4291      	cmp	r1, r2
 8000d34:	d914      	bls.n	8000d60 <__udivmoddi4+0x2a8>
 8000d36:	3d02      	subs	r5, #2
 8000d38:	4462      	add	r2, ip
 8000d3a:	1a52      	subs	r2, r2, r1
 8000d3c:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000d40:	e738      	b.n	8000bb4 <__udivmoddi4+0xfc>
 8000d42:	4631      	mov	r1, r6
 8000d44:	4630      	mov	r0, r6
 8000d46:	e708      	b.n	8000b5a <__udivmoddi4+0xa2>
 8000d48:	4639      	mov	r1, r7
 8000d4a:	e6e6      	b.n	8000b1a <__udivmoddi4+0x62>
 8000d4c:	4610      	mov	r0, r2
 8000d4e:	e6fb      	b.n	8000b48 <__udivmoddi4+0x90>
 8000d50:	4548      	cmp	r0, r9
 8000d52:	d2a9      	bcs.n	8000ca8 <__udivmoddi4+0x1f0>
 8000d54:	ebb9 0802 	subs.w	r8, r9, r2
 8000d58:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000d5c:	3b01      	subs	r3, #1
 8000d5e:	e7a3      	b.n	8000ca8 <__udivmoddi4+0x1f0>
 8000d60:	4645      	mov	r5, r8
 8000d62:	e7ea      	b.n	8000d3a <__udivmoddi4+0x282>
 8000d64:	462b      	mov	r3, r5
 8000d66:	e794      	b.n	8000c92 <__udivmoddi4+0x1da>
 8000d68:	4640      	mov	r0, r8
 8000d6a:	e7d1      	b.n	8000d10 <__udivmoddi4+0x258>
 8000d6c:	46d0      	mov	r8, sl
 8000d6e:	e77b      	b.n	8000c68 <__udivmoddi4+0x1b0>
 8000d70:	3d02      	subs	r5, #2
 8000d72:	4462      	add	r2, ip
 8000d74:	e732      	b.n	8000bdc <__udivmoddi4+0x124>
 8000d76:	4608      	mov	r0, r1
 8000d78:	e70a      	b.n	8000b90 <__udivmoddi4+0xd8>
 8000d7a:	4464      	add	r4, ip
 8000d7c:	3802      	subs	r0, #2
 8000d7e:	e742      	b.n	8000c06 <__udivmoddi4+0x14e>

08000d80 <Widget::Widget()>:
 8000d80:	b510      	push	{r4, lr}
 8000d82:	4604      	mov	r4, r0
 8000d84:	f001 f928 	bl	8001fd8 <Dmx::Dmx()>
 8000d88:	f104 001c 	add.w	r0, r4, #28
 8000d8c:	f001 fc02 	bl	8002594 <RDMDevice::RDMDevice()>
 8000d90:	2300      	movs	r3, #0
 8000d92:	e9c4 33bc 	strd	r3, r3, [r4, #752]	; 0x2f0
 8000d96:	e9c4 33be 	strd	r3, r3, [r4, #760]	; 0x2f8
 8000d9a:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8000d9e:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 8000da2:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
 8000da6:	4b03      	ldr	r3, [pc, #12]	; (8000db4 <Widget::Widget()+0x34>)
 8000da8:	601c      	str	r4, [r3, #0]
 8000daa:	f001 fb0f 	bl	80023cc <FT245RL_init>
 8000dae:	4620      	mov	r0, r4
 8000db0:	bd10      	pop	{r4, pc}
 8000db2:	bf00      	nop
 8000db4:	200000f4 	strdcs	r0, [r0], -r4

08000db8 <Widget::GetParamsReply()>:
 8000db8:	b513      	push	{r0, r1, r4, lr}
 8000dba:	4604      	mov	r4, r0
 8000dbc:	4911      	ldr	r1, [pc, #68]	; (8000e04 <Widget::GetParamsReply()+0x4c>)
 8000dbe:	2007      	movs	r0, #7
 8000dc0:	f000 fb8c 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8000dc4:	2100      	movs	r1, #0
 8000dc6:	201c      	movs	r0, #28
 8000dc8:	f000 fb88 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8000dcc:	4b0e      	ldr	r3, [pc, #56]	; (8000e08 <Widget::GetParamsReply()+0x50>)
 8000dce:	781b      	ldrb	r3, [r3, #0]
 8000dd0:	f88d 3002 	strb.w	r3, [sp, #2]
 8000dd4:	4b0d      	ldr	r3, [pc, #52]	; (8000e0c <Widget::GetParamsReply()+0x54>)
 8000dd6:	781b      	ldrb	r3, [r3, #0]
 8000dd8:	f88d 3000 	strb.w	r3, [sp]
 8000ddc:	4b0c      	ldr	r3, [pc, #48]	; (8000e10 <Widget::GetParamsReply()+0x58>)
 8000dde:	781b      	ldrb	r3, [r3, #0]
 8000de0:	f88d 3001 	strb.w	r3, [sp, #1]
 8000de4:	4b0b      	ldr	r3, [pc, #44]	; (8000e14 <Widget::GetParamsReply()+0x5c>)
 8000de6:	781b      	ldrb	r3, [r3, #0]
 8000de8:	f88d 3003 	strb.w	r3, [sp, #3]
 8000dec:	4b0a      	ldr	r3, [pc, #40]	; (8000e18 <Widget::GetParamsReply()+0x60>)
 8000dee:	781b      	ldrb	r3, [r3, #0]
 8000df0:	f88d 3004 	strb.w	r3, [sp, #4]
 8000df4:	466a      	mov	r2, sp
 8000df6:	2305      	movs	r3, #5
 8000df8:	2103      	movs	r1, #3
 8000dfa:	4620      	mov	r0, r4
 8000dfc:	f000 fd30 	bl	8001860 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>
 8000e00:	b002      	add	sp, #8
 8000e02:	bd10      	pop	{r4, pc}
 8000e04:	08004c5c 	stmdaeq	r0, {r2, r3, r4, r6, sl, fp, lr}
 8000e08:	20000001 	andcs	r0, r0, r1
 8000e0c:	20000002 	andcs	r0, r0, r2
 8000e10:	20000003 	andcs	r0, r0, r3
 8000e14:	20000000 	andcs	r0, r0, r0
 8000e18:	20000004 	andcs	r0, r0, r4

08000e1c <Widget::SetParams()>:
 8000e1c:	b513      	push	{r0, r1, r4, lr}
 8000e1e:	4604      	mov	r4, r0
 8000e20:	4912      	ldr	r1, [pc, #72]	; (8000e6c <Widget::SetParams()+0x50>)
 8000e22:	2007      	movs	r0, #7
 8000e24:	f000 fb5a 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8000e28:	2100      	movs	r1, #0
 8000e2a:	201c      	movs	r0, #28
 8000e2c:	f000 fb56 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8000e30:	2300      	movs	r3, #0
 8000e32:	4619      	mov	r1, r3
 8000e34:	4620      	mov	r0, r4
 8000e36:	2201      	movs	r2, #1
 8000e38:	f001 f8a0 	bl	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000e3c:	f894 309c 	ldrb.w	r3, [r4, #156]	; 0x9c
 8000e40:	f8b4 209a 	ldrh.w	r2, [r4, #154]	; 0x9a
 8000e44:	f8ad 2002 	strh.w	r2, [sp, #2]
 8000e48:	4668      	mov	r0, sp
 8000e4a:	f88d 3004 	strb.w	r3, [sp, #4]
 8000e4e:	f000 fd67 	bl	8001920 <WidgetConfiguration::Store(TWidgetConfiguration const*)>
 8000e52:	2301      	movs	r3, #1
 8000e54:	461a      	mov	r2, r3
 8000e56:	2100      	movs	r1, #0
 8000e58:	4620      	mov	r0, r4
 8000e5a:	f001 f88f 	bl	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000e5e:	4b04      	ldr	r3, [pc, #16]	; (8000e70 <Widget::SetParams()+0x54>)
 8000e60:	681b      	ldr	r3, [r3, #0]
 8000e62:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8000e66:	b002      	add	sp, #8
 8000e68:	bd10      	pop	{r4, pc}
 8000e6a:	bf00      	nop
 8000e6c:	08004c74 	stmdaeq	r0, {r2, r4, r5, r6, sl, fp, lr}
 8000e70:	2000181c 	andcs	r1, r0, ip, lsl r8

08000e74 <Widget::ReceivedDmxPacket()>:
 8000e74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e76:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8000e7a:	2b03      	cmp	r3, #3
 8000e7c:	4604      	mov	r4, r0
 8000e7e:	d042      	beq.n	8000f06 <Widget::ReceivedDmxPacket()+0x92>
 8000e80:	f890 7304 	ldrb.w	r7, [r0, #772]	; 0x304
 8000e84:	2f00      	cmp	r7, #0
 8000e86:	d13e      	bne.n	8000f06 <Widget::ReceivedDmxPacket()+0x92>
 8000e88:	6943      	ldr	r3, [r0, #20]
 8000e8a:	2b01      	cmp	r3, #1
 8000e8c:	d13b      	bne.n	8000f06 <Widget::ReceivedDmxPacket()+0x92>
 8000e8e:	f8d0 32f4 	ldr.w	r3, [r0, #756]	; 0x2f4
 8000e92:	2b01      	cmp	r3, #1
 8000e94:	d037      	beq.n	8000f06 <Widget::ReceivedDmxPacket()+0x92>
 8000e96:	4639      	mov	r1, r7
 8000e98:	f001 f9e6 	bl	8002268 <Dmx::GetDmxAvailable(unsigned int)>
 8000e9c:	4605      	mov	r5, r0
 8000e9e:	b390      	cbz	r0, 8000f06 <Widget::ReceivedDmxPacket()+0x92>
 8000ea0:	4b19      	ldr	r3, [pc, #100]	; (8000f08 <Widget::ReceivedDmxPacket()+0x94>)
 8000ea2:	f8d4 12f8 	ldr.w	r1, [r4, #760]	; 0x2f8
 8000ea6:	681a      	ldr	r2, [r3, #0]
 8000ea8:	f8d4 32fc 	ldr.w	r3, [r4, #764]	; 0x2fc
 8000eac:	1ad3      	subs	r3, r2, r3
 8000eae:	428b      	cmp	r3, r1
 8000eb0:	d329      	bcc.n	8000f06 <Widget::ReceivedDmxPacket()+0x92>
 8000eb2:	f8d4 3308 	ldr.w	r3, [r4, #776]	; 0x308
 8000eb6:	f8c4 22fc 	str.w	r2, [r4, #764]	; 0x2fc
 8000eba:	3301      	adds	r3, #1
 8000ebc:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
 8000ec0:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 8000ec4:	4911      	ldr	r1, [pc, #68]	; (8000f0c <Widget::ReceivedDmxPacket()+0x98>)
 8000ec6:	3601      	adds	r6, #1
 8000ec8:	2006      	movs	r0, #6
 8000eca:	f000 fb07 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8000ece:	4632      	mov	r2, r6
 8000ed0:	490f      	ldr	r1, [pc, #60]	; (8000f10 <Widget::ReceivedDmxPacket()+0x9c>)
 8000ed2:	2007      	movs	r0, #7
 8000ed4:	f000 fb02 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8000ed8:	4639      	mov	r1, r7
 8000eda:	201c      	movs	r0, #28
 8000edc:	f000 fafe 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8000ee0:	1c72      	adds	r2, r6, #1
 8000ee2:	b292      	uxth	r2, r2
 8000ee4:	2105      	movs	r1, #5
 8000ee6:	4620      	mov	r0, r4
 8000ee8:	f000 fc9a 	bl	8001820 <Widget::SendHeader(unsigned char, unsigned int)>
 8000eec:	4638      	mov	r0, r7
 8000eee:	f001 fa4e 	bl	800238e <usb_send_byte>
 8000ef2:	4620      	mov	r0, r4
 8000ef4:	b2b2      	uxth	r2, r6
 8000ef6:	4629      	mov	r1, r5
 8000ef8:	f000 fca4 	bl	8001844 <Widget::SendData(unsigned char const*, unsigned int)>
 8000efc:	4620      	mov	r0, r4
 8000efe:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8000f02:	f000 bcaa 	b.w	800185a <Widget::SendFooter()>
 8000f06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f08:	2000181c 	andcs	r1, r0, ip, lsl r8
 8000f0c:	08004c86 	stmdaeq	r0, {r1, r2, r7, sl, fp, lr}
 8000f10:	08004c9a 	stmdaeq	r0, {r1, r3, r4, r7, sl, fp, lr}

08000f14 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>:
 8000f14:	b570      	push	{r4, r5, r6, lr}
 8000f16:	f8d0 5300 	ldr.w	r5, [r0, #768]	; 0x300
 8000f1a:	4604      	mov	r4, r0
 8000f1c:	460e      	mov	r6, r1
 8000f1e:	b9e5      	cbnz	r5, 8000f5a <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x46>
 8000f20:	490e      	ldr	r1, [pc, #56]	; (8000f5c <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x48>)
 8000f22:	2007      	movs	r0, #7
 8000f24:	f000 fada 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8000f28:	4629      	mov	r1, r5
 8000f2a:	201c      	movs	r0, #28
 8000f2c:	f000 fad6 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8000f30:	462b      	mov	r3, r5
 8000f32:	462a      	mov	r2, r5
 8000f34:	4629      	mov	r1, r5
 8000f36:	4620      	mov	r0, r4
 8000f38:	f001 f820 	bl	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000f3c:	4633      	mov	r3, r6
 8000f3e:	f104 0298 	add.w	r2, r4, #152	; 0x98
 8000f42:	4629      	mov	r1, r5
 8000f44:	4620      	mov	r0, r4
 8000f46:	f001 f967 	bl	8002218 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)>
 8000f4a:	462a      	mov	r2, r5
 8000f4c:	4629      	mov	r1, r5
 8000f4e:	4620      	mov	r0, r4
 8000f50:	2301      	movs	r3, #1
 8000f52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000f56:	f001 b811 	b.w	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000f5a:	bd70      	pop	{r4, r5, r6, pc}
 8000f5c:	08004cb4 	stmdaeq	r0, {r2, r4, r5, r7, sl, fp, lr}

08000f60 <Widget::SendRdmPacketRequest(unsigned short)>:
 8000f60:	b570      	push	{r4, r5, r6, lr}
 8000f62:	4604      	mov	r4, r0
 8000f64:	460d      	mov	r5, r1
 8000f66:	2007      	movs	r0, #7
 8000f68:	4910      	ldr	r1, [pc, #64]	; (8000fac <Widget::SendRdmPacketRequest(unsigned short)+0x4c>)
 8000f6a:	f000 fab7 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8000f6e:	2100      	movs	r1, #0
 8000f70:	201c      	movs	r0, #28
 8000f72:	f000 fab3 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8000f76:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 8000f7a:	f1a3 0210 	sub.w	r2, r3, #16
 8000f7e:	4253      	negs	r3, r2
 8000f80:	4153      	adcs	r3, r2
 8000f82:	f104 0698 	add.w	r6, r4, #152	; 0x98
 8000f86:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 8000f8a:	462a      	mov	r2, r5
 8000f8c:	4631      	mov	r1, r6
 8000f8e:	2000      	movs	r0, #0
 8000f90:	f000 fd2a 	bl	80019e8 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 8000f94:	4b06      	ldr	r3, [pc, #24]	; (8000fb0 <Widget::SendRdmPacketRequest(unsigned short)+0x50>)
 8000f96:	681b      	ldr	r3, [r3, #0]
 8000f98:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8000f9c:	4632      	mov	r2, r6
 8000f9e:	4629      	mov	r1, r5
 8000fa0:	2301      	movs	r3, #1
 8000fa2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000fa6:	2011      	movs	r0, #17
 8000fa8:	f000 bd14 	b.w	80019d4 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8000fac:	08004cd8 	stmdaeq	r0, {r3, r4, r6, r7, sl, fp, lr}
 8000fb0:	2000181c 	andcs	r1, r0, ip, lsl r8

08000fb4 <Widget::ReceiveDmxOnChange()>:
 8000fb4:	b510      	push	{r4, lr}
 8000fb6:	4911      	ldr	r1, [pc, #68]	; (8000ffc <Widget::ReceiveDmxOnChange()+0x48>)
 8000fb8:	4604      	mov	r4, r0
 8000fba:	2007      	movs	r0, #7
 8000fbc:	f000 fa8e 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8000fc0:	2100      	movs	r1, #0
 8000fc2:	201c      	movs	r0, #28
 8000fc4:	f000 fa8a 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8000fc8:	f894 3098 	ldrb.w	r3, [r4, #152]	; 0x98
 8000fcc:	f8c4 32f4 	str.w	r3, [r4, #756]	; 0x2f4
 8000fd0:	2300      	movs	r3, #0
 8000fd2:	4619      	mov	r1, r3
 8000fd4:	2201      	movs	r2, #1
 8000fd6:	4620      	mov	r0, r4
 8000fd8:	f000 ffd0 	bl	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000fdc:	2100      	movs	r1, #0
 8000fde:	4620      	mov	r0, r4
 8000fe0:	f000 fec2 	bl	8001d68 <Dmx::ClearData(unsigned int)>
 8000fe4:	2301      	movs	r3, #1
 8000fe6:	461a      	mov	r2, r3
 8000fe8:	2100      	movs	r1, #0
 8000fea:	4620      	mov	r0, r4
 8000fec:	f000 ffc6 	bl	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000ff0:	4b03      	ldr	r3, [pc, #12]	; (8001000 <Widget::ReceiveDmxOnChange()+0x4c>)
 8000ff2:	681b      	ldr	r3, [r3, #0]
 8000ff4:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8000ff8:	bd10      	pop	{r4, pc}
 8000ffa:	bf00      	nop
 8000ffc:	08004cf0 	stmdaeq	r0, {r4, r5, r6, r7, sl, fp, lr}
 8001000:	2000181c 	andcs	r1, r0, ip, lsl r8

08001004 <Widget::ReceivedDmxChangeOfStatePacket()>:
 8001004:	f8d0 22f0 	ldr.w	r2, [r0, #752]	; 0x2f0
 8001008:	2a03      	cmp	r2, #3
 800100a:	b510      	push	{r4, lr}
 800100c:	d01a      	beq.n	8001044 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 800100e:	f890 4304 	ldrb.w	r4, [r0, #772]	; 0x304
 8001012:	b9bc      	cbnz	r4, 8001044 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001014:	6942      	ldr	r2, [r0, #20]
 8001016:	2a01      	cmp	r2, #1
 8001018:	d114      	bne.n	8001044 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 800101a:	f8d0 32f4 	ldr.w	r3, [r0, #756]	; 0x2f4
 800101e:	b18b      	cbz	r3, 8001044 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001020:	4621      	mov	r1, r4
 8001022:	f001 f935 	bl	8002290 <Dmx::GetDmxChanged(unsigned int)>
 8001026:	b168      	cbz	r0, 8001044 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001028:	4907      	ldr	r1, [pc, #28]	; (8001048 <Widget::ReceivedDmxChangeOfStatePacket()+0x44>)
 800102a:	2007      	movs	r0, #7
 800102c:	f000 fa56 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8001030:	4621      	mov	r1, r4
 8001032:	201c      	movs	r0, #28
 8001034:	f000 fa52 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8001038:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800103c:	4903      	ldr	r1, [pc, #12]	; (800104c <Widget::ReceivedDmxChangeOfStatePacket()+0x48>)
 800103e:	2007      	movs	r0, #7
 8001040:	f000 ba4c 	b.w	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8001044:	bd10      	pop	{r4, pc}
 8001046:	bf00      	nop
 8001048:	08004d06 	stmdaeq	r0, {r1, r2, r8, sl, fp, lr}
 800104c:	08004d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, lr}

08001050 <Widget::GetSnReply()>:
 8001050:	b510      	push	{r4, lr}
 8001052:	4910      	ldr	r1, [pc, #64]	; (8001094 <Widget::GetSnReply()+0x44>)
 8001054:	4604      	mov	r4, r0
 8001056:	2007      	movs	r0, #7
 8001058:	f000 fa40 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 800105c:	2100      	movs	r1, #0
 800105e:	201c      	movs	r0, #28
 8001060:	f000 fa3c 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8001064:	2300      	movs	r3, #0
 8001066:	4619      	mov	r1, r3
 8001068:	2201      	movs	r2, #1
 800106a:	4620      	mov	r0, r4
 800106c:	f000 ff86 	bl	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001070:	2304      	movs	r3, #4
 8001072:	f104 0223 	add.w	r2, r4, #35	; 0x23
 8001076:	210a      	movs	r1, #10
 8001078:	4620      	mov	r0, r4
 800107a:	f000 fbf1 	bl	8001860 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>
 800107e:	2301      	movs	r3, #1
 8001080:	461a      	mov	r2, r3
 8001082:	2100      	movs	r1, #0
 8001084:	4620      	mov	r0, r4
 8001086:	f000 ff79 	bl	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800108a:	4b03      	ldr	r3, [pc, #12]	; (8001098 <Widget::GetSnReply()+0x48>)
 800108c:	681b      	ldr	r3, [r3, #0]
 800108e:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001092:	bd10      	pop	{r4, pc}
 8001094:	08004c5c 	stmdaeq	r0, {r2, r3, r4, r6, sl, fp, lr}
 8001098:	2000181c 	andcs	r1, r0, ip, lsl r8

0800109c <Widget::SendRdmDiscoveryRequest(unsigned short)>:
 800109c:	b570      	push	{r4, r5, r6, lr}
 800109e:	4604      	mov	r4, r0
 80010a0:	460d      	mov	r5, r1
 80010a2:	2007      	movs	r0, #7
 80010a4:	490d      	ldr	r1, [pc, #52]	; (80010dc <Widget::SendRdmDiscoveryRequest(unsigned short)+0x40>)
 80010a6:	f000 fa19 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 80010aa:	f104 0698 	add.w	r6, r4, #152	; 0x98
 80010ae:	2100      	movs	r1, #0
 80010b0:	201c      	movs	r0, #28
 80010b2:	f000 fa13 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 80010b6:	462a      	mov	r2, r5
 80010b8:	4631      	mov	r1, r6
 80010ba:	2000      	movs	r0, #0
 80010bc:	f000 fc94 	bl	80019e8 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 80010c0:	4a07      	ldr	r2, [pc, #28]	; (80010e0 <Widget::SendRdmDiscoveryRequest(unsigned short)+0x44>)
 80010c2:	2301      	movs	r3, #1
 80010c4:	6812      	ldr	r2, [r2, #0]
 80010c6:	f8c4 2300 	str.w	r2, [r4, #768]	; 0x300
 80010ca:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 80010ce:	4632      	mov	r2, r6
 80010d0:	4629      	mov	r1, r5
 80010d2:	2011      	movs	r0, #17
 80010d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80010d8:	f000 bc7c 	b.w	80019d4 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 80010dc:	08004d3a 	stmdaeq	r0, {r1, r3, r4, r5, r8, sl, fp, lr}
 80010e0:	2000181c 	andcs	r1, r0, ip, lsl r8

080010e4 <Widget::RdmTimeOutMessage()>:
 80010e4:	b510      	push	{r4, lr}
 80010e6:	2200      	movs	r2, #0
 80010e8:	4604      	mov	r4, r0
 80010ea:	490b      	ldr	r1, [pc, #44]	; (8001118 <Widget::RdmTimeOutMessage()+0x34>)
 80010ec:	2007      	movs	r0, #7
 80010ee:	f000 f9f5 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 80010f2:	490a      	ldr	r1, [pc, #40]	; (800111c <Widget::RdmTimeOutMessage()+0x38>)
 80010f4:	201c      	movs	r0, #28
 80010f6:	f000 f9f1 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 80010fa:	2200      	movs	r2, #0
 80010fc:	210c      	movs	r1, #12
 80010fe:	4620      	mov	r0, r4
 8001100:	f000 fb8e 	bl	8001820 <Widget::SendHeader(unsigned char, unsigned int)>
 8001104:	4620      	mov	r0, r4
 8001106:	f000 fba8 	bl	800185a <Widget::SendFooter()>
 800110a:	2300      	movs	r3, #0
 800110c:	f884 3304 	strb.w	r3, [r4, #772]	; 0x304
 8001110:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8001114:	bd10      	pop	{r4, pc}
 8001116:	bf00      	nop
 8001118:	08004d55 	stmdaeq	r0, {r0, r2, r4, r6, r8, sl, fp, lr}
 800111c:	08004d71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp, lr}

08001120 <Widget::ReceivedRdmPacket()>:
 8001120:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001124:	f023 0302 	bic.w	r3, r3, #2
 8001128:	2b01      	cmp	r3, #1
 800112a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800112e:	4604      	mov	r4, r0
 8001130:	d063      	beq.n	80011fa <Widget::ReceivedRdmPacket()+0xda>
 8001132:	f8d0 32f4 	ldr.w	r3, [r0, #756]	; 0x2f4
 8001136:	2b01      	cmp	r3, #1
 8001138:	d05f      	beq.n	80011fa <Widget::ReceivedRdmPacket()+0xda>
 800113a:	2000      	movs	r0, #0
 800113c:	f000 fc4c 	bl	80019d8 <Rdm::Receive(unsigned int)>
 8001140:	4605      	mov	r5, r0
 8001142:	2800      	cmp	r0, #0
 8001144:	d059      	beq.n	80011fa <Widget::ReceivedRdmPacket()+0xda>
 8001146:	7803      	ldrb	r3, [r0, #0]
 8001148:	2bcc      	cmp	r3, #204	; 0xcc
 800114a:	d134      	bne.n	80011b6 <Widget::ReceivedRdmPacket()+0x96>
 800114c:	7886      	ldrb	r6, [r0, #2]
 800114e:	7d07      	ldrb	r7, [r0, #20]
 8001150:	492b      	ldr	r1, [pc, #172]	; (8001200 <Widget::ReceivedRdmPacket()+0xe0>)
 8001152:	3602      	adds	r6, #2
 8001154:	b2f6      	uxtb	r6, r6
 8001156:	4632      	mov	r2, r6
 8001158:	2007      	movs	r0, #7
 800115a:	f000 f9bf 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 800115e:	4929      	ldr	r1, [pc, #164]	; (8001204 <Widget::ReceivedRdmPacket()+0xe4>)
 8001160:	201c      	movs	r0, #28
 8001162:	f000 f9bb 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8001166:	1c72      	adds	r2, r6, #1
 8001168:	2105      	movs	r1, #5
 800116a:	4620      	mov	r0, r4
 800116c:	f000 fb58 	bl	8001820 <Widget::SendHeader(unsigned char, unsigned int)>
 8001170:	2000      	movs	r0, #0
 8001172:	f001 f90c 	bl	800238e <usb_send_byte>
 8001176:	4632      	mov	r2, r6
 8001178:	4629      	mov	r1, r5
 800117a:	4620      	mov	r0, r4
 800117c:	f000 fb62 	bl	8001844 <Widget::SendData(unsigned char const*, unsigned int)>
 8001180:	4620      	mov	r0, r4
 8001182:	f000 fb6a 	bl	800185a <Widget::SendFooter()>
 8001186:	2f11      	cmp	r7, #17
 8001188:	7d6a      	ldrb	r2, [r5, #21]
 800118a:	7dab      	ldrb	r3, [r5, #22]
 800118c:	d10f      	bne.n	80011ae <Widget::ReceivedRdmPacket()+0x8e>
 800118e:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8001192:	b29b      	uxth	r3, r3
 8001194:	2b02      	cmp	r3, #2
 8001196:	d00a      	beq.n	80011ae <Widget::ReceivedRdmPacket()+0x8e>
 8001198:	4620      	mov	r0, r4
 800119a:	f7ff ffa3 	bl	80010e4 <Widget::RdmTimeOutMessage()>
 800119e:	462a      	mov	r2, r5
 80011a0:	4631      	mov	r1, r6
 80011a2:	2300      	movs	r3, #0
 80011a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80011a8:	2011      	movs	r0, #17
 80011aa:	f000 bc13 	b.w	80019d4 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 80011ae:	2300      	movs	r3, #0
 80011b0:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 80011b4:	e7f3      	b.n	800119e <Widget::ReceivedRdmPacket()+0x7e>
 80011b6:	2bfe      	cmp	r3, #254	; 0xfe
 80011b8:	d11d      	bne.n	80011f6 <Widget::ReceivedRdmPacket()+0xd6>
 80011ba:	2218      	movs	r2, #24
 80011bc:	4910      	ldr	r1, [pc, #64]	; (8001200 <Widget::ReceivedRdmPacket()+0xe0>)
 80011be:	2007      	movs	r0, #7
 80011c0:	f000 f98c 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 80011c4:	4910      	ldr	r1, [pc, #64]	; (8001208 <Widget::ReceivedRdmPacket()+0xe8>)
 80011c6:	201c      	movs	r0, #28
 80011c8:	f000 f988 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 80011cc:	2219      	movs	r2, #25
 80011ce:	2105      	movs	r1, #5
 80011d0:	4620      	mov	r0, r4
 80011d2:	f000 fb25 	bl	8001820 <Widget::SendHeader(unsigned char, unsigned int)>
 80011d6:	2000      	movs	r0, #0
 80011d8:	f001 f8d9 	bl	800238e <usb_send_byte>
 80011dc:	2218      	movs	r2, #24
 80011de:	4629      	mov	r1, r5
 80011e0:	4620      	mov	r0, r4
 80011e2:	f000 fb2f 	bl	8001844 <Widget::SendData(unsigned char const*, unsigned int)>
 80011e6:	4620      	mov	r0, r4
 80011e8:	f000 fb37 	bl	800185a <Widget::SendFooter()>
 80011ec:	4620      	mov	r0, r4
 80011ee:	f7ff ff79 	bl	80010e4 <Widget::RdmTimeOutMessage()>
 80011f2:	2618      	movs	r6, #24
 80011f4:	e7d3      	b.n	800119e <Widget::ReceivedRdmPacket()+0x7e>
 80011f6:	2600      	movs	r6, #0
 80011f8:	e7d1      	b.n	800119e <Widget::ReceivedRdmPacket()+0x7e>
 80011fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80011fe:	bf00      	nop
 8001200:	08004d55 	stmdaeq	r0, {r0, r2, r4, r6, r8, sl, fp, lr}
 8001204:	08004d7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, sl, fp, lr}
 8001208:	08004d99 	stmdaeq	r0, {r0, r3, r4, r7, r8, sl, fp, lr}

0800120c <Widget::RdmTimeout()>:
 800120c:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001210:	2b03      	cmp	r3, #3
 8001212:	b510      	push	{r4, lr}
 8001214:	4604      	mov	r4, r0
 8001216:	d00d      	beq.n	8001234 <Widget::RdmTimeout()+0x28>
 8001218:	f8d0 2300 	ldr.w	r2, [r0, #768]	; 0x300
 800121c:	b152      	cbz	r2, 8001234 <Widget::RdmTimeout()+0x28>
 800121e:	4b06      	ldr	r3, [pc, #24]	; (8001238 <Widget::RdmTimeout()+0x2c>)
 8001220:	681b      	ldr	r3, [r3, #0]
 8001222:	1a9b      	subs	r3, r3, r2
 8001224:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001228:	d304      	bcc.n	8001234 <Widget::RdmTimeout()+0x28>
 800122a:	f7ff ff5b 	bl	80010e4 <Widget::RdmTimeOutMessage()>
 800122e:	2300      	movs	r3, #0
 8001230:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8001234:	bd10      	pop	{r4, pc}
 8001236:	bf00      	nop
 8001238:	2000181c 	andcs	r1, r0, ip, lsl r8

0800123c <Widget::GetManufacturerReply()>:
 800123c:	b538      	push	{r3, r4, r5, lr}
 800123e:	4917      	ldr	r1, [pc, #92]	; (800129c <Widget::GetManufacturerReply()+0x60>)
 8001240:	4604      	mov	r4, r0
 8001242:	2007      	movs	r0, #7
 8001244:	f000 f94a 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8001248:	2100      	movs	r1, #0
 800124a:	201c      	movs	r0, #28
 800124c:	f000 f946 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8001250:	2300      	movs	r3, #0
 8001252:	f894 5068 	ldrb.w	r5, [r4, #104]	; 0x68
 8001256:	4619      	mov	r1, r3
 8001258:	2201      	movs	r2, #1
 800125a:	4620      	mov	r0, r4
 800125c:	f000 fe8e 	bl	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001260:	1caa      	adds	r2, r5, #2
 8001262:	214d      	movs	r1, #77	; 0x4d
 8001264:	4620      	mov	r0, r4
 8001266:	f000 fadb 	bl	8001820 <Widget::SendHeader(unsigned char, unsigned int)>
 800126a:	490d      	ldr	r1, [pc, #52]	; (80012a0 <Widget::GetManufacturerReply()+0x64>)
 800126c:	2202      	movs	r2, #2
 800126e:	4620      	mov	r0, r4
 8001270:	f000 fae8 	bl	8001844 <Widget::SendData(unsigned char const*, unsigned int)>
 8001274:	462a      	mov	r2, r5
 8001276:	f104 0148 	add.w	r1, r4, #72	; 0x48
 800127a:	4620      	mov	r0, r4
 800127c:	f000 fae2 	bl	8001844 <Widget::SendData(unsigned char const*, unsigned int)>
 8001280:	4620      	mov	r0, r4
 8001282:	f000 faea 	bl	800185a <Widget::SendFooter()>
 8001286:	2301      	movs	r3, #1
 8001288:	461a      	mov	r2, r3
 800128a:	2100      	movs	r1, #0
 800128c:	4620      	mov	r0, r4
 800128e:	f000 fe75 	bl	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001292:	4b04      	ldr	r3, [pc, #16]	; (80012a4 <Widget::GetManufacturerReply()+0x68>)
 8001294:	681b      	ldr	r3, [r3, #0]
 8001296:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 800129a:	bd38      	pop	{r3, r4, r5, pc}
 800129c:	08004db5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, fp, lr}
 80012a0:	08004e9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r9, sl, fp, lr}
 80012a4:	2000181c 	andcs	r1, r0, ip, lsl r8

080012a8 <Widget::GetNameReply()>:
 80012a8:	b538      	push	{r3, r4, r5, lr}
 80012aa:	4917      	ldr	r1, [pc, #92]	; (8001308 <Widget::GetNameReply()+0x60>)
 80012ac:	4604      	mov	r4, r0
 80012ae:	2007      	movs	r0, #7
 80012b0:	f000 f914 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 80012b4:	2100      	movs	r1, #0
 80012b6:	201c      	movs	r0, #28
 80012b8:	f000 f910 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 80012bc:	2300      	movs	r3, #0
 80012be:	f894 5047 	ldrb.w	r5, [r4, #71]	; 0x47
 80012c2:	4619      	mov	r1, r3
 80012c4:	2201      	movs	r2, #1
 80012c6:	4620      	mov	r0, r4
 80012c8:	f000 fe58 	bl	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80012cc:	1caa      	adds	r2, r5, #2
 80012ce:	214e      	movs	r1, #78	; 0x4e
 80012d0:	4620      	mov	r0, r4
 80012d2:	f000 faa5 	bl	8001820 <Widget::SendHeader(unsigned char, unsigned int)>
 80012d6:	490d      	ldr	r1, [pc, #52]	; (800130c <Widget::GetNameReply()+0x64>)
 80012d8:	2202      	movs	r2, #2
 80012da:	4620      	mov	r0, r4
 80012dc:	f000 fab2 	bl	8001844 <Widget::SendData(unsigned char const*, unsigned int)>
 80012e0:	462a      	mov	r2, r5
 80012e2:	f104 0127 	add.w	r1, r4, #39	; 0x27
 80012e6:	4620      	mov	r0, r4
 80012e8:	f000 faac 	bl	8001844 <Widget::SendData(unsigned char const*, unsigned int)>
 80012ec:	4620      	mov	r0, r4
 80012ee:	f000 fab4 	bl	800185a <Widget::SendFooter()>
 80012f2:	2301      	movs	r3, #1
 80012f4:	461a      	mov	r2, r3
 80012f6:	2100      	movs	r1, #0
 80012f8:	4620      	mov	r0, r4
 80012fa:	f000 fe3f 	bl	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80012fe:	4b04      	ldr	r3, [pc, #16]	; (8001310 <Widget::GetNameReply()+0x68>)
 8001300:	681b      	ldr	r3, [r3, #0]
 8001302:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8001306:	bd38      	pop	{r3, r4, r5, pc}
 8001308:	08004dc8 	stmdaeq	r0, {r3, r6, r7, r8, sl, fp, lr}
 800130c:	20000005 	andcs	r0, r0, r5
 8001310:	2000181c 	andcs	r1, r0, ip, lsl r8

08001314 <Widget::ReceiveDataFromHost()>:
 8001314:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001318:	4604      	mov	r4, r0
 800131a:	f001 f923 	bl	8002564 <FT245RL_data_available>
 800131e:	2800      	cmp	r0, #0
 8001320:	d040      	beq.n	80013a4 <Widget::ReceiveDataFromHost()+0x90>
 8001322:	f001 f82b 	bl	800237c <usb_read_byte>
 8001326:	287e      	cmp	r0, #126	; 0x7e
 8001328:	d13c      	bne.n	80013a4 <Widget::ReceiveDataFromHost()+0x90>
 800132a:	f001 f827 	bl	800237c <usb_read_byte>
 800132e:	4607      	mov	r7, r0
 8001330:	f001 f824 	bl	800237c <usb_read_byte>
 8001334:	4605      	mov	r5, r0
 8001336:	f001 f821 	bl	800237c <usb_read_byte>
 800133a:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 800133e:	b2ad      	uxth	r5, r5
 8001340:	f06f 0996 	mvn.w	r9, #150	; 0x96
 8001344:	f104 0897 	add.w	r8, r4, #151	; 0x97
 8001348:	462e      	mov	r6, r5
 800134a:	eba9 0904 	sub.w	r9, r9, r4
 800134e:	eb09 0308 	add.w	r3, r9, r8
 8001352:	429d      	cmp	r5, r3
 8001354:	d81d      	bhi.n	8001392 <Widget::ReceiveDataFromHost()+0x7e>
 8001356:	f001 f811 	bl	800237c <usb_read_byte>
 800135a:	28e7      	cmp	r0, #231	; 0xe7
 800135c:	d004      	beq.n	8001368 <Widget::ReceiveDataFromHost()+0x54>
 800135e:	1c73      	adds	r3, r6, #1
 8001360:	f5b6 7f16 	cmp.w	r6, #600	; 0x258
 8001364:	461e      	mov	r6, r3
 8001366:	d3f6      	bcc.n	8001356 <Widget::ReceiveDataFromHost()+0x42>
 8001368:	492c      	ldr	r1, [pc, #176]	; (800141c <Widget::ReceiveDataFromHost()+0x108>)
 800136a:	9600      	str	r6, [sp, #0]
 800136c:	462b      	mov	r3, r5
 800136e:	463a      	mov	r2, r7
 8001370:	2006      	movs	r0, #6
 8001372:	f000 f8b3 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8001376:	2f0b      	cmp	r7, #11
 8001378:	d810      	bhi.n	800139c <Widget::ReceiveDataFromHost()+0x88>
 800137a:	2f02      	cmp	r7, #2
 800137c:	d912      	bls.n	80013a4 <Widget::ReceiveDataFromHost()+0x90>
 800137e:	3f03      	subs	r7, #3
 8001380:	2f08      	cmp	r7, #8
 8001382:	d80f      	bhi.n	80013a4 <Widget::ReceiveDataFromHost()+0x90>
 8001384:	e8df f007 	tbb	[pc, r7]
 8001388:	2f0e1d11 	svccs	0x000e1d11
 800138c:	170e363c 	smladxne	lr, ip, r6, r3
 8001390:	f0000043 			; <UNDEFINED> instruction: 0xf0000043
 8001394:	fff3 f808 	vtbl.8	d31, {d3}, d8
 8001398:	0f01      	lsrs	r1, r0, #28
 800139a:	e7d8      	b.n	800134e <Widget::ReceiveDataFromHost()+0x3a>
 800139c:	2f4d      	cmp	r7, #77	; 0x4d
 800139e:	d01c      	beq.n	80013da <Widget::ReceiveDataFromHost()+0xc6>
 80013a0:	2f4e      	cmp	r7, #78	; 0x4e
 80013a2:	d014      	beq.n	80013ce <Widget::ReceiveDataFromHost()+0xba>
 80013a4:	b003      	add	sp, #12
 80013a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80013aa:	4620      	mov	r0, r4
 80013ac:	b003      	add	sp, #12
 80013ae:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80013b2:	f7ff bd01 	b.w	8000db8 <Widget::GetParamsReply()>
 80013b6:	4620      	mov	r0, r4
 80013b8:	b003      	add	sp, #12
 80013ba:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80013be:	f7ff be47 	b.w	8001050 <Widget::GetSnReply()>
 80013c2:	4620      	mov	r0, r4
 80013c4:	b003      	add	sp, #12
 80013c6:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80013ca:	f7ff bd27 	b.w	8000e1c <Widget::SetParams()>
 80013ce:	4620      	mov	r0, r4
 80013d0:	b003      	add	sp, #12
 80013d2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80013d6:	f7ff bf67 	b.w	80012a8 <Widget::GetNameReply()>
 80013da:	4620      	mov	r0, r4
 80013dc:	b003      	add	sp, #12
 80013de:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80013e2:	f7ff bf2b 	b.w	800123c <Widget::GetManufacturerReply()>
 80013e6:	4629      	mov	r1, r5
 80013e8:	4620      	mov	r0, r4
 80013ea:	b003      	add	sp, #12
 80013ec:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80013f0:	f7ff bd90 	b.w	8000f14 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>
 80013f4:	4620      	mov	r0, r4
 80013f6:	b003      	add	sp, #12
 80013f8:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80013fc:	f7ff bdda 	b.w	8000fb4 <Widget::ReceiveDmxOnChange()>
 8001400:	4629      	mov	r1, r5
 8001402:	4620      	mov	r0, r4
 8001404:	b003      	add	sp, #12
 8001406:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800140a:	f7ff bda9 	b.w	8000f60 <Widget::SendRdmPacketRequest(unsigned short)>
 800140e:	4629      	mov	r1, r5
 8001410:	4620      	mov	r0, r4
 8001412:	b003      	add	sp, #12
 8001414:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001418:	f7ff be40 	b.w	800109c <Widget::SendRdmDiscoveryRequest(unsigned short)>
 800141c:	08004dde 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, sl, fp, lr}

08001420 <WidgetConfiguration::SetRefreshRate(unsigned char)>:
 8001420:	4b05      	ldr	r3, [pc, #20]	; (8001438 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x18>)
 8001422:	4601      	mov	r1, r0
 8001424:	7018      	strb	r0, [r3, #0]
 8001426:	b110      	cbz	r0, 800142e <WidgetConfiguration::SetRefreshRate(unsigned char)+0xe>
 8001428:	4b04      	ldr	r3, [pc, #16]	; (800143c <WidgetConfiguration::SetRefreshRate(unsigned char)+0x1c>)
 800142a:	fbb3 f1f0 	udiv	r1, r3, r0
 800142e:	4b04      	ldr	r3, [pc, #16]	; (8001440 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x20>)
 8001430:	6818      	ldr	r0, [r3, #0]
 8001432:	f000 bead 	b.w	8002190 <Dmx::SetDmxPeriodTime(unsigned int)>
 8001436:	bf00      	nop
 8001438:	20000004 	andcs	r0, r0, r4
 800143c:	000f4240 	andeq	r4, pc, r0, asr #4
 8001440:	20000728 	andcs	r0, r0, r8, lsr #14

08001444 <WidgetConfiguration::SetBreakTime(unsigned char)>:
 8001444:	ee07 0a90 	vmov	s15, r0
 8001448:	ed9f 7a07 	vldr	s14, [pc, #28]	; 8001468 <WidgetConfiguration::SetBreakTime(unsigned char)+0x24>
 800144c:	4b07      	ldr	r3, [pc, #28]	; (800146c <WidgetConfiguration::SetBreakTime(unsigned char)+0x28>)
 800144e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001452:	7018      	strb	r0, [r3, #0]
 8001454:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001458:	4b05      	ldr	r3, [pc, #20]	; (8001470 <WidgetConfiguration::SetBreakTime(unsigned char)+0x2c>)
 800145a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800145e:	6818      	ldr	r0, [r3, #0]
 8001460:	ee17 1a90 	vmov	r1, s15
 8001464:	f000 bec4 	b.w	80021f0 <Dmx::SetDmxBreakTime(unsigned int)>
 8001468:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 800146c:	20000001 	andcs	r0, r0, r1
 8001470:	20000728 	andcs	r0, r0, r8, lsr #14

08001474 <WidgetConfiguration::SetMabTime(unsigned char)>:
 8001474:	ee07 0a90 	vmov	s15, r0
 8001478:	ed9f 7a07 	vldr	s14, [pc, #28]	; 8001498 <WidgetConfiguration::SetMabTime(unsigned char)+0x24>
 800147c:	4b07      	ldr	r3, [pc, #28]	; (800149c <WidgetConfiguration::SetMabTime(unsigned char)+0x28>)
 800147e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001482:	7018      	strb	r0, [r3, #0]
 8001484:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001488:	4b05      	ldr	r3, [pc, #20]	; (80014a0 <WidgetConfiguration::SetMabTime(unsigned char)+0x2c>)
 800148a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800148e:	6818      	ldr	r0, [r3, #0]
 8001490:	ee17 1a90 	vmov	r1, s15
 8001494:	f000 beb6 	b.w	8002204 <Dmx::SetDmxMabTime(unsigned int)>
 8001498:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 800149c:	20000000 	andcs	r0, r0, r0
 80014a0:	20000728 	andcs	r0, r0, r8, lsr #14

080014a4 <WidgetConfiguration::SetMode(widget::Mode)>:
 80014a4:	2800      	cmp	r0, #0
 80014a6:	4b05      	ldr	r3, [pc, #20]	; (80014bc <WidgetConfiguration::SetMode(widget::Mode)+0x18>)
 80014a8:	bf14      	ite	ne
 80014aa:	4602      	movne	r2, r0
 80014ac:	2202      	moveq	r2, #2
 80014ae:	701a      	strb	r2, [r3, #0]
 80014b0:	4b03      	ldr	r3, [pc, #12]	; (80014c0 <WidgetConfiguration::SetMode(widget::Mode)+0x1c>)
 80014b2:	681b      	ldr	r3, [r3, #0]
 80014b4:	f8c3 02f0 	str.w	r0, [r3, #752]	; 0x2f0
 80014b8:	4770      	bx	lr
 80014ba:	bf00      	nop
 80014bc:	20000002 	andcs	r0, r0, r2
 80014c0:	200000f4 	strdcs	r0, [r0], -r4

080014c4 <WidgetConfiguration::SetThrottle(unsigned char)>:
 80014c4:	b118      	cbz	r0, 80014ce <WidgetConfiguration::SetThrottle(unsigned char)+0xa>
 80014c6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80014ca:	fbb3 f0f0 	udiv	r0, r3, r0
 80014ce:	4b02      	ldr	r3, [pc, #8]	; (80014d8 <WidgetConfiguration::SetThrottle(unsigned char)+0x14>)
 80014d0:	681b      	ldr	r3, [r3, #0]
 80014d2:	f8c3 02f8 	str.w	r0, [r3, #760]	; 0x2f8
 80014d6:	4770      	bx	lr
 80014d8:	200000f4 	strdcs	r0, [r0], -r4

080014dc <WidgetMonitor::Line(int, char const*, ...)>:
 80014dc:	b40e      	push	{r1, r2, r3}
 80014de:	b003      	add	sp, #12
 80014e0:	4770      	bx	lr
	...

080014e4 <WidgetParams::WidgetParams(WidgetParamsStore*)>:
 80014e4:	4a02      	ldr	r2, [pc, #8]	; (80014f0 <WidgetParams::WidgetParams(WidgetParamsStore*)+0xc>)
 80014e6:	6082      	str	r2, [r0, #8]
 80014e8:	2200      	movs	r2, #0
 80014ea:	6001      	str	r1, [r0, #0]
 80014ec:	7302      	strb	r2, [r0, #12]
 80014ee:	4770      	bx	lr
 80014f0:	00280109 	eoreq	r0, r8, r9, lsl #2

080014f4 <WidgetParams::Load()>:
 80014f4:	b513      	push	{r0, r1, r4, lr}
 80014f6:	2300      	movs	r3, #0
 80014f8:	4604      	mov	r4, r0
 80014fa:	6043      	str	r3, [r0, #4]
 80014fc:	4602      	mov	r2, r0
 80014fe:	4909      	ldr	r1, [pc, #36]	; (8001524 <WidgetParams::Load()+0x30>)
 8001500:	4668      	mov	r0, sp
 8001502:	f001 fcf5 	bl	8002ef0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8001506:	6820      	ldr	r0, [r4, #0]
 8001508:	b150      	cbz	r0, 8001520 <WidgetParams::Load()+0x2c>
 800150a:	6803      	ldr	r3, [r0, #0]
 800150c:	1d21      	adds	r1, r4, #4
 800150e:	68db      	ldr	r3, [r3, #12]
 8001510:	4798      	blx	r3
 8001512:	2401      	movs	r4, #1
 8001514:	4668      	mov	r0, sp
 8001516:	f001 fcee 	bl	8002ef6 <ReadConfigFile::~ReadConfigFile()>
 800151a:	4620      	mov	r0, r4
 800151c:	b002      	add	sp, #8
 800151e:	bd10      	pop	{r4, pc}
 8001520:	4604      	mov	r4, r0
 8001522:	e7f7      	b.n	8001514 <WidgetParams::Load()+0x20>
 8001524:	080015e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, sl, ip}

08001528 <WidgetParams::callbackFunction(char const*)>:
 8001528:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800152a:	460d      	mov	r5, r1
 800152c:	4604      	mov	r4, r0
 800152e:	4929      	ldr	r1, [pc, #164]	; (80015d4 <WidgetParams::callbackFunction(char const*)+0xac>)
 8001530:	f10d 0207 	add.w	r2, sp, #7
 8001534:	4628      	mov	r0, r5
 8001536:	f001 fcdf 	bl	8002ef8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800153a:	b960      	cbnz	r0, 8001556 <WidgetParams::callbackFunction(char const*)+0x2e>
 800153c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001540:	f1a3 0209 	sub.w	r2, r3, #9
 8001544:	2a76      	cmp	r2, #118	; 0x76
 8001546:	d806      	bhi.n	8001556 <WidgetParams::callbackFunction(char const*)+0x2e>
 8001548:	7223      	strb	r3, [r4, #8]
 800154a:	6863      	ldr	r3, [r4, #4]
 800154c:	f043 0301 	orr.w	r3, r3, #1
 8001550:	6063      	str	r3, [r4, #4]
 8001552:	b003      	add	sp, #12
 8001554:	bd30      	pop	{r4, r5, pc}
 8001556:	4920      	ldr	r1, [pc, #128]	; (80015d8 <WidgetParams::callbackFunction(char const*)+0xb0>)
 8001558:	f10d 0207 	add.w	r2, sp, #7
 800155c:	4628      	mov	r0, r5
 800155e:	f001 fccb 	bl	8002ef8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8001562:	b950      	cbnz	r0, 800157a <WidgetParams::callbackFunction(char const*)+0x52>
 8001564:	f99d 2007 	ldrsb.w	r2, [sp, #7]
 8001568:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800156c:	2a00      	cmp	r2, #0
 800156e:	dd04      	ble.n	800157a <WidgetParams::callbackFunction(char const*)+0x52>
 8001570:	7263      	strb	r3, [r4, #9]
 8001572:	6863      	ldr	r3, [r4, #4]
 8001574:	f043 0302 	orr.w	r3, r3, #2
 8001578:	e7ea      	b.n	8001550 <WidgetParams::callbackFunction(char const*)+0x28>
 800157a:	4918      	ldr	r1, [pc, #96]	; (80015dc <WidgetParams::callbackFunction(char const*)+0xb4>)
 800157c:	f10d 0207 	add.w	r2, sp, #7
 8001580:	4628      	mov	r0, r5
 8001582:	f001 fcb9 	bl	8002ef8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8001586:	b930      	cbnz	r0, 8001596 <WidgetParams::callbackFunction(char const*)+0x6e>
 8001588:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800158c:	72a3      	strb	r3, [r4, #10]
 800158e:	6863      	ldr	r3, [r4, #4]
 8001590:	f043 0304 	orr.w	r3, r3, #4
 8001594:	e7dc      	b.n	8001550 <WidgetParams::callbackFunction(char const*)+0x28>
 8001596:	4912      	ldr	r1, [pc, #72]	; (80015e0 <WidgetParams::callbackFunction(char const*)+0xb8>)
 8001598:	f10d 0207 	add.w	r2, sp, #7
 800159c:	4628      	mov	r0, r5
 800159e:	f001 fcab 	bl	8002ef8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80015a2:	b940      	cbnz	r0, 80015b6 <WidgetParams::callbackFunction(char const*)+0x8e>
 80015a4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80015a8:	2b03      	cmp	r3, #3
 80015aa:	d804      	bhi.n	80015b6 <WidgetParams::callbackFunction(char const*)+0x8e>
 80015ac:	72e3      	strb	r3, [r4, #11]
 80015ae:	6863      	ldr	r3, [r4, #4]
 80015b0:	f043 0308 	orr.w	r3, r3, #8
 80015b4:	e7cc      	b.n	8001550 <WidgetParams::callbackFunction(char const*)+0x28>
 80015b6:	490b      	ldr	r1, [pc, #44]	; (80015e4 <WidgetParams::callbackFunction(char const*)+0xbc>)
 80015b8:	f10d 0207 	add.w	r2, sp, #7
 80015bc:	4628      	mov	r0, r5
 80015be:	f001 fc9b 	bl	8002ef8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80015c2:	2800      	cmp	r0, #0
 80015c4:	d1c5      	bne.n	8001552 <WidgetParams::callbackFunction(char const*)+0x2a>
 80015c6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80015ca:	7323      	strb	r3, [r4, #12]
 80015cc:	6863      	ldr	r3, [r4, #4]
 80015ce:	f043 0310 	orr.w	r3, r3, #16
 80015d2:	e7bd      	b.n	8001550 <WidgetParams::callbackFunction(char const*)+0x28>
 80015d4:	08004e09 	stmdaeq	r0, {r0, r3, r9, sl, fp, lr}
 80015d8:	08004df6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, sl, fp, lr}
 80015dc:	08004e1e 	stmdaeq	r0, {r1, r2, r3, r4, r9, sl, fp, lr}
 80015e0:	08004dea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8, sl, fp, lr}
 80015e4:	08004e35 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, fp, lr}

080015e8 <WidgetParams::staticCallbackFunction(void*, char const*)>:
 80015e8:	f7ff bf9e 	b.w	8001528 <WidgetParams::callbackFunction(char const*)>

080015ec <WidgetParams::Set()>:
 80015ec:	6843      	ldr	r3, [r0, #4]
 80015ee:	075b      	lsls	r3, r3, #29
 80015f0:	b510      	push	{r4, lr}
 80015f2:	4604      	mov	r4, r0
 80015f4:	d502      	bpl.n	80015fc <WidgetParams::Set()+0x10>
 80015f6:	7a80      	ldrb	r0, [r0, #10]
 80015f8:	f7ff ff12 	bl	8001420 <WidgetConfiguration::SetRefreshRate(unsigned char)>
 80015fc:	6863      	ldr	r3, [r4, #4]
 80015fe:	07d8      	lsls	r0, r3, #31
 8001600:	d502      	bpl.n	8001608 <WidgetParams::Set()+0x1c>
 8001602:	7a20      	ldrb	r0, [r4, #8]
 8001604:	f7ff ff1e 	bl	8001444 <WidgetConfiguration::SetBreakTime(unsigned char)>
 8001608:	6863      	ldr	r3, [r4, #4]
 800160a:	0799      	lsls	r1, r3, #30
 800160c:	d502      	bpl.n	8001614 <WidgetParams::Set()+0x28>
 800160e:	7a60      	ldrb	r0, [r4, #9]
 8001610:	f7ff ff30 	bl	8001474 <WidgetConfiguration::SetMabTime(unsigned char)>
 8001614:	6863      	ldr	r3, [r4, #4]
 8001616:	06da      	lsls	r2, r3, #27
 8001618:	d502      	bpl.n	8001620 <WidgetParams::Set()+0x34>
 800161a:	7b20      	ldrb	r0, [r4, #12]
 800161c:	f7ff ff52 	bl	80014c4 <WidgetConfiguration::SetThrottle(unsigned char)>
 8001620:	6863      	ldr	r3, [r4, #4]
 8001622:	071b      	lsls	r3, r3, #28
 8001624:	d504      	bpl.n	8001630 <WidgetParams::Set()+0x44>
 8001626:	7ae0      	ldrb	r0, [r4, #11]
 8001628:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800162c:	f7ff bf3a 	b.w	80014a4 <WidgetConfiguration::SetMode(widget::Mode)>
 8001630:	bd10      	pop	{r4, pc}

08001632 <WidgetParams::Dump()>:
 8001632:	4770      	bx	lr

08001634 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>:
 8001634:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001638:	4606      	mov	r6, r0
 800163a:	460f      	mov	r7, r1
 800163c:	461d      	mov	r5, r3
 800163e:	eb03 0802 	add.w	r8, r3, r2
 8001642:	eba8 0405 	sub.w	r4, r8, r5
 8001646:	2d63      	cmp	r5, #99	; 0x63
 8001648:	f04f 02c8 	mov.w	r2, #200	; 0xc8
 800164c:	f04f 0181 	mov.w	r1, #129	; 0x81
 8001650:	4630      	mov	r0, r6
 8001652:	fa17 f484 	uxtah	r4, r7, r4
 8001656:	d81e      	bhi.n	8001696 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x62>
 8001658:	f000 f8e2 	bl	8001820 <Widget::SendHeader(unsigned char, unsigned int)>
 800165c:	f04f 0800 	mov.w	r8, #0
 8001660:	4545      	cmp	r5, r8
 8001662:	462f      	mov	r7, r5
 8001664:	d80d      	bhi.n	8001682 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x4e>
 8001666:	2000      	movs	r0, #0
 8001668:	f000 fe91 	bl	800238e <usb_send_byte>
 800166c:	3701      	adds	r7, #1
 800166e:	2002      	movs	r0, #2
 8001670:	f000 fe8d 	bl	800238e <usb_send_byte>
 8001674:	2f64      	cmp	r7, #100	; 0x64
 8001676:	d1f6      	bne.n	8001666 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x32>
 8001678:	4630      	mov	r0, r6
 800167a:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800167e:	f000 b8ec 	b.w	800185a <Widget::SendFooter()>
 8001682:	2080      	movs	r0, #128	; 0x80
 8001684:	f000 fe83 	bl	800238e <usb_send_byte>
 8001688:	f814 0b01 	ldrb.w	r0, [r4], #1
 800168c:	f000 fe7f 	bl	800238e <usb_send_byte>
 8001690:	f108 0801 	add.w	r8, r8, #1
 8001694:	e7e4      	b.n	8001660 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x2c>
 8001696:	f000 f8c3 	bl	8001820 <Widget::SendHeader(unsigned char, unsigned int)>
 800169a:	f04f 0900 	mov.w	r9, #0
 800169e:	2080      	movs	r0, #128	; 0x80
 80016a0:	f000 fe75 	bl	800238e <usb_send_byte>
 80016a4:	f109 0901 	add.w	r9, r9, #1
 80016a8:	f814 0b01 	ldrb.w	r0, [r4], #1
 80016ac:	f000 fe6f 	bl	800238e <usb_send_byte>
 80016b0:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 80016b4:	d1f3      	bne.n	800169e <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x6a>
 80016b6:	4630      	mov	r0, r6
 80016b8:	3d64      	subs	r5, #100	; 0x64
 80016ba:	f000 f8ce 	bl	800185a <Widget::SendFooter()>
 80016be:	b2ad      	uxth	r5, r5
 80016c0:	e7bf      	b.n	8001642 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0xe>
	...

080016c4 <Widget::UsbCanSend()>:
 80016c4:	b570      	push	{r4, r5, r6, lr}
 80016c6:	4e0c      	ldr	r6, [pc, #48]	; (80016f8 <Widget::UsbCanSend()+0x34>)
 80016c8:	2578      	movs	r5, #120	; 0x78
 80016ca:	6874      	ldr	r4, [r6, #4]
 80016cc:	fbb4 f4f5 	udiv	r4, r4, r5
 80016d0:	f000 ff54 	bl	800257c <FT245RL_can_write>
 80016d4:	b930      	cbnz	r0, 80016e4 <Widget::UsbCanSend()+0x20>
 80016d6:	6873      	ldr	r3, [r6, #4]
 80016d8:	fbb3 f3f5 	udiv	r3, r3, r5
 80016dc:	1b1b      	subs	r3, r3, r4
 80016de:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80016e2:	d3f5      	bcc.n	80016d0 <Widget::UsbCanSend()+0xc>
 80016e4:	f000 ff4a 	bl	800257c <FT245RL_can_write>
 80016e8:	4604      	mov	r4, r0
 80016ea:	b918      	cbnz	r0, 80016f4 <Widget::UsbCanSend()+0x30>
 80016ec:	4903      	ldr	r1, [pc, #12]	; (80016fc <Widget::UsbCanSend()+0x38>)
 80016ee:	2007      	movs	r0, #7
 80016f0:	f7ff fef4 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 80016f4:	4620      	mov	r0, r4
 80016f6:	bd70      	pop	{r4, r5, r6, pc}
 80016f8:	e0001000 	and	r1, r0, r0
 80016fc:	08004e4f 	stmdaeq	r0, {r0, r1, r2, r3, r6, r9, sl, fp, lr}

08001700 <Widget::SnifferDmx()>:
 8001700:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001704:	2b03      	cmp	r3, #3
 8001706:	b570      	push	{r4, r5, r6, lr}
 8001708:	4604      	mov	r4, r0
 800170a:	d11c      	bne.n	8001746 <Widget::SnifferDmx()+0x46>
 800170c:	f7ff ffda 	bl	80016c4 <Widget::UsbCanSend()>
 8001710:	b1c8      	cbz	r0, 8001746 <Widget::SnifferDmx()+0x46>
 8001712:	2100      	movs	r1, #0
 8001714:	4620      	mov	r0, r4
 8001716:	f000 fdbb 	bl	8002290 <Dmx::GetDmxChanged(unsigned int)>
 800171a:	4605      	mov	r5, r0
 800171c:	b198      	cbz	r0, 8001746 <Widget::SnifferDmx()+0x46>
 800171e:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 8001722:	4620      	mov	r0, r4
 8001724:	f7ff ffce 	bl	80016c4 <Widget::UsbCanSend()>
 8001728:	b168      	cbz	r0, 8001746 <Widget::SnifferDmx()+0x46>
 800172a:	3601      	adds	r6, #1
 800172c:	4632      	mov	r2, r6
 800172e:	4906      	ldr	r1, [pc, #24]	; (8001748 <Widget::SnifferDmx()+0x48>)
 8001730:	2007      	movs	r0, #7
 8001732:	f7ff fed3 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8001736:	b2b3      	uxth	r3, r6
 8001738:	4629      	mov	r1, r5
 800173a:	4620      	mov	r0, r4
 800173c:	2200      	movs	r2, #0
 800173e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001742:	f7ff bf77 	b.w	8001634 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 8001746:	bd70      	pop	{r4, r5, r6, pc}
 8001748:	08004e6c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sl, fp, lr}

0800174c <Widget::SnifferRdm()>:
 800174c:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8001750:	2b03      	cmp	r3, #3
 8001752:	b570      	push	{r4, r5, r6, lr}
 8001754:	4604      	mov	r4, r0
 8001756:	d14c      	bne.n	80017f2 <Widget::SnifferRdm()+0xa6>
 8001758:	f7ff ffb4 	bl	80016c4 <Widget::UsbCanSend()>
 800175c:	2800      	cmp	r0, #0
 800175e:	d048      	beq.n	80017f2 <Widget::SnifferRdm()+0xa6>
 8001760:	2000      	movs	r0, #0
 8001762:	f000 f939 	bl	80019d8 <Rdm::Receive(unsigned int)>
 8001766:	4605      	mov	r5, r0
 8001768:	2800      	cmp	r0, #0
 800176a:	d042      	beq.n	80017f2 <Widget::SnifferRdm()+0xa6>
 800176c:	7803      	ldrb	r3, [r0, #0]
 800176e:	2bcc      	cmp	r3, #204	; 0xcc
 8001770:	d134      	bne.n	80017dc <Widget::SnifferRdm()+0x90>
 8001772:	7886      	ldrb	r6, [r0, #2]
 8001774:	7d03      	ldrb	r3, [r0, #20]
 8001776:	3602      	adds	r6, #2
 8001778:	2b20      	cmp	r3, #32
 800177a:	b2f6      	uxtb	r6, r6
 800177c:	d028      	beq.n	80017d0 <Widget::SnifferRdm()+0x84>
 800177e:	d813      	bhi.n	80017a8 <Widget::SnifferRdm()+0x5c>
 8001780:	2b10      	cmp	r3, #16
 8001782:	d019      	beq.n	80017b8 <Widget::SnifferRdm()+0x6c>
 8001784:	2b11      	cmp	r3, #17
 8001786:	d01d      	beq.n	80017c4 <Widget::SnifferRdm()+0x78>
 8001788:	4620      	mov	r0, r4
 800178a:	f7ff ff9b 	bl	80016c4 <Widget::UsbCanSend()>
 800178e:	b380      	cbz	r0, 80017f2 <Widget::SnifferRdm()+0xa6>
 8001790:	4918      	ldr	r1, [pc, #96]	; (80017f4 <Widget::SnifferRdm()+0xa8>)
 8001792:	2007      	movs	r0, #7
 8001794:	f7ff fea2 	bl	80014dc <WidgetMonitor::Line(int, char const*, ...)>
 8001798:	4633      	mov	r3, r6
 800179a:	4629      	mov	r1, r5
 800179c:	4620      	mov	r0, r4
 800179e:	2200      	movs	r2, #0
 80017a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80017a4:	f7ff bf46 	b.w	8001634 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 80017a8:	2b30      	cmp	r3, #48	; 0x30
 80017aa:	d1ed      	bne.n	8001788 <Widget::SnifferRdm()+0x3c>
 80017ac:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
 80017b0:	3301      	adds	r3, #1
 80017b2:	f8c4 3318 	str.w	r3, [r4, #792]	; 0x318
 80017b6:	e7e7      	b.n	8001788 <Widget::SnifferRdm()+0x3c>
 80017b8:	f8d4 330c 	ldr.w	r3, [r4, #780]	; 0x30c
 80017bc:	3301      	adds	r3, #1
 80017be:	f8c4 330c 	str.w	r3, [r4, #780]	; 0x30c
 80017c2:	e7e1      	b.n	8001788 <Widget::SnifferRdm()+0x3c>
 80017c4:	f8d4 3310 	ldr.w	r3, [r4, #784]	; 0x310
 80017c8:	3301      	adds	r3, #1
 80017ca:	f8c4 3310 	str.w	r3, [r4, #784]	; 0x310
 80017ce:	e7db      	b.n	8001788 <Widget::SnifferRdm()+0x3c>
 80017d0:	f8d4 3314 	ldr.w	r3, [r4, #788]	; 0x314
 80017d4:	3301      	adds	r3, #1
 80017d6:	f8c4 3314 	str.w	r3, [r4, #788]	; 0x314
 80017da:	e7d5      	b.n	8001788 <Widget::SnifferRdm()+0x3c>
 80017dc:	2bfe      	cmp	r3, #254	; 0xfe
 80017de:	bf01      	itttt	eq
 80017e0:	f8d4 3310 	ldreq.w	r3, [r4, #784]	; 0x310
 80017e4:	3301      	addeq	r3, #1
 80017e6:	f8c4 3310 	streq.w	r3, [r4, #784]	; 0x310
 80017ea:	2618      	moveq	r6, #24
 80017ec:	bf18      	it	ne
 80017ee:	2600      	movne	r6, #0
 80017f0:	e7ca      	b.n	8001788 <Widget::SnifferRdm()+0x3c>
 80017f2:	bd70      	pop	{r4, r5, r6, pc}
 80017f4:	08004e88 	stmdaeq	r0, {r3, r7, r9, sl, fp, lr}

080017f8 <Widget::SnifferFillTransmitBuffer()>:
 80017f8:	b538      	push	{r3, r4, r5, lr}
 80017fa:	4605      	mov	r5, r0
 80017fc:	f7ff ff62 	bl	80016c4 <Widget::UsbCanSend()>
 8001800:	b958      	cbnz	r0, 800181a <Widget::SnifferFillTransmitBuffer()+0x22>
 8001802:	bd38      	pop	{r3, r4, r5, pc}
 8001804:	4628      	mov	r0, r5
 8001806:	f7ff ff5d 	bl	80016c4 <Widget::UsbCanSend()>
 800180a:	2800      	cmp	r0, #0
 800180c:	d0f9      	beq.n	8001802 <Widget::SnifferFillTransmitBuffer()+0xa>
 800180e:	2000      	movs	r0, #0
 8001810:	f000 fdbd 	bl	800238e <usb_send_byte>
 8001814:	3c01      	subs	r4, #1
 8001816:	d1f5      	bne.n	8001804 <Widget::SnifferFillTransmitBuffer()+0xc>
 8001818:	e7f3      	b.n	8001802 <Widget::SnifferFillTransmitBuffer()+0xa>
 800181a:	f240 1401 	movw	r4, #257	; 0x101
 800181e:	e7f9      	b.n	8001814 <Widget::SnifferFillTransmitBuffer()+0x1c>

08001820 <Widget::SendHeader(unsigned char, unsigned int)>:
 8001820:	b538      	push	{r3, r4, r5, lr}
 8001822:	207e      	movs	r0, #126	; 0x7e
 8001824:	460d      	mov	r5, r1
 8001826:	4614      	mov	r4, r2
 8001828:	f000 fdb1 	bl	800238e <usb_send_byte>
 800182c:	4628      	mov	r0, r5
 800182e:	f000 fdae 	bl	800238e <usb_send_byte>
 8001832:	b2e0      	uxtb	r0, r4
 8001834:	f000 fdab 	bl	800238e <usb_send_byte>
 8001838:	f3c4 2007 	ubfx	r0, r4, #8, #8
 800183c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001840:	f000 bda5 	b.w	800238e <usb_send_byte>

08001844 <Widget::SendData(unsigned char const*, unsigned int)>:
 8001844:	b538      	push	{r3, r4, r5, lr}
 8001846:	460c      	mov	r4, r1
 8001848:	188d      	adds	r5, r1, r2
 800184a:	42ac      	cmp	r4, r5
 800184c:	d100      	bne.n	8001850 <Widget::SendData(unsigned char const*, unsigned int)+0xc>
 800184e:	bd38      	pop	{r3, r4, r5, pc}
 8001850:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001854:	f000 fd9b 	bl	800238e <usb_send_byte>
 8001858:	e7f7      	b.n	800184a <Widget::SendData(unsigned char const*, unsigned int)+0x6>

0800185a <Widget::SendFooter()>:
 800185a:	20e7      	movs	r0, #231	; 0xe7
 800185c:	f000 bd97 	b.w	800238e <usb_send_byte>

08001860 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>:
 8001860:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001862:	4604      	mov	r4, r0
 8001864:	4615      	mov	r5, r2
 8001866:	461a      	mov	r2, r3
 8001868:	9301      	str	r3, [sp, #4]
 800186a:	f7ff ffd9 	bl	8001820 <Widget::SendHeader(unsigned char, unsigned int)>
 800186e:	4620      	mov	r0, r4
 8001870:	9a01      	ldr	r2, [sp, #4]
 8001872:	4629      	mov	r1, r5
 8001874:	f7ff ffe6 	bl	8001844 <Widget::SendData(unsigned char const*, unsigned int)>
 8001878:	20e7      	movs	r0, #231	; 0xe7
 800187a:	b003      	add	sp, #12
 800187c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001880:	f000 bd85 	b.w	800238e <usb_send_byte>

08001884 <StoreWidget::UpdateBreakTime(unsigned char)>:
 8001884:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8001886:	2301      	movs	r3, #1
 8001888:	2200      	movs	r2, #0
 800188a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800188e:	4807      	ldr	r0, [pc, #28]	; (80018ac <StoreWidget::UpdateBreakTime(unsigned char)+0x28>)
 8001890:	9300      	str	r3, [sp, #0]
 8001892:	f88d 1017 	strb.w	r1, [sp, #23]
 8001896:	6800      	ldr	r0, [r0, #0]
 8001898:	f10d 0317 	add.w	r3, sp, #23
 800189c:	2204      	movs	r2, #4
 800189e:	210a      	movs	r1, #10
 80018a0:	f001 f81c 	bl	80028dc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80018a4:	b007      	add	sp, #28
 80018a6:	f85d fb04 	ldr.w	pc, [sp], #4
 80018aa:	bf00      	nop
 80018ac:	20001748 	andcs	r1, r0, r8, asr #14

080018b0 <non-virtual thunk to StoreWidget::UpdateBreakTime(unsigned char)>:
 80018b0:	f1a0 0004 	sub.w	r0, r0, #4
 80018b4:	e7e6      	b.n	8001884 <StoreWidget::UpdateBreakTime(unsigned char)>
 80018b6:	bf00      	nop

080018b8 <StoreWidget::UpdateMabTime(unsigned char)>:
 80018b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80018ba:	2302      	movs	r3, #2
 80018bc:	2200      	movs	r2, #0
 80018be:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80018c2:	4807      	ldr	r0, [pc, #28]	; (80018e0 <StoreWidget::UpdateMabTime(unsigned char)+0x28>)
 80018c4:	f88d 1017 	strb.w	r1, [sp, #23]
 80018c8:	2301      	movs	r3, #1
 80018ca:	9300      	str	r3, [sp, #0]
 80018cc:	6800      	ldr	r0, [r0, #0]
 80018ce:	f10d 0317 	add.w	r3, sp, #23
 80018d2:	2205      	movs	r2, #5
 80018d4:	210a      	movs	r1, #10
 80018d6:	f001 f801 	bl	80028dc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80018da:	b007      	add	sp, #28
 80018dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80018e0:	20001748 	andcs	r1, r0, r8, asr #14

080018e4 <non-virtual thunk to StoreWidget::UpdateMabTime(unsigned char)>:
 80018e4:	f1a0 0004 	sub.w	r0, r0, #4
 80018e8:	e7e6      	b.n	80018b8 <StoreWidget::UpdateMabTime(unsigned char)>
 80018ea:	bf00      	nop

080018ec <StoreWidget::UpdateRefreshRate(unsigned char)>:
 80018ec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80018ee:	2304      	movs	r3, #4
 80018f0:	2200      	movs	r2, #0
 80018f2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80018f6:	4807      	ldr	r0, [pc, #28]	; (8001914 <StoreWidget::UpdateRefreshRate(unsigned char)+0x28>)
 80018f8:	f88d 1017 	strb.w	r1, [sp, #23]
 80018fc:	2301      	movs	r3, #1
 80018fe:	9300      	str	r3, [sp, #0]
 8001900:	6800      	ldr	r0, [r0, #0]
 8001902:	f10d 0317 	add.w	r3, sp, #23
 8001906:	2206      	movs	r2, #6
 8001908:	210a      	movs	r1, #10
 800190a:	f000 ffe7 	bl	80028dc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800190e:	b007      	add	sp, #28
 8001910:	f85d fb04 	ldr.w	pc, [sp], #4
 8001914:	20001748 	andcs	r1, r0, r8, asr #14

08001918 <non-virtual thunk to StoreWidget::UpdateRefreshRate(unsigned char)>:
 8001918:	f1a0 0004 	sub.w	r0, r0, #4
 800191c:	e7e6      	b.n	80018ec <StoreWidget::UpdateRefreshRate(unsigned char)>
 800191e:	bf00      	nop

08001920 <WidgetConfiguration::Store(TWidgetConfiguration const*)>:
 8001920:	b510      	push	{r4, lr}
 8001922:	4a25      	ldr	r2, [pc, #148]	; (80019b8 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x98>)
 8001924:	7883      	ldrb	r3, [r0, #2]
 8001926:	7811      	ldrb	r1, [r2, #0]
 8001928:	4299      	cmp	r1, r3
 800192a:	4604      	mov	r4, r0
 800192c:	d015      	beq.n	800195a <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x3a>
 800192e:	ee07 3a90 	vmov	s15, r3
 8001932:	ed9f 7a22 	vldr	s14, [pc, #136]	; 80019bc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>
 8001936:	7013      	strb	r3, [r2, #0]
 8001938:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800193c:	4b20      	ldr	r3, [pc, #128]	; (80019c0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 800193e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001942:	6818      	ldr	r0, [r3, #0]
 8001944:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001948:	ee17 1a90 	vmov	r1, s15
 800194c:	f000 fc50 	bl	80021f0 <Dmx::SetDmxBreakTime(unsigned int)>
 8001950:	4b1c      	ldr	r3, [pc, #112]	; (80019c4 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa4>)
 8001952:	78a1      	ldrb	r1, [r4, #2]
 8001954:	6818      	ldr	r0, [r3, #0]
 8001956:	f7ff ff95 	bl	8001884 <StoreWidget::UpdateBreakTime(unsigned char)>
 800195a:	4a1b      	ldr	r2, [pc, #108]	; (80019c8 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa8>)
 800195c:	78e3      	ldrb	r3, [r4, #3]
 800195e:	7811      	ldrb	r1, [r2, #0]
 8001960:	4299      	cmp	r1, r3
 8001962:	d015      	beq.n	8001990 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x70>
 8001964:	ee07 3a90 	vmov	s15, r3
 8001968:	ed9f 7a14 	vldr	s14, [pc, #80]	; 80019bc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>
 800196c:	7013      	strb	r3, [r2, #0]
 800196e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001972:	4b13      	ldr	r3, [pc, #76]	; (80019c0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 8001974:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001978:	6818      	ldr	r0, [r3, #0]
 800197a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800197e:	ee17 1a90 	vmov	r1, s15
 8001982:	f000 fc3f 	bl	8002204 <Dmx::SetDmxMabTime(unsigned int)>
 8001986:	4b0f      	ldr	r3, [pc, #60]	; (80019c4 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa4>)
 8001988:	78e1      	ldrb	r1, [r4, #3]
 800198a:	6818      	ldr	r0, [r3, #0]
 800198c:	f7ff ff94 	bl	80018b8 <StoreWidget::UpdateMabTime(unsigned char)>
 8001990:	4b0e      	ldr	r3, [pc, #56]	; (80019cc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xac>)
 8001992:	7921      	ldrb	r1, [r4, #4]
 8001994:	781a      	ldrb	r2, [r3, #0]
 8001996:	428a      	cmp	r2, r1
 8001998:	d00d      	beq.n	80019b6 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x96>
 800199a:	7019      	strb	r1, [r3, #0]
 800199c:	4b08      	ldr	r3, [pc, #32]	; (80019c0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 800199e:	6818      	ldr	r0, [r3, #0]
 80019a0:	b111      	cbz	r1, 80019a8 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x88>
 80019a2:	4b0b      	ldr	r3, [pc, #44]	; (80019d0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xb0>)
 80019a4:	fbb3 f1f1 	udiv	r1, r3, r1
 80019a8:	f000 fbf2 	bl	8002190 <Dmx::SetDmxPeriodTime(unsigned int)>
 80019ac:	4b05      	ldr	r3, [pc, #20]	; (80019c4 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa4>)
 80019ae:	7921      	ldrb	r1, [r4, #4]
 80019b0:	6818      	ldr	r0, [r3, #0]
 80019b2:	f7ff ff9b 	bl	80018ec <StoreWidget::UpdateRefreshRate(unsigned char)>
 80019b6:	bd10      	pop	{r4, pc}
 80019b8:	20000001 	andcs	r0, r0, r1
 80019bc:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 80019c0:	20000728 	andcs	r0, r0, r8, lsr #14
 80019c4:	20001754 	andcs	r1, r0, r4, asr r7
 80019c8:	20000000 	andcs	r0, r0, r0
 80019cc:	20000004 	andcs	r0, r0, r4
 80019d0:	000f4240 	andeq	r4, pc, r0, asr #4

080019d4 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>:
 80019d4:	4770      	bx	lr
	...

080019d8 <Rdm::Receive(unsigned int)>:
 80019d8:	4b02      	ldr	r3, [pc, #8]	; (80019e4 <Rdm::Receive(unsigned int)+0xc>)
 80019da:	4601      	mov	r1, r0
 80019dc:	6818      	ldr	r0, [r3, #0]
 80019de:	f000 bcbb 	b.w	8002358 <Dmx::RdmReceive(unsigned int)>
 80019e2:	bf00      	nop
 80019e4:	20000728 	andcs	r0, r0, r8, lsr #14

080019e8 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>:
 80019e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80019ec:	4d0d      	ldr	r5, [pc, #52]	; (8001a24 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)+0x3c>)
 80019ee:	2300      	movs	r3, #0
 80019f0:	4604      	mov	r4, r0
 80019f2:	460e      	mov	r6, r1
 80019f4:	4617      	mov	r7, r2
 80019f6:	4601      	mov	r1, r0
 80019f8:	461a      	mov	r2, r3
 80019fa:	6828      	ldr	r0, [r5, #0]
 80019fc:	f000 fabe 	bl	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001a00:	463b      	mov	r3, r7
 8001a02:	4632      	mov	r2, r6
 8001a04:	6828      	ldr	r0, [r5, #0]
 8001a06:	4621      	mov	r1, r4
 8001a08:	f000 fc60 	bl	80022cc <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>
 8001a0c:	2100      	movs	r1, #0
 8001a0e:	2004      	movs	r0, #4
 8001a10:	f002 feb4 	bl	800477c <udelay(unsigned int, unsigned int)>
 8001a14:	2301      	movs	r3, #1
 8001a16:	6828      	ldr	r0, [r5, #0]
 8001a18:	4621      	mov	r1, r4
 8001a1a:	461a      	mov	r2, r3
 8001a1c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001a20:	f000 baac 	b.w	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001a24:	20000728 	andcs	r0, r0, r8, lsr #14

08001a28 <USART2_IRQHandler>:
 8001a28:	4977      	ldr	r1, [pc, #476]	; (8001c08 <USART2_IRQHandler+0x1e0>)
 8001a2a:	b510      	push	{r4, lr}
 8001a2c:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 8001a30:	2408      	movs	r4, #8
 8001a32:	f8c1 4c10 	str.w	r4, [r1, #3088]	; 0xc10
 8001a36:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 8001a3a:	f013 0f02 	tst.w	r3, #2
 8001a3e:	4b73      	ldr	r3, [pc, #460]	; (8001c0c <USART2_IRQHandler+0x1e4>)
 8001a40:	d018      	beq.n	8001a74 <USART2_IRQHandler+0x4c>
 8001a42:	f8d2 0800 	ldr.w	r0, [r2, #2048]	; 0x800
 8001a46:	f020 0002 	bic.w	r0, r0, #2
 8001a4a:	f8c2 0800 	str.w	r0, [r2, #2048]	; 0x800
 8001a4e:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8001a52:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8001a56:	b962      	cbnz	r2, 8001a72 <USART2_IRQHandler+0x4a>
 8001a58:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001a5c:	2201      	movs	r2, #1
 8001a5e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001a62:	2310      	movs	r3, #16
 8001a64:	f8c1 4c14 	str.w	r4, [r1, #3092]	; 0xc14
 8001a68:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 8001a6c:	2320      	movs	r3, #32
 8001a6e:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 8001a72:	bd10      	pop	{r4, pc}
 8001a74:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8001a78:	f8d3 020c 	ldr.w	r0, [r3, #524]	; 0x20c
 8001a7c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001a80:	2807      	cmp	r0, #7
 8001a82:	f200 80bc 	bhi.w	8001bfe <USART2_IRQHandler+0x1d6>
 8001a86:	e8df f000 	tbb	[pc, r0]
 8001a8a:	41ba1804 			; <UNDEFINED> instruction: 0x41ba1804
 8001a8e:	a1807056 	orrge	r7, r0, r6, asr r0
 8001a92:	701a      	strb	r2, [r3, #0]
 8001a94:	2107      	movs	r1, #7
 8001a96:	2201      	movs	r2, #1
 8001a98:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8001a9c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001aa0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001aa4:	4a5a      	ldr	r2, [pc, #360]	; (8001c10 <USART2_IRQHandler+0x1e8>)
 8001aa6:	f8d3 3424 	ldr.w	r3, [r3, #1060]	; 0x424
 8001aaa:	b29b      	uxth	r3, r3
 8001aac:	8193      	strh	r3, [r2, #12]
 8001aae:	4b56      	ldr	r3, [pc, #344]	; (8001c08 <USART2_IRQHandler+0x1e0>)
 8001ab0:	2210      	movs	r2, #16
 8001ab2:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8001ab6:	2220      	movs	r2, #32
 8001ab8:	e017      	b.n	8001aea <USART2_IRQHandler+0xc2>
 8001aba:	b11a      	cbz	r2, 8001ac4 <USART2_IRQHandler+0x9c>
 8001abc:	2acc      	cmp	r2, #204	; 0xcc
 8001abe:	d01b      	beq.n	8001af8 <USART2_IRQHandler+0xd0>
 8001ac0:	2200      	movs	r2, #0
 8001ac2:	e05f      	b.n	8001b84 <USART2_IRQHandler+0x15c>
 8001ac4:	701a      	strb	r2, [r3, #0]
 8001ac6:	2201      	movs	r2, #1
 8001ac8:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001acc:	4a50      	ldr	r2, [pc, #320]	; (8001c10 <USART2_IRQHandler+0x1e8>)
 8001ace:	6851      	ldr	r1, [r2, #4]
 8001ad0:	3101      	adds	r1, #1
 8001ad2:	6051      	str	r1, [r2, #4]
 8001ad4:	2103      	movs	r1, #3
 8001ad6:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8001ada:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001ade:	f8d3 3424 	ldr.w	r3, [r3, #1060]	; 0x424
 8001ae2:	b29b      	uxth	r3, r3
 8001ae4:	8193      	strh	r3, [r2, #12]
 8001ae6:	4b48      	ldr	r3, [pc, #288]	; (8001c08 <USART2_IRQHandler+0x1e0>)
 8001ae8:	2210      	movs	r2, #16
 8001aea:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8001aee:	4b46      	ldr	r3, [pc, #280]	; (8001c08 <USART2_IRQHandler+0x1e0>)
 8001af0:	2208      	movs	r2, #8
 8001af2:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8001af6:	e7bc      	b.n	8001a72 <USART2_IRQHandler+0x4a>
 8001af8:	701a      	strb	r2, [r3, #0]
 8001afa:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8001afe:	2201      	movs	r2, #1
 8001b00:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001b04:	2204      	movs	r2, #4
 8001b06:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001b0a:	e7ec      	b.n	8001ae6 <USART2_IRQHandler+0xbe>
 8001b0c:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 8001b10:	545a      	strb	r2, [r3, r1]
 8001b12:	1c4a      	adds	r2, r1, #1
 8001b14:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8001b18:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001b1c:	d95e      	bls.n	8001bdc <USART2_IRQHandler+0x1b4>
 8001b1e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001b22:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001b26:	2200      	movs	r2, #0
 8001b28:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001b2c:	4b36      	ldr	r3, [pc, #216]	; (8001c08 <USART2_IRQHandler+0x1e0>)
 8001b2e:	2210      	movs	r2, #16
 8001b30:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8001b34:	e7db      	b.n	8001aee <USART2_IRQHandler+0xc6>
 8001b36:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 8001b3a:	f8b3 4208 	ldrh.w	r4, [r3, #520]	; 0x208
 8001b3e:	545a      	strb	r2, [r3, r1]
 8001b40:	1c48      	adds	r0, r1, #1
 8001b42:	3917      	subs	r1, #23
 8001b44:	4422      	add	r2, r4
 8001b46:	29e9      	cmp	r1, #233	; 0xe9
 8001b48:	f8c3 0204 	str.w	r0, [r3, #516]	; 0x204
 8001b4c:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8001b50:	d807      	bhi.n	8001b62 <USART2_IRQHandler+0x13a>
 8001b52:	789a      	ldrb	r2, [r3, #2]
 8001b54:	4290      	cmp	r0, r2
 8001b56:	d104      	bne.n	8001b62 <USART2_IRQHandler+0x13a>
 8001b58:	2205      	movs	r2, #5
 8001b5a:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001b5e:	4b2a      	ldr	r3, [pc, #168]	; (8001c08 <USART2_IRQHandler+0x1e0>)
 8001b60:	e7a9      	b.n	8001ab6 <USART2_IRQHandler+0x8e>
 8001b62:	f5b0 7f81 	cmp.w	r0, #258	; 0x102
 8001b66:	d3c2      	bcc.n	8001aee <USART2_IRQHandler+0xc6>
 8001b68:	e7aa      	b.n	8001ac0 <USART2_IRQHandler+0x98>
 8001b6a:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 8001b6e:	545a      	strb	r2, [r3, r1]
 8001b70:	3101      	adds	r1, #1
 8001b72:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204
 8001b76:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 8001b7a:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 8001b7e:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8001b82:	2206      	movs	r2, #6
 8001b84:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001b88:	e7b1      	b.n	8001aee <USART2_IRQHandler+0xc6>
 8001b8a:	2020      	movs	r0, #32
 8001b8c:	f8c1 0c14 	str.w	r0, [r1, #3092]	; 0xc14
 8001b90:	f8b3 4208 	ldrh.w	r4, [r3, #520]	; 0x208
 8001b94:	f8d3 0204 	ldr.w	r0, [r3, #516]	; 0x204
 8001b98:	541a      	strb	r2, [r3, r0]
 8001b9a:	1aa2      	subs	r2, r4, r2
 8001b9c:	b292      	uxth	r2, r2
 8001b9e:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8001ba2:	b912      	cbnz	r2, 8001baa <USART2_IRQHandler+0x182>
 8001ba4:	785a      	ldrb	r2, [r3, #1]
 8001ba6:	2a01      	cmp	r2, #1
 8001ba8:	d003      	beq.n	8001bb2 <USART2_IRQHandler+0x18a>
 8001baa:	2200      	movs	r2, #0
 8001bac:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001bb0:	e786      	b.n	8001ac0 <USART2_IRQHandler+0x98>
 8001bb2:	3001      	adds	r0, #1
 8001bb4:	4a17      	ldr	r2, [pc, #92]	; (8001c14 <USART2_IRQHandler+0x1ec>)
 8001bb6:	f440 4080 	orr.w	r0, r0, #16384	; 0x4000
 8001bba:	f8c3 0204 	str.w	r0, [r3, #516]	; 0x204
 8001bbe:	6850      	ldr	r0, [r2, #4]
 8001bc0:	4a15      	ldr	r2, [pc, #84]	; (8001c18 <USART2_IRQHandler+0x1f0>)
 8001bc2:	6010      	str	r0, [r2, #0]
 8001bc4:	2210      	movs	r2, #16
 8001bc6:	f8c1 2c14 	str.w	r2, [r1, #3092]	; 0xc14
 8001bca:	e779      	b.n	8001ac0 <USART2_IRQHandler+0x98>
 8001bcc:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 8001bd0:	2917      	cmp	r1, #23
 8001bd2:	bf9e      	ittt	ls
 8001bd4:	545a      	strbls	r2, [r3, r1]
 8001bd6:	3101      	addls	r1, #1
 8001bd8:	f8c3 1204 	strls.w	r1, [r3, #516]	; 0x204
 8001bdc:	480c      	ldr	r0, [pc, #48]	; (8001c10 <USART2_IRQHandler+0x1e8>)
 8001bde:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8001be2:	f8d1 2424 	ldr.w	r2, [r1, #1060]	; 0x424
 8001be6:	8983      	ldrh	r3, [r0, #12]
 8001be8:	b29b      	uxth	r3, r3
 8001bea:	b292      	uxth	r2, r2
 8001bec:	f1c3 0304 	rsb	r3, r3, #4
 8001bf0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8001bf4:	b29b      	uxth	r3, r3
 8001bf6:	8182      	strh	r2, [r0, #12]
 8001bf8:	f8c1 3434 	str.w	r3, [r1, #1076]	; 0x434
 8001bfc:	e777      	b.n	8001aee <USART2_IRQHandler+0xc6>
 8001bfe:	2200      	movs	r2, #0
 8001c00:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001c04:	e7be      	b.n	8001b84 <USART2_IRQHandler+0x15c>
 8001c06:	bf00      	nop
 8001c08:	40010000 	andmi	r0, r1, r0
 8001c0c:	200000f8 	strdcs	r0, [r0], -r8
 8001c10:	20000714 	andcs	r0, r0, r4, lsl r7
 8001c14:	e0001000 	and	r1, r0, r0
 8001c18:	2000072c 	andcs	r0, r0, ip, lsr #14

08001c1c <TIMER1_IRQHandler>:
 8001c1c:	b538      	push	{r3, r4, r5, lr}
 8001c1e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c22:	4a24      	ldr	r2, [pc, #144]	; (8001cb4 <TIMER1_IRQHandler+0x98>)
 8001c24:	691c      	ldr	r4, [r3, #16]
 8001c26:	4924      	ldr	r1, [pc, #144]	; (8001cb8 <TIMER1_IRQHandler+0x9c>)
 8001c28:	8813      	ldrh	r3, [r2, #0]
 8001c2a:	2008      	movs	r0, #8
 8001c2c:	f8c1 0c10 	str.w	r0, [r1, #3088]	; 0xc10
 8001c30:	07a1      	lsls	r1, r4, #30
 8001c32:	b29b      	uxth	r3, r3
 8001c34:	d51b      	bpl.n	8001c6e <TIMER1_IRQHandler+0x52>
 8001c36:	07dd      	lsls	r5, r3, #31
 8001c38:	d50f      	bpl.n	8001c5a <TIMER1_IRQHandler+0x3e>
 8001c3a:	8813      	ldrh	r3, [r2, #0]
 8001c3c:	4d1f      	ldr	r5, [pc, #124]	; (8001cbc <TIMER1_IRQHandler+0xa0>)
 8001c3e:	b29b      	uxth	r3, r3
 8001c40:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001c44:	8013      	strh	r3, [r2, #0]
 8001c46:	2110      	movs	r1, #16
 8001c48:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001c4c:	2203      	movs	r2, #3
 8001c4e:	4628      	mov	r0, r5
 8001c50:	f001 ffe2 	bl	8003c18 <gpio_init>
 8001c54:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001c58:	616b      	str	r3, [r5, #20]
 8001c5a:	4621      	mov	r1, r4
 8001c5c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001c60:	f002 f9df 	bl	8004022 <timer_interrupt_flag_clear>
 8001c64:	4b14      	ldr	r3, [pc, #80]	; (8001cb8 <TIMER1_IRQHandler+0x9c>)
 8001c66:	2208      	movs	r2, #8
 8001c68:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8001c6c:	bd38      	pop	{r3, r4, r5, pc}
 8001c6e:	0760      	lsls	r0, r4, #29
 8001c70:	d509      	bpl.n	8001c86 <TIMER1_IRQHandler+0x6a>
 8001c72:	05d9      	lsls	r1, r3, #23
 8001c74:	d5f1      	bpl.n	8001c5a <TIMER1_IRQHandler+0x3e>
 8001c76:	4811      	ldr	r0, [pc, #68]	; (8001cbc <TIMER1_IRQHandler+0xa0>)
 8001c78:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001c7c:	2203      	movs	r2, #3
 8001c7e:	2118      	movs	r1, #24
 8001c80:	f001 ffca 	bl	8003c18 <gpio_init>
 8001c84:	e7e9      	b.n	8001c5a <TIMER1_IRQHandler+0x3e>
 8001c86:	0722      	lsls	r2, r4, #28
 8001c88:	d5e7      	bpl.n	8001c5a <TIMER1_IRQHandler+0x3e>
 8001c8a:	05db      	lsls	r3, r3, #23
 8001c8c:	d5e5      	bpl.n	8001c5a <TIMER1_IRQHandler+0x3e>
 8001c8e:	4b0c      	ldr	r3, [pc, #48]	; (8001cc0 <TIMER1_IRQHandler+0xa4>)
 8001c90:	480c      	ldr	r0, [pc, #48]	; (8001cc4 <TIMER1_IRQHandler+0xa8>)
 8001c92:	69da      	ldr	r2, [r3, #28]
 8001c94:	f022 0201 	bic.w	r2, r2, #1
 8001c98:	61da      	str	r2, [r3, #28]
 8001c9a:	4a0b      	ldr	r2, [pc, #44]	; (8001cc8 <TIMER1_IRQHandler+0xac>)
 8001c9c:	629a      	str	r2, [r3, #40]	; 0x28
 8001c9e:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 8001ca2:	621a      	str	r2, [r3, #32]
 8001ca4:	69da      	ldr	r2, [r3, #28]
 8001ca6:	f042 0201 	orr.w	r2, r2, #1
 8001caa:	61da      	str	r2, [r3, #28]
 8001cac:	2180      	movs	r1, #128	; 0x80
 8001cae:	f002 fa8b 	bl	80041c8 <usart_dma_transmit_config>
 8001cb2:	e7d2      	b.n	8001c5a <TIMER1_IRQHandler+0x3e>
 8001cb4:	20000724 	andcs	r0, r0, r4, lsr #14
 8001cb8:	40010000 	andmi	r0, r1, r0
 8001cbc:	40011000 	andmi	r1, r1, r0
 8001cc0:	40020000 	andmi	r0, r2, r0
 8001cc4:	40004800 	andmi	r4, r0, r0, lsl #16
 8001cc8:	20000308 	andcs	r0, r0, r8, lsl #6

08001ccc <TIMER2_IRQHandler>:
 8001ccc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001cd0:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 8001cd4:	078b      	lsls	r3, r1, #30
 8001cd6:	d511      	bpl.n	8001cfc <TIMER2_IRQHandler+0x30>
 8001cd8:	4b13      	ldr	r3, [pc, #76]	; (8001d28 <TIMER2_IRQHandler+0x5c>)
 8001cda:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8001cde:	2a03      	cmp	r2, #3
 8001ce0:	d10f      	bne.n	8001d02 <TIMER2_IRQHandler+0x36>
 8001ce2:	2200      	movs	r2, #0
 8001ce4:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001ce8:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8001cec:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001cf0:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001cf4:	4b0d      	ldr	r3, [pc, #52]	; (8001d2c <TIMER2_IRQHandler+0x60>)
 8001cf6:	2210      	movs	r2, #16
 8001cf8:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8001cfc:	480c      	ldr	r0, [pc, #48]	; (8001d30 <TIMER2_IRQHandler+0x64>)
 8001cfe:	f002 b990 	b.w	8004022 <timer_interrupt_flag_clear>
 8001d02:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8001d06:	2a07      	cmp	r2, #7
 8001d08:	d1f8      	bne.n	8001cfc <TIMER2_IRQHandler+0x30>
 8001d0a:	2200      	movs	r2, #0
 8001d0c:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001d10:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8001d14:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001d18:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001d1c:	4b03      	ldr	r3, [pc, #12]	; (8001d2c <TIMER2_IRQHandler+0x60>)
 8001d1e:	2210      	movs	r2, #16
 8001d20:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8001d24:	2220      	movs	r2, #32
 8001d26:	e7e7      	b.n	8001cf8 <TIMER2_IRQHandler+0x2c>
 8001d28:	200000f8 	strdcs	r0, [r0], -r8
 8001d2c:	40010000 	andmi	r0, r1, r0
 8001d30:	40000400 	andmi	r0, r0, r0, lsl #8

08001d34 <TIMER3_IRQHandler>:
 8001d34:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001d38:	4802      	ldr	r0, [pc, #8]	; (8001d44 <TIMER3_IRQHandler+0x10>)
 8001d3a:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 8001d3e:	f002 b970 	b.w	8004022 <timer_interrupt_flag_clear>
 8001d42:	bf00      	nop
 8001d44:	40000800 	andmi	r0, r0, r0, lsl #16

08001d48 <TIMER6_IRQHandler>:
 8001d48:	4b05      	ldr	r3, [pc, #20]	; (8001d60 <TIMER6_IRQHandler+0x18>)
 8001d4a:	4806      	ldr	r0, [pc, #24]	; (8001d64 <TIMER6_IRQHandler+0x1c>)
 8001d4c:	685a      	ldr	r2, [r3, #4]
 8001d4e:	6899      	ldr	r1, [r3, #8]
 8001d50:	1a52      	subs	r2, r2, r1
 8001d52:	601a      	str	r2, [r3, #0]
 8001d54:	685a      	ldr	r2, [r3, #4]
 8001d56:	609a      	str	r2, [r3, #8]
 8001d58:	2101      	movs	r1, #1
 8001d5a:	f002 b962 	b.w	8004022 <timer_interrupt_flag_clear>
 8001d5e:	bf00      	nop
 8001d60:	20000714 	andcs	r0, r0, r4, lsl r7
 8001d64:	40001400 	andmi	r1, r0, r0, lsl #8

08001d68 <Dmx::ClearData(unsigned int)>:
 8001d68:	4a0a      	ldr	r2, [pc, #40]	; (8001d94 <Dmx::ClearData(unsigned int)+0x2c>)
 8001d6a:	f44f 7301 	mov.w	r3, #516	; 0x204
 8001d6e:	fb03 2301 	mla	r3, r3, r1, r2
 8001d72:	b510      	push	{r4, lr}
 8001d74:	f203 2002 	addw	r0, r3, #514	; 0x202
 8001d78:	2400      	movs	r4, #0
 8001d7a:	f823 4b02 	strh.w	r4, [r3], #2
 8001d7e:	4283      	cmp	r3, r0
 8001d80:	d1fb      	bne.n	8001d7a <Dmx::ClearData(unsigned int)+0x12>
 8001d82:	f44f 7301 	mov.w	r3, #516	; 0x204
 8001d86:	fb03 2101 	mla	r1, r3, r1, r2
 8001d8a:	f240 2301 	movw	r3, #513	; 0x201
 8001d8e:	f8a1 3202 	strh.w	r3, [r1, #514]	; 0x202
 8001d92:	bd10      	pop	{r4, pc}
 8001d94:	20000308 	andcs	r0, r0, r8, lsl #6

08001d98 <Dmx::StartData(unsigned int, unsigned int)>:
 8001d98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d9a:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8001d9e:	b085      	sub	sp, #20
 8001da0:	6943      	ldr	r3, [r0, #20]
 8001da2:	460c      	mov	r4, r1
 8001da4:	4615      	mov	r5, r2
 8001da6:	2b00      	cmp	r3, #0
 8001da8:	d168      	bne.n	8001e7c <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 8001daa:	4e46      	ldr	r6, [pc, #280]	; (8001ec4 <Dmx::StartData(unsigned int, unsigned int)+0x12c>)
 8001dac:	8834      	ldrh	r4, [r6, #0]
 8001dae:	b2a4      	uxth	r4, r4
 8001db0:	2c00      	cmp	r4, #0
 8001db2:	d157      	bne.n	8001e64 <Dmx::StartData(unsigned int, unsigned int)+0xcc>
 8001db4:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 8001db8:	f001 ffc6 	bl	8003d48 <rcu_periph_clock_enable>
 8001dbc:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001dc0:	f002 f886 	bl	8003ed0 <timer_deinit>
 8001dc4:	4b40      	ldr	r3, [pc, #256]	; (8001ec8 <Dmx::StartData(unsigned int, unsigned int)+0x130>)
 8001dc6:	f88d 400c 	strb.w	r4, [sp, #12]
 8001dca:	681b      	ldr	r3, [r3, #0]
 8001dcc:	9302      	str	r3, [sp, #8]
 8001dce:	4669      	mov	r1, sp
 8001dd0:	2377      	movs	r3, #119	; 0x77
 8001dd2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001dd6:	e9cd 3400 	strd	r3, r4, [sp]
 8001dda:	f002 f8db 	bl	8003f94 <timer_init>
 8001dde:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001de2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001de6:	f002 f91f 	bl	8004028 <timer_flag_clear>
 8001dea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001dee:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001df2:	f002 f916 	bl	8004022 <timer_interrupt_flag_clear>
 8001df6:	2210      	movs	r2, #16
 8001df8:	4621      	mov	r1, r4
 8001dfa:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001dfe:	f002 f916 	bl	800402e <timer_channel_output_mode_config>
 8001e02:	2210      	movs	r2, #16
 8001e04:	2101      	movs	r1, #1
 8001e06:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001e0a:	f002 f910 	bl	800402e <timer_channel_output_mode_config>
 8001e0e:	4f2f      	ldr	r7, [pc, #188]	; (8001ecc <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 8001e10:	2210      	movs	r2, #16
 8001e12:	2102      	movs	r1, #2
 8001e14:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001e18:	f002 f909 	bl	800402e <timer_channel_output_mode_config>
 8001e1c:	4622      	mov	r2, r4
 8001e1e:	4621      	mov	r1, r4
 8001e20:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001e24:	f002 f929 	bl	800407a <timer_channel_output_pulse_value_config>
 8001e28:	683a      	ldr	r2, [r7, #0]
 8001e2a:	2101      	movs	r1, #1
 8001e2c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001e30:	f002 f923 	bl	800407a <timer_channel_output_pulse_value_config>
 8001e34:	4b26      	ldr	r3, [pc, #152]	; (8001ed0 <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 8001e36:	683a      	ldr	r2, [r7, #0]
 8001e38:	681b      	ldr	r3, [r3, #0]
 8001e3a:	2102      	movs	r1, #2
 8001e3c:	441a      	add	r2, r3
 8001e3e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001e42:	f002 f91a 	bl	800407a <timer_channel_output_pulse_value_config>
 8001e46:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001e4a:	210e      	movs	r1, #14
 8001e4c:	f002 f8e5 	bl	800401a <timer_interrupt_enable>
 8001e50:	4b20      	ldr	r3, [pc, #128]	; (8001ed4 <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 8001e52:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001e56:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 8001e5a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001e5e:	601a      	str	r2, [r3, #0]
 8001e60:	f002 f8d6 	bl	8004010 <timer_enable>
 8001e64:	8831      	ldrh	r1, [r6, #0]
 8001e66:	2201      	movs	r2, #1
 8001e68:	fa02 f305 	lsl.w	r3, r2, r5
 8001e6c:	430b      	orrs	r3, r1
 8001e6e:	b29b      	uxth	r3, r3
 8001e70:	8033      	strh	r3, [r6, #0]
 8001e72:	4b19      	ldr	r3, [pc, #100]	; (8001ed8 <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 8001e74:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8001e78:	b005      	add	sp, #20
 8001e7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e7c:	4b17      	ldr	r3, [pc, #92]	; (8001edc <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 8001e7e:	f44f 7204 	mov.w	r2, #528	; 0x210
 8001e82:	fb02 3305 	mla	r3, r2, r5, r3
 8001e86:	2200      	movs	r2, #0
 8001e88:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001e8c:	2107      	movs	r1, #7
 8001e8e:	4620      	mov	r0, r4
 8001e90:	f002 f9a0 	bl	80041d4 <usart_flag_get>
 8001e94:	2800      	cmp	r0, #0
 8001e96:	d0f9      	beq.n	8001e8c <Dmx::StartData(unsigned int, unsigned int)+0xf4>
 8001e98:	4911      	ldr	r1, [pc, #68]	; (8001ee0 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 8001e9a:	4620      	mov	r0, r4
 8001e9c:	f002 f9bc 	bl	8004218 <usart_interrupt_flag_clear>
 8001ea0:	f240 3105 	movw	r1, #773	; 0x305
 8001ea4:	4620      	mov	r0, r4
 8001ea6:	f002 f9ab 	bl	8004200 <usart_interrupt_enable>
 8001eaa:	4b0b      	ldr	r3, [pc, #44]	; (8001ed8 <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 8001eac:	2202      	movs	r2, #2
 8001eae:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8001eb2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001eb6:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8001eba:	f043 0302 	orr.w	r3, r3, #2
 8001ebe:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8001ec2:	e7d9      	b.n	8001e78 <Dmx::StartData(unsigned int, unsigned int)+0xe0>
 8001ec4:	20000724 	andcs	r0, r0, r4, lsr #14
 8001ec8:	20000008 	andcs	r0, r0, r8
 8001ecc:	20000010 	andcs	r0, r0, r0, lsl r0
 8001ed0:	2000000c 	andcs	r0, r0, ip
 8001ed4:	e000e100 	and	lr, r0, r0, lsl #2
 8001ed8:	2000050c 	andcs	r0, r0, ip, lsl #10
 8001edc:	200000f8 	strdcs	r0, [r0], -r8
 8001ee0:	00050305 	andeq	r0, r5, r5, lsl #6

08001ee4 <Dmx::StopData(unsigned int, unsigned int)>:
 8001ee4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001ee8:	4f21      	ldr	r7, [pc, #132]	; (8001f70 <Dmx::StopData(unsigned int, unsigned int)+0x8c>)
 8001eea:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
 8001eee:	4688      	mov	r8, r1
 8001ef0:	4614      	mov	r4, r2
 8001ef2:	b323      	cbz	r3, 8001f3e <Dmx::StopData(unsigned int, unsigned int)+0x5a>
 8001ef4:	6943      	ldr	r3, [r0, #20]
 8001ef6:	bb23      	cbnz	r3, 8001f42 <Dmx::StopData(unsigned int, unsigned int)+0x5e>
 8001ef8:	4d1e      	ldr	r5, [pc, #120]	; (8001f74 <Dmx::StopData(unsigned int, unsigned int)+0x90>)
 8001efa:	882b      	ldrh	r3, [r5, #0]
 8001efc:	2601      	movs	r6, #1
 8001efe:	fa06 f202 	lsl.w	r2, r6, r2
 8001f02:	b29b      	uxth	r3, r3
 8001f04:	ea23 0302 	bic.w	r3, r3, r2
 8001f08:	802b      	strh	r3, [r5, #0]
 8001f0a:	f3bf 8f5f 	dmb	sy
 8001f0e:	882b      	ldrh	r3, [r5, #0]
 8001f10:	f104 0208 	add.w	r2, r4, #8
 8001f14:	b29b      	uxth	r3, r3
 8001f16:	4096      	lsls	r6, r2
 8001f18:	ea36 0303 	bics.w	r3, r6, r3
 8001f1c:	d105      	bne.n	8001f2a <Dmx::StopData(unsigned int, unsigned int)+0x46>
 8001f1e:	2107      	movs	r1, #7
 8001f20:	4640      	mov	r0, r8
 8001f22:	f002 f957 	bl	80041d4 <usart_flag_get>
 8001f26:	2801      	cmp	r0, #1
 8001f28:	d1f9      	bne.n	8001f1e <Dmx::StopData(unsigned int, unsigned int)+0x3a>
 8001f2a:	882b      	ldrh	r3, [r5, #0]
 8001f2c:	b29b      	uxth	r3, r3
 8001f2e:	ea23 0306 	bic.w	r3, r3, r6
 8001f32:	802b      	strh	r3, [r5, #0]
 8001f34:	f3bf 8f4f 	dsb	sy
 8001f38:	2300      	movs	r3, #0
 8001f3a:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 8001f3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001f42:	f240 3105 	movw	r1, #773	; 0x305
 8001f46:	4640      	mov	r0, r8
 8001f48:	f002 f964 	bl	8004214 <usart_interrupt_disable>
 8001f4c:	4b0a      	ldr	r3, [pc, #40]	; (8001f78 <Dmx::StopData(unsigned int, unsigned int)+0x94>)
 8001f4e:	f44f 7204 	mov.w	r2, #528	; 0x210
 8001f52:	fb02 3304 	mla	r3, r2, r4, r3
 8001f56:	2200      	movs	r2, #0
 8001f58:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001f5c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001f60:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8001f64:	f023 0302 	bic.w	r3, r3, #2
 8001f68:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8001f6c:	e7e4      	b.n	8001f38 <Dmx::StopData(unsigned int, unsigned int)+0x54>
 8001f6e:	bf00      	nop
 8001f70:	2000050c 	andcs	r0, r0, ip, lsl #10
 8001f74:	20000724 	andcs	r0, r0, r4, lsr #14
 8001f78:	200000f8 	strdcs	r0, [r0], -r8

08001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 8001f7c:	b570      	push	{r4, r5, r6, lr}
 8001f7e:	461d      	mov	r5, r3
 8001f80:	6943      	ldr	r3, [r0, #20]
 8001f82:	4293      	cmp	r3, r2
 8001f84:	4606      	mov	r6, r0
 8001f86:	4614      	mov	r4, r2
 8001f88:	d014      	beq.n	8001fb4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 8001f8a:	6142      	str	r2, [r0, #20]
 8001f8c:	4910      	ldr	r1, [pc, #64]	; (8001fd0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8001f8e:	2200      	movs	r2, #0
 8001f90:	f7ff ffa8 	bl	8001ee4 <Dmx::StopData(unsigned int, unsigned int)>
 8001f94:	b934      	cbnz	r4, 8001fa4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 8001f96:	4b0f      	ldr	r3, [pc, #60]	; (8001fd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 8001f98:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001f9c:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8001fa0:	b94d      	cbnz	r5, 8001fb6 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 8001fa2:	bd70      	pop	{r4, r5, r6, pc}
 8001fa4:	2c01      	cmp	r4, #1
 8001fa6:	d1fb      	bne.n	8001fa0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 8001fa8:	4b0a      	ldr	r3, [pc, #40]	; (8001fd4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 8001faa:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001fae:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8001fb2:	e7f5      	b.n	8001fa0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 8001fb4:	b135      	cbz	r5, 8001fc4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 8001fb6:	4630      	mov	r0, r6
 8001fb8:	4905      	ldr	r1, [pc, #20]	; (8001fd0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8001fba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001fbe:	2200      	movs	r2, #0
 8001fc0:	f7ff beea 	b.w	8001d98 <Dmx::StartData(unsigned int, unsigned int)>
 8001fc4:	462a      	mov	r2, r5
 8001fc6:	4902      	ldr	r1, [pc, #8]	; (8001fd0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8001fc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001fcc:	f7ff bf8a 	b.w	8001ee4 <Dmx::StopData(unsigned int, unsigned int)>
 8001fd0:	40004800 	andmi	r4, r0, r0, lsl #16
 8001fd4:	40010000 	andmi	r0, r1, r0

08001fd8 <Dmx::Dmx()>:
 8001fd8:	225c      	movs	r2, #92	; 0x5c
 8001fda:	230c      	movs	r3, #12
 8001fdc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001fe0:	e9c0 2300 	strd	r2, r3, [r0]
 8001fe4:	f246 13a8 	movw	r3, #25000	; 0x61a8
 8001fe8:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8001fec:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001ff0:	8203      	strh	r3, [r0, #16]
 8001ff2:	4b5b      	ldr	r3, [pc, #364]	; (8002160 <Dmx::Dmx()+0x188>)
 8001ff4:	4e5b      	ldr	r6, [pc, #364]	; (8002164 <Dmx::Dmx()+0x18c>)
 8001ff6:	6018      	str	r0, [r3, #0]
 8001ff8:	4b5b      	ldr	r3, [pc, #364]	; (8002168 <Dmx::Dmx()+0x190>)
 8001ffa:	f8df 8190 	ldr.w	r8, [pc, #400]	; 800218c <Dmx::Dmx()+0x1b4>
 8001ffe:	2400      	movs	r4, #0
 8002000:	b08b      	sub	sp, #44	; 0x2c
 8002002:	4605      	mov	r5, r0
 8002004:	801c      	strh	r4, [r3, #0]
 8002006:	2203      	movs	r2, #3
 8002008:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800200c:	4857      	ldr	r0, [pc, #348]	; (800216c <Dmx::Dmx()+0x194>)
 800200e:	2110      	movs	r1, #16
 8002010:	f001 fe02 	bl	8003c18 <gpio_init>
 8002014:	4621      	mov	r1, r4
 8002016:	4628      	mov	r0, r5
 8002018:	f7ff fea6 	bl	8001d68 <Dmx::ClearData(unsigned int)>
 800201c:	4b54      	ldr	r3, [pc, #336]	; (8002170 <Dmx::Dmx()+0x198>)
 800201e:	2201      	movs	r2, #1
 8002020:	4621      	mov	r1, r4
 8002022:	601c      	str	r4, [r3, #0]
 8002024:	4628      	mov	r0, r5
 8002026:	4623      	mov	r3, r4
 8002028:	f7ff ffa8 	bl	8001f7c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800202c:	4b51      	ldr	r3, [pc, #324]	; (8002174 <Dmx::Dmx()+0x19c>)
 800202e:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8002032:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 8002036:	f001 fe87 	bl	8003d48 <rcu_periph_clock_enable>
 800203a:	f240 5001 	movw	r0, #1281	; 0x501
 800203e:	f001 fe83 	bl	8003d48 <rcu_periph_clock_enable>
 8002042:	484d      	ldr	r0, [pc, #308]	; (8002178 <Dmx::Dmx()+0x1a0>)
 8002044:	2101      	movs	r1, #1
 8002046:	f001 fce7 	bl	8003a18 <dma_deinit>
 800204a:	4b4c      	ldr	r3, [pc, #304]	; (800217c <Dmx::Dmx()+0x1a4>)
 800204c:	484a      	ldr	r0, [pc, #296]	; (8002178 <Dmx::Dmx()+0x1a0>)
 800204e:	9406      	str	r4, [sp, #24]
 8002050:	2701      	movs	r7, #1
 8002052:	e9cd 3403 	strd	r3, r4, [sp, #12]
 8002056:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800205a:	aa03      	add	r2, sp, #12
 800205c:	9308      	str	r3, [sp, #32]
 800205e:	4639      	mov	r1, r7
 8002060:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002064:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002068:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800206c:	f001 fcf0 	bl	8003a50 <dma_init>
 8002070:	4639      	mov	r1, r7
 8002072:	4841      	ldr	r0, [pc, #260]	; (8002178 <Dmx::Dmx()+0x1a0>)
 8002074:	f001 fd26 	bl	8003ac4 <dma_circulation_disable>
 8002078:	4639      	mov	r1, r7
 800207a:	483f      	ldr	r0, [pc, #252]	; (8002178 <Dmx::Dmx()+0x1a0>)
 800207c:	f001 fd32 	bl	8003ae4 <dma_memory_to_memory_disable>
 8002080:	f240 7001 	movw	r0, #1793	; 0x701
 8002084:	f001 fe60 	bl	8003d48 <rcu_periph_clock_enable>
 8002088:	4630      	mov	r0, r6
 800208a:	f001 ff21 	bl	8003ed0 <timer_deinit>
 800208e:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 8002092:	2377      	movs	r3, #119	; 0x77
 8002094:	a903      	add	r1, sp, #12
 8002096:	4630      	mov	r0, r6
 8002098:	e9cd 3403 	strd	r3, r4, [sp, #12]
 800209c:	f8cd 9014 	str.w	r9, [sp, #20]
 80020a0:	f88d 4018 	strb.w	r4, [sp, #24]
 80020a4:	f001 ff76 	bl	8003f94 <timer_init>
 80020a8:	4649      	mov	r1, r9
 80020aa:	4630      	mov	r0, r6
 80020ac:	f001 ffbc 	bl	8004028 <timer_flag_clear>
 80020b0:	4649      	mov	r1, r9
 80020b2:	4630      	mov	r0, r6
 80020b4:	f001 ffb5 	bl	8004022 <timer_interrupt_flag_clear>
 80020b8:	4621      	mov	r1, r4
 80020ba:	4630      	mov	r0, r6
 80020bc:	2210      	movs	r2, #16
 80020be:	f001 ffb6 	bl	800402e <timer_channel_output_mode_config>
 80020c2:	4639      	mov	r1, r7
 80020c4:	4630      	mov	r0, r6
 80020c6:	2210      	movs	r2, #16
 80020c8:	f001 ffb1 	bl	800402e <timer_channel_output_mode_config>
 80020cc:	4630      	mov	r0, r6
 80020ce:	2210      	movs	r2, #16
 80020d0:	2102      	movs	r1, #2
 80020d2:	f001 ffac 	bl	800402e <timer_channel_output_mode_config>
 80020d6:	2210      	movs	r2, #16
 80020d8:	2103      	movs	r1, #3
 80020da:	4630      	mov	r0, r6
 80020dc:	f001 ffa7 	bl	800402e <timer_channel_output_mode_config>
 80020e0:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 80020e4:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 80020e8:	4630      	mov	r0, r6
 80020ea:	f8c8 3000 	str.w	r3, [r8]
 80020ee:	f001 ff8f 	bl	8004010 <timer_enable>
 80020f2:	f240 7005 	movw	r0, #1797	; 0x705
 80020f6:	f001 fe27 	bl	8003d48 <rcu_periph_clock_enable>
 80020fa:	4821      	ldr	r0, [pc, #132]	; (8002180 <Dmx::Dmx()+0x1a8>)
 80020fc:	f001 fee8 	bl	8003ed0 <timer_deinit>
 8002100:	f642 63df 	movw	r3, #11999	; 0x2edf
 8002104:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002108:	a903      	add	r1, sp, #12
 800210a:	f242 7310 	movw	r3, #10000	; 0x2710
 800210e:	481c      	ldr	r0, [pc, #112]	; (8002180 <Dmx::Dmx()+0x1a8>)
 8002110:	9305      	str	r3, [sp, #20]
 8002112:	f001 ff3f 	bl	8003f94 <timer_init>
 8002116:	4649      	mov	r1, r9
 8002118:	4819      	ldr	r0, [pc, #100]	; (8002180 <Dmx::Dmx()+0x1a8>)
 800211a:	f001 ff85 	bl	8004028 <timer_flag_clear>
 800211e:	4649      	mov	r1, r9
 8002120:	4817      	ldr	r0, [pc, #92]	; (8002180 <Dmx::Dmx()+0x1a8>)
 8002122:	f001 ff7e 	bl	8004022 <timer_interrupt_flag_clear>
 8002126:	4639      	mov	r1, r7
 8002128:	4815      	ldr	r0, [pc, #84]	; (8002180 <Dmx::Dmx()+0x1a8>)
 800212a:	f001 ff76 	bl	800401a <timer_interrupt_enable>
 800212e:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8002132:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 8002136:	4812      	ldr	r0, [pc, #72]	; (8002180 <Dmx::Dmx()+0x1a8>)
 8002138:	f8c8 3004 	str.w	r3, [r8, #4]
 800213c:	f001 ff68 	bl	8004010 <timer_enable>
 8002140:	2302      	movs	r3, #2
 8002142:	9300      	str	r3, [sp, #0]
 8002144:	490f      	ldr	r1, [pc, #60]	; (8002184 <Dmx::Dmx()+0x1ac>)
 8002146:	4810      	ldr	r0, [pc, #64]	; (8002188 <Dmx::Dmx()+0x1b0>)
 8002148:	4623      	mov	r3, r4
 800214a:	2208      	movs	r2, #8
 800214c:	f002 fa16 	bl	800457c <gd32_uart_begin>
 8002150:	2380      	movs	r3, #128	; 0x80
 8002152:	4628      	mov	r0, r5
 8002154:	f8c8 3004 	str.w	r3, [r8, #4]
 8002158:	b00b      	add	sp, #44	; 0x2c
 800215a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800215e:	bf00      	nop
 8002160:	20000728 	andcs	r0, r0, r8, lsr #14
 8002164:	40000400 	andmi	r0, r0, r0, lsl #8
 8002168:	20000724 	andcs	r0, r0, r4, lsr #14
 800216c:	40010c00 	andmi	r0, r1, r0, lsl #24
 8002170:	2000050c 	andcs	r0, r0, ip, lsl #10
 8002174:	200000f8 	strdcs	r0, [r0], -r8
 8002178:	40020000 	andmi	r0, r2, r0
 800217c:	40004804 	andmi	r4, r0, r4, lsl #16
 8002180:	40001400 	andmi	r1, r0, r0, lsl #8
 8002184:	0003d090 	muleq	r3, r0, r0
 8002188:	40004800 	andmi	r4, r0, r0, lsl #16
 800218c:	e000e100 	and	lr, r0, r0, lsl #2

08002190 <Dmx::SetDmxPeriodTime(unsigned int)>:
 8002190:	4b13      	ldr	r3, [pc, #76]	; (80021e0 <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 8002192:	b570      	push	{r4, r5, r6, lr}
 8002194:	4d13      	ldr	r5, [pc, #76]	; (80021e4 <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 8002196:	4c14      	ldr	r4, [pc, #80]	; (80021e8 <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 8002198:	60c1      	str	r1, [r0, #12]
 800219a:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 800219e:	682a      	ldr	r2, [r5, #0]
 80021a0:	232c      	movs	r3, #44	; 0x2c
 80021a2:	4358      	muls	r0, r3
 80021a4:	6823      	ldr	r3, [r4, #0]
 80021a6:	4413      	add	r3, r2
 80021a8:	4403      	add	r3, r0
 80021aa:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 80021ae:	42b3      	cmp	r3, r6
 80021b0:	d908      	bls.n	80021c4 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 80021b2:	2ab0      	cmp	r2, #176	; 0xb0
 80021b4:	4613      	mov	r3, r2
 80021b6:	bf28      	it	cs
 80021b8:	23b0      	movcs	r3, #176	; 0xb0
 80021ba:	220c      	movs	r2, #12
 80021bc:	602b      	str	r3, [r5, #0]
 80021be:	4413      	add	r3, r2
 80021c0:	6022      	str	r2, [r4, #0]
 80021c2:	4403      	add	r3, r0
 80021c4:	b109      	cbz	r1, 80021ca <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 80021c6:	428b      	cmp	r3, r1
 80021c8:	d906      	bls.n	80021d8 <Dmx::SetDmxPeriodTime(unsigned int)+0x48>
 80021ca:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 80021ce:	f240 43b4 	movw	r3, #1204	; 0x4b4
 80021d2:	4299      	cmp	r1, r3
 80021d4:	bf38      	it	cc
 80021d6:	4619      	movcc	r1, r3
 80021d8:	4b04      	ldr	r3, [pc, #16]	; (80021ec <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 80021da:	6019      	str	r1, [r3, #0]
 80021dc:	bd70      	pop	{r4, r5, r6, pc}
 80021de:	bf00      	nop
 80021e0:	20000308 	andcs	r0, r0, r8, lsl #6
 80021e4:	20000010 	andcs	r0, r0, r0, lsl r0
 80021e8:	2000000c 	andcs	r0, r0, ip
 80021ec:	20000008 	andcs	r0, r0, r8

080021f0 <Dmx::SetDmxBreakTime(unsigned int)>:
 80021f0:	295c      	cmp	r1, #92	; 0x5c
 80021f2:	4b03      	ldr	r3, [pc, #12]	; (8002200 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 80021f4:	bf38      	it	cc
 80021f6:	215c      	movcc	r1, #92	; 0x5c
 80021f8:	6019      	str	r1, [r3, #0]
 80021fa:	68c1      	ldr	r1, [r0, #12]
 80021fc:	f7ff bfc8 	b.w	8002190 <Dmx::SetDmxPeriodTime(unsigned int)>
 8002200:	20000010 	andcs	r0, r0, r0, lsl r0

08002204 <Dmx::SetDmxMabTime(unsigned int)>:
 8002204:	290c      	cmp	r1, #12
 8002206:	4b03      	ldr	r3, [pc, #12]	; (8002214 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 8002208:	bf38      	it	cc
 800220a:	210c      	movcc	r1, #12
 800220c:	6019      	str	r1, [r3, #0]
 800220e:	68c1      	ldr	r1, [r0, #12]
 8002210:	f7ff bfbe 	b.w	8002190 <Dmx::SetDmxPeriodTime(unsigned int)>
 8002214:	2000000c 	andcs	r0, r0, ip

08002218 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)>:
 8002218:	b4f0      	push	{r4, r5, r6, r7}
 800221a:	8a04      	ldrh	r4, [r0, #16]
 800221c:	4d11      	ldr	r5, [pc, #68]	; (8002264 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 800221e:	f892 f000 	pld	[r2]
 8002222:	42a3      	cmp	r3, r4
 8002224:	bf28      	it	cs
 8002226:	4623      	movcs	r3, r4
 8002228:	f44f 7401 	mov.w	r4, #516	; 0x204
 800222c:	434c      	muls	r4, r1
 800222e:	192e      	adds	r6, r5, r4
 8002230:	1c5f      	adds	r7, r3, #1
 8002232:	3c01      	subs	r4, #1
 8002234:	442c      	add	r4, r5
 8002236:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 800223a:	18d5      	adds	r5, r2, r3
 800223c:	4295      	cmp	r5, r2
 800223e:	d109      	bne.n	8002254 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x3c>
 8002240:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8002244:	698a      	ldr	r2, [r1, #24]
 8002246:	429a      	cmp	r2, r3
 8002248:	d009      	beq.n	800225e <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x46>
 800224a:	618b      	str	r3, [r1, #24]
 800224c:	bcf0      	pop	{r4, r5, r6, r7}
 800224e:	68c1      	ldr	r1, [r0, #12]
 8002250:	f7ff bf9e 	b.w	8002190 <Dmx::SetDmxPeriodTime(unsigned int)>
 8002254:	f812 6b01 	ldrb.w	r6, [r2], #1
 8002258:	f804 6f01 	strb.w	r6, [r4, #1]!
 800225c:	e7ee      	b.n	800223c <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x24>
 800225e:	bcf0      	pop	{r4, r5, r6, r7}
 8002260:	4770      	bx	lr
 8002262:	bf00      	nop
 8002264:	20000308 	andcs	r0, r0, r8, lsl #6

08002268 <Dmx::GetDmxAvailable(unsigned int)>:
 8002268:	4b08      	ldr	r3, [pc, #32]	; (800228c <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 800226a:	f44f 7204 	mov.w	r2, #528	; 0x210
 800226e:	fb02 3101 	mla	r1, r2, r1, r3
 8002272:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 8002276:	f413 4000 	ands.w	r0, r3, #32768	; 0x8000
 800227a:	bf1f      	itttt	ne
 800227c:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 8002280:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 8002284:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 8002288:	4608      	movne	r0, r1
 800228a:	4770      	bx	lr
 800228c:	200000f8 	strdcs	r0, [r0], -r8

08002290 <Dmx::GetDmxChanged(unsigned int)>:
 8002290:	b570      	push	{r4, r5, r6, lr}
 8002292:	460c      	mov	r4, r1
 8002294:	f7ff ffe8 	bl	8002268 <Dmx::GetDmxAvailable(unsigned int)>
 8002298:	b1a0      	cbz	r0, 80022c4 <Dmx::GetDmxChanged(unsigned int)+0x34>
 800229a:	490b      	ldr	r1, [pc, #44]	; (80022c8 <Dmx::GetDmxChanged(unsigned int)+0x38>)
 800229c:	f240 2202 	movw	r2, #514	; 0x202
 80022a0:	fb02 1104 	mla	r1, r2, r4, r1
 80022a4:	1e8b      	subs	r3, r1, #2
 80022a6:	1e84      	subs	r4, r0, #2
 80022a8:	f501 7100 	add.w	r1, r1, #512	; 0x200
 80022ac:	2200      	movs	r2, #0
 80022ae:	f833 6f02 	ldrh.w	r6, [r3, #2]!
 80022b2:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 80022b6:	42ae      	cmp	r6, r5
 80022b8:	bf1c      	itt	ne
 80022ba:	801d      	strhne	r5, [r3, #0]
 80022bc:	2201      	movne	r2, #1
 80022be:	428b      	cmp	r3, r1
 80022c0:	d1f5      	bne.n	80022ae <Dmx::GetDmxChanged(unsigned int)+0x1e>
 80022c2:	b902      	cbnz	r2, 80022c6 <Dmx::GetDmxChanged(unsigned int)+0x36>
 80022c4:	2000      	movs	r0, #0
 80022c6:	bd70      	pop	{r4, r5, r6, pc}
 80022c8:	20000510 	andcs	r0, r0, r0, lsl r5

080022cc <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>:
 80022cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80022ce:	4e20      	ldr	r6, [pc, #128]	; (8002350 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x84>)
 80022d0:	4614      	mov	r4, r2
 80022d2:	461d      	mov	r5, r3
 80022d4:	2106      	movs	r1, #6
 80022d6:	4630      	mov	r0, r6
 80022d8:	f001 ff7c 	bl	80041d4 <usart_flag_get>
 80022dc:	2800      	cmp	r0, #0
 80022de:	d0f9      	beq.n	80022d4 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x8>
 80022e0:	4e1c      	ldr	r6, [pc, #112]	; (8002354 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x88>)
 80022e2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80022e6:	2203      	movs	r2, #3
 80022e8:	4630      	mov	r0, r6
 80022ea:	f44f 6780 	mov.w	r7, #1024	; 0x400
 80022ee:	2110      	movs	r1, #16
 80022f0:	f001 fc92 	bl	8003c18 <gpio_init>
 80022f4:	6177      	str	r7, [r6, #20]
 80022f6:	2100      	movs	r1, #0
 80022f8:	20b0      	movs	r0, #176	; 0xb0
 80022fa:	f002 fa3f 	bl	800477c <udelay(unsigned int, unsigned int)>
 80022fe:	463b      	mov	r3, r7
 8002300:	4630      	mov	r0, r6
 8002302:	2203      	movs	r2, #3
 8002304:	2118      	movs	r1, #24
 8002306:	f001 fc87 	bl	8003c18 <gpio_init>
 800230a:	2100      	movs	r1, #0
 800230c:	200c      	movs	r0, #12
 800230e:	f002 fa35 	bl	800477c <udelay(unsigned int, unsigned int)>
 8002312:	4425      	add	r5, r4
 8002314:	f5a6 4648 	sub.w	r6, r6, #51200	; 0xc800
 8002318:	f04f 2740 	mov.w	r7, #1073758208	; 0x40004000
 800231c:	42ac      	cmp	r4, r5
 800231e:	d109      	bne.n	8002334 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x68>
 8002320:	4c0b      	ldr	r4, [pc, #44]	; (8002350 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x84>)
 8002322:	f04f 2540 	mov.w	r5, #1073758208	; 0x40004000
 8002326:	2106      	movs	r1, #6
 8002328:	4620      	mov	r0, r4
 800232a:	f001 ff53 	bl	80041d4 <usart_flag_get>
 800232e:	2801      	cmp	r0, #1
 8002330:	d10b      	bne.n	800234a <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x7e>
 8002332:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002334:	2107      	movs	r1, #7
 8002336:	4630      	mov	r0, r6
 8002338:	f001 ff4c 	bl	80041d4 <usart_flag_get>
 800233c:	2800      	cmp	r0, #0
 800233e:	d0f9      	beq.n	8002334 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x68>
 8002340:	f814 3b01 	ldrb.w	r3, [r4], #1
 8002344:	f8c7 3804 	str.w	r3, [r7, #2052]	; 0x804
 8002348:	e7e8      	b.n	800231c <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x50>
 800234a:	f8d5 3804 	ldr.w	r3, [r5, #2052]	; 0x804
 800234e:	e7ea      	b.n	8002326 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x5a>
 8002350:	40004800 	andmi	r4, r0, r0, lsl #16
 8002354:	40011000 	andmi	r1, r1, r0

08002358 <Dmx::RdmReceive(unsigned int)>:
 8002358:	4b07      	ldr	r3, [pc, #28]	; (8002378 <Dmx::RdmReceive(unsigned int)+0x20>)
 800235a:	f44f 7204 	mov.w	r2, #528	; 0x210
 800235e:	fb02 3101 	mla	r1, r2, r1, r3
 8002362:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 8002366:	f413 4080 	ands.w	r0, r3, #16384	; 0x4000
 800236a:	bf1e      	ittt	ne
 800236c:	2300      	movne	r3, #0
 800236e:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 8002372:	4608      	movne	r0, r1
 8002374:	4770      	bx	lr
 8002376:	bf00      	nop
 8002378:	200000f8 	strdcs	r0, [r0], -r8

0800237c <usb_read_byte>:
 800237c:	b508      	push	{r3, lr}
 800237e:	f000 f8f1 	bl	8002564 <FT245RL_data_available>
 8002382:	2800      	cmp	r0, #0
 8002384:	d0fb      	beq.n	800237e <usb_read_byte+0x2>
 8002386:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800238a:	f000 b8b1 	b.w	80024f0 <FT245RL_read_data>

0800238e <usb_send_byte>:
 800238e:	b510      	push	{r4, lr}
 8002390:	4604      	mov	r4, r0
 8002392:	f000 f8f3 	bl	800257c <FT245RL_can_write>
 8002396:	2800      	cmp	r0, #0
 8002398:	d0fb      	beq.n	8002392 <usb_send_byte+0x4>
 800239a:	4620      	mov	r0, r4
 800239c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80023a0:	f000 b860 	b.w	8002464 <FT245RL_write_data>

080023a4 <data_gpio_fsel_input>:
 80023a4:	b510      	push	{r4, lr}
 80023a6:	4807      	ldr	r0, [pc, #28]	; (80023c4 <data_gpio_fsel_input+0x20>)
 80023a8:	f24c 0340 	movw	r3, #49216	; 0xc040
 80023ac:	2203      	movs	r2, #3
 80023ae:	2104      	movs	r1, #4
 80023b0:	f001 fc32 	bl	8003c18 <gpio_init>
 80023b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80023b8:	4803      	ldr	r0, [pc, #12]	; (80023c8 <data_gpio_fsel_input+0x24>)
 80023ba:	23f8      	movs	r3, #248	; 0xf8
 80023bc:	2203      	movs	r2, #3
 80023be:	2104      	movs	r1, #4
 80023c0:	f001 bc2a 	b.w	8003c18 <gpio_init>
 80023c4:	40010800 	andmi	r0, r1, r0, lsl #16
 80023c8:	40010c00 	andmi	r0, r1, r0, lsl #24

080023cc <FT245RL_init>:
 80023cc:	b538      	push	{r3, r4, r5, lr}
 80023ce:	f240 6002 	movw	r0, #1538	; 0x602
 80023d2:	f001 fcb9 	bl	8003d48 <rcu_periph_clock_enable>
 80023d6:	4d1f      	ldr	r5, [pc, #124]	; (8002454 <FT245RL_init+0x88>)
 80023d8:	4c1f      	ldr	r4, [pc, #124]	; (8002458 <FT245RL_init+0x8c>)
 80023da:	f240 6003 	movw	r0, #1539	; 0x603
 80023de:	f001 fcb3 	bl	8003d48 <rcu_periph_clock_enable>
 80023e2:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80023e6:	f001 fcaf 	bl	8003d48 <rcu_periph_clock_enable>
 80023ea:	2101      	movs	r1, #1
 80023ec:	4628      	mov	r0, r5
 80023ee:	f001 fc73 	bl	8003cd8 <gpio_pin_remap_config>
 80023f2:	f7ff ffd7 	bl	80023a4 <data_gpio_fsel_input>
 80023f6:	4819      	ldr	r0, [pc, #100]	; (800245c <FT245RL_init+0x90>)
 80023f8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80023fc:	2203      	movs	r2, #3
 80023fe:	2110      	movs	r1, #16
 8002400:	f001 fc0a 	bl	8003c18 <gpio_init>
 8002404:	4815      	ldr	r0, [pc, #84]	; (800245c <FT245RL_init+0x90>)
 8002406:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800240a:	2203      	movs	r2, #3
 800240c:	2110      	movs	r1, #16
 800240e:	f001 fc03 	bl	8003c18 <gpio_init>
 8002412:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002416:	2203      	movs	r2, #3
 8002418:	2148      	movs	r1, #72	; 0x48
 800241a:	4620      	mov	r0, r4
 800241c:	f001 fbfc 	bl	8003c18 <gpio_init>
 8002420:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8002424:	f001 fc90 	bl	8003d48 <rcu_periph_clock_enable>
 8002428:	2101      	movs	r1, #1
 800242a:	4628      	mov	r0, r5
 800242c:	f001 fc54 	bl	8003cd8 <gpio_pin_remap_config>
 8002430:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002434:	2203      	movs	r2, #3
 8002436:	2148      	movs	r1, #72	; 0x48
 8002438:	4620      	mov	r0, r4
 800243a:	f001 fbed 	bl	8003c18 <gpio_init>
 800243e:	4b08      	ldr	r3, [pc, #32]	; (8002460 <FT245RL_init+0x94>)
 8002440:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8002444:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8002448:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800244c:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8002450:	bd38      	pop	{r3, r4, r5, pc}
 8002452:	bf00      	nop
 8002454:	00300400 	eorseq	r0, r0, r0, lsl #8
 8002458:	40010800 	andmi	r0, r1, r0, lsl #16
 800245c:	40010c00 	andmi	r0, r1, r0, lsl #24
 8002460:	40010000 	andmi	r0, r1, r0

08002464 <FT245RL_write_data>:
 8002464:	b510      	push	{r4, lr}
 8002466:	f24c 0340 	movw	r3, #49216	; 0xc040
 800246a:	4604      	mov	r4, r0
 800246c:	2203      	movs	r2, #3
 800246e:	481d      	ldr	r0, [pc, #116]	; (80024e4 <FT245RL_write_data+0x80>)
 8002470:	2110      	movs	r1, #16
 8002472:	f001 fbd1 	bl	8003c18 <gpio_init>
 8002476:	481c      	ldr	r0, [pc, #112]	; (80024e8 <FT245RL_write_data+0x84>)
 8002478:	23f8      	movs	r3, #248	; 0xf8
 800247a:	2203      	movs	r2, #3
 800247c:	2110      	movs	r1, #16
 800247e:	f001 fbcb 	bl	8003c18 <gpio_init>
 8002482:	4a1a      	ldr	r2, [pc, #104]	; (80024ec <FT245RL_write_data+0x88>)
 8002484:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8002488:	f8c2 1c10 	str.w	r1, [r2, #3088]	; 0xc10
 800248c:	bf00      	nop
 800248e:	bf00      	nop
 8002490:	02e3      	lsls	r3, r4, #11
 8002492:	0120      	lsls	r0, r4, #4
 8002494:	f000 0040 	and.w	r0, r0, #64	; 0x40
 8002498:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800249c:	4303      	orrs	r3, r0
 800249e:	f8c2 3810 	str.w	r3, [r2, #2064]	; 0x810
 80024a2:	f483 4340 	eor.w	r3, r3, #49152	; 0xc000
 80024a6:	f083 0340 	eor.w	r3, r3, #64	; 0x40
 80024aa:	f8c2 3814 	str.w	r3, [r2, #2068]	; 0x814
 80024ae:	01e0      	lsls	r0, r4, #7
 80024b0:	0163      	lsls	r3, r4, #5
 80024b2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80024b6:	b2c0      	uxtb	r0, r0
 80024b8:	4318      	orrs	r0, r3
 80024ba:	1063      	asrs	r3, r4, #1
 80024bc:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80024c0:	f344 1403 	sbfx	r4, r4, #4, #4
 80024c4:	4303      	orrs	r3, r0
 80024c6:	f004 0408 	and.w	r4, r4, #8
 80024ca:	431c      	orrs	r4, r3
 80024cc:	f8c2 4c10 	str.w	r4, [r2, #3088]	; 0xc10
 80024d0:	f084 04f8 	eor.w	r4, r4, #248	; 0xf8
 80024d4:	f8c2 4c14 	str.w	r4, [r2, #3092]	; 0xc14
 80024d8:	bf00      	nop
 80024da:	bf00      	nop
 80024dc:	f8c2 1c14 	str.w	r1, [r2, #3092]	; 0xc14
 80024e0:	bd10      	pop	{r4, pc}
 80024e2:	bf00      	nop
 80024e4:	40010800 	andmi	r0, r1, r0, lsl #16
 80024e8:	40010c00 	andmi	r0, r1, r0, lsl #24
 80024ec:	40010000 	andmi	r0, r1, r0

080024f0 <FT245RL_read_data>:
 80024f0:	b510      	push	{r4, lr}
 80024f2:	4c1a      	ldr	r4, [pc, #104]	; (800255c <FT245RL_read_data+0x6c>)
 80024f4:	f7ff ff56 	bl	80023a4 <data_gpio_fsel_input>
 80024f8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80024fc:	f8c4 3c14 	str.w	r3, [r4, #3092]	; 0xc14
 8002500:	2318      	movs	r3, #24
 8002502:	bf00      	nop
 8002504:	3b01      	subs	r3, #1
 8002506:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 800250a:	d1fa      	bne.n	8002502 <FT245RL_read_data+0x12>
 800250c:	f8d4 2808 	ldr.w	r2, [r4, #2056]	; 0x808
 8002510:	f8d4 1c08 	ldr.w	r1, [r4, #3080]	; 0xc08
 8002514:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002518:	f8c4 3c10 	str.w	r3, [r4, #3088]	; 0xc10
 800251c:	f3c2 130b 	ubfx	r3, r2, #4, #12
 8002520:	f3c2 24c4 	ubfx	r4, r2, #11, #5
 8002524:	f004 0408 	and.w	r4, r4, #8
 8002528:	f003 0304 	and.w	r3, r3, #4
 800252c:	f342 22c4 	sbfx	r2, r2, #11, #5
 8002530:	4323      	orrs	r3, r4
 8002532:	f002 0210 	and.w	r2, r2, #16
 8002536:	4313      	orrs	r3, r2
 8002538:	f3c1 12c0 	ubfx	r2, r1, #7, #1
 800253c:	4313      	orrs	r3, r2
 800253e:	f3c1 124a 	ubfx	r2, r1, #5, #11
 8002542:	0048      	lsls	r0, r1, #1
 8002544:	f002 0202 	and.w	r2, r2, #2
 8002548:	4313      	orrs	r3, r2
 800254a:	f000 0060 	and.w	r0, r0, #96	; 0x60
 800254e:	4318      	orrs	r0, r3
 8002550:	4b03      	ldr	r3, [pc, #12]	; (8002560 <FT245RL_read_data+0x70>)
 8002552:	0109      	lsls	r1, r1, #4
 8002554:	400b      	ands	r3, r1
 8002556:	4318      	orrs	r0, r3
 8002558:	b2c0      	uxtb	r0, r0
 800255a:	bd10      	pop	{r4, pc}
 800255c:	40010000 	andmi	r0, r1, r0
 8002560:	000fff80 	andeq	pc, pc, r0, lsl #31

08002564 <FT245RL_data_available>:
 8002564:	b508      	push	{r3, lr}
 8002566:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800256a:	4803      	ldr	r0, [pc, #12]	; (8002578 <FT245RL_data_available+0x14>)
 800256c:	f001 fbae 	bl	8003ccc <gpio_input_bit_get>
 8002570:	fab0 f080 	clz	r0, r0
 8002574:	0940      	lsrs	r0, r0, #5
 8002576:	bd08      	pop	{r3, pc}
 8002578:	40010800 	andmi	r0, r1, r0, lsl #16

0800257c <FT245RL_can_write>:
 800257c:	b508      	push	{r3, lr}
 800257e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002582:	4803      	ldr	r0, [pc, #12]	; (8002590 <FT245RL_can_write+0x14>)
 8002584:	f001 fba2 	bl	8003ccc <gpio_input_bit_get>
 8002588:	fab0 f080 	clz	r0, r0
 800258c:	0940      	lsrs	r0, r0, #5
 800258e:	bd08      	pop	{r3, pc}
 8002590:	40010800 	andmi	r0, r1, r0, lsl #16

08002594 <RDMDevice::RDMDevice()>:
 8002594:	4a34      	ldr	r2, [pc, #208]	; (8002668 <RDMDevice::RDMDevice()+0xd4>)
 8002596:	2300      	movs	r3, #0
 8002598:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800259a:	4604      	mov	r4, r0
 800259c:	7003      	strb	r3, [r0, #0]
 800259e:	f880 3072 	strb.w	r3, [r0, #114]	; 0x72
 80025a2:	f8a0 3074 	strh.w	r3, [r0, #116]	; 0x74
 80025a6:	6783      	str	r3, [r0, #120]	; 0x78
 80025a8:	4611      	mov	r1, r2
 80025aa:	4613      	mov	r3, r2
 80025ac:	3201      	adds	r2, #1
 80025ae:	7818      	ldrb	r0, [r3, #0]
 80025b0:	2800      	cmp	r0, #0
 80025b2:	d1fa      	bne.n	80025aa <RDMDevice::RDMDevice()+0x16>
 80025b4:	1a5b      	subs	r3, r3, r1
 80025b6:	2b20      	cmp	r3, #32
 80025b8:	bf28      	it	cs
 80025ba:	2320      	movcs	r3, #32
 80025bc:	f104 052b 	add.w	r5, r4, #43	; 0x2b
 80025c0:	4829      	ldr	r0, [pc, #164]	; (8002668 <RDMDevice::RDMDevice()+0xd4>)
 80025c2:	4629      	mov	r1, r5
 80025c4:	461a      	mov	r2, r3
 80025c6:	3a01      	subs	r2, #1
 80025c8:	d23e      	bcs.n	8002648 <RDMDevice::RDMDevice()+0xb4>
 80025ca:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 80025ce:	4b27      	ldr	r3, [pc, #156]	; (800266c <RDMDevice::RDMDevice()+0xd8>)
 80025d0:	781a      	ldrb	r2, [r3, #0]
 80025d2:	7062      	strb	r2, [r4, #1]
 80025d4:	785b      	ldrb	r3, [r3, #1]
 80025d6:	70a3      	strb	r3, [r4, #2]
 80025d8:	4b25      	ldr	r3, [pc, #148]	; (8002670 <RDMDevice::RDMDevice()+0xdc>)
 80025da:	4669      	mov	r1, sp
 80025dc:	6818      	ldr	r0, [r3, #0]
 80025de:	f000 f8b5 	bl	800274c <Network::MacAddressCopyTo(unsigned char*)>
 80025e2:	f89d 3002 	ldrb.w	r3, [sp, #2]
 80025e6:	70e3      	strb	r3, [r4, #3]
 80025e8:	72a3      	strb	r3, [r4, #10]
 80025ea:	4b22      	ldr	r3, [pc, #136]	; (8002674 <RDMDevice::RDMDevice()+0xe0>)
 80025ec:	f89d 2003 	ldrb.w	r2, [sp, #3]
 80025f0:	f89d 1004 	ldrb.w	r1, [sp, #4]
 80025f4:	f89d 0005 	ldrb.w	r0, [sp, #5]
 80025f8:	7122      	strb	r2, [r4, #4]
 80025fa:	7262      	strb	r2, [r4, #9]
 80025fc:	7161      	strb	r1, [r4, #5]
 80025fe:	71a0      	strb	r0, [r4, #6]
 8002600:	71e0      	strb	r0, [r4, #7]
 8002602:	7221      	strb	r1, [r4, #8]
 8002604:	461a      	mov	r2, r3
 8002606:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800260a:	2900      	cmp	r1, #0
 800260c:	d1fb      	bne.n	8002606 <RDMDevice::RDMDevice()+0x72>
 800260e:	1a9b      	subs	r3, r3, r2
 8002610:	2b20      	cmp	r3, #32
 8002612:	bf28      	it	cs
 8002614:	2320      	movcs	r3, #32
 8002616:	4917      	ldr	r1, [pc, #92]	; (8002674 <RDMDevice::RDMDevice()+0xe0>)
 8002618:	461a      	mov	r2, r3
 800261a:	3a01      	subs	r2, #1
 800261c:	d219      	bcs.n	8002652 <RDMDevice::RDMDevice()+0xbe>
 800261e:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 8002622:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8002626:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800262a:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800262e:	4a12      	ldr	r2, [pc, #72]	; (8002678 <RDMDevice::RDMDevice()+0xe4>)
 8002630:	2315      	movs	r3, #21
 8002632:	f884 3072 	strb.w	r3, [r4, #114]	; 0x72
 8002636:	f104 0166 	add.w	r1, r4, #102	; 0x66
 800263a:	f104 0351 	add.w	r3, r4, #81	; 0x51
 800263e:	4299      	cmp	r1, r3
 8002640:	d10c      	bne.n	800265c <RDMDevice::RDMDevice()+0xc8>
 8002642:	4620      	mov	r0, r4
 8002644:	b002      	add	sp, #8
 8002646:	bd70      	pop	{r4, r5, r6, pc}
 8002648:	f810 6b01 	ldrb.w	r6, [r0], #1
 800264c:	f801 6f01 	strb.w	r6, [r1, #1]!
 8002650:	e7b9      	b.n	80025c6 <RDMDevice::RDMDevice()+0x32>
 8002652:	f811 0b01 	ldrb.w	r0, [r1], #1
 8002656:	f805 0f01 	strb.w	r0, [r5, #1]!
 800265a:	e7de      	b.n	800261a <RDMDevice::RDMDevice()+0x86>
 800265c:	f812 0b01 	ldrb.w	r0, [r2], #1
 8002660:	f803 0f01 	strb.w	r0, [r3, #1]!
 8002664:	e7eb      	b.n	800263e <RDMDevice::RDMDevice()+0xaa>
 8002666:	bf00      	nop
 8002668:	08004ea0 	stmdaeq	r0, {r5, r7, r9, sl, fp, lr}
 800266c:	08004e9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r9, sl, fp, lr}
 8002670:	20000730 	andcs	r0, r0, r0, lsr r7
 8002674:	08004ebc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, fp, lr}
 8002678:	08004ed1 	stmdaeq	r0, {r0, r4, r6, r7, r9, sl, fp, lr}

0800267c <memcpy.isra.0>:
 800267c:	f001 b804 	b.w	8003688 <memcpy>

08002680 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 8002680:	b510      	push	{r4, lr}
 8002682:	6001      	str	r1, [r0, #0]
 8002684:	2100      	movs	r1, #0
 8002686:	4604      	mov	r4, r0
 8002688:	6041      	str	r1, [r0, #4]
 800268a:	2220      	movs	r2, #32
 800268c:	3008      	adds	r0, #8
 800268e:	f001 f806 	bl	800369e <memset>
 8002692:	4b03      	ldr	r3, [pc, #12]	; (80026a0 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 8002694:	62a3      	str	r3, [r4, #40]	; 0x28
 8002696:	237f      	movs	r3, #127	; 0x7f
 8002698:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800269c:	4620      	mov	r0, r4
 800269e:	bd10      	pop	{r4, pc}
 80026a0:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

080026a4 <RDMDeviceParams::Load()>:
 80026a4:	4601      	mov	r1, r0
 80026a6:	6800      	ldr	r0, [r0, #0]
 80026a8:	b130      	cbz	r0, 80026b8 <RDMDeviceParams::Load()+0x14>
 80026aa:	b508      	push	{r3, lr}
 80026ac:	6803      	ldr	r3, [r0, #0]
 80026ae:	3104      	adds	r1, #4
 80026b0:	68db      	ldr	r3, [r3, #12]
 80026b2:	4798      	blx	r3
 80026b4:	2001      	movs	r0, #1
 80026b6:	bd08      	pop	{r3, pc}
 80026b8:	4770      	bx	lr

080026ba <RDMDeviceParams::Set(RDMDevice*)>:
 80026ba:	6843      	ldr	r3, [r0, #4]
 80026bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80026c0:	460c      	mov	r4, r1
 80026c2:	07d9      	lsls	r1, r3, #31
 80026c4:	4605      	mov	r5, r0
 80026c6:	d518      	bpl.n	80026fa <RDMDeviceParams::Set(RDMDevice*)+0x40>
 80026c8:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 80026cc:	7823      	ldrb	r3, [r4, #0]
 80026ce:	2e20      	cmp	r6, #32
 80026d0:	f100 0108 	add.w	r1, r0, #8
 80026d4:	bf28      	it	cs
 80026d6:	2620      	movcs	r6, #32
 80026d8:	b1f3      	cbz	r3, 8002718 <RDMDeviceParams::Set(RDMDevice*)+0x5e>
 80026da:	f104 070b 	add.w	r7, r4, #11
 80026de:	4638      	mov	r0, r7
 80026e0:	4632      	mov	r2, r6
 80026e2:	f7ff ffcb 	bl	800267c <memcpy.isra.0>
 80026e6:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 80026e8:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
 80026ec:	b128      	cbz	r0, 80026fa <RDMDeviceParams::Set(RDMDevice*)+0x40>
 80026ee:	6802      	ldr	r2, [r0, #0]
 80026f0:	4639      	mov	r1, r7
 80026f2:	f8d2 8008 	ldr.w	r8, [r2, #8]
 80026f6:	4632      	mov	r2, r6
 80026f8:	47c0      	blx	r8
 80026fa:	686b      	ldr	r3, [r5, #4]
 80026fc:	079a      	lsls	r2, r3, #30
 80026fe:	bf44      	itt	mi
 8002700:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 8002704:	f8a4 204e 	strhmi.w	r2, [r4, #78]	; 0x4e
 8002708:	075b      	lsls	r3, r3, #29
 800270a:	bf44      	itt	mi
 800270c:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 8002710:	f8a4 3050 	strhmi.w	r3, [r4, #80]	; 0x50
 8002714:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002718:	4632      	mov	r2, r6
 800271a:	f104 0052 	add.w	r0, r4, #82	; 0x52
 800271e:	f7ff ffad 	bl	800267c <memcpy.isra.0>
 8002722:	f884 6072 	strb.w	r6, [r4, #114]	; 0x72
 8002726:	e7e8      	b.n	80026fa <RDMDeviceParams::Set(RDMDevice*)+0x40>

08002728 <RDMDeviceParams::Dump()>:
 8002728:	4770      	bx	lr
	...

0800272c <Network::Network()>:
 800272c:	4b05      	ldr	r3, [pc, #20]	; (8002744 <Network::Network()+0x18>)
 800272e:	4906      	ldr	r1, [pc, #24]	; (8002748 <Network::Network()+0x1c>)
 8002730:	6018      	str	r0, [r3, #0]
 8002732:	1e42      	subs	r2, r0, #1
 8002734:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002738:	f802 3f01 	strb.w	r3, [r2, #1]!
 800273c:	2b00      	cmp	r3, #0
 800273e:	d1f9      	bne.n	8002734 <Network::Network()+0x8>
 8002740:	4770      	bx	lr
 8002742:	bf00      	nop
 8002744:	20000730 	andcs	r0, r0, r0, lsr r7
 8002748:	08004ee7 	stmdaeq	r0, {r0, r1, r2, r5, r6, r7, r9, sl, fp, lr}

0800274c <Network::MacAddressCopyTo(unsigned char*)>:
 800274c:	4608      	mov	r0, r1
 800274e:	f001 bfed 	b.w	800472c <mac_address_get(unsigned char*)>
	...

08002754 <ConfigStore::GetStoreOffset(configstore::Store)>:
 8002754:	b510      	push	{r4, lr}
 8002756:	4a05      	ldr	r2, [pc, #20]	; (800276c <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 8002758:	2300      	movs	r3, #0
 800275a:	2020      	movs	r0, #32
 800275c:	428b      	cmp	r3, r1
 800275e:	d100      	bne.n	8002762 <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 8002760:	bd10      	pop	{r4, pc}
 8002762:	f852 4b04 	ldr.w	r4, [r2], #4
 8002766:	3301      	adds	r3, #1
 8002768:	4420      	add	r0, r4
 800276a:	e7f7      	b.n	800275c <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 800276c:	08004eec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, fp, lr}

08002770 <ConfigStore::Init()>:
 8002770:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002774:	b085      	sub	sp, #20
 8002776:	4607      	mov	r7, r0
 8002778:	f000 f982 	bl	8002a80 <StoreDevice::GetSectorSize() const>
 800277c:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 8002780:	4605      	mov	r5, r0
 8002782:	d004      	beq.n	800278e <ConfigStore::Init()+0x1e>
 8002784:	2500      	movs	r5, #0
 8002786:	4628      	mov	r0, r5
 8002788:	b005      	add	sp, #20
 800278a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800278e:	4638      	mov	r0, r7
 8002790:	f000 f974 	bl	8002a7c <StoreDevice::GetSize() const>
 8002794:	4b3a      	ldr	r3, [pc, #232]	; (8002880 <ConfigStore::Init()+0x110>)
 8002796:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800279a:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800279e:	6019      	str	r1, [r3, #0]
 80027a0:	2e00      	cmp	r6, #0
 80027a2:	d1ef      	bne.n	8002784 <ConfigStore::Init()+0x14>
 80027a4:	4c37      	ldr	r4, [pc, #220]	; (8002884 <ConfigStore::Init()+0x114>)
 80027a6:	ab03      	add	r3, sp, #12
 80027a8:	462a      	mov	r2, r5
 80027aa:	9300      	str	r3, [sp, #0]
 80027ac:	4638      	mov	r0, r7
 80027ae:	4623      	mov	r3, r4
 80027b0:	f000 f968 	bl	8002a84 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>
 80027b4:	7823      	ldrb	r3, [r4, #0]
 80027b6:	2b41      	cmp	r3, #65	; 0x41
 80027b8:	bf1c      	itt	ne
 80027ba:	2341      	movne	r3, #65	; 0x41
 80027bc:	7023      	strbne	r3, [r4, #0]
 80027be:	7863      	ldrb	r3, [r4, #1]
 80027c0:	bf14      	ite	ne
 80027c2:	4635      	movne	r5, r6
 80027c4:	2501      	moveq	r5, #1
 80027c6:	2b76      	cmp	r3, #118	; 0x76
 80027c8:	bf1c      	itt	ne
 80027ca:	2376      	movne	r3, #118	; 0x76
 80027cc:	7063      	strbne	r3, [r4, #1]
 80027ce:	78a3      	ldrb	r3, [r4, #2]
 80027d0:	bf18      	it	ne
 80027d2:	2500      	movne	r5, #0
 80027d4:	2b56      	cmp	r3, #86	; 0x56
 80027d6:	bf1c      	itt	ne
 80027d8:	2356      	movne	r3, #86	; 0x56
 80027da:	70a3      	strbne	r3, [r4, #2]
 80027dc:	78e3      	ldrb	r3, [r4, #3]
 80027de:	bf18      	it	ne
 80027e0:	2500      	movne	r5, #0
 80027e2:	2b10      	cmp	r3, #16
 80027e4:	d01f      	beq.n	8002826 <ConfigStore::Init()+0xb6>
 80027e6:	2310      	movs	r3, #16
 80027e8:	70e3      	strb	r3, [r4, #3]
 80027ea:	4b27      	ldr	r3, [pc, #156]	; (8002888 <ConfigStore::Init()+0x118>)
 80027ec:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8002890 <ConfigStore::Init()+0x120>
 80027f0:	2201      	movs	r2, #1
 80027f2:	701a      	strb	r2, [r3, #0]
 80027f4:	2500      	movs	r5, #0
 80027f6:	f04f 09ff 	mov.w	r9, #255	; 0xff
 80027fa:	4631      	mov	r1, r6
 80027fc:	4638      	mov	r0, r7
 80027fe:	f7ff ffa9 	bl	8002754 <ConfigStore::GetStoreOffset(configstore::Store)>
 8002802:	1823      	adds	r3, r4, r0
 8002804:	5425      	strb	r5, [r4, r0]
 8002806:	705d      	strb	r5, [r3, #1]
 8002808:	709d      	strb	r5, [r3, #2]
 800280a:	70dd      	strb	r5, [r3, #3]
 800280c:	f858 3b04 	ldr.w	r3, [r8], #4
 8002810:	1d02      	adds	r2, r0, #4
 8002812:	4403      	add	r3, r0
 8002814:	429a      	cmp	r2, r3
 8002816:	d32f      	bcc.n	8002878 <ConfigStore::Init()+0x108>
 8002818:	3601      	adds	r6, #1
 800281a:	2e1c      	cmp	r6, #28
 800281c:	d1ed      	bne.n	80027fa <ConfigStore::Init()+0x8a>
 800281e:	4b1b      	ldr	r3, [pc, #108]	; (800288c <ConfigStore::Init()+0x11c>)
 8002820:	2501      	movs	r5, #1
 8002822:	601d      	str	r5, [r3, #0]
 8002824:	e7af      	b.n	8002786 <ConfigStore::Init()+0x16>
 8002826:	2d00      	cmp	r5, #0
 8002828:	d0df      	beq.n	80027ea <ConfigStore::Init()+0x7a>
 800282a:	f04f 0900 	mov.w	r9, #0
 800282e:	46c8      	mov	r8, r9
 8002830:	4631      	mov	r1, r6
 8002832:	4638      	mov	r0, r7
 8002834:	f7ff ff8e 	bl	8002754 <ConfigStore::GetStoreOffset(configstore::Store)>
 8002838:	5c23      	ldrb	r3, [r4, r0]
 800283a:	2bff      	cmp	r3, #255	; 0xff
 800283c:	d112      	bne.n	8002864 <ConfigStore::Init()+0xf4>
 800283e:	1823      	adds	r3, r4, r0
 8002840:	785a      	ldrb	r2, [r3, #1]
 8002842:	2aff      	cmp	r2, #255	; 0xff
 8002844:	d10e      	bne.n	8002864 <ConfigStore::Init()+0xf4>
 8002846:	789a      	ldrb	r2, [r3, #2]
 8002848:	2aff      	cmp	r2, #255	; 0xff
 800284a:	d10b      	bne.n	8002864 <ConfigStore::Init()+0xf4>
 800284c:	78da      	ldrb	r2, [r3, #3]
 800284e:	2aff      	cmp	r2, #255	; 0xff
 8002850:	d108      	bne.n	8002864 <ConfigStore::Init()+0xf4>
 8002852:	f804 8000 	strb.w	r8, [r4, r0]
 8002856:	46a9      	mov	r9, r5
 8002858:	f883 8001 	strb.w	r8, [r3, #1]
 800285c:	f883 8002 	strb.w	r8, [r3, #2]
 8002860:	f883 8003 	strb.w	r8, [r3, #3]
 8002864:	3601      	adds	r6, #1
 8002866:	2e1c      	cmp	r6, #28
 8002868:	d1e2      	bne.n	8002830 <ConfigStore::Init()+0xc0>
 800286a:	f1b9 0f00 	cmp.w	r9, #0
 800286e:	d08a      	beq.n	8002786 <ConfigStore::Init()+0x16>
 8002870:	4b06      	ldr	r3, [pc, #24]	; (800288c <ConfigStore::Init()+0x11c>)
 8002872:	2201      	movs	r2, #1
 8002874:	601a      	str	r2, [r3, #0]
 8002876:	e786      	b.n	8002786 <ConfigStore::Init()+0x16>
 8002878:	f804 9002 	strb.w	r9, [r4, r2]
 800287c:	3201      	adds	r2, #1
 800287e:	e7c9      	b.n	8002814 <ConfigStore::Init()+0xa4>
 8002880:	20001738 	andcs	r1, r0, r8, lsr r7
 8002884:	20000738 	andcs	r0, r0, r8, lsr r7
 8002888:	2000174c 	andcs	r1, r0, ip, asr #14
 800288c:	20001744 	andcs	r1, r0, r4, asr #14
 8002890:	08004eec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, fp, lr}

08002894 <ConfigStore::ConfigStore()>:
 8002894:	b538      	push	{r3, r4, r5, lr}
 8002896:	4604      	mov	r4, r0
 8002898:	f000 f8e8 	bl	8002a6c <StoreDevice::StoreDevice()>
 800289c:	4b0b      	ldr	r3, [pc, #44]	; (80028cc <ConfigStore::ConfigStore()+0x38>)
 800289e:	4d0c      	ldr	r5, [pc, #48]	; (80028d0 <ConfigStore::ConfigStore()+0x3c>)
 80028a0:	601c      	str	r4, [r3, #0]
 80028a2:	7863      	ldrb	r3, [r4, #1]
 80028a4:	b11b      	cbz	r3, 80028ae <ConfigStore::ConfigStore()+0x1a>
 80028a6:	4620      	mov	r0, r4
 80028a8:	f7ff ff62 	bl	8002770 <ConfigStore::Init()>
 80028ac:	7028      	strb	r0, [r5, #0]
 80028ae:	782b      	ldrb	r3, [r5, #0]
 80028b0:	b153      	cbz	r3, 80028c8 <ConfigStore::ConfigStore()+0x34>
 80028b2:	4908      	ldr	r1, [pc, #32]	; (80028d4 <ConfigStore::ConfigStore()+0x40>)
 80028b4:	2320      	movs	r3, #32
 80028b6:	2200      	movs	r2, #0
 80028b8:	f851 0b04 	ldr.w	r0, [r1], #4
 80028bc:	3201      	adds	r2, #1
 80028be:	2a1c      	cmp	r2, #28
 80028c0:	4403      	add	r3, r0
 80028c2:	d1f9      	bne.n	80028b8 <ConfigStore::ConfigStore()+0x24>
 80028c4:	4a04      	ldr	r2, [pc, #16]	; (80028d8 <ConfigStore::ConfigStore()+0x44>)
 80028c6:	6013      	str	r3, [r2, #0]
 80028c8:	4620      	mov	r0, r4
 80028ca:	bd38      	pop	{r3, r4, r5, pc}
 80028cc:	20001748 	andcs	r1, r0, r8, asr #14
 80028d0:	2000173c 	andcs	r1, r0, ip, lsr r7
 80028d4:	08004eec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, fp, lr}
 80028d8:	20001740 	andcs	r1, r0, r0, asr #14

080028dc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 80028dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80028e0:	461c      	mov	r4, r3
 80028e2:	4b19      	ldr	r3, [pc, #100]	; (8002948 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 80028e4:	9d07      	ldr	r5, [sp, #28]
 80028e6:	781f      	ldrb	r7, [r3, #0]
 80028e8:	4616      	mov	r6, r2
 80028ea:	b307      	cbz	r7, 800292e <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 80028ec:	f7ff ff32 	bl	8002754 <ConfigStore::GetStoreOffset(configstore::Store)>
 80028f0:	4a16      	ldr	r2, [pc, #88]	; (800294c <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 80028f2:	1831      	adds	r1, r6, r0
 80028f4:	1e63      	subs	r3, r4, #1
 80028f6:	9c06      	ldr	r4, [sp, #24]
 80028f8:	4411      	add	r1, r2
 80028fa:	440c      	add	r4, r1
 80028fc:	f04f 0c00 	mov.w	ip, #0
 8002900:	42a1      	cmp	r1, r4
 8002902:	d116      	bne.n	8002932 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 8002904:	f1bc 0f00 	cmp.w	ip, #0
 8002908:	d011      	beq.n	800292e <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800290a:	4b11      	ldr	r3, [pc, #68]	; (8002950 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800290c:	6819      	ldr	r1, [r3, #0]
 800290e:	b109      	cbz	r1, 8002914 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 8002910:	2906      	cmp	r1, #6
 8002912:	d101      	bne.n	8002918 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 8002914:	2101      	movs	r1, #1
 8002916:	6019      	str	r1, [r3, #0]
 8002918:	4b0e      	ldr	r3, [pc, #56]	; (8002954 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800291a:	6819      	ldr	r1, [r3, #0]
 800291c:	4b0e      	ldr	r3, [pc, #56]	; (8002958 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800291e:	6019      	str	r1, [r3, #0]
 8002920:	b12e      	cbz	r6, 800292e <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8002922:	b125      	cbz	r5, 800292e <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8002924:	9b08      	ldr	r3, [sp, #32]
 8002926:	4418      	add	r0, r3
 8002928:	5813      	ldr	r3, [r2, r0]
 800292a:	432b      	orrs	r3, r5
 800292c:	5013      	str	r3, [r2, r0]
 800292e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002932:	f891 8000 	ldrb.w	r8, [r1]
 8002936:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800293a:	45f0      	cmp	r8, lr
 800293c:	bf1c      	itt	ne
 800293e:	f881 e000 	strbne.w	lr, [r1]
 8002942:	46bc      	movne	ip, r7
 8002944:	3101      	adds	r1, #1
 8002946:	e7db      	b.n	8002900 <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 8002948:	2000173c 	andcs	r1, r0, ip, lsr r7
 800294c:	20000738 	andcs	r0, r0, r8, lsr r7
 8002950:	20001744 	andcs	r1, r0, r4, asr #14
 8002954:	2000181c 	andcs	r1, r0, ip, lsl r8
 8002958:	20000734 	andcs	r0, r0, r4, lsr r7

0800295c <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>:
 800295c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002960:	461d      	mov	r5, r3
 8002962:	4b15      	ldr	r3, [pc, #84]	; (80029b8 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 8002964:	b085      	sub	sp, #20
 8002966:	781b      	ldrb	r3, [r3, #0]
 8002968:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800296c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8002970:	4607      	mov	r7, r0
 8002972:	4614      	mov	r4, r2
 8002974:	b193      	cbz	r3, 800299c <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 8002976:	f7ff feed 	bl	8002754 <ConfigStore::GetStoreOffset(configstore::Store)>
 800297a:	4a10      	ldr	r2, [pc, #64]	; (80029bc <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 800297c:	eb08 0600 	add.w	r6, r8, r0
 8002980:	18b3      	adds	r3, r6, r2
 8002982:	f1b9 0f00 	cmp.w	r9, #0
 8002986:	d013      	beq.n	80029b0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 8002988:	5990      	ldr	r0, [r2, r6]
 800298a:	b988      	cbnz	r0, 80029b0 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800298c:	e9cd 0001 	strd	r0, r0, [sp, #4]
 8002990:	9500      	str	r5, [sp, #0]
 8002992:	4623      	mov	r3, r4
 8002994:	4642      	mov	r2, r8
 8002996:	4638      	mov	r0, r7
 8002998:	f7ff ffa0 	bl	80028dc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800299c:	b005      	add	sp, #20
 800299e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80029a2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80029a6:	f804 2f01 	strb.w	r2, [r4, #1]!
 80029aa:	429d      	cmp	r5, r3
 80029ac:	d1f9      	bne.n	80029a2 <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 80029ae:	e7f5      	b.n	800299c <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 80029b0:	3c01      	subs	r4, #1
 80029b2:	441d      	add	r5, r3
 80029b4:	e7f9      	b.n	80029aa <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 80029b6:	bf00      	nop
 80029b8:	2000173c 	andcs	r1, r0, ip, lsr r7
 80029bc:	20000738 	andcs	r0, r0, r8, lsr r7

080029c0 <ConfigStore::Flash()>:
 80029c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80029c2:	4c24      	ldr	r4, [pc, #144]	; (8002a54 <ConfigStore::Flash()+0x94>)
 80029c4:	6823      	ldr	r3, [r4, #0]
 80029c6:	2b00      	cmp	r3, #0
 80029c8:	d041      	beq.n	8002a4e <ConfigStore::Flash()+0x8e>
 80029ca:	3b01      	subs	r3, #1
 80029cc:	2b05      	cmp	r3, #5
 80029ce:	d82f      	bhi.n	8002a30 <ConfigStore::Flash()+0x70>
 80029d0:	e8df f003 	tbb	[pc, r3]
 80029d4:	2c140b03 			; <UNDEFINED> instruction: 0x2c140b03
 80029d8:	4b1f2e23 	blmi	87ce26c <__exidx_end+0x7c8e70>
 80029dc:	681a      	ldr	r2, [r3, #0]
 80029de:	4b1f      	ldr	r3, [pc, #124]	; (8002a5c <ConfigStore::Flash()+0x9c>)
 80029e0:	601a      	str	r2, [r3, #0]
 80029e2:	2302      	movs	r3, #2
 80029e4:	6023      	str	r3, [r4, #0]
 80029e6:	2001      	movs	r0, #1
 80029e8:	e02f      	b.n	8002a4a <ConfigStore::Flash()+0x8a>
 80029ea:	4b1b      	ldr	r3, [pc, #108]	; (8002a58 <ConfigStore::Flash()+0x98>)
 80029ec:	4a1b      	ldr	r2, [pc, #108]	; (8002a5c <ConfigStore::Flash()+0x9c>)
 80029ee:	681b      	ldr	r3, [r3, #0]
 80029f0:	6812      	ldr	r2, [r2, #0]
 80029f2:	1a9b      	subs	r3, r3, r2
 80029f4:	2b63      	cmp	r3, #99	; 0x63
 80029f6:	d9f6      	bls.n	80029e6 <ConfigStore::Flash()+0x26>
 80029f8:	2303      	movs	r3, #3
 80029fa:	e7f3      	b.n	80029e4 <ConfigStore::Flash()+0x24>
 80029fc:	4918      	ldr	r1, [pc, #96]	; (8002a60 <ConfigStore::Flash()+0xa0>)
 80029fe:	ab03      	add	r3, sp, #12
 8002a00:	6809      	ldr	r1, [r1, #0]
 8002a02:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002a06:	f000 f847 	bl	8002a98 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>
 8002a0a:	2800      	cmp	r0, #0
 8002a0c:	d0eb      	beq.n	80029e6 <ConfigStore::Flash()+0x26>
 8002a0e:	4b12      	ldr	r3, [pc, #72]	; (8002a58 <ConfigStore::Flash()+0x98>)
 8002a10:	681a      	ldr	r2, [r3, #0]
 8002a12:	4b12      	ldr	r3, [pc, #72]	; (8002a5c <ConfigStore::Flash()+0x9c>)
 8002a14:	601a      	str	r2, [r3, #0]
 8002a16:	2305      	movs	r3, #5
 8002a18:	e7e4      	b.n	80029e4 <ConfigStore::Flash()+0x24>
 8002a1a:	4b0f      	ldr	r3, [pc, #60]	; (8002a58 <ConfigStore::Flash()+0x98>)
 8002a1c:	4a0f      	ldr	r2, [pc, #60]	; (8002a5c <ConfigStore::Flash()+0x9c>)
 8002a1e:	681b      	ldr	r3, [r3, #0]
 8002a20:	6812      	ldr	r2, [r2, #0]
 8002a22:	1a9b      	subs	r3, r3, r2
 8002a24:	2b63      	cmp	r3, #99	; 0x63
 8002a26:	d9de      	bls.n	80029e6 <ConfigStore::Flash()+0x26>
 8002a28:	2304      	movs	r3, #4
 8002a2a:	e7db      	b.n	80029e4 <ConfigStore::Flash()+0x24>
 8002a2c:	2306      	movs	r3, #6
 8002a2e:	e7d9      	b.n	80029e4 <ConfigStore::Flash()+0x24>
 8002a30:	ab03      	add	r3, sp, #12
 8002a32:	4a0c      	ldr	r2, [pc, #48]	; (8002a64 <ConfigStore::Flash()+0xa4>)
 8002a34:	490a      	ldr	r1, [pc, #40]	; (8002a60 <ConfigStore::Flash()+0xa0>)
 8002a36:	9300      	str	r3, [sp, #0]
 8002a38:	6812      	ldr	r2, [r2, #0]
 8002a3a:	4b0b      	ldr	r3, [pc, #44]	; (8002a68 <ConfigStore::Flash()+0xa8>)
 8002a3c:	6809      	ldr	r1, [r1, #0]
 8002a3e:	f000 f834 	bl	8002aaa <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>
 8002a42:	2800      	cmp	r0, #0
 8002a44:	d0cf      	beq.n	80029e6 <ConfigStore::Flash()+0x26>
 8002a46:	2000      	movs	r0, #0
 8002a48:	6020      	str	r0, [r4, #0]
 8002a4a:	b004      	add	sp, #16
 8002a4c:	bd10      	pop	{r4, pc}
 8002a4e:	4618      	mov	r0, r3
 8002a50:	e7fb      	b.n	8002a4a <ConfigStore::Flash()+0x8a>
 8002a52:	bf00      	nop
 8002a54:	20001744 	andcs	r1, r0, r4, asr #14
 8002a58:	2000181c 	andcs	r1, r0, ip, lsl r8
 8002a5c:	20000734 	andcs	r0, r0, r4, lsr r7
 8002a60:	20001738 	andcs	r1, r0, r8, lsr r7
 8002a64:	20001740 	andcs	r1, r0, r0, asr #14
 8002a68:	20000738 	andcs	r0, r0, r8, lsr r7

08002a6c <StoreDevice::StoreDevice()>:
 8002a6c:	b510      	push	{r4, lr}
 8002a6e:	4604      	mov	r4, r0
 8002a70:	f000 f8c2 	bl	8002bf8 <FlashCode::FlashCode()>
 8002a74:	7823      	ldrb	r3, [r4, #0]
 8002a76:	7063      	strb	r3, [r4, #1]
 8002a78:	4620      	mov	r0, r4
 8002a7a:	bd10      	pop	{r4, pc}

08002a7c <StoreDevice::GetSize() const>:
 8002a7c:	f000 b8d8 	b.w	8002c30 <FlashCode::GetSize() const>

08002a80 <StoreDevice::GetSectorSize() const>:
 8002a80:	f000 b8de 	b.w	8002c40 <FlashCode::GetSectorSize() const>

08002a84 <StoreDevice::Read(unsigned int, unsigned int, unsigned char*, storedevice::result&)>:
 8002a84:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002a86:	ac03      	add	r4, sp, #12
 8002a88:	9400      	str	r4, [sp, #0]
 8002a8a:	f000 f8dc 	bl	8002c46 <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)>
 8002a8e:	9b06      	ldr	r3, [sp, #24]
 8002a90:	9a03      	ldr	r2, [sp, #12]
 8002a92:	601a      	str	r2, [r3, #0]
 8002a94:	b004      	add	sp, #16
 8002a96:	bd10      	pop	{r4, pc}

08002a98 <StoreDevice::Erase(unsigned int, unsigned int, storedevice::result&)>:
 8002a98:	b513      	push	{r0, r1, r4, lr}
 8002a9a:	461c      	mov	r4, r3
 8002a9c:	ab01      	add	r3, sp, #4
 8002a9e:	f000 f8e1 	bl	8002c64 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)>
 8002aa2:	9b01      	ldr	r3, [sp, #4]
 8002aa4:	6023      	str	r3, [r4, #0]
 8002aa6:	b002      	add	sp, #8
 8002aa8:	bd10      	pop	{r4, pc}

08002aaa <StoreDevice::Write(unsigned int, unsigned int, unsigned char const*, storedevice::result&)>:
 8002aaa:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002aac:	ac03      	add	r4, sp, #12
 8002aae:	9400      	str	r4, [sp, #0]
 8002ab0:	f000 f978 	bl	8002da4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)>
 8002ab4:	9b06      	ldr	r3, [sp, #24]
 8002ab6:	9a03      	ldr	r2, [sp, #12]
 8002ab8:	601a      	str	r2, [r3, #0]
 8002aba:	b004      	add	sp, #16
 8002abc:	bd10      	pop	{r4, pc}

08002abe <StoreRDMDevice::~StoreRDMDevice()>:
 8002abe:	4770      	bx	lr

08002ac0 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8002ac0:	3804      	subs	r0, #4
 8002ac2:	4770      	bx	lr

08002ac4 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 8002ac4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002ac6:	2200      	movs	r2, #0
 8002ac8:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8002acc:	460b      	mov	r3, r1
 8002ace:	4805      	ldr	r0, [pc, #20]	; (8002ae4 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 8002ad0:	2129      	movs	r1, #41	; 0x29
 8002ad2:	9100      	str	r1, [sp, #0]
 8002ad4:	6800      	ldr	r0, [r0, #0]
 8002ad6:	210b      	movs	r1, #11
 8002ad8:	f7ff ff00 	bl	80028dc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8002adc:	b005      	add	sp, #20
 8002ade:	f85d fb04 	ldr.w	pc, [sp], #4
 8002ae2:	bf00      	nop
 8002ae4:	20001748 	andcs	r1, r0, r8, asr #14

08002ae8 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8002ae8:	b570      	push	{r4, r5, r6, lr}
 8002aea:	4d0d      	ldr	r5, [pc, #52]	; (8002b20 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 8002aec:	b086      	sub	sp, #24
 8002aee:	2401      	movs	r4, #1
 8002af0:	2600      	movs	r6, #0
 8002af2:	6828      	ldr	r0, [r5, #0]
 8002af4:	f88d 2017 	strb.w	r2, [sp, #23]
 8002af8:	460b      	mov	r3, r1
 8002afa:	9200      	str	r2, [sp, #0]
 8002afc:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b00:	2204      	movs	r2, #4
 8002b02:	210b      	movs	r1, #11
 8002b04:	f7ff feea 	bl	80028dc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8002b08:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002b0c:	6828      	ldr	r0, [r5, #0]
 8002b0e:	9400      	str	r4, [sp, #0]
 8002b10:	f10d 0317 	add.w	r3, sp, #23
 8002b14:	2224      	movs	r2, #36	; 0x24
 8002b16:	210b      	movs	r1, #11
 8002b18:	f7ff fee0 	bl	80028dc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8002b1c:	b006      	add	sp, #24
 8002b1e:	bd70      	pop	{r4, r5, r6, pc}
 8002b20:	20001748 	andcs	r1, r0, r8, asr #14

08002b24 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8002b24:	f1a0 0004 	sub.w	r0, r0, #4
 8002b28:	e7de      	b.n	8002ae8 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 8002b2a:	bf00      	nop

08002b2c <StoreRDMDevice::~StoreRDMDevice()>:
 8002b2c:	b510      	push	{r4, lr}
 8002b2e:	4604      	mov	r4, r0
 8002b30:	f000 fd36 	bl	80035a0 <operator delete(void*)>
 8002b34:	4620      	mov	r0, r4
 8002b36:	bd10      	pop	{r4, pc}

08002b38 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8002b38:	f1a0 0004 	sub.w	r0, r0, #4
 8002b3c:	e7f6      	b.n	8002b2c <StoreRDMDevice::~StoreRDMDevice()>
	...

08002b40 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 8002b40:	b507      	push	{r0, r1, r2, lr}
 8002b42:	2300      	movs	r3, #0
 8002b44:	460a      	mov	r2, r1
 8002b46:	2101      	movs	r1, #1
 8002b48:	e9cd 3100 	strd	r3, r1, [sp]
 8002b4c:	4804      	ldr	r0, [pc, #16]	; (8002b60 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x20>)
 8002b4e:	2329      	movs	r3, #41	; 0x29
 8002b50:	6800      	ldr	r0, [r0, #0]
 8002b52:	210b      	movs	r1, #11
 8002b54:	f7ff ff02 	bl	800295c <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8002b58:	b003      	add	sp, #12
 8002b5a:	f85d fb04 	ldr.w	pc, [sp], #4
 8002b5e:	bf00      	nop
 8002b60:	20001748 	andcs	r1, r0, r8, asr #14

08002b64 <StoreRDMDevice::StoreRDMDevice()>:
 8002b64:	4a03      	ldr	r2, [pc, #12]	; (8002b74 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 8002b66:	6002      	str	r2, [r0, #0]
 8002b68:	321c      	adds	r2, #28
 8002b6a:	6042      	str	r2, [r0, #4]
 8002b6c:	4a02      	ldr	r2, [pc, #8]	; (8002b78 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 8002b6e:	6010      	str	r0, [r2, #0]
 8002b70:	4770      	bx	lr
 8002b72:	bf00      	nop
 8002b74:	08004f64 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, fp, lr}
 8002b78:	20001750 	andcs	r1, r0, r0, asr r7

08002b7c <StoreWidget::~StoreWidget()>:
 8002b7c:	4770      	bx	lr

08002b7e <non-virtual thunk to StoreWidget::~StoreWidget()>:
 8002b7e:	3804      	subs	r0, #4
 8002b80:	4770      	bx	lr
	...

08002b84 <StoreWidget::Update(TWidgetParams const*)>:
 8002b84:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002b86:	2200      	movs	r2, #0
 8002b88:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8002b8c:	460b      	mov	r3, r1
 8002b8e:	4805      	ldr	r0, [pc, #20]	; (8002ba4 <StoreWidget::Update(TWidgetParams const*)+0x20>)
 8002b90:	210c      	movs	r1, #12
 8002b92:	9100      	str	r1, [sp, #0]
 8002b94:	6800      	ldr	r0, [r0, #0]
 8002b96:	210a      	movs	r1, #10
 8002b98:	f7ff fea0 	bl	80028dc <ConfigStore::Update(configstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8002b9c:	b005      	add	sp, #20
 8002b9e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002ba2:	bf00      	nop
 8002ba4:	20001748 	andcs	r1, r0, r8, asr #14

08002ba8 <StoreWidget::~StoreWidget()>:
 8002ba8:	b510      	push	{r4, lr}
 8002baa:	4604      	mov	r4, r0
 8002bac:	f000 fcf8 	bl	80035a0 <operator delete(void*)>
 8002bb0:	4620      	mov	r0, r4
 8002bb2:	bd10      	pop	{r4, pc}

08002bb4 <non-virtual thunk to StoreWidget::~StoreWidget()>:
 8002bb4:	f1a0 0004 	sub.w	r0, r0, #4
 8002bb8:	e7f6      	b.n	8002ba8 <StoreWidget::~StoreWidget()>
	...

08002bbc <StoreWidget::Copy(TWidgetParams*)>:
 8002bbc:	b507      	push	{r0, r1, r2, lr}
 8002bbe:	2300      	movs	r3, #0
 8002bc0:	460a      	mov	r2, r1
 8002bc2:	2101      	movs	r1, #1
 8002bc4:	e9cd 3100 	strd	r3, r1, [sp]
 8002bc8:	4804      	ldr	r0, [pc, #16]	; (8002bdc <StoreWidget::Copy(TWidgetParams*)+0x20>)
 8002bca:	230c      	movs	r3, #12
 8002bcc:	6800      	ldr	r0, [r0, #0]
 8002bce:	210a      	movs	r1, #10
 8002bd0:	f7ff fec4 	bl	800295c <ConfigStore::Copy(configstore::Store, void*, unsigned int, unsigned int, bool)>
 8002bd4:	b003      	add	sp, #12
 8002bd6:	f85d fb04 	ldr.w	pc, [sp], #4
 8002bda:	bf00      	nop
 8002bdc:	20001748 	andcs	r1, r0, r8, asr #14

08002be0 <StoreWidget::StoreWidget()>:
 8002be0:	4a03      	ldr	r2, [pc, #12]	; (8002bf0 <StoreWidget::StoreWidget()+0x10>)
 8002be2:	6002      	str	r2, [r0, #0]
 8002be4:	3224      	adds	r2, #36	; 0x24
 8002be6:	6042      	str	r2, [r0, #4]
 8002be8:	4a02      	ldr	r2, [pc, #8]	; (8002bf4 <StoreWidget::StoreWidget()+0x14>)
 8002bea:	6010      	str	r0, [r2, #0]
 8002bec:	4770      	bx	lr
 8002bee:	bf00      	nop
 8002bf0:	08004f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp, lr}
 8002bf4:	20001754 	andcs	r1, r0, r4, asr r7

08002bf8 <FlashCode::FlashCode()>:
 8002bf8:	4b0a      	ldr	r3, [pc, #40]	; (8002c24 <FlashCode::FlashCode()+0x2c>)
 8002bfa:	b513      	push	{r0, r1, r4, lr}
 8002bfc:	6018      	str	r0, [r3, #0]
 8002bfe:	2301      	movs	r3, #1
 8002c00:	7003      	strb	r3, [r0, #0]
 8002c02:	4604      	mov	r4, r0
 8002c04:	f000 f814 	bl	8002c30 <FlashCode::GetSize() const>
 8002c08:	9001      	str	r0, [sp, #4]
 8002c0a:	4620      	mov	r0, r4
 8002c0c:	f000 f810 	bl	8002c30 <FlashCode::GetSize() const>
 8002c10:	9a01      	ldr	r2, [sp, #4]
 8002c12:	4905      	ldr	r1, [pc, #20]	; (8002c28 <FlashCode::FlashCode()+0x30>)
 8002c14:	0a83      	lsrs	r3, r0, #10
 8002c16:	4805      	ldr	r0, [pc, #20]	; (8002c2c <FlashCode::FlashCode()+0x34>)
 8002c18:	f7fd ff3e 	bl	8000a98 <printf>
 8002c1c:	4620      	mov	r0, r4
 8002c1e:	b002      	add	sp, #8
 8002c20:	bd10      	pop	{r4, pc}
 8002c22:	bf00      	nop
 8002c24:	20001758 	andcs	r1, r0, r8, asr r7
 8002c28:	08004b44 	stmdaeq	r0, {r2, r6, r8, r9, fp, lr}
 8002c2c:	08004fcc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, fp, lr}

08002c30 <FlashCode::GetSize() const>:
 8002c30:	4b02      	ldr	r3, [pc, #8]	; (8002c3c <FlashCode::GetSize() const+0xc>)
 8002c32:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 8002c36:	0280      	lsls	r0, r0, #10
 8002c38:	4770      	bx	lr
 8002c3a:	bf00      	nop
 8002c3c:	1ffff700 	svcne	0x00fff700

08002c40 <FlashCode::GetSectorSize() const>:
 8002c40:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8002c44:	4770      	bx	lr

08002c46 <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)>:
 8002c46:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8002c4a:	441a      	add	r2, r3
 8002c4c:	4293      	cmp	r3, r2
 8002c4e:	d104      	bne.n	8002c5a <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)+0x14>
 8002c50:	9b00      	ldr	r3, [sp, #0]
 8002c52:	2200      	movs	r2, #0
 8002c54:	601a      	str	r2, [r3, #0]
 8002c56:	2001      	movs	r0, #1
 8002c58:	4770      	bx	lr
 8002c5a:	f851 0b04 	ldr.w	r0, [r1], #4
 8002c5e:	f843 0b04 	str.w	r0, [r3], #4
 8002c62:	e7f3      	b.n	8002c4c <FlashCode::Read(unsigned int, unsigned int, unsigned char*, flashcode::result&)+0x6>

08002c64 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)>:
 8002c64:	b538      	push	{r3, r4, r5, lr}
 8002c66:	4c48      	ldr	r4, [pc, #288]	; (8002d88 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x124>)
 8002c68:	2000      	movs	r0, #0
 8002c6a:	6018      	str	r0, [r3, #0]
 8002c6c:	6823      	ldr	r3, [r4, #0]
 8002c6e:	2b04      	cmp	r3, #4
 8002c70:	f200 8082 	bhi.w	8002d78 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x114>
 8002c74:	e8df f003 	tbb	[pc, r3]
 8002c78:	78452003 	stmdavc	r5, {r0, r1, sp}^
 8002c7c:	4b430080 	blmi	90c2e84 <__exidx_end+0x10bda88>
 8002c80:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8002c84:	6019      	str	r1, [r3, #0]
 8002c86:	4b42      	ldr	r3, [pc, #264]	; (8002d90 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 8002c88:	601a      	str	r2, [r3, #0]
 8002c8a:	4b42      	ldr	r3, [pc, #264]	; (8002d94 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x130>)
 8002c8c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8002c90:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002c94:	4b40      	ldr	r3, [pc, #256]	; (8002d98 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 8002c96:	d807      	bhi.n	8002ca8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x44>
 8002c98:	2201      	movs	r2, #1
 8002c9a:	701a      	strb	r2, [r3, #0]
 8002c9c:	f000 ff32 	bl	8003b04 <fmc_bank0_unlock>
 8002ca0:	2301      	movs	r3, #1
 8002ca2:	6023      	str	r3, [r4, #0]
 8002ca4:	2000      	movs	r0, #0
 8002ca6:	e026      	b.n	8002cf6 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x92>
 8002ca8:	4a3c      	ldr	r2, [pc, #240]	; (8002d9c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x138>)
 8002caa:	4291      	cmp	r1, r2
 8002cac:	d3f4      	bcc.n	8002c98 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x34>
 8002cae:	2200      	movs	r2, #0
 8002cb0:	701a      	strb	r2, [r3, #0]
 8002cb2:	f000 ff35 	bl	8003b20 <fmc_bank1_unlock>
 8002cb6:	e7f3      	b.n	8002ca0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 8002cb8:	4d37      	ldr	r5, [pc, #220]	; (8002d98 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 8002cba:	782b      	ldrb	r3, [r5, #0]
 8002cbc:	b15b      	cbz	r3, 8002cd6 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x72>
 8002cbe:	f000 ff4d 	bl	8003b5c <fmc_bank0_state_get>
 8002cc2:	2801      	cmp	r0, #1
 8002cc4:	d0ee      	beq.n	8002ca4 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x40>
 8002cc6:	7829      	ldrb	r1, [r5, #0]
 8002cc8:	4b35      	ldr	r3, [pc, #212]	; (8002da0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 8002cca:	b939      	cbnz	r1, 8002cdc <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x78>
 8002ccc:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002cce:	f022 0202 	bic.w	r2, r2, #2
 8002cd2:	651a      	str	r2, [r3, #80]	; 0x50
 8002cd4:	e006      	b.n	8002ce4 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x80>
 8002cd6:	f000 ff53 	bl	8003b80 <fmc_bank1_state_get>
 8002cda:	e7f2      	b.n	8002cc2 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x5e>
 8002cdc:	691a      	ldr	r2, [r3, #16]
 8002cde:	f022 0202 	bic.w	r2, r2, #2
 8002ce2:	611a      	str	r2, [r3, #16]
 8002ce4:	4b2a      	ldr	r3, [pc, #168]	; (8002d90 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 8002ce6:	681b      	ldr	r3, [r3, #0]
 8002ce8:	b94b      	cbnz	r3, 8002cfe <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x9a>
 8002cea:	b129      	cbz	r1, 8002cf8 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x94>
 8002cec:	f000 ff26 	bl	8003b3c <fmc_bank0_lock>
 8002cf0:	2300      	movs	r3, #0
 8002cf2:	6023      	str	r3, [r4, #0]
 8002cf4:	2001      	movs	r0, #1
 8002cf6:	bd38      	pop	{r3, r4, r5, pc}
 8002cf8:	f000 ff28 	bl	8003b4c <fmc_bank1_lock>
 8002cfc:	e7f8      	b.n	8002cf0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x8c>
 8002cfe:	2302      	movs	r3, #2
 8002d00:	e7cf      	b.n	8002ca2 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3e>
 8002d02:	4923      	ldr	r1, [pc, #140]	; (8002d90 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x12c>)
 8002d04:	680b      	ldr	r3, [r1, #0]
 8002d06:	2b00      	cmp	r3, #0
 8002d08:	d0ca      	beq.n	8002ca0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 8002d0a:	4b23      	ldr	r3, [pc, #140]	; (8002d98 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 8002d0c:	4a1f      	ldr	r2, [pc, #124]	; (8002d8c <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x128>)
 8002d0e:	7818      	ldrb	r0, [r3, #0]
 8002d10:	4b23      	ldr	r3, [pc, #140]	; (8002da0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 8002d12:	b190      	cbz	r0, 8002d3a <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0xd6>
 8002d14:	6918      	ldr	r0, [r3, #16]
 8002d16:	f040 0002 	orr.w	r0, r0, #2
 8002d1a:	6118      	str	r0, [r3, #16]
 8002d1c:	6810      	ldr	r0, [r2, #0]
 8002d1e:	6158      	str	r0, [r3, #20]
 8002d20:	6918      	ldr	r0, [r3, #16]
 8002d22:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 8002d26:	6118      	str	r0, [r3, #16]
 8002d28:	680b      	ldr	r3, [r1, #0]
 8002d2a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8002d2e:	600b      	str	r3, [r1, #0]
 8002d30:	6813      	ldr	r3, [r2, #0]
 8002d32:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8002d36:	6013      	str	r3, [r2, #0]
 8002d38:	e7b2      	b.n	8002ca0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x3c>
 8002d3a:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8002d3c:	f040 0002 	orr.w	r0, r0, #2
 8002d40:	6518      	str	r0, [r3, #80]	; 0x50
 8002d42:	6810      	ldr	r0, [r2, #0]
 8002d44:	6558      	str	r0, [r3, #84]	; 0x54
 8002d46:	69dd      	ldr	r5, [r3, #28]
 8002d48:	07ad      	lsls	r5, r5, #30
 8002d4a:	bf48      	it	mi
 8002d4c:	6158      	strmi	r0, [r3, #20]
 8002d4e:	4814      	ldr	r0, [pc, #80]	; (8002da0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 8002d50:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8002d52:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002d56:	6503      	str	r3, [r0, #80]	; 0x50
 8002d58:	680b      	ldr	r3, [r1, #0]
 8002d5a:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8002d5e:	600b      	str	r3, [r1, #0]
 8002d60:	6813      	ldr	r3, [r2, #0]
 8002d62:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002d66:	e7e6      	b.n	8002d36 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0xd2>
 8002d68:	4b0b      	ldr	r3, [pc, #44]	; (8002d98 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x134>)
 8002d6a:	781a      	ldrb	r2, [r3, #0]
 8002d6c:	4b0c      	ldr	r3, [pc, #48]	; (8002da0 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x13c>)
 8002d6e:	b132      	cbz	r2, 8002d7e <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x11a>
 8002d70:	691a      	ldr	r2, [r3, #16]
 8002d72:	f022 0201 	bic.w	r2, r2, #1
 8002d76:	611a      	str	r2, [r3, #16]
 8002d78:	2000      	movs	r0, #0
 8002d7a:	6020      	str	r0, [r4, #0]
 8002d7c:	e7bb      	b.n	8002cf6 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x92>
 8002d7e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002d80:	f022 0201 	bic.w	r2, r2, #1
 8002d84:	651a      	str	r2, [r3, #80]	; 0x50
 8002d86:	e7f7      	b.n	8002d78 <FlashCode::Erase(unsigned int, unsigned int, flashcode::result&)+0x114>
 8002d88:	20001760 	andcs	r1, r0, r0, ror #14
 8002d8c:	20001764 	andcs	r1, r0, r4, ror #14
 8002d90:	20001770 	andcs	r1, r0, r0, ror r7
 8002d94:	1ffff700 	svcne	0x00fff700
 8002d98:	2000176c 	andcs	r1, r0, ip, ror #14
 8002d9c:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8002da0:	40022000 	andmi	r2, r2, r0

08002da4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)>:
 8002da4:	b570      	push	{r4, r5, r6, lr}
 8002da6:	9804      	ldr	r0, [sp, #16]
 8002da8:	2400      	movs	r4, #0
 8002daa:	6004      	str	r4, [r0, #0]
 8002dac:	4c48      	ldr	r4, [pc, #288]	; (8002ed0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x12c>)
 8002dae:	6820      	ldr	r0, [r4, #0]
 8002db0:	2804      	cmp	r0, #4
 8002db2:	d848      	bhi.n	8002e46 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xa2>
 8002db4:	e8df f000 	tbb	[pc, r0]
 8002db8:	22847c03 	addcs	r7, r4, #768	; 0x300
 8002dbc:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 8002dc0:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8002dc4:	6001      	str	r1, [r0, #0]
 8002dc6:	4844      	ldr	r0, [pc, #272]	; (8002ed8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 8002dc8:	6003      	str	r3, [r0, #0]
 8002dca:	4b44      	ldr	r3, [pc, #272]	; (8002edc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 8002dcc:	601a      	str	r2, [r3, #0]
 8002dce:	4b44      	ldr	r3, [pc, #272]	; (8002ee0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x13c>)
 8002dd0:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8002dd4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002dd8:	4b42      	ldr	r3, [pc, #264]	; (8002ee4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8002dda:	d807      	bhi.n	8002dec <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x48>
 8002ddc:	2201      	movs	r2, #1
 8002dde:	701a      	strb	r2, [r3, #0]
 8002de0:	f000 fe90 	bl	8003b04 <fmc_bank0_unlock>
 8002de4:	2303      	movs	r3, #3
 8002de6:	6023      	str	r3, [r4, #0]
 8002de8:	2000      	movs	r0, #0
 8002dea:	e026      	b.n	8002e3a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x96>
 8002dec:	4a3e      	ldr	r2, [pc, #248]	; (8002ee8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x144>)
 8002dee:	4291      	cmp	r1, r2
 8002df0:	d3f4      	bcc.n	8002ddc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x38>
 8002df2:	2200      	movs	r2, #0
 8002df4:	701a      	strb	r2, [r3, #0]
 8002df6:	f000 fe93 	bl	8003b20 <fmc_bank1_unlock>
 8002dfa:	e7f3      	b.n	8002de4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 8002dfc:	4d39      	ldr	r5, [pc, #228]	; (8002ee4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8002dfe:	782b      	ldrb	r3, [r5, #0]
 8002e00:	b15b      	cbz	r3, 8002e1a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x76>
 8002e02:	f000 feab 	bl	8003b5c <fmc_bank0_state_get>
 8002e06:	2801      	cmp	r0, #1
 8002e08:	d0ee      	beq.n	8002de8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x44>
 8002e0a:	7829      	ldrb	r1, [r5, #0]
 8002e0c:	4b37      	ldr	r3, [pc, #220]	; (8002eec <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 8002e0e:	b939      	cbnz	r1, 8002e20 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x7c>
 8002e10:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002e12:	f022 0201 	bic.w	r2, r2, #1
 8002e16:	651a      	str	r2, [r3, #80]	; 0x50
 8002e18:	e006      	b.n	8002e28 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x84>
 8002e1a:	f000 feb1 	bl	8003b80 <fmc_bank1_state_get>
 8002e1e:	e7f2      	b.n	8002e06 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x62>
 8002e20:	691a      	ldr	r2, [r3, #16]
 8002e22:	f022 0201 	bic.w	r2, r2, #1
 8002e26:	611a      	str	r2, [r3, #16]
 8002e28:	4b2c      	ldr	r3, [pc, #176]	; (8002edc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 8002e2a:	681b      	ldr	r3, [r3, #0]
 8002e2c:	b94b      	cbnz	r3, 8002e42 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x9e>
 8002e2e:	b129      	cbz	r1, 8002e3c <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x98>
 8002e30:	f000 fe84 	bl	8003b3c <fmc_bank0_lock>
 8002e34:	2300      	movs	r3, #0
 8002e36:	6023      	str	r3, [r4, #0]
 8002e38:	2001      	movs	r0, #1
 8002e3a:	bd70      	pop	{r4, r5, r6, pc}
 8002e3c:	f000 fe86 	bl	8003b4c <fmc_bank1_lock>
 8002e40:	e7f8      	b.n	8002e34 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x90>
 8002e42:	2304      	movs	r3, #4
 8002e44:	e7cf      	b.n	8002de6 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x42>
 8002e46:	4a25      	ldr	r2, [pc, #148]	; (8002edc <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x138>)
 8002e48:	6813      	ldr	r3, [r2, #0]
 8002e4a:	2b03      	cmp	r3, #3
 8002e4c:	d91a      	bls.n	8002e84 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xe0>
 8002e4e:	4b25      	ldr	r3, [pc, #148]	; (8002ee4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8002e50:	7819      	ldrb	r1, [r3, #0]
 8002e52:	4b26      	ldr	r3, [pc, #152]	; (8002eec <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 8002e54:	b189      	cbz	r1, 8002e7a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xd6>
 8002e56:	6919      	ldr	r1, [r3, #16]
 8002e58:	f041 0101 	orr.w	r1, r1, #1
 8002e5c:	6119      	str	r1, [r3, #16]
 8002e5e:	4d1e      	ldr	r5, [pc, #120]	; (8002ed8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 8002e60:	481c      	ldr	r0, [pc, #112]	; (8002ed4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x130>)
 8002e62:	6829      	ldr	r1, [r5, #0]
 8002e64:	6803      	ldr	r3, [r0, #0]
 8002e66:	f851 6b04 	ldr.w	r6, [r1], #4
 8002e6a:	f843 6b04 	str.w	r6, [r3], #4
 8002e6e:	6003      	str	r3, [r0, #0]
 8002e70:	6813      	ldr	r3, [r2, #0]
 8002e72:	6029      	str	r1, [r5, #0]
 8002e74:	3b04      	subs	r3, #4
 8002e76:	6013      	str	r3, [r2, #0]
 8002e78:	e7b4      	b.n	8002de4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 8002e7a:	6d19      	ldr	r1, [r3, #80]	; 0x50
 8002e7c:	f041 0101 	orr.w	r1, r1, #1
 8002e80:	6519      	str	r1, [r3, #80]	; 0x50
 8002e82:	e7ec      	b.n	8002e5e <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xba>
 8002e84:	2b00      	cmp	r3, #0
 8002e86:	d0ad      	beq.n	8002de4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 8002e88:	4b16      	ldr	r3, [pc, #88]	; (8002ee4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8002e8a:	781a      	ldrb	r2, [r3, #0]
 8002e8c:	4b17      	ldr	r3, [pc, #92]	; (8002eec <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 8002e8e:	b152      	cbz	r2, 8002ea6 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x102>
 8002e90:	691a      	ldr	r2, [r3, #16]
 8002e92:	f042 0201 	orr.w	r2, r2, #1
 8002e96:	611a      	str	r2, [r3, #16]
 8002e98:	4a0f      	ldr	r2, [pc, #60]	; (8002ed8 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x134>)
 8002e9a:	4b0e      	ldr	r3, [pc, #56]	; (8002ed4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x130>)
 8002e9c:	6812      	ldr	r2, [r2, #0]
 8002e9e:	681b      	ldr	r3, [r3, #0]
 8002ea0:	6812      	ldr	r2, [r2, #0]
 8002ea2:	601a      	str	r2, [r3, #0]
 8002ea4:	e79e      	b.n	8002de4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x40>
 8002ea6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002ea8:	f042 0201 	orr.w	r2, r2, #1
 8002eac:	651a      	str	r2, [r3, #80]	; 0x50
 8002eae:	e7f3      	b.n	8002e98 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0xf4>
 8002eb0:	4b0c      	ldr	r3, [pc, #48]	; (8002ee4 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x140>)
 8002eb2:	781a      	ldrb	r2, [r3, #0]
 8002eb4:	4b0d      	ldr	r3, [pc, #52]	; (8002eec <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x148>)
 8002eb6:	b132      	cbz	r2, 8002ec6 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x122>
 8002eb8:	691a      	ldr	r2, [r3, #16]
 8002eba:	f022 0202 	bic.w	r2, r2, #2
 8002ebe:	611a      	str	r2, [r3, #16]
 8002ec0:	2000      	movs	r0, #0
 8002ec2:	6020      	str	r0, [r4, #0]
 8002ec4:	e7b9      	b.n	8002e3a <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x96>
 8002ec6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002ec8:	f022 0202 	bic.w	r2, r2, #2
 8002ecc:	651a      	str	r2, [r3, #80]	; 0x50
 8002ece:	e7f7      	b.n	8002ec0 <FlashCode::Write(unsigned int, unsigned int, unsigned char const*, flashcode::result&)+0x11c>
 8002ed0:	20001760 	andcs	r1, r0, r0, ror #14
 8002ed4:	2000175c 	andcs	r1, r0, ip, asr r7
 8002ed8:	20001768 	andcs	r1, r0, r8, ror #14
 8002edc:	20001770 	andcs	r1, r0, r0, ror r7
 8002ee0:	1ffff700 	svcne	0x00fff700
 8002ee4:	2000176c 	andcs	r1, r0, ip, ror #14
 8002ee8:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8002eec:	40022000 	andmi	r2, r2, r0

08002ef0 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8002ef0:	e9c0 1200 	strd	r1, r2, [r0]
 8002ef4:	4770      	bx	lr

08002ef6 <ReadConfigFile::~ReadConfigFile()>:
 8002ef6:	4770      	bx	lr

08002ef8 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8002ef8:	b538      	push	{r3, r4, r5, lr}
 8002efa:	4614      	mov	r4, r2
 8002efc:	f000 f81a 	bl	8002f34 <Sscan::checkName(char const*, char const*)>
 8002f00:	b1a0      	cbz	r0, 8002f2c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x34>
 8002f02:	2100      	movs	r1, #0
 8002f04:	220a      	movs	r2, #10
 8002f06:	7803      	ldrb	r3, [r0, #0]
 8002f08:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 8002f0c:	2d09      	cmp	r5, #9
 8002f0e:	d80f      	bhi.n	8002f30 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 8002f10:	fb02 3101 	mla	r1, r2, r1, r3
 8002f14:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8002f18:	f013 03df 	ands.w	r3, r3, #223	; 0xdf
 8002f1c:	f1a1 0130 	sub.w	r1, r1, #48	; 0x30
 8002f20:	d1f1      	bne.n	8002f06 <Sscan::Uint8(char const*, char const*, unsigned char&)+0xe>
 8002f22:	29ff      	cmp	r1, #255	; 0xff
 8002f24:	d804      	bhi.n	8002f30 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 8002f26:	7021      	strb	r1, [r4, #0]
 8002f28:	4618      	mov	r0, r3
 8002f2a:	bd38      	pop	{r3, r4, r5, pc}
 8002f2c:	2301      	movs	r3, #1
 8002f2e:	e7fb      	b.n	8002f28 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8002f30:	2302      	movs	r3, #2
 8002f32:	e7f9      	b.n	8002f28 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08002f34 <Sscan::checkName(char const*, char const*)>:
 8002f34:	b510      	push	{r4, lr}
 8002f36:	3901      	subs	r1, #1
 8002f38:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8002f3c:	4604      	mov	r4, r0
 8002f3e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8002f42:	b123      	cbz	r3, 8002f4e <Sscan::checkName(char const*, char const*)+0x1a>
 8002f44:	b10a      	cbz	r2, 8002f4a <Sscan::checkName(char const*, char const*)+0x16>
 8002f46:	4293      	cmp	r3, r2
 8002f48:	d0f6      	beq.n	8002f38 <Sscan::checkName(char const*, char const*)+0x4>
 8002f4a:	2000      	movs	r0, #0
 8002f4c:	e006      	b.n	8002f5c <Sscan::checkName(char const*, char const*)+0x28>
 8002f4e:	2a3d      	cmp	r2, #61	; 0x3d
 8002f50:	d1fb      	bne.n	8002f4a <Sscan::checkName(char const*, char const*)+0x16>
 8002f52:	7860      	ldrb	r0, [r4, #1]
 8002f54:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8002f58:	d000      	beq.n	8002f5c <Sscan::checkName(char const*, char const*)+0x28>
 8002f5a:	1c60      	adds	r0, r4, #1
 8002f5c:	bd10      	pop	{r4, pc}
	...

08002f60 <Display::PrintInfo() [clone .isra.0]>:
 8002f60:	b910      	cbnz	r0, 8002f68 <Display::PrintInfo() [clone .isra.0]+0x8>
 8002f62:	4803      	ldr	r0, [pc, #12]	; (8002f70 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8002f64:	f000 bbbc 	b.w	80036e0 <puts>
 8002f68:	6803      	ldr	r3, [r0, #0]
 8002f6a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002f6c:	4718      	bx	r3
 8002f6e:	bf00      	nop
 8002f70:	08004ffa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}

08002f74 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8002f74:	b513      	push	{r0, r1, r4, lr}
 8002f76:	4604      	mov	r4, r0
 8002f78:	0a13      	lsrs	r3, r2, #8
 8002f7a:	7800      	ldrb	r0, [r0, #0]
 8002f7c:	f88d 1004 	strb.w	r1, [sp, #4]
 8002f80:	f88d 3005 	strb.w	r3, [sp, #5]
 8002f84:	f88d 2006 	strb.w	r2, [sp, #6]
 8002f88:	f001 f9e8 	bl	800435c <gd32_i2c_set_address>
 8002f8c:	6860      	ldr	r0, [r4, #4]
 8002f8e:	f001 f9dd 	bl	800434c <gd32_i2c_set_baudrate>
 8002f92:	2103      	movs	r1, #3
 8002f94:	a801      	add	r0, sp, #4
 8002f96:	f001 f9e7 	bl	8004368 <gd32_i2c_write>
 8002f9a:	b002      	add	sp, #8
 8002f9c:	bd10      	pop	{r4, pc}

08002f9e <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8002f9e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002fa0:	460d      	mov	r5, r1
 8002fa2:	4604      	mov	r4, r0
 8002fa4:	f001 f9da 	bl	800435c <gd32_i2c_set_address>
 8002fa8:	4628      	mov	r0, r5
 8002faa:	f001 f9cf 	bl	800434c <gd32_i2c_set_baudrate>
 8002fae:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8002fb2:	2b07      	cmp	r3, #7
 8002fb4:	d902      	bls.n	8002fbc <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8002fb6:	3c50      	subs	r4, #80	; 0x50
 8002fb8:	2c0f      	cmp	r4, #15
 8002fba:	d809      	bhi.n	8002fd0 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8002fbc:	2101      	movs	r1, #1
 8002fbe:	f10d 0007 	add.w	r0, sp, #7
 8002fc2:	f001 fa37 	bl	8004434 <gd32_i2c_read>
 8002fc6:	fab0 f080 	clz	r0, r0
 8002fca:	0940      	lsrs	r0, r0, #5
 8002fcc:	b003      	add	sp, #12
 8002fce:	bd30      	pop	{r4, r5, pc}
 8002fd0:	2100      	movs	r1, #0
 8002fd2:	4608      	mov	r0, r1
 8002fd4:	f001 f9c8 	bl	8004368 <gd32_i2c_write>
 8002fd8:	e7f5      	b.n	8002fc6 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

08002fda <Display::Detect7Segment()>:
 8002fda:	b513      	push	{r0, r1, r4, lr}
 8002fdc:	68c1      	ldr	r1, [r0, #12]
 8002fde:	4604      	mov	r4, r0
 8002fe0:	7a00      	ldrb	r0, [r0, #8]
 8002fe2:	f7ff ffdc 	bl	8002f9e <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8002fe6:	7460      	strb	r0, [r4, #17]
 8002fe8:	b170      	cbz	r0, 8003008 <Display::Detect7Segment()+0x2e>
 8002fea:	2200      	movs	r2, #0
 8002fec:	f104 0008 	add.w	r0, r4, #8
 8002ff0:	4611      	mov	r1, r2
 8002ff2:	9001      	str	r0, [sp, #4]
 8002ff4:	f7ff ffbe 	bl	8002f74 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8002ff8:	7c63      	ldrb	r3, [r4, #17]
 8002ffa:	9801      	ldr	r0, [sp, #4]
 8002ffc:	b123      	cbz	r3, 8003008 <Display::Detect7Segment()+0x2e>
 8002ffe:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8003002:	2112      	movs	r1, #18
 8003004:	f7ff ffb6 	bl	8002f74 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8003008:	b002      	add	sp, #8
 800300a:	bd10      	pop	{r4, pc}

0800300c <Display::Detect(display::Type)>:
 800300c:	2902      	cmp	r1, #2
 800300e:	b538      	push	{r3, r4, r5, lr}
 8003010:	4604      	mov	r4, r0
 8003012:	d014      	beq.n	800303e <Display::Detect(display::Type)+0x32>
 8003014:	2904      	cmp	r1, #4
 8003016:	d01b      	beq.n	8003050 <Display::Detect(display::Type)+0x44>
 8003018:	69a0      	ldr	r0, [r4, #24]
 800301a:	b168      	cbz	r0, 8003038 <Display::Detect(display::Type)+0x2c>
 800301c:	6803      	ldr	r3, [r0, #0]
 800301e:	689b      	ldr	r3, [r3, #8]
 8003020:	4798      	blx	r3
 8003022:	69a3      	ldr	r3, [r4, #24]
 8003024:	b9b0      	cbnz	r0, 8003054 <Display::Detect(display::Type)+0x48>
 8003026:	b11b      	cbz	r3, 8003030 <Display::Detect(display::Type)+0x24>
 8003028:	681a      	ldr	r2, [r3, #0]
 800302a:	4618      	mov	r0, r3
 800302c:	6852      	ldr	r2, [r2, #4]
 800302e:	4790      	blx	r2
 8003030:	2300      	movs	r3, #0
 8003032:	61a3      	str	r3, [r4, #24]
 8003034:	2304      	movs	r3, #4
 8003036:	6023      	str	r3, [r4, #0]
 8003038:	2300      	movs	r3, #0
 800303a:	6163      	str	r3, [r4, #20]
 800303c:	e011      	b.n	8003062 <Display::Detect(display::Type)+0x56>
 800303e:	2018      	movs	r0, #24
 8003040:	f000 fab0 	bl	80035a4 <operator new(unsigned int)>
 8003044:	2100      	movs	r1, #0
 8003046:	4605      	mov	r5, r0
 8003048:	f000 f8a0 	bl	800318c <Ssd1306::Ssd1306(TOledPanel)>
 800304c:	61a5      	str	r5, [r4, #24]
 800304e:	e7e3      	b.n	8003018 <Display::Detect(display::Type)+0xc>
 8003050:	6001      	str	r1, [r0, #0]
 8003052:	e7e1      	b.n	8003018 <Display::Detect(display::Type)+0xc>
 8003054:	681a      	ldr	r2, [r3, #0]
 8003056:	4618      	mov	r0, r3
 8003058:	68d2      	ldr	r2, [r2, #12]
 800305a:	4790      	blx	r2
 800305c:	69a3      	ldr	r3, [r4, #24]
 800305e:	2b00      	cmp	r3, #0
 8003060:	d0ea      	beq.n	8003038 <Display::Detect(display::Type)+0x2c>
 8003062:	bd38      	pop	{r3, r4, r5, pc}

08003064 <Display::Display()>:
 8003064:	2304      	movs	r3, #4
 8003066:	b510      	push	{r4, lr}
 8003068:	6003      	str	r3, [r0, #0]
 800306a:	4b0f      	ldr	r3, [pc, #60]	; (80030a8 <Display::Display()+0x44>)
 800306c:	4a0f      	ldr	r2, [pc, #60]	; (80030ac <Display::Display()+0x48>)
 800306e:	681b      	ldr	r3, [r3, #0]
 8003070:	6043      	str	r3, [r0, #4]
 8003072:	2321      	movs	r3, #33	; 0x21
 8003074:	7203      	strb	r3, [r0, #8]
 8003076:	4b0e      	ldr	r3, [pc, #56]	; (80030b0 <Display::Display()+0x4c>)
 8003078:	60c3      	str	r3, [r0, #12]
 800307a:	2300      	movs	r3, #0
 800307c:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8003080:	8203      	strh	r3, [r0, #16]
 8003082:	4b0c      	ldr	r3, [pc, #48]	; (80030b4 <Display::Display()+0x50>)
 8003084:	4604      	mov	r4, r0
 8003086:	2102      	movs	r1, #2
 8003088:	6018      	str	r0, [r3, #0]
 800308a:	f7ff ffbf 	bl	800300c <Display::Detect(display::Type)>
 800308e:	4620      	mov	r0, r4
 8003090:	f7ff ffa3 	bl	8002fda <Display::Detect7Segment()>
 8003094:	69a3      	ldr	r3, [r4, #24]
 8003096:	b10b      	cbz	r3, 800309c <Display::Display()+0x38>
 8003098:	f000 fa0a 	bl	80034b0 <display::timeout::gpio_init()>
 800309c:	69a0      	ldr	r0, [r4, #24]
 800309e:	f7ff ff5f 	bl	8002f60 <Display::PrintInfo() [clone .isra.0]>
 80030a2:	4620      	mov	r0, r4
 80030a4:	bd10      	pop	{r4, pc}
 80030a6:	bf00      	nop
 80030a8:	2000181c 	andcs	r1, r0, ip, lsl r8
 80030ac:	000493e0 	andeq	r9, r4, r0, ror #7
 80030b0:	00061a80 	andeq	r1, r6, r0, lsl #21
 80030b4:	20001774 	andcs	r1, r0, r4, ror r7

080030b8 <Ssd1306::~Ssd1306()>:
 80030b8:	4770      	bx	lr

080030ba <Ssd1306::SetCursor(unsigned int)>:
 80030ba:	4770      	bx	lr

080030bc <Ssd1306::PrintInfo()>:
 80030bc:	b410      	push	{r4}
 80030be:	4906      	ldr	r1, [pc, #24]	; (80030d8 <Ssd1306::PrintInfo()+0x1c>)
 80030c0:	7c44      	ldrb	r4, [r0, #17]
 80030c2:	7903      	ldrb	r3, [r0, #4]
 80030c4:	7942      	ldrb	r2, [r0, #5]
 80030c6:	4805      	ldr	r0, [pc, #20]	; (80030dc <Ssd1306::PrintInfo()+0x20>)
 80030c8:	2c00      	cmp	r4, #0
 80030ca:	bf08      	it	eq
 80030cc:	4601      	moveq	r1, r0
 80030ce:	4804      	ldr	r0, [pc, #16]	; (80030e0 <Ssd1306::PrintInfo()+0x24>)
 80030d0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80030d4:	f7fd bce0 	b.w	8000a98 <printf>
 80030d8:	0800500b 	stmdaeq	r0, {r0, r1, r3, ip, lr}
 80030dc:	08005012 	stmdaeq	r0, {r1, r4, ip, lr}
 80030e0:	0800501a 	stmdaeq	r0, {r1, r3, r4, ip, lr}

080030e4 <Ssd1306::~Ssd1306()>:
 80030e4:	b510      	push	{r4, lr}
 80030e6:	4604      	mov	r4, r0
 80030e8:	f000 fa5a 	bl	80035a0 <operator delete(void*)>
 80030ec:	4620      	mov	r0, r4
 80030ee:	bd10      	pop	{r4, pc}

080030f0 <HAL_I2C::Setup()>:
 80030f0:	b510      	push	{r4, lr}
 80030f2:	4604      	mov	r4, r0
 80030f4:	7800      	ldrb	r0, [r0, #0]
 80030f6:	f001 f931 	bl	800435c <gd32_i2c_set_address>
 80030fa:	6860      	ldr	r0, [r4, #4]
 80030fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003100:	f001 b924 	b.w	800434c <gd32_i2c_set_baudrate>

08003104 <Ssd1306::PutChar(int)>:
 8003104:	b510      	push	{r4, lr}
 8003106:	3920      	subs	r1, #32
 8003108:	295f      	cmp	r1, #95	; 0x5f
 800310a:	f100 0008 	add.w	r0, r0, #8
 800310e:	bf94      	ite	ls
 8003110:	460c      	movls	r4, r1
 8003112:	2400      	movhi	r4, #0
 8003114:	f7ff ffec 	bl	80030f0 <HAL_I2C::Setup()>
 8003118:	4804      	ldr	r0, [pc, #16]	; (800312c <Ssd1306::PutChar(int)+0x28>)
 800311a:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 800311e:	4420      	add	r0, r4
 8003120:	2107      	movs	r1, #7
 8003122:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003126:	f001 b91f 	b.w	8004368 <gd32_i2c_write>
 800312a:	bf00      	nop
 800312c:	0800502c 	stmdaeq	r0, {r2, r3, r5, ip, lr}

08003130 <Ssd1306::PutString(char const*)>:
 8003130:	b538      	push	{r3, r4, r5, lr}
 8003132:	4605      	mov	r5, r0
 8003134:	1e4c      	subs	r4, r1, #1
 8003136:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800313a:	b901      	cbnz	r1, 800313e <Ssd1306::PutString(char const*)+0xe>
 800313c:	bd38      	pop	{r3, r4, r5, pc}
 800313e:	4628      	mov	r0, r5
 8003140:	f7ff ffe0 	bl	8003104 <Ssd1306::PutChar(int)>
 8003144:	e7f7      	b.n	8003136 <Ssd1306::PutString(char const*)+0x6>

08003146 <Ssd1306::Text(char const*, unsigned int)>:
 8003146:	b570      	push	{r4, r5, r6, lr}
 8003148:	7903      	ldrb	r3, [r0, #4]
 800314a:	4605      	mov	r5, r0
 800314c:	460c      	mov	r4, r1
 800314e:	4293      	cmp	r3, r2
 8003150:	bf94      	ite	ls
 8003152:	18ce      	addls	r6, r1, r3
 8003154:	188e      	addhi	r6, r1, r2
 8003156:	42b4      	cmp	r4, r6
 8003158:	d100      	bne.n	800315c <Ssd1306::Text(char const*, unsigned int)+0x16>
 800315a:	bd70      	pop	{r4, r5, r6, pc}
 800315c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003160:	4628      	mov	r0, r5
 8003162:	f7ff ffcf 	bl	8003104 <Ssd1306::PutChar(int)>
 8003166:	e7f6      	b.n	8003156 <Ssd1306::Text(char const*, unsigned int)+0x10>

08003168 <Ssd1306::InitMembers()>:
 8003168:	7c03      	ldrb	r3, [r0, #16]
 800316a:	b14b      	cbz	r3, 8003180 <Ssd1306::InitMembers()+0x18>
 800316c:	3b01      	subs	r3, #1
 800316e:	2b01      	cmp	r3, #1
 8003170:	d909      	bls.n	8003186 <Ssd1306::InitMembers()+0x1e>
 8003172:	2308      	movs	r3, #8
 8003174:	2204      	movs	r2, #4
 8003176:	2115      	movs	r1, #21
 8003178:	7101      	strb	r1, [r0, #4]
 800317a:	7143      	strb	r3, [r0, #5]
 800317c:	6142      	str	r2, [r0, #20]
 800317e:	4770      	bx	lr
 8003180:	2308      	movs	r3, #8
 8003182:	461a      	mov	r2, r3
 8003184:	e7f7      	b.n	8003176 <Ssd1306::InitMembers()+0xe>
 8003186:	2304      	movs	r3, #4
 8003188:	e7fb      	b.n	8003182 <Ssd1306::InitMembers()+0x1a>
	...

0800318c <Ssd1306::Ssd1306(TOledPanel)>:
 800318c:	4a08      	ldr	r2, [pc, #32]	; (80031b0 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 800318e:	6002      	str	r2, [r0, #0]
 8003190:	227f      	movs	r2, #127	; 0x7f
 8003192:	b508      	push	{r3, lr}
 8003194:	80c2      	strh	r2, [r0, #6]
 8003196:	223c      	movs	r2, #60	; 0x3c
 8003198:	7202      	strb	r2, [r0, #8]
 800319a:	4a06      	ldr	r2, [pc, #24]	; (80031b4 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 800319c:	60c2      	str	r2, [r0, #12]
 800319e:	2200      	movs	r2, #0
 80031a0:	7442      	strb	r2, [r0, #17]
 80031a2:	4a05      	ldr	r2, [pc, #20]	; (80031b8 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 80031a4:	7401      	strb	r1, [r0, #16]
 80031a6:	6010      	str	r0, [r2, #0]
 80031a8:	f7ff ffde 	bl	8003168 <Ssd1306::InitMembers()>
 80031ac:	bd08      	pop	{r3, pc}
 80031ae:	bf00      	nop
 80031b0:	08005304 	stmdaeq	r0, {r2, r8, r9, ip, lr}
 80031b4:	00061a80 	andeq	r1, r6, r0, lsl #21
 80031b8:	20001800 	andcs	r1, r0, r0, lsl #16

080031bc <Ssd1306::SendCommand(unsigned char)>:
 80031bc:	b507      	push	{r0, r1, r2, lr}
 80031be:	2300      	movs	r3, #0
 80031c0:	3008      	adds	r0, #8
 80031c2:	f88d 3004 	strb.w	r3, [sp, #4]
 80031c6:	f88d 1005 	strb.w	r1, [sp, #5]
 80031ca:	f7ff ff91 	bl	80030f0 <HAL_I2C::Setup()>
 80031ce:	2102      	movs	r1, #2
 80031d0:	a801      	add	r0, sp, #4
 80031d2:	f001 f8c9 	bl	8004368 <gd32_i2c_write>
 80031d6:	b003      	add	sp, #12
 80031d8:	f85d fb04 	ldr.w	pc, [sp], #4

080031dc <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 80031dc:	2914      	cmp	r1, #20
 80031de:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80031e0:	4615      	mov	r5, r2
 80031e2:	d81d      	bhi.n	8003220 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80031e4:	7943      	ldrb	r3, [r0, #5]
 80031e6:	4293      	cmp	r3, r2
 80031e8:	d91a      	bls.n	8003220 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80031ea:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80031ee:	7c43      	ldrb	r3, [r0, #17]
 80031f0:	004c      	lsls	r4, r1, #1
 80031f2:	b2e4      	uxtb	r4, r4
 80031f4:	b10b      	cbz	r3, 80031fa <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x1e>
 80031f6:	3404      	adds	r4, #4
 80031f8:	b2e4      	uxtb	r4, r4
 80031fa:	f004 010e 	and.w	r1, r4, #14
 80031fe:	9001      	str	r0, [sp, #4]
 8003200:	f7ff ffdc 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 8003204:	0921      	lsrs	r1, r4, #4
 8003206:	9801      	ldr	r0, [sp, #4]
 8003208:	f041 0110 	orr.w	r1, r1, #16
 800320c:	f7ff ffd6 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 8003210:	9801      	ldr	r0, [sp, #4]
 8003212:	f045 01b0 	orr.w	r1, r5, #176	; 0xb0
 8003216:	b003      	add	sp, #12
 8003218:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800321c:	f7ff bfce 	b.w	80031bc <Ssd1306::SendCommand(unsigned char)>
 8003220:	b003      	add	sp, #12
 8003222:	bd30      	pop	{r4, r5, pc}

08003224 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8003224:	b5e0      	push	{r5, r6, r7, lr}
 8003226:	461f      	mov	r7, r3
 8003228:	7943      	ldrb	r3, [r0, #5]
 800322a:	428b      	cmp	r3, r1
 800322c:	4605      	mov	r5, r0
 800322e:	4616      	mov	r6, r2
 8003230:	d30b      	bcc.n	800324a <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 8003232:	1e4a      	subs	r2, r1, #1
 8003234:	b2d2      	uxtb	r2, r2
 8003236:	2100      	movs	r1, #0
 8003238:	f7ff ffd0 	bl	80031dc <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 800323c:	463a      	mov	r2, r7
 800323e:	4631      	mov	r1, r6
 8003240:	4628      	mov	r0, r5
 8003242:	e8bd 40e0 	ldmia.w	sp!, {r5, r6, r7, lr}
 8003246:	f7ff bf7e 	b.w	8003146 <Ssd1306::Text(char const*, unsigned int)>
 800324a:	bde0      	pop	{r5, r6, r7, pc}

0800324c <Ssd1306::ClearLine(unsigned char)>:
 800324c:	b513      	push	{r0, r1, r4, lr}
 800324e:	7943      	ldrb	r3, [r0, #5]
 8003250:	428b      	cmp	r3, r1
 8003252:	4604      	mov	r4, r0
 8003254:	d315      	bcc.n	8003282 <Ssd1306::ClearLine(unsigned char)+0x36>
 8003256:	1e4a      	subs	r2, r1, #1
 8003258:	b2d2      	uxtb	r2, r2
 800325a:	2100      	movs	r1, #0
 800325c:	9201      	str	r2, [sp, #4]
 800325e:	f7ff ffbd 	bl	80031dc <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003262:	f104 0008 	add.w	r0, r4, #8
 8003266:	f7ff ff43 	bl	80030f0 <HAL_I2C::Setup()>
 800326a:	2181      	movs	r1, #129	; 0x81
 800326c:	4806      	ldr	r0, [pc, #24]	; (8003288 <Ssd1306::ClearLine(unsigned char)+0x3c>)
 800326e:	f001 f87b 	bl	8004368 <gd32_i2c_write>
 8003272:	9a01      	ldr	r2, [sp, #4]
 8003274:	2100      	movs	r1, #0
 8003276:	4620      	mov	r0, r4
 8003278:	b002      	add	sp, #8
 800327a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800327e:	f7ff bfad 	b.w	80031dc <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8003282:	b002      	add	sp, #8
 8003284:	bd10      	pop	{r4, pc}
 8003286:	bf00      	nop
 8003288:	20001778 	andcs	r1, r0, r8, ror r7

0800328c <Ssd1306::SetSleep(bool)>:
 800328c:	b111      	cbz	r1, 8003294 <Ssd1306::SetSleep(bool)+0x8>
 800328e:	21ae      	movs	r1, #174	; 0xae
 8003290:	f7ff bf94 	b.w	80031bc <Ssd1306::SendCommand(unsigned char)>
 8003294:	21af      	movs	r1, #175	; 0xaf
 8003296:	e7fb      	b.n	8003290 <Ssd1306::SetSleep(bool)+0x4>

08003298 <Ssd1306::SetContrast(unsigned char)>:
 8003298:	b538      	push	{r3, r4, r5, lr}
 800329a:	4604      	mov	r4, r0
 800329c:	460d      	mov	r5, r1
 800329e:	7181      	strb	r1, [r0, #6]
 80032a0:	2181      	movs	r1, #129	; 0x81
 80032a2:	f7ff ff8b 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 80032a6:	4629      	mov	r1, r5
 80032a8:	4620      	mov	r0, r4
 80032aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80032ae:	f7ff bf85 	b.w	80031bc <Ssd1306::SendCommand(unsigned char)>

080032b2 <Ssd1306::SetFlipVertically(bool)>:
 80032b2:	b510      	push	{r4, lr}
 80032b4:	4604      	mov	r4, r0
 80032b6:	71c1      	strb	r1, [r0, #7]
 80032b8:	b141      	cbz	r1, 80032cc <Ssd1306::SetFlipVertically(bool)+0x1a>
 80032ba:	21c0      	movs	r1, #192	; 0xc0
 80032bc:	f7ff ff7e 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 80032c0:	21a0      	movs	r1, #160	; 0xa0
 80032c2:	4620      	mov	r0, r4
 80032c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80032c8:	f7ff bf78 	b.w	80031bc <Ssd1306::SendCommand(unsigned char)>
 80032cc:	21c8      	movs	r1, #200	; 0xc8
 80032ce:	f7ff ff75 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 80032d2:	21a1      	movs	r1, #161	; 0xa1
 80032d4:	e7f5      	b.n	80032c2 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

080032d8 <Ssd1306::CheckSH1106()>:
 80032d8:	b530      	push	{r4, r5, lr}
 80032da:	2100      	movs	r1, #0
 80032dc:	b087      	sub	sp, #28
 80032de:	4604      	mov	r4, r0
 80032e0:	f7ff ff6c 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 80032e4:	2190      	movs	r1, #144	; 0x90
 80032e6:	4620      	mov	r0, r4
 80032e8:	f7ff ff68 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 80032ec:	21b0      	movs	r1, #176	; 0xb0
 80032ee:	4620      	mov	r0, r4
 80032f0:	f7ff ff64 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 80032f4:	4b22      	ldr	r3, [pc, #136]	; (8003380 <Ssd1306::CheckSH1106()+0xa8>)
 80032f6:	f104 0508 	add.w	r5, r4, #8
 80032fa:	6818      	ldr	r0, [r3, #0]
 80032fc:	9002      	str	r0, [sp, #8]
 80032fe:	791b      	ldrb	r3, [r3, #4]
 8003300:	f88d 300c 	strb.w	r3, [sp, #12]
 8003304:	4628      	mov	r0, r5
 8003306:	f7ff fef3 	bl	80030f0 <HAL_I2C::Setup()>
 800330a:	2105      	movs	r1, #5
 800330c:	a802      	add	r0, sp, #8
 800330e:	f001 f82b 	bl	8004368 <gd32_i2c_write>
 8003312:	2100      	movs	r1, #0
 8003314:	4620      	mov	r0, r4
 8003316:	f7ff ff51 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 800331a:	2190      	movs	r1, #144	; 0x90
 800331c:	4620      	mov	r0, r4
 800331e:	f7ff ff4d 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 8003322:	21b0      	movs	r1, #176	; 0xb0
 8003324:	4620      	mov	r0, r4
 8003326:	f7ff ff49 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 800332a:	2300      	movs	r3, #0
 800332c:	9304      	str	r3, [sp, #16]
 800332e:	f88d 3014 	strb.w	r3, [sp, #20]
 8003332:	4628      	mov	r0, r5
 8003334:	2340      	movs	r3, #64	; 0x40
 8003336:	f88d 3007 	strb.w	r3, [sp, #7]
 800333a:	f7ff fed9 	bl	80030f0 <HAL_I2C::Setup()>
 800333e:	2101      	movs	r1, #1
 8003340:	f10d 0007 	add.w	r0, sp, #7
 8003344:	f001 f810 	bl	8004368 <gd32_i2c_write>
 8003348:	4628      	mov	r0, r5
 800334a:	f7ff fed1 	bl	80030f0 <HAL_I2C::Setup()>
 800334e:	2105      	movs	r1, #5
 8003350:	a804      	add	r0, sp, #16
 8003352:	f001 f86f 	bl	8004434 <gd32_i2c_read>
 8003356:	aa02      	add	r2, sp, #8
 8003358:	a904      	add	r1, sp, #16
 800335a:	2004      	movs	r0, #4
 800335c:	3801      	subs	r0, #1
 800335e:	d201      	bcs.n	8003364 <Ssd1306::CheckSH1106()+0x8c>
 8003360:	2300      	movs	r3, #0
 8003362:	e006      	b.n	8003372 <Ssd1306::CheckSH1106()+0x9a>
 8003364:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8003368:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 800336c:	42ab      	cmp	r3, r5
 800336e:	d0f5      	beq.n	800335c <Ssd1306::CheckSH1106()+0x84>
 8003370:	1b5b      	subs	r3, r3, r5
 8003372:	fab3 f383 	clz	r3, r3
 8003376:	095b      	lsrs	r3, r3, #5
 8003378:	7463      	strb	r3, [r4, #17]
 800337a:	b007      	add	sp, #28
 800337c:	bd30      	pop	{r4, r5, pc}
 800337e:	bf00      	nop
 8003380:	08005026 	stmdaeq	r0, {r1, r2, r5, ip, lr}

08003384 <Ssd1306::Cls()>:
 8003384:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003388:	7c45      	ldrb	r5, [r0, #17]
 800338a:	00ad      	lsls	r5, r5, #2
 800338c:	b2ed      	uxtb	r5, r5
 800338e:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8003392:	4604      	mov	r4, r0
 8003394:	2600      	movs	r6, #0
 8003396:	f045 0810 	orr.w	r8, r5, #16
 800339a:	b2ff      	uxtb	r7, r7
 800339c:	6963      	ldr	r3, [r4, #20]
 800339e:	42b3      	cmp	r3, r6
 80033a0:	4629      	mov	r1, r5
 80033a2:	4620      	mov	r0, r4
 80033a4:	d80b      	bhi.n	80033be <Ssd1306::Cls()+0x3a>
 80033a6:	f7ff ff09 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 80033aa:	4641      	mov	r1, r8
 80033ac:	4620      	mov	r0, r4
 80033ae:	f7ff ff05 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 80033b2:	4620      	mov	r0, r4
 80033b4:	21b0      	movs	r1, #176	; 0xb0
 80033b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80033ba:	f7ff beff 	b.w	80031bc <Ssd1306::SendCommand(unsigned char)>
 80033be:	f7ff fefd 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 80033c2:	4641      	mov	r1, r8
 80033c4:	4620      	mov	r0, r4
 80033c6:	f7ff fef9 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 80033ca:	f066 014f 	orn	r1, r6, #79	; 0x4f
 80033ce:	b2c9      	uxtb	r1, r1
 80033d0:	4620      	mov	r0, r4
 80033d2:	f7ff fef3 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 80033d6:	7c23      	ldrb	r3, [r4, #16]
 80033d8:	b123      	cbz	r3, 80033e4 <Ssd1306::Cls()+0x60>
 80033da:	3b01      	subs	r3, #1
 80033dc:	2b01      	cmp	r3, #1
 80033de:	d901      	bls.n	80033e4 <Ssd1306::Cls()+0x60>
 80033e0:	3601      	adds	r6, #1
 80033e2:	e7db      	b.n	800339c <Ssd1306::Cls()+0x18>
 80033e4:	f104 0008 	add.w	r0, r4, #8
 80033e8:	f7ff fe82 	bl	80030f0 <HAL_I2C::Setup()>
 80033ec:	4639      	mov	r1, r7
 80033ee:	4802      	ldr	r0, [pc, #8]	; (80033f8 <Ssd1306::Cls()+0x74>)
 80033f0:	f000 ffba 	bl	8004368 <gd32_i2c_write>
 80033f4:	e7f4      	b.n	80033e0 <Ssd1306::Cls()+0x5c>
 80033f6:	bf00      	nop
 80033f8:	20001778 	andcs	r1, r0, r8, ror r7

080033fc <Ssd1306::Start()>:
 80033fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80033fe:	7a04      	ldrb	r4, [r0, #8]
 8003400:	68c6      	ldr	r6, [r0, #12]
 8003402:	4605      	mov	r5, r0
 8003404:	4620      	mov	r0, r4
 8003406:	f000 ffa9 	bl	800435c <gd32_i2c_set_address>
 800340a:	4630      	mov	r0, r6
 800340c:	f000 ff9e 	bl	800434c <gd32_i2c_set_baudrate>
 8003410:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8003414:	2b07      	cmp	r3, #7
 8003416:	d902      	bls.n	800341e <Ssd1306::Start()+0x22>
 8003418:	3c50      	subs	r4, #80	; 0x50
 800341a:	2c0f      	cmp	r4, #15
 800341c:	d80f      	bhi.n	800343e <Ssd1306::Start()+0x42>
 800341e:	2101      	movs	r1, #1
 8003420:	f10d 0007 	add.w	r0, sp, #7
 8003424:	f001 f806 	bl	8004434 <gd32_i2c_read>
 8003428:	fab0 f480 	clz	r4, r0
 800342c:	0964      	lsrs	r4, r4, #5
 800342e:	b35c      	cbz	r4, 8003488 <Ssd1306::Start()+0x8c>
 8003430:	7c2e      	ldrb	r6, [r5, #16]
 8003432:	b14e      	cbz	r6, 8003448 <Ssd1306::Start()+0x4c>
 8003434:	3e01      	subs	r6, #1
 8003436:	2e01      	cmp	r6, #1
 8003438:	d929      	bls.n	800348e <Ssd1306::Start()+0x92>
 800343a:	2400      	movs	r4, #0
 800343c:	e024      	b.n	8003488 <Ssd1306::Start()+0x8c>
 800343e:	2100      	movs	r1, #0
 8003440:	4608      	mov	r0, r1
 8003442:	f000 ff91 	bl	8004368 <gd32_i2c_write>
 8003446:	e7ef      	b.n	8003428 <Ssd1306::Start()+0x2c>
 8003448:	4f16      	ldr	r7, [pc, #88]	; (80034a4 <Ssd1306::Start()+0xa8>)
 800344a:	f817 1b01 	ldrb.w	r1, [r7], #1
 800344e:	4628      	mov	r0, r5
 8003450:	3601      	adds	r6, #1
 8003452:	f7ff feb3 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 8003456:	2e18      	cmp	r6, #24
 8003458:	d1f7      	bne.n	800344a <Ssd1306::Start()+0x4e>
 800345a:	4a13      	ldr	r2, [pc, #76]	; (80034a8 <Ssd1306::Start()+0xac>)
 800345c:	2300      	movs	r3, #0
 800345e:	4611      	mov	r1, r2
 8003460:	4618      	mov	r0, r3
 8003462:	3301      	adds	r3, #1
 8003464:	2b86      	cmp	r3, #134	; 0x86
 8003466:	f802 0b01 	strb.w	r0, [r2], #1
 800346a:	d1fa      	bne.n	8003462 <Ssd1306::Start()+0x66>
 800346c:	2340      	movs	r3, #64	; 0x40
 800346e:	700b      	strb	r3, [r1, #0]
 8003470:	4628      	mov	r0, r5
 8003472:	f7ff ff31 	bl	80032d8 <Ssd1306::CheckSH1106()>
 8003476:	4628      	mov	r0, r5
 8003478:	f7ff ff84 	bl	8003384 <Ssd1306::Cls()>
 800347c:	21af      	movs	r1, #175	; 0xaf
 800347e:	4628      	mov	r0, r5
 8003480:	f7ff fe9c 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 8003484:	2301      	movs	r3, #1
 8003486:	71eb      	strb	r3, [r5, #7]
 8003488:	4620      	mov	r0, r4
 800348a:	b003      	add	sp, #12
 800348c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800348e:	4f07      	ldr	r7, [pc, #28]	; (80034ac <Ssd1306::Start()+0xb0>)
 8003490:	2600      	movs	r6, #0
 8003492:	f817 1b01 	ldrb.w	r1, [r7], #1
 8003496:	4628      	mov	r0, r5
 8003498:	3601      	adds	r6, #1
 800349a:	f7ff fe8f 	bl	80031bc <Ssd1306::SendCommand(unsigned char)>
 800349e:	2e18      	cmp	r6, #24
 80034a0:	d1f7      	bne.n	8003492 <Ssd1306::Start()+0x96>
 80034a2:	e7da      	b.n	800345a <Ssd1306::Start()+0x5e>
 80034a4:	080052e4 	stmdaeq	r0, {r2, r5, r6, r7, r9, ip, lr}
 80034a8:	20001778 	andcs	r1, r0, r8, ror r7
 80034ac:	080052cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, ip, lr}

080034b0 <display::timeout::gpio_init()>:
 80034b0:	4770      	bx	lr

080034b2 <console_putc>:
 80034b2:	f000 b9b7 	b.w	8003824 <uart0_putc>

080034b6 <console_puts>:
 80034b6:	f000 b9d5 	b.w	8003864 <uart0_puts>
	...

080034bc <LedBlink::LedBlink()>:
 80034bc:	b538      	push	{r3, r4, r5, lr}
 80034be:	2205      	movs	r2, #5
 80034c0:	2300      	movs	r3, #0
 80034c2:	e9c0 3200 	strd	r3, r2, [r0]
 80034c6:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80034ca:	e9c0 2303 	strd	r2, r3, [r0, #12]
 80034ce:	6083      	str	r3, [r0, #8]
 80034d0:	6143      	str	r3, [r0, #20]
 80034d2:	4b09      	ldr	r3, [pc, #36]	; (80034f8 <LedBlink::LedBlink()+0x3c>)
 80034d4:	4d09      	ldr	r5, [pc, #36]	; (80034fc <LedBlink::LedBlink()+0x40>)
 80034d6:	6018      	str	r0, [r3, #0]
 80034d8:	4604      	mov	r4, r0
 80034da:	f240 6004 	movw	r0, #1540	; 0x604
 80034de:	f000 fc33 	bl	8003d48 <rcu_periph_clock_enable>
 80034e2:	4628      	mov	r0, r5
 80034e4:	2301      	movs	r3, #1
 80034e6:	2203      	movs	r2, #3
 80034e8:	2110      	movs	r1, #16
 80034ea:	f000 fb95 	bl	8003c18 <gpio_init>
 80034ee:	2301      	movs	r3, #1
 80034f0:	616b      	str	r3, [r5, #20]
 80034f2:	4620      	mov	r0, r4
 80034f4:	bd38      	pop	{r3, r4, r5, pc}
 80034f6:	bf00      	nop
 80034f8:	20001804 	andcs	r1, r0, r4, lsl #16
 80034fc:	40011000 	andmi	r1, r1, r0

08003500 <Hardware::Hardware()>:
 8003500:	b530      	push	{r4, r5, lr}
 8003502:	4b25      	ldr	r3, [pc, #148]	; (8003598 <Hardware::Hardware()+0x98>)
 8003504:	2400      	movs	r4, #0
 8003506:	b091      	sub	sp, #68	; 0x44
 8003508:	7004      	strb	r4, [r0, #0]
 800350a:	6018      	str	r0, [r3, #0]
 800350c:	4605      	mov	r5, r0
 800350e:	f7fc fe0f 	bl	8000130 <console_init>
 8003512:	f000 f9b7 	bl	8003884 <systick_config>
 8003516:	f001 f91d 	bl	8004754 <udelay_init()>
 800351a:	f001 f919 	bl	8004750 <micros_init()>
 800351e:	f240 701b 	movw	r0, #1819	; 0x71b
 8003522:	f000 fc11 	bl	8003d48 <rcu_periph_clock_enable>
 8003526:	f240 701c 	movw	r0, #1820	; 0x71c
 800352a:	f000 fc0d 	bl	8003d48 <rcu_periph_clock_enable>
 800352e:	f000 fc03 	bl	8003d38 <pmu_backup_write_enable>
 8003532:	4621      	mov	r1, r4
 8003534:	2002      	movs	r0, #2
 8003536:	f000 fa59 	bl	80039ec <bkp_write_data>
 800353a:	f240 7004 	movw	r0, #1796	; 0x704
 800353e:	f000 fc03 	bl	8003d48 <rcu_periph_clock_enable>
 8003542:	4816      	ldr	r0, [pc, #88]	; (800359c <Hardware::Hardware()+0x9c>)
 8003544:	f000 fcc4 	bl	8003ed0 <timer_deinit>
 8003548:	2377      	movs	r3, #119	; 0x77
 800354a:	a903      	add	r1, sp, #12
 800354c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003550:	4812      	ldr	r0, [pc, #72]	; (800359c <Hardware::Hardware()+0x9c>)
 8003552:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003556:	9305      	str	r3, [sp, #20]
 8003558:	f000 fd1c 	bl	8003f94 <timer_init>
 800355c:	480f      	ldr	r0, [pc, #60]	; (800359c <Hardware::Hardware()+0x9c>)
 800355e:	f000 fd57 	bl	8004010 <timer_enable>
 8003562:	f000 fe65 	bl	8004230 <gd32_adc_init()>
 8003566:	2211      	movs	r2, #17
 8003568:	230b      	movs	r3, #11
 800356a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800356e:	a807      	add	r0, sp, #28
 8003570:	237a      	movs	r3, #122	; 0x7a
 8003572:	930c      	str	r3, [sp, #48]	; 0x30
 8003574:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003578:	9407      	str	r4, [sp, #28]
 800357a:	940f      	str	r4, [sp, #60]	; 0x3c
 800357c:	f000 f8de 	bl	800373c <mktime>
 8003580:	4621      	mov	r1, r4
 8003582:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8003586:	a801      	add	r0, sp, #4
 8003588:	f000 f924 	bl	80037d4 <settimeofday>
 800358c:	f000 feaa 	bl	80042e4 <gd32_i2c_begin>
 8003590:	4628      	mov	r0, r5
 8003592:	b011      	add	sp, #68	; 0x44
 8003594:	bd30      	pop	{r4, r5, pc}
 8003596:	bf00      	nop
 8003598:	20001808 	andcs	r1, r0, r8, lsl #16
 800359c:	40001000 	andmi	r1, r0, r0

080035a0 <operator delete(void*)>:
 80035a0:	f000 b84c 	b.w	800363c <free>

080035a4 <operator new(unsigned int)>:
 80035a4:	f000 b800 	b.w	80035a8 <malloc>

080035a8 <malloc>:
 80035a8:	b538      	push	{r3, r4, r5, lr}
 80035aa:	4601      	mov	r1, r0
 80035ac:	4604      	mov	r4, r0
 80035ae:	481c      	ldr	r0, [pc, #112]	; (8003620 <malloc+0x78>)
 80035b0:	f7fd fa72 	bl	8000a98 <printf>
 80035b4:	b17c      	cbz	r4, 80035d6 <malloc+0x2e>
 80035b6:	4b1b      	ldr	r3, [pc, #108]	; (8003624 <malloc+0x7c>)
 80035b8:	6818      	ldr	r0, [r3, #0]
 80035ba:	b978      	cbnz	r0, 80035dc <malloc+0x34>
 80035bc:	4a1a      	ldr	r2, [pc, #104]	; (8003628 <malloc+0x80>)
 80035be:	481b      	ldr	r0, [pc, #108]	; (800362c <malloc+0x84>)
 80035c0:	6811      	ldr	r1, [r2, #0]
 80035c2:	f104 031b 	add.w	r3, r4, #27
 80035c6:	f023 030f 	bic.w	r3, r3, #15
 80035ca:	440b      	add	r3, r1
 80035cc:	4283      	cmp	r3, r0
 80035ce:	d921      	bls.n	8003614 <malloc+0x6c>
 80035d0:	4817      	ldr	r0, [pc, #92]	; (8003630 <malloc+0x88>)
 80035d2:	f7fd fa61 	bl	8000a98 <printf>
 80035d6:	2500      	movs	r5, #0
 80035d8:	4628      	mov	r0, r5
 80035da:	bd38      	pop	{r3, r4, r5, pc}
 80035dc:	4284      	cmp	r4, r0
 80035de:	d80a      	bhi.n	80035f6 <malloc+0x4e>
 80035e0:	685a      	ldr	r2, [r3, #4]
 80035e2:	6899      	ldr	r1, [r3, #8]
 80035e4:	3201      	adds	r2, #1
 80035e6:	428a      	cmp	r2, r1
 80035e8:	605a      	str	r2, [r3, #4]
 80035ea:	d900      	bls.n	80035ee <malloc+0x46>
 80035ec:	609a      	str	r2, [r3, #8]
 80035ee:	68d9      	ldr	r1, [r3, #12]
 80035f0:	b919      	cbnz	r1, 80035fa <malloc+0x52>
 80035f2:	4604      	mov	r4, r0
 80035f4:	e7e2      	b.n	80035bc <malloc+0x14>
 80035f6:	3310      	adds	r3, #16
 80035f8:	e7de      	b.n	80035b8 <malloc+0x10>
 80035fa:	688a      	ldr	r2, [r1, #8]
 80035fc:	60da      	str	r2, [r3, #12]
 80035fe:	4604      	mov	r4, r0
 8003600:	2300      	movs	r3, #0
 8003602:	f101 050c 	add.w	r5, r1, #12
 8003606:	608b      	str	r3, [r1, #8]
 8003608:	4622      	mov	r2, r4
 800360a:	462b      	mov	r3, r5
 800360c:	4809      	ldr	r0, [pc, #36]	; (8003634 <malloc+0x8c>)
 800360e:	f7fd fa43 	bl	8000a98 <printf>
 8003612:	e7e1      	b.n	80035d8 <malloc+0x30>
 8003614:	6013      	str	r3, [r2, #0]
 8003616:	4b08      	ldr	r3, [pc, #32]	; (8003638 <malloc+0x90>)
 8003618:	e9c1 3400 	strd	r3, r4, [r1]
 800361c:	e7f0      	b.n	8003600 <malloc+0x58>
 800361e:	bf00      	nop
 8003620:	08005348 	stmdaeq	r0, {r3, r6, r8, r9, ip, lr}
 8003624:	20000018 	andcs	r0, r0, r8, lsl r0
 8003628:	20000014 	andcs	r0, r0, r4, lsl r0
 800362c:	2000b000 	andcs	fp, r0, r0
 8003630:	08005354 	stmdaeq	r0, {r2, r4, r6, r8, r9, ip, lr}
 8003634:	08005370 	stmdaeq	r0, {r4, r5, r6, r8, r9, ip, lr}
 8003638:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

0800363c <free>:
 800363c:	b538      	push	{r3, r4, r5, lr}
 800363e:	4604      	mov	r4, r0
 8003640:	b1c8      	cbz	r0, 8003676 <free+0x3a>
 8003642:	f1a0 050c 	sub.w	r5, r0, #12
 8003646:	4602      	mov	r2, r0
 8003648:	4629      	mov	r1, r5
 800364a:	480c      	ldr	r0, [pc, #48]	; (800367c <free+0x40>)
 800364c:	f7fd fa24 	bl	8000a98 <printf>
 8003650:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8003654:	4b0a      	ldr	r3, [pc, #40]	; (8003680 <free+0x44>)
 8003656:	429a      	cmp	r2, r3
 8003658:	d10d      	bne.n	8003676 <free+0x3a>
 800365a:	4b0a      	ldr	r3, [pc, #40]	; (8003684 <free+0x48>)
 800365c:	681a      	ldr	r2, [r3, #0]
 800365e:	b152      	cbz	r2, 8003676 <free+0x3a>
 8003660:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8003664:	4291      	cmp	r1, r2
 8003666:	d107      	bne.n	8003678 <free+0x3c>
 8003668:	68da      	ldr	r2, [r3, #12]
 800366a:	f844 2c04 	str.w	r2, [r4, #-4]
 800366e:	685a      	ldr	r2, [r3, #4]
 8003670:	60dd      	str	r5, [r3, #12]
 8003672:	3a01      	subs	r2, #1
 8003674:	605a      	str	r2, [r3, #4]
 8003676:	bd38      	pop	{r3, r4, r5, pc}
 8003678:	3310      	adds	r3, #16
 800367a:	e7ef      	b.n	800365c <free+0x20>
 800367c:	0800539b 	stmdaeq	r0, {r0, r1, r3, r4, r7, r8, r9, ip, lr}
 8003680:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8003684:	20000018 	andcs	r0, r0, r8, lsl r0

08003688 <memcpy>:
 8003688:	b510      	push	{r4, lr}
 800368a:	1e43      	subs	r3, r0, #1
 800368c:	440a      	add	r2, r1
 800368e:	4291      	cmp	r1, r2
 8003690:	d100      	bne.n	8003694 <memcpy+0xc>
 8003692:	bd10      	pop	{r4, pc}
 8003694:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003698:	f803 4f01 	strb.w	r4, [r3, #1]!
 800369c:	e7f7      	b.n	800368e <memcpy+0x6>

0800369e <memset>:
 800369e:	b5f0      	push	{r4, r5, r6, r7, lr}
 80036a0:	b1c2      	cbz	r2, 80036d4 <memset+0x36>
 80036a2:	b2c9      	uxtb	r1, r1
 80036a4:	4603      	mov	r3, r0
 80036a6:	075c      	lsls	r4, r3, #29
 80036a8:	d110      	bne.n	80036cc <memset+0x2e>
 80036aa:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 80036ae:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 80036b2:	f022 0407 	bic.w	r4, r2, #7
 80036b6:	463d      	mov	r5, r7
 80036b8:	441c      	add	r4, r3
 80036ba:	461e      	mov	r6, r3
 80036bc:	42a6      	cmp	r6, r4
 80036be:	d10a      	bne.n	80036d6 <memset+0x38>
 80036c0:	441a      	add	r2, r3
 80036c2:	4294      	cmp	r4, r2
 80036c4:	d006      	beq.n	80036d4 <memset+0x36>
 80036c6:	f804 1b01 	strb.w	r1, [r4], #1
 80036ca:	e7fa      	b.n	80036c2 <memset+0x24>
 80036cc:	3a01      	subs	r2, #1
 80036ce:	f803 1b01 	strb.w	r1, [r3], #1
 80036d2:	d1e8      	bne.n	80036a6 <memset+0x8>
 80036d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80036d6:	f846 7b08 	str.w	r7, [r6], #8
 80036da:	f846 5c04 	str.w	r5, [r6, #-4]
 80036de:	e7ed      	b.n	80036bc <memset+0x1e>

080036e0 <puts>:
 80036e0:	b508      	push	{r3, lr}
 80036e2:	f7ff fee8 	bl	80034b6 <console_puts>
 80036e6:	200a      	movs	r0, #10
 80036e8:	f7ff fee3 	bl	80034b2 <console_putc>
 80036ec:	2001      	movs	r0, #1
 80036ee:	bd08      	pop	{r3, pc}

080036f0 <isleapyear>:
 80036f0:	2264      	movs	r2, #100	; 0x64
 80036f2:	fb90 f3f2 	sdiv	r3, r0, r2
 80036f6:	fb02 0313 	mls	r3, r2, r3, r0
 80036fa:	b94b      	cbnz	r3, 8003710 <isleapyear+0x20>
 80036fc:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8003700:	fb90 f2f3 	sdiv	r2, r0, r3
 8003704:	fb03 0012 	mls	r0, r3, r2, r0
 8003708:	fab0 f080 	clz	r0, r0
 800370c:	0940      	lsrs	r0, r0, #5
 800370e:	4770      	bx	lr
 8003710:	f010 0f03 	tst.w	r0, #3
 8003714:	bf0c      	ite	eq
 8003716:	2001      	moveq	r0, #1
 8003718:	2000      	movne	r0, #0
 800371a:	4770      	bx	lr

0800371c <getdaysofmonth>:
 800371c:	b510      	push	{r4, lr}
 800371e:	4604      	mov	r4, r0
 8003720:	2c01      	cmp	r4, #1
 8003722:	4608      	mov	r0, r1
 8003724:	d102      	bne.n	800372c <getdaysofmonth+0x10>
 8003726:	f7ff ffe3 	bl	80036f0 <isleapyear>
 800372a:	b918      	cbnz	r0, 8003734 <getdaysofmonth+0x18>
 800372c:	4b02      	ldr	r3, [pc, #8]	; (8003738 <getdaysofmonth+0x1c>)
 800372e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8003732:	bd10      	pop	{r4, pc}
 8003734:	201d      	movs	r0, #29
 8003736:	e7fc      	b.n	8003732 <getdaysofmonth+0x16>
 8003738:	080053c4 	stmdaeq	r0, {r2, r6, r7, r8, r9, ip, lr}

0800373c <mktime>:
 800373c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003740:	4604      	mov	r4, r0
 8003742:	2800      	cmp	r0, #0
 8003744:	d043      	beq.n	80037ce <mktime+0x92>
 8003746:	6941      	ldr	r1, [r0, #20]
 8003748:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 800374c:	2b45      	cmp	r3, #69	; 0x45
 800374e:	d83e      	bhi.n	80037ce <mktime+0x92>
 8003750:	2600      	movs	r6, #0
 8003752:	f240 75b2 	movw	r5, #1970	; 0x7b2
 8003756:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 800375a:	f240 186d 	movw	r8, #365	; 0x16d
 800375e:	42af      	cmp	r7, r5
 8003760:	da24      	bge.n	80037ac <mktime+0x70>
 8003762:	6927      	ldr	r7, [r4, #16]
 8003764:	2f0b      	cmp	r7, #11
 8003766:	d832      	bhi.n	80037ce <mktime+0x92>
 8003768:	2500      	movs	r5, #0
 800376a:	42af      	cmp	r7, r5
 800376c:	d129      	bne.n	80037c2 <mktime+0x86>
 800376e:	68e5      	ldr	r5, [r4, #12]
 8003770:	2d00      	cmp	r5, #0
 8003772:	dd2c      	ble.n	80037ce <mktime+0x92>
 8003774:	4638      	mov	r0, r7
 8003776:	f7ff ffd1 	bl	800371c <getdaysofmonth>
 800377a:	4285      	cmp	r5, r0
 800377c:	dc27      	bgt.n	80037ce <mktime+0x92>
 800377e:	3d01      	subs	r5, #1
 8003780:	2318      	movs	r3, #24
 8003782:	4435      	add	r5, r6
 8003784:	435d      	muls	r5, r3
 8003786:	68a3      	ldr	r3, [r4, #8]
 8003788:	2b17      	cmp	r3, #23
 800378a:	d820      	bhi.n	80037ce <mktime+0x92>
 800378c:	442b      	add	r3, r5
 800378e:	213c      	movs	r1, #60	; 0x3c
 8003790:	fb01 f203 	mul.w	r2, r1, r3
 8003794:	6863      	ldr	r3, [r4, #4]
 8003796:	2b3b      	cmp	r3, #59	; 0x3b
 8003798:	d819      	bhi.n	80037ce <mktime+0x92>
 800379a:	6820      	ldr	r0, [r4, #0]
 800379c:	4413      	add	r3, r2
 800379e:	283b      	cmp	r0, #59	; 0x3b
 80037a0:	fb01 f303 	mul.w	r3, r1, r3
 80037a4:	d813      	bhi.n	80037ce <mktime+0x92>
 80037a6:	4418      	add	r0, r3
 80037a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80037ac:	4628      	mov	r0, r5
 80037ae:	f7ff ff9f 	bl	80036f0 <isleapyear>
 80037b2:	2800      	cmp	r0, #0
 80037b4:	bf14      	ite	ne
 80037b6:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 80037ba:	4643      	moveq	r3, r8
 80037bc:	441e      	add	r6, r3
 80037be:	3501      	adds	r5, #1
 80037c0:	e7cd      	b.n	800375e <mktime+0x22>
 80037c2:	4628      	mov	r0, r5
 80037c4:	f7ff ffaa 	bl	800371c <getdaysofmonth>
 80037c8:	3501      	adds	r5, #1
 80037ca:	4406      	add	r6, r0
 80037cc:	e7cd      	b.n	800376a <mktime+0x2e>
 80037ce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80037d2:	e7e9      	b.n	80037a8 <mktime+0x6c>

080037d4 <settimeofday>:
 80037d4:	4b07      	ldr	r3, [pc, #28]	; (80037f4 <settimeofday+0x20>)
 80037d6:	4908      	ldr	r1, [pc, #32]	; (80037f8 <settimeofday+0x24>)
 80037d8:	681a      	ldr	r2, [r3, #0]
 80037da:	4b08      	ldr	r3, [pc, #32]	; (80037fc <settimeofday+0x28>)
 80037dc:	b510      	push	{r4, lr}
 80037de:	601a      	str	r2, [r3, #0]
 80037e0:	6843      	ldr	r3, [r0, #4]
 80037e2:	6804      	ldr	r4, [r0, #0]
 80037e4:	4806      	ldr	r0, [pc, #24]	; (8003800 <settimeofday+0x2c>)
 80037e6:	17da      	asrs	r2, r3, #31
 80037e8:	fbc4 3200 	smlal	r3, r2, r4, r0
 80037ec:	e9c1 3200 	strd	r3, r2, [r1]
 80037f0:	2000      	movs	r0, #0
 80037f2:	bd10      	pop	{r4, pc}
 80037f4:	2000181c 	andcs	r1, r0, ip, lsl r8
 80037f8:	20001810 	andcs	r1, r0, r0, lsl r8
 80037fc:	20001818 	andcs	r1, r0, r8, lsl r8
 8003800:	000f4240 	andeq	r4, pc, r0, asr #4

08003804 <uart0_init>:
 8003804:	b507      	push	{r0, r1, r2, lr}
 8003806:	2301      	movs	r3, #1
 8003808:	9300      	str	r3, [sp, #0]
 800380a:	4805      	ldr	r0, [pc, #20]	; (8003820 <uart0_init+0x1c>)
 800380c:	2300      	movs	r3, #0
 800380e:	2208      	movs	r2, #8
 8003810:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8003814:	f000 feb2 	bl	800457c <gd32_uart_begin>
 8003818:	b003      	add	sp, #12
 800381a:	f85d fb04 	ldr.w	pc, [sp], #4
 800381e:	bf00      	nop
 8003820:	40013800 	andmi	r3, r1, r0, lsl #16

08003824 <uart0_putc>:
 8003824:	280a      	cmp	r0, #10
 8003826:	b538      	push	{r3, r4, r5, lr}
 8003828:	4604      	mov	r4, r0
 800382a:	d10a      	bne.n	8003842 <uart0_putc+0x1e>
 800382c:	4d0b      	ldr	r5, [pc, #44]	; (800385c <uart0_putc+0x38>)
 800382e:	2107      	movs	r1, #7
 8003830:	4628      	mov	r0, r5
 8003832:	f000 fccf 	bl	80041d4 <usart_flag_get>
 8003836:	2800      	cmp	r0, #0
 8003838:	d0f9      	beq.n	800382e <uart0_putc+0xa>
 800383a:	4b09      	ldr	r3, [pc, #36]	; (8003860 <uart0_putc+0x3c>)
 800383c:	220d      	movs	r2, #13
 800383e:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 8003842:	4d06      	ldr	r5, [pc, #24]	; (800385c <uart0_putc+0x38>)
 8003844:	2107      	movs	r1, #7
 8003846:	4628      	mov	r0, r5
 8003848:	f000 fcc4 	bl	80041d4 <usart_flag_get>
 800384c:	2800      	cmp	r0, #0
 800384e:	d0f9      	beq.n	8003844 <uart0_putc+0x20>
 8003850:	4b03      	ldr	r3, [pc, #12]	; (8003860 <uart0_putc+0x3c>)
 8003852:	b2e4      	uxtb	r4, r4
 8003854:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8003858:	bd38      	pop	{r3, r4, r5, pc}
 800385a:	bf00      	nop
 800385c:	40013800 	andmi	r3, r1, r0, lsl #16
 8003860:	40013000 	andmi	r3, r1, r0

08003864 <uart0_puts>:
 8003864:	b510      	push	{r4, lr}
 8003866:	1e44      	subs	r4, r0, #1
 8003868:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800386c:	b903      	cbnz	r3, 8003870 <uart0_puts+0xc>
 800386e:	bd10      	pop	{r4, pc}
 8003870:	2b0a      	cmp	r3, #10
 8003872:	d102      	bne.n	800387a <uart0_puts+0x16>
 8003874:	200d      	movs	r0, #13
 8003876:	f7ff ffd5 	bl	8003824 <uart0_putc>
 800387a:	7820      	ldrb	r0, [r4, #0]
 800387c:	f7ff ffd2 	bl	8003824 <uart0_putc>
 8003880:	e7f2      	b.n	8003868 <uart0_puts+0x4>
	...

08003884 <systick_config>:
 8003884:	4b0c      	ldr	r3, [pc, #48]	; (80038b8 <systick_config+0x34>)
 8003886:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800388a:	681b      	ldr	r3, [r3, #0]
 800388c:	fbb3 f3f2 	udiv	r3, r3, r2
 8003890:	3b01      	subs	r3, #1
 8003892:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003896:	d20d      	bcs.n	80038b4 <systick_config+0x30>
 8003898:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800389c:	21f0      	movs	r1, #240	; 0xf0
 800389e:	6153      	str	r3, [r2, #20]
 80038a0:	4b06      	ldr	r3, [pc, #24]	; (80038bc <systick_config+0x38>)
 80038a2:	2007      	movs	r0, #7
 80038a4:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80038a8:	2100      	movs	r1, #0
 80038aa:	6191      	str	r1, [r2, #24]
 80038ac:	6110      	str	r0, [r2, #16]
 80038ae:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80038b2:	4770      	bx	lr
 80038b4:	e7fe      	b.n	80038b4 <systick_config+0x30>
 80038b6:	bf00      	nop
 80038b8:	200000e8 	andcs	r0, r0, r8, ror #1
 80038bc:	e000ed00 	and	lr, r0, r0, lsl #26

080038c0 <SysTick_Handler>:
 80038c0:	4a02      	ldr	r2, [pc, #8]	; (80038cc <SysTick_Handler+0xc>)
 80038c2:	6813      	ldr	r3, [r2, #0]
 80038c4:	3301      	adds	r3, #1
 80038c6:	6013      	str	r3, [r2, #0]
 80038c8:	4770      	bx	lr
 80038ca:	bf00      	nop
 80038cc:	2000181c 	andcs	r1, r0, ip, lsl r8

080038d0 <SystemInit>:
 80038d0:	4a43      	ldr	r2, [pc, #268]	; (80039e0 <SystemInit+0x110>)
 80038d2:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 80038d6:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80038da:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80038de:	4b41      	ldr	r3, [pc, #260]	; (80039e4 <SystemInit+0x114>)
 80038e0:	681a      	ldr	r2, [r3, #0]
 80038e2:	f042 0201 	orr.w	r2, r2, #1
 80038e6:	601a      	str	r2, [r3, #0]
 80038e8:	685a      	ldr	r2, [r3, #4]
 80038ea:	b082      	sub	sp, #8
 80038ec:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80038f0:	605a      	str	r2, [r3, #4]
 80038f2:	2200      	movs	r2, #0
 80038f4:	9201      	str	r2, [sp, #4]
 80038f6:	f644 611f 	movw	r1, #19999	; 0x4e1f
 80038fa:	9a01      	ldr	r2, [sp, #4]
 80038fc:	428a      	cmp	r2, r1
 80038fe:	d922      	bls.n	8003946 <SystemInit+0x76>
 8003900:	685a      	ldr	r2, [r3, #4]
 8003902:	f022 0203 	bic.w	r2, r2, #3
 8003906:	605a      	str	r2, [r3, #4]
 8003908:	681a      	ldr	r2, [r3, #0]
 800390a:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 800390e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8003912:	601a      	str	r2, [r3, #0]
 8003914:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 8003918:	609a      	str	r2, [r3, #8]
 800391a:	681a      	ldr	r2, [r3, #0]
 800391c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003920:	601a      	str	r2, [r3, #0]
 8003922:	2200      	movs	r2, #0
 8003924:	605a      	str	r2, [r3, #4]
 8003926:	62da      	str	r2, [r3, #44]	; 0x2c
 8003928:	681a      	ldr	r2, [r3, #0]
 800392a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800392e:	601a      	str	r2, [r3, #0]
 8003930:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003934:	6819      	ldr	r1, [r3, #0]
 8003936:	0388      	lsls	r0, r1, #14
 8003938:	d401      	bmi.n	800393e <SystemInit+0x6e>
 800393a:	3a01      	subs	r2, #1
 800393c:	d1fa      	bne.n	8003934 <SystemInit+0x64>
 800393e:	681a      	ldr	r2, [r3, #0]
 8003940:	0391      	lsls	r1, r2, #14
 8003942:	d404      	bmi.n	800394e <SystemInit+0x7e>
 8003944:	e7fe      	b.n	8003944 <SystemInit+0x74>
 8003946:	9a01      	ldr	r2, [sp, #4]
 8003948:	3201      	adds	r2, #1
 800394a:	9201      	str	r2, [sp, #4]
 800394c:	e7d5      	b.n	80038fa <SystemInit+0x2a>
 800394e:	69da      	ldr	r2, [r3, #28]
 8003950:	4925      	ldr	r1, [pc, #148]	; (80039e8 <SystemInit+0x118>)
 8003952:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003956:	61da      	str	r2, [r3, #28]
 8003958:	680a      	ldr	r2, [r1, #0]
 800395a:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800395e:	600a      	str	r2, [r1, #0]
 8003960:	685a      	ldr	r2, [r3, #4]
 8003962:	605a      	str	r2, [r3, #4]
 8003964:	685a      	ldr	r2, [r3, #4]
 8003966:	605a      	str	r2, [r3, #4]
 8003968:	685a      	ldr	r2, [r3, #4]
 800396a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800396e:	605a      	str	r2, [r3, #4]
 8003970:	685a      	ldr	r2, [r3, #4]
 8003972:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8003976:	605a      	str	r2, [r3, #4]
 8003978:	685a      	ldr	r2, [r3, #4]
 800397a:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 800397e:	605a      	str	r2, [r3, #4]
 8003980:	685a      	ldr	r2, [r3, #4]
 8003982:	f022 4290 	bic.w	r2, r2, #1207959552	; 0x48000000
 8003986:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 800398a:	605a      	str	r2, [r3, #4]
 800398c:	685a      	ldr	r2, [r3, #4]
 800398e:	f042 6203 	orr.w	r2, r2, #137363456	; 0x8300000
 8003992:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003996:	605a      	str	r2, [r3, #4]
 8003998:	681a      	ldr	r2, [r3, #0]
 800399a:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800399e:	601a      	str	r2, [r3, #0]
 80039a0:	681a      	ldr	r2, [r3, #0]
 80039a2:	0192      	lsls	r2, r2, #6
 80039a4:	d5fc      	bpl.n	80039a0 <SystemInit+0xd0>
 80039a6:	680a      	ldr	r2, [r1, #0]
 80039a8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80039ac:	600a      	str	r2, [r1, #0]
 80039ae:	4a0e      	ldr	r2, [pc, #56]	; (80039e8 <SystemInit+0x118>)
 80039b0:	6851      	ldr	r1, [r2, #4]
 80039b2:	03c8      	lsls	r0, r1, #15
 80039b4:	d5fc      	bpl.n	80039b0 <SystemInit+0xe0>
 80039b6:	6811      	ldr	r1, [r2, #0]
 80039b8:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
 80039bc:	6011      	str	r1, [r2, #0]
 80039be:	6851      	ldr	r1, [r2, #4]
 80039c0:	0389      	lsls	r1, r1, #14
 80039c2:	d5fc      	bpl.n	80039be <SystemInit+0xee>
 80039c4:	685a      	ldr	r2, [r3, #4]
 80039c6:	f022 0203 	bic.w	r2, r2, #3
 80039ca:	605a      	str	r2, [r3, #4]
 80039cc:	685a      	ldr	r2, [r3, #4]
 80039ce:	f042 0202 	orr.w	r2, r2, #2
 80039d2:	605a      	str	r2, [r3, #4]
 80039d4:	685a      	ldr	r2, [r3, #4]
 80039d6:	0712      	lsls	r2, r2, #28
 80039d8:	d5fc      	bpl.n	80039d4 <SystemInit+0x104>
 80039da:	b002      	add	sp, #8
 80039dc:	4770      	bx	lr
 80039de:	bf00      	nop
 80039e0:	e000ed00 	and	lr, r0, r0, lsl #26
 80039e4:	40021000 	andmi	r1, r2, r0
 80039e8:	40007000 	andmi	r7, r0, r0

080039ec <bkp_write_data>:
 80039ec:	f1a0 030b 	sub.w	r3, r0, #11
 80039f0:	2b1f      	cmp	r3, #31
 80039f2:	d804      	bhi.n	80039fe <bkp_write_data+0x12>
 80039f4:	4b07      	ldr	r3, [pc, #28]	; (8003a14 <bkp_write_data+0x28>)
 80039f6:	4403      	add	r3, r0
 80039f8:	009b      	lsls	r3, r3, #2
 80039fa:	8019      	strh	r1, [r3, #0]
 80039fc:	4770      	bx	lr
 80039fe:	1e43      	subs	r3, r0, #1
 8003a00:	2b09      	cmp	r3, #9
 8003a02:	bf9f      	itttt	ls
 8003a04:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8003a08:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8003a0c:	0080      	lslls	r0, r0, #2
 8003a0e:	8001      	strhls	r1, [r0, #0]
 8003a10:	4770      	bx	lr
 8003a12:	bf00      	nop
 8003a14:	10001b05 	andne	r1, r0, r5, lsl #22

08003a18 <dma_deinit>:
 8003a18:	4b0c      	ldr	r3, [pc, #48]	; (8003a4c <dma_deinit+0x34>)
 8003a1a:	4298      	cmp	r0, r3
 8003a1c:	d102      	bne.n	8003a24 <dma_deinit+0xc>
 8003a1e:	2904      	cmp	r1, #4
 8003a20:	d900      	bls.n	8003a24 <dma_deinit+0xc>
 8003a22:	e7fe      	b.n	8003a22 <dma_deinit+0xa>
 8003a24:	2314      	movs	r3, #20
 8003a26:	fb03 0301 	mla	r3, r3, r1, r0
 8003a2a:	0089      	lsls	r1, r1, #2
 8003a2c:	689a      	ldr	r2, [r3, #8]
 8003a2e:	f022 0201 	bic.w	r2, r2, #1
 8003a32:	609a      	str	r2, [r3, #8]
 8003a34:	2200      	movs	r2, #0
 8003a36:	609a      	str	r2, [r3, #8]
 8003a38:	60da      	str	r2, [r3, #12]
 8003a3a:	611a      	str	r2, [r3, #16]
 8003a3c:	615a      	str	r2, [r3, #20]
 8003a3e:	6842      	ldr	r2, [r0, #4]
 8003a40:	230f      	movs	r3, #15
 8003a42:	408b      	lsls	r3, r1
 8003a44:	4313      	orrs	r3, r2
 8003a46:	6043      	str	r3, [r0, #4]
 8003a48:	4770      	bx	lr
 8003a4a:	bf00      	nop
 8003a4c:	40020400 	andmi	r0, r2, r0, lsl #8

08003a50 <dma_init>:
 8003a50:	4b1b      	ldr	r3, [pc, #108]	; (8003ac0 <dma_init+0x70>)
 8003a52:	4298      	cmp	r0, r3
 8003a54:	b510      	push	{r4, lr}
 8003a56:	d102      	bne.n	8003a5e <dma_init+0xe>
 8003a58:	2904      	cmp	r1, #4
 8003a5a:	d900      	bls.n	8003a5e <dma_init+0xe>
 8003a5c:	e7fe      	b.n	8003a5c <dma_init+0xc>
 8003a5e:	2314      	movs	r3, #20
 8003a60:	fb03 0101 	mla	r1, r3, r1, r0
 8003a64:	6813      	ldr	r3, [r2, #0]
 8003a66:	610b      	str	r3, [r1, #16]
 8003a68:	6893      	ldr	r3, [r2, #8]
 8003a6a:	614b      	str	r3, [r1, #20]
 8003a6c:	8a13      	ldrh	r3, [r2, #16]
 8003a6e:	60cb      	str	r3, [r1, #12]
 8003a70:	68d4      	ldr	r4, [r2, #12]
 8003a72:	6853      	ldr	r3, [r2, #4]
 8003a74:	6888      	ldr	r0, [r1, #8]
 8003a76:	4323      	orrs	r3, r4
 8003a78:	6954      	ldr	r4, [r2, #20]
 8003a7a:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8003a7e:	4323      	orrs	r3, r4
 8003a80:	4303      	orrs	r3, r0
 8003a82:	608b      	str	r3, [r1, #8]
 8003a84:	7e13      	ldrb	r3, [r2, #24]
 8003a86:	2b01      	cmp	r3, #1
 8003a88:	688b      	ldr	r3, [r1, #8]
 8003a8a:	bf0c      	ite	eq
 8003a8c:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8003a90:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8003a94:	608b      	str	r3, [r1, #8]
 8003a96:	7e53      	ldrb	r3, [r2, #25]
 8003a98:	2b01      	cmp	r3, #1
 8003a9a:	688b      	ldr	r3, [r1, #8]
 8003a9c:	bf0c      	ite	eq
 8003a9e:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8003aa2:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8003aa6:	608b      	str	r3, [r1, #8]
 8003aa8:	7e93      	ldrb	r3, [r2, #26]
 8003aaa:	b923      	cbnz	r3, 8003ab6 <dma_init+0x66>
 8003aac:	688b      	ldr	r3, [r1, #8]
 8003aae:	f023 0310 	bic.w	r3, r3, #16
 8003ab2:	608b      	str	r3, [r1, #8]
 8003ab4:	bd10      	pop	{r4, pc}
 8003ab6:	688b      	ldr	r3, [r1, #8]
 8003ab8:	f043 0310 	orr.w	r3, r3, #16
 8003abc:	e7f9      	b.n	8003ab2 <dma_init+0x62>
 8003abe:	bf00      	nop
 8003ac0:	40020400 	andmi	r0, r2, r0, lsl #8

08003ac4 <dma_circulation_disable>:
 8003ac4:	4b06      	ldr	r3, [pc, #24]	; (8003ae0 <dma_circulation_disable+0x1c>)
 8003ac6:	4298      	cmp	r0, r3
 8003ac8:	d102      	bne.n	8003ad0 <dma_circulation_disable+0xc>
 8003aca:	2904      	cmp	r1, #4
 8003acc:	d900      	bls.n	8003ad0 <dma_circulation_disable+0xc>
 8003ace:	e7fe      	b.n	8003ace <dma_circulation_disable+0xa>
 8003ad0:	2314      	movs	r3, #20
 8003ad2:	4359      	muls	r1, r3
 8003ad4:	3008      	adds	r0, #8
 8003ad6:	580b      	ldr	r3, [r1, r0]
 8003ad8:	f023 0320 	bic.w	r3, r3, #32
 8003adc:	500b      	str	r3, [r1, r0]
 8003ade:	4770      	bx	lr
 8003ae0:	40020400 	andmi	r0, r2, r0, lsl #8

08003ae4 <dma_memory_to_memory_disable>:
 8003ae4:	4b06      	ldr	r3, [pc, #24]	; (8003b00 <dma_memory_to_memory_disable+0x1c>)
 8003ae6:	4298      	cmp	r0, r3
 8003ae8:	d102      	bne.n	8003af0 <dma_memory_to_memory_disable+0xc>
 8003aea:	2904      	cmp	r1, #4
 8003aec:	d900      	bls.n	8003af0 <dma_memory_to_memory_disable+0xc>
 8003aee:	e7fe      	b.n	8003aee <dma_memory_to_memory_disable+0xa>
 8003af0:	2314      	movs	r3, #20
 8003af2:	4359      	muls	r1, r3
 8003af4:	3008      	adds	r0, #8
 8003af6:	580b      	ldr	r3, [r1, r0]
 8003af8:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8003afc:	500b      	str	r3, [r1, r0]
 8003afe:	4770      	bx	lr
 8003b00:	40020400 	andmi	r0, r2, r0, lsl #8

08003b04 <fmc_bank0_unlock>:
 8003b04:	4b04      	ldr	r3, [pc, #16]	; (8003b18 <fmc_bank0_unlock+0x14>)
 8003b06:	691a      	ldr	r2, [r3, #16]
 8003b08:	0612      	lsls	r2, r2, #24
 8003b0a:	bf41      	itttt	mi
 8003b0c:	4a03      	ldrmi	r2, [pc, #12]	; (8003b1c <fmc_bank0_unlock+0x18>)
 8003b0e:	605a      	strmi	r2, [r3, #4]
 8003b10:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8003b14:	605a      	strmi	r2, [r3, #4]
 8003b16:	4770      	bx	lr
 8003b18:	40022000 	andmi	r2, r2, r0
 8003b1c:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08003b20 <fmc_bank1_unlock>:
 8003b20:	4b04      	ldr	r3, [pc, #16]	; (8003b34 <fmc_bank1_unlock+0x14>)
 8003b22:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003b24:	0612      	lsls	r2, r2, #24
 8003b26:	bf41      	itttt	mi
 8003b28:	4a03      	ldrmi	r2, [pc, #12]	; (8003b38 <fmc_bank1_unlock+0x18>)
 8003b2a:	645a      	strmi	r2, [r3, #68]	; 0x44
 8003b2c:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8003b30:	645a      	strmi	r2, [r3, #68]	; 0x44
 8003b32:	4770      	bx	lr
 8003b34:	40022000 	andmi	r2, r2, r0
 8003b38:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08003b3c <fmc_bank0_lock>:
 8003b3c:	4a02      	ldr	r2, [pc, #8]	; (8003b48 <fmc_bank0_lock+0xc>)
 8003b3e:	6913      	ldr	r3, [r2, #16]
 8003b40:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003b44:	6113      	str	r3, [r2, #16]
 8003b46:	4770      	bx	lr
 8003b48:	40022000 	andmi	r2, r2, r0

08003b4c <fmc_bank1_lock>:
 8003b4c:	4a02      	ldr	r2, [pc, #8]	; (8003b58 <fmc_bank1_lock+0xc>)
 8003b4e:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8003b50:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003b54:	6513      	str	r3, [r2, #80]	; 0x50
 8003b56:	4770      	bx	lr
 8003b58:	40022000 	andmi	r2, r2, r0

08003b5c <fmc_bank0_state_get>:
 8003b5c:	4b07      	ldr	r3, [pc, #28]	; (8003b7c <fmc_bank0_state_get+0x20>)
 8003b5e:	68da      	ldr	r2, [r3, #12]
 8003b60:	07d1      	lsls	r1, r2, #31
 8003b62:	d407      	bmi.n	8003b74 <fmc_bank0_state_get+0x18>
 8003b64:	68da      	ldr	r2, [r3, #12]
 8003b66:	06d2      	lsls	r2, r2, #27
 8003b68:	d406      	bmi.n	8003b78 <fmc_bank0_state_get+0x1c>
 8003b6a:	68d8      	ldr	r0, [r3, #12]
 8003b6c:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8003b70:	0040      	lsls	r0, r0, #1
 8003b72:	4770      	bx	lr
 8003b74:	2001      	movs	r0, #1
 8003b76:	4770      	bx	lr
 8003b78:	2003      	movs	r0, #3
 8003b7a:	4770      	bx	lr
 8003b7c:	40022000 	andmi	r2, r2, r0

08003b80 <fmc_bank1_state_get>:
 8003b80:	4b07      	ldr	r3, [pc, #28]	; (8003ba0 <fmc_bank1_state_get+0x20>)
 8003b82:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8003b84:	07d1      	lsls	r1, r2, #31
 8003b86:	d407      	bmi.n	8003b98 <fmc_bank1_state_get+0x18>
 8003b88:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8003b8a:	06d2      	lsls	r2, r2, #27
 8003b8c:	d406      	bmi.n	8003b9c <fmc_bank1_state_get+0x1c>
 8003b8e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003b90:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8003b94:	0040      	lsls	r0, r0, #1
 8003b96:	4770      	bx	lr
 8003b98:	2001      	movs	r0, #1
 8003b9a:	4770      	bx	lr
 8003b9c:	2003      	movs	r0, #3
 8003b9e:	4770      	bx	lr
 8003ba0:	40022000 	andmi	r2, r2, r0

08003ba4 <fwdgt_enable>:
 8003ba4:	4b02      	ldr	r3, [pc, #8]	; (8003bb0 <fwdgt_enable+0xc>)
 8003ba6:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8003baa:	601a      	str	r2, [r3, #0]
 8003bac:	4770      	bx	lr
 8003bae:	bf00      	nop
 8003bb0:	40003000 	andmi	r3, r0, r0

08003bb4 <fwdgt_counter_reload>:
 8003bb4:	4b02      	ldr	r3, [pc, #8]	; (8003bc0 <fwdgt_counter_reload+0xc>)
 8003bb6:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8003bba:	601a      	str	r2, [r3, #0]
 8003bbc:	4770      	bx	lr
 8003bbe:	bf00      	nop
 8003bc0:	40003000 	andmi	r3, r0, r0

08003bc4 <fwdgt_config>:
 8003bc4:	4a12      	ldr	r2, [pc, #72]	; (8003c10 <fwdgt_config+0x4c>)
 8003bc6:	b510      	push	{r4, lr}
 8003bc8:	f245 5355 	movw	r3, #21845	; 0x5555
 8003bcc:	4c11      	ldr	r4, [pc, #68]	; (8003c14 <fwdgt_config+0x50>)
 8003bce:	6013      	str	r3, [r2, #0]
 8003bd0:	68d3      	ldr	r3, [r2, #12]
 8003bd2:	3c01      	subs	r4, #1
 8003bd4:	f003 0301 	and.w	r3, r3, #1
 8003bd8:	d013      	beq.n	8003c02 <fwdgt_config+0x3e>
 8003bda:	2b00      	cmp	r3, #0
 8003bdc:	d1f8      	bne.n	8003bd0 <fwdgt_config+0xc>
 8003bde:	6051      	str	r1, [r2, #4]
 8003be0:	490c      	ldr	r1, [pc, #48]	; (8003c14 <fwdgt_config+0x50>)
 8003be2:	4a0b      	ldr	r2, [pc, #44]	; (8003c10 <fwdgt_config+0x4c>)
 8003be4:	68d3      	ldr	r3, [r2, #12]
 8003be6:	3901      	subs	r1, #1
 8003be8:	f003 0302 	and.w	r3, r3, #2
 8003bec:	d00d      	beq.n	8003c0a <fwdgt_config+0x46>
 8003bee:	2b00      	cmp	r3, #0
 8003bf0:	d1f8      	bne.n	8003be4 <fwdgt_config+0x20>
 8003bf2:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8003bf6:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8003bfa:	6090      	str	r0, [r2, #8]
 8003bfc:	6013      	str	r3, [r2, #0]
 8003bfe:	2001      	movs	r0, #1
 8003c00:	e002      	b.n	8003c08 <fwdgt_config+0x44>
 8003c02:	2b00      	cmp	r3, #0
 8003c04:	d0eb      	beq.n	8003bde <fwdgt_config+0x1a>
 8003c06:	2000      	movs	r0, #0
 8003c08:	bd10      	pop	{r4, pc}
 8003c0a:	2b00      	cmp	r3, #0
 8003c0c:	d1fb      	bne.n	8003c06 <fwdgt_config+0x42>
 8003c0e:	e7f0      	b.n	8003bf2 <fwdgt_config+0x2e>
 8003c10:	40003000 	andmi	r3, r0, r0
 8003c14:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08003c18 <gpio_init>:
 8003c18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003c1c:	06cf      	lsls	r7, r1, #27
 8003c1e:	f001 040f 	and.w	r4, r1, #15
 8003c22:	d508      	bpl.n	8003c36 <gpio_init+0x1e>
 8003c24:	2a04      	cmp	r2, #4
 8003c26:	bf01      	itttt	eq
 8003c28:	6bc2      	ldreq	r2, [r0, #60]	; 0x3c
 8003c2a:	431a      	orreq	r2, r3
 8003c2c:	f044 0403 	orreq.w	r4, r4, #3
 8003c30:	63c2      	streq	r2, [r0, #60]	; 0x3c
 8003c32:	bf18      	it	ne
 8003c34:	4314      	orrne	r4, r2
 8003c36:	2500      	movs	r5, #0
 8003c38:	f04f 0c0f 	mov.w	ip, #15
 8003c3c:	2701      	movs	r7, #1
 8003c3e:	fa23 f205 	lsr.w	r2, r3, r5
 8003c42:	07d6      	lsls	r6, r2, #31
 8003c44:	d510      	bpl.n	8003c68 <gpio_init+0x50>
 8003c46:	00aa      	lsls	r2, r5, #2
 8003c48:	6806      	ldr	r6, [r0, #0]
 8003c4a:	fa0c fe02 	lsl.w	lr, ip, r2
 8003c4e:	ea26 060e 	bic.w	r6, r6, lr
 8003c52:	fa04 f202 	lsl.w	r2, r4, r2
 8003c56:	2928      	cmp	r1, #40	; 0x28
 8003c58:	ea42 0206 	orr.w	r2, r2, r6
 8003c5c:	d128      	bne.n	8003cb0 <gpio_init+0x98>
 8003c5e:	fa07 f605 	lsl.w	r6, r7, r5
 8003c62:	401e      	ands	r6, r3
 8003c64:	6146      	str	r6, [r0, #20]
 8003c66:	6002      	str	r2, [r0, #0]
 8003c68:	3501      	adds	r5, #1
 8003c6a:	2d08      	cmp	r5, #8
 8003c6c:	d1e7      	bne.n	8003c3e <gpio_init+0x26>
 8003c6e:	2600      	movs	r6, #0
 8003c70:	f04f 0c0f 	mov.w	ip, #15
 8003c74:	2701      	movs	r7, #1
 8003c76:	f106 0208 	add.w	r2, r6, #8
 8003c7a:	fa23 f502 	lsr.w	r5, r3, r2
 8003c7e:	07ed      	lsls	r5, r5, #31
 8003c80:	d511      	bpl.n	8003ca6 <gpio_init+0x8e>
 8003c82:	00b5      	lsls	r5, r6, #2
 8003c84:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8003c88:	fa0c f805 	lsl.w	r8, ip, r5
 8003c8c:	ea2e 0e08 	bic.w	lr, lr, r8
 8003c90:	fa04 f505 	lsl.w	r5, r4, r5
 8003c94:	2928      	cmp	r1, #40	; 0x28
 8003c96:	ea45 050e 	orr.w	r5, r5, lr
 8003c9a:	d110      	bne.n	8003cbe <gpio_init+0xa6>
 8003c9c:	fa07 f202 	lsl.w	r2, r7, r2
 8003ca0:	401a      	ands	r2, r3
 8003ca2:	6142      	str	r2, [r0, #20]
 8003ca4:	6045      	str	r5, [r0, #4]
 8003ca6:	3601      	adds	r6, #1
 8003ca8:	2e08      	cmp	r6, #8
 8003caa:	d1e4      	bne.n	8003c76 <gpio_init+0x5e>
 8003cac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003cb0:	2948      	cmp	r1, #72	; 0x48
 8003cb2:	bf02      	ittt	eq
 8003cb4:	fa07 f605 	lsleq.w	r6, r7, r5
 8003cb8:	401e      	andeq	r6, r3
 8003cba:	6106      	streq	r6, [r0, #16]
 8003cbc:	e7d3      	b.n	8003c66 <gpio_init+0x4e>
 8003cbe:	2948      	cmp	r1, #72	; 0x48
 8003cc0:	bf02      	ittt	eq
 8003cc2:	fa07 f202 	lsleq.w	r2, r7, r2
 8003cc6:	401a      	andeq	r2, r3
 8003cc8:	6102      	streq	r2, [r0, #16]
 8003cca:	e7eb      	b.n	8003ca4 <gpio_init+0x8c>

08003ccc <gpio_input_bit_get>:
 8003ccc:	6883      	ldr	r3, [r0, #8]
 8003cce:	420b      	tst	r3, r1
 8003cd0:	bf14      	ite	ne
 8003cd2:	2001      	movne	r0, #1
 8003cd4:	2000      	moveq	r0, #0
 8003cd6:	4770      	bx	lr

08003cd8 <gpio_pin_remap_config>:
 8003cd8:	2800      	cmp	r0, #0
 8003cda:	4a16      	ldr	r2, [pc, #88]	; (8003d34 <gpio_pin_remap_config+0x5c>)
 8003cdc:	b530      	push	{r4, r5, lr}
 8003cde:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8003ce2:	bfb4      	ite	lt
 8003ce4:	69d3      	ldrlt	r3, [r2, #28]
 8003ce6:	6853      	ldrge	r3, [r2, #4]
 8003ce8:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8003cec:	b284      	uxth	r4, r0
 8003cee:	d110      	bne.n	8003d12 <gpio_pin_remap_config+0x3a>
 8003cf0:	6855      	ldr	r5, [r2, #4]
 8003cf2:	f025 65e0 	bic.w	r5, r5, #117440512	; 0x7000000
 8003cf6:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8003cfa:	6055      	str	r5, [r2, #4]
 8003cfc:	b119      	cbz	r1, 8003d06 <gpio_pin_remap_config+0x2e>
 8003cfe:	0d42      	lsrs	r2, r0, #21
 8003d00:	0112      	lsls	r2, r2, #4
 8003d02:	4094      	lsls	r4, r2
 8003d04:	4323      	orrs	r3, r4
 8003d06:	4a0b      	ldr	r2, [pc, #44]	; (8003d34 <gpio_pin_remap_config+0x5c>)
 8003d08:	2800      	cmp	r0, #0
 8003d0a:	bfb4      	ite	lt
 8003d0c:	61d3      	strlt	r3, [r2, #28]
 8003d0e:	6053      	strge	r3, [r2, #4]
 8003d10:	bd30      	pop	{r4, r5, pc}
 8003d12:	02c2      	lsls	r2, r0, #11
 8003d14:	bf55      	itete	pl
 8003d16:	0d42      	lsrpl	r2, r0, #21
 8003d18:	2203      	movmi	r2, #3
 8003d1a:	0112      	lslpl	r2, r2, #4
 8003d1c:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8003d20:	bf4c      	ite	mi
 8003d22:	40aa      	lslmi	r2, r5
 8003d24:	fa04 f202 	lslpl.w	r2, r4, r2
 8003d28:	ea23 0302 	bic.w	r3, r3, r2
 8003d2c:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8003d30:	e7e4      	b.n	8003cfc <gpio_pin_remap_config+0x24>
 8003d32:	bf00      	nop
 8003d34:	40010000 	andmi	r0, r1, r0

08003d38 <pmu_backup_write_enable>:
 8003d38:	4a02      	ldr	r2, [pc, #8]	; (8003d44 <pmu_backup_write_enable+0xc>)
 8003d3a:	6813      	ldr	r3, [r2, #0]
 8003d3c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003d40:	6013      	str	r3, [r2, #0]
 8003d42:	4770      	bx	lr
 8003d44:	40007000 	andmi	r7, r0, r0

08003d48 <rcu_periph_clock_enable>:
 8003d48:	0983      	lsrs	r3, r0, #6
 8003d4a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8003d4e:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8003d52:	f000 001f 	and.w	r0, r0, #31
 8003d56:	6819      	ldr	r1, [r3, #0]
 8003d58:	2201      	movs	r2, #1
 8003d5a:	4082      	lsls	r2, r0
 8003d5c:	430a      	orrs	r2, r1
 8003d5e:	601a      	str	r2, [r3, #0]
 8003d60:	4770      	bx	lr

08003d62 <rcu_periph_clock_disable>:
 8003d62:	0983      	lsrs	r3, r0, #6
 8003d64:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8003d68:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8003d6c:	f000 001f 	and.w	r0, r0, #31
 8003d70:	681a      	ldr	r2, [r3, #0]
 8003d72:	2101      	movs	r1, #1
 8003d74:	4081      	lsls	r1, r0
 8003d76:	ea22 0201 	bic.w	r2, r2, r1
 8003d7a:	601a      	str	r2, [r3, #0]
 8003d7c:	4770      	bx	lr

08003d7e <rcu_periph_reset_enable>:
 8003d7e:	f7ff bfe3 	b.w	8003d48 <rcu_periph_clock_enable>

08003d82 <rcu_periph_reset_disable>:
 8003d82:	f7ff bfee 	b.w	8003d62 <rcu_periph_clock_disable>
	...

08003d88 <rcu_adc_clock_config>:
 8003d88:	4913      	ldr	r1, [pc, #76]	; (8003dd8 <rcu_adc_clock_config+0x50>)
 8003d8a:	684b      	ldr	r3, [r1, #4]
 8003d8c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8003d8e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003d92:	b510      	push	{r4, lr}
 8003d94:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8003d98:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8003d9c:	280b      	cmp	r0, #11
 8003d9e:	d809      	bhi.n	8003db4 <rcu_adc_clock_config+0x2c>
 8003da0:	e8df f000 	tbb	[pc, r0]
 8003da4:	06060606 	streq	r0, [r6], -r6, lsl #12
 8003da8:	0b080b08 	bleq	82069d0 <__exidx_end+0x2015d4>
 8003dac:	12121212 	andsne	r1, r2, #536870913	; 0x20000001
 8003db0:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8003db4:	604b      	str	r3, [r1, #4]
 8003db6:	62ca      	str	r2, [r1, #44]	; 0x2c
 8003db8:	bd10      	pop	{r4, pc}
 8003dba:	4c08      	ldr	r4, [pc, #32]	; (8003ddc <rcu_adc_clock_config+0x54>)
 8003dbc:	ea04 3080 	and.w	r0, r4, r0, lsl #14
 8003dc0:	4303      	orrs	r3, r0
 8003dc2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003dc6:	e7f5      	b.n	8003db4 <rcu_adc_clock_config+0x2c>
 8003dc8:	4c05      	ldr	r4, [pc, #20]	; (8003de0 <rcu_adc_clock_config+0x58>)
 8003dca:	ea04 3080 	and.w	r0, r4, r0, lsl #14
 8003dce:	4303      	orrs	r3, r0
 8003dd0:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8003dd4:	e7ee      	b.n	8003db4 <rcu_adc_clock_config+0x2c>
 8003dd6:	bf00      	nop
 8003dd8:	40021000 	andmi	r1, r2, r0
 8003ddc:	fffec000 			; <UNDEFINED> instruction: 0xfffec000
 8003de0:	fffcc000 			; <UNDEFINED> instruction: 0xfffcc000

08003de4 <rcu_clock_freq_get>:
 8003de4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003de6:	4b35      	ldr	r3, [pc, #212]	; (8003ebc <rcu_clock_freq_get+0xd8>)
 8003de8:	b089      	sub	sp, #36	; 0x24
 8003dea:	4604      	mov	r4, r0
 8003dec:	ad04      	add	r5, sp, #16
 8003dee:	f103 0610 	add.w	r6, r3, #16
 8003df2:	461f      	mov	r7, r3
 8003df4:	6818      	ldr	r0, [r3, #0]
 8003df6:	6859      	ldr	r1, [r3, #4]
 8003df8:	462a      	mov	r2, r5
 8003dfa:	c203      	stmia	r2!, {r0, r1}
 8003dfc:	3308      	adds	r3, #8
 8003dfe:	42b3      	cmp	r3, r6
 8003e00:	4615      	mov	r5, r2
 8003e02:	d1f7      	bne.n	8003df4 <rcu_clock_freq_get+0x10>
 8003e04:	6938      	ldr	r0, [r7, #16]
 8003e06:	6871      	ldr	r1, [r6, #4]
 8003e08:	4a2d      	ldr	r2, [pc, #180]	; (8003ec0 <rcu_clock_freq_get+0xdc>)
 8003e0a:	466b      	mov	r3, sp
 8003e0c:	c303      	stmia	r3!, {r0, r1}
 8003e0e:	c303      	stmia	r3!, {r0, r1}
 8003e10:	6853      	ldr	r3, [r2, #4]
 8003e12:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8003e16:	2b02      	cmp	r3, #2
 8003e18:	d143      	bne.n	8003ea2 <rcu_clock_freq_get+0xbe>
 8003e1a:	6853      	ldr	r3, [r2, #4]
 8003e1c:	03df      	lsls	r7, r3, #15
 8003e1e:	d538      	bpl.n	8003e92 <rcu_clock_freq_get+0xae>
 8003e20:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8003e22:	4928      	ldr	r1, [pc, #160]	; (8003ec4 <rcu_clock_freq_get+0xe0>)
 8003e24:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8003e28:	4b27      	ldr	r3, [pc, #156]	; (8003ec8 <rcu_clock_freq_get+0xe4>)
 8003e2a:	bf18      	it	ne
 8003e2c:	4619      	movne	r1, r3
 8003e2e:	6853      	ldr	r3, [r2, #4]
 8003e30:	039e      	lsls	r6, r3, #14
 8003e32:	d500      	bpl.n	8003e36 <rcu_clock_freq_get+0x52>
 8003e34:	0849      	lsrs	r1, r1, #1
 8003e36:	6853      	ldr	r3, [r2, #4]
 8003e38:	6850      	ldr	r0, [r2, #4]
 8003e3a:	0105      	lsls	r5, r0, #4
 8003e3c:	6850      	ldr	r0, [r2, #4]
 8003e3e:	f3c3 4383 	ubfx	r3, r3, #18, #4
 8003e42:	bf48      	it	mi
 8003e44:	f043 0310 	orrmi.w	r3, r3, #16
 8003e48:	0040      	lsls	r0, r0, #1
 8003e4a:	d524      	bpl.n	8003e96 <rcu_clock_freq_get+0xb2>
 8003e4c:	f043 0320 	orr.w	r3, r3, #32
 8003e50:	2b3f      	cmp	r3, #63	; 0x3f
 8003e52:	d124      	bne.n	8003e9e <rcu_clock_freq_get+0xba>
 8003e54:	fb01 f003 	mul.w	r0, r1, r3
 8003e58:	6853      	ldr	r3, [r2, #4]
 8003e5a:	6851      	ldr	r1, [r2, #4]
 8003e5c:	6852      	ldr	r2, [r2, #4]
 8003e5e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8003e62:	3320      	adds	r3, #32
 8003e64:	446b      	add	r3, sp
 8003e66:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8003e6a:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8003e6e:	3120      	adds	r1, #32
 8003e70:	3220      	adds	r2, #32
 8003e72:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8003e76:	4469      	add	r1, sp
 8003e78:	446a      	add	r2, sp
 8003e7a:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8003e7e:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8003e82:	fa20 f303 	lsr.w	r3, r0, r3
 8003e86:	2c03      	cmp	r4, #3
 8003e88:	d816      	bhi.n	8003eb8 <rcu_clock_freq_get+0xd4>
 8003e8a:	e8df f004 	tbb	[pc, r4]
 8003e8e:	120f0c0d 	andne	r0, pc, #3328	; 0xd00
 8003e92:	490e      	ldr	r1, [pc, #56]	; (8003ecc <rcu_clock_freq_get+0xe8>)
 8003e94:	e7cf      	b.n	8003e36 <rcu_clock_freq_get+0x52>
 8003e96:	2b0e      	cmp	r3, #14
 8003e98:	d801      	bhi.n	8003e9e <rcu_clock_freq_get+0xba>
 8003e9a:	3302      	adds	r3, #2
 8003e9c:	e7da      	b.n	8003e54 <rcu_clock_freq_get+0x70>
 8003e9e:	3301      	adds	r3, #1
 8003ea0:	e7d8      	b.n	8003e54 <rcu_clock_freq_get+0x70>
 8003ea2:	4808      	ldr	r0, [pc, #32]	; (8003ec4 <rcu_clock_freq_get+0xe0>)
 8003ea4:	e7d8      	b.n	8003e58 <rcu_clock_freq_get+0x74>
 8003ea6:	4618      	mov	r0, r3
 8003ea8:	b009      	add	sp, #36	; 0x24
 8003eaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003eac:	fa23 f001 	lsr.w	r0, r3, r1
 8003eb0:	e7fa      	b.n	8003ea8 <rcu_clock_freq_get+0xc4>
 8003eb2:	fa23 f002 	lsr.w	r0, r3, r2
 8003eb6:	e7f7      	b.n	8003ea8 <rcu_clock_freq_get+0xc4>
 8003eb8:	2000      	movs	r0, #0
 8003eba:	e7f5      	b.n	8003ea8 <rcu_clock_freq_get+0xc4>
 8003ebc:	08004b20 	stmdaeq	r0, {r5, r8, r9, fp, lr}
 8003ec0:	40021000 	andmi	r1, r2, r0
 8003ec4:	007a1200 	rsbseq	r1, sl, r0, lsl #4
 8003ec8:	02dc6c00 	sbcseq	r6, ip, #0, 24
 8003ecc:	003d0900 	eorseq	r0, sp, r0, lsl #18

08003ed0 <timer_deinit>:
 8003ed0:	b508      	push	{r3, lr}
 8003ed2:	4b2d      	ldr	r3, [pc, #180]	; (8003f88 <timer_deinit+0xb8>)
 8003ed4:	4298      	cmp	r0, r3
 8003ed6:	d048      	beq.n	8003f6a <timer_deinit+0x9a>
 8003ed8:	d816      	bhi.n	8003f08 <timer_deinit+0x38>
 8003eda:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8003ede:	4298      	cmp	r0, r3
 8003ee0:	d03c      	beq.n	8003f5c <timer_deinit+0x8c>
 8003ee2:	d807      	bhi.n	8003ef4 <timer_deinit+0x24>
 8003ee4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8003ee8:	d02a      	beq.n	8003f40 <timer_deinit+0x70>
 8003eea:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8003eee:	4298      	cmp	r0, r3
 8003ef0:	d02d      	beq.n	8003f4e <timer_deinit+0x7e>
 8003ef2:	bd08      	pop	{r3, pc}
 8003ef4:	4b25      	ldr	r3, [pc, #148]	; (8003f8c <timer_deinit+0xbc>)
 8003ef6:	4298      	cmp	r0, r3
 8003ef8:	d1fb      	bne.n	8003ef2 <timer_deinit+0x22>
 8003efa:	f240 4003 	movw	r0, #1027	; 0x403
 8003efe:	f7ff ff3e 	bl	8003d7e <rcu_periph_reset_enable>
 8003f02:	f240 4003 	movw	r0, #1027	; 0x403
 8003f06:	e017      	b.n	8003f38 <timer_deinit+0x68>
 8003f08:	4b21      	ldr	r3, [pc, #132]	; (8003f90 <timer_deinit+0xc0>)
 8003f0a:	4298      	cmp	r0, r3
 8003f0c:	d00e      	beq.n	8003f2c <timer_deinit+0x5c>
 8003f0e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8003f12:	4298      	cmp	r0, r3
 8003f14:	d030      	beq.n	8003f78 <timer_deinit+0xa8>
 8003f16:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 8003f1a:	4298      	cmp	r0, r3
 8003f1c:	d1e9      	bne.n	8003ef2 <timer_deinit+0x22>
 8003f1e:	f240 4005 	movw	r0, #1029	; 0x405
 8003f22:	f7ff ff2c 	bl	8003d7e <rcu_periph_reset_enable>
 8003f26:	f240 4005 	movw	r0, #1029	; 0x405
 8003f2a:	e005      	b.n	8003f38 <timer_deinit+0x68>
 8003f2c:	f240 300b 	movw	r0, #779	; 0x30b
 8003f30:	f7ff ff25 	bl	8003d7e <rcu_periph_reset_enable>
 8003f34:	f240 300b 	movw	r0, #779	; 0x30b
 8003f38:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003f3c:	f7ff bf21 	b.w	8003d82 <rcu_periph_reset_disable>
 8003f40:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8003f44:	f7ff ff1b 	bl	8003d7e <rcu_periph_reset_enable>
 8003f48:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8003f4c:	e7f4      	b.n	8003f38 <timer_deinit+0x68>
 8003f4e:	f240 4001 	movw	r0, #1025	; 0x401
 8003f52:	f7ff ff14 	bl	8003d7e <rcu_periph_reset_enable>
 8003f56:	f240 4001 	movw	r0, #1025	; 0x401
 8003f5a:	e7ed      	b.n	8003f38 <timer_deinit+0x68>
 8003f5c:	f240 4002 	movw	r0, #1026	; 0x402
 8003f60:	f7ff ff0d 	bl	8003d7e <rcu_periph_reset_enable>
 8003f64:	f240 4002 	movw	r0, #1026	; 0x402
 8003f68:	e7e6      	b.n	8003f38 <timer_deinit+0x68>
 8003f6a:	f240 4004 	movw	r0, #1028	; 0x404
 8003f6e:	f7ff ff06 	bl	8003d7e <rcu_periph_reset_enable>
 8003f72:	f240 4004 	movw	r0, #1028	; 0x404
 8003f76:	e7df      	b.n	8003f38 <timer_deinit+0x68>
 8003f78:	f240 300d 	movw	r0, #781	; 0x30d
 8003f7c:	f7ff feff 	bl	8003d7e <rcu_periph_reset_enable>
 8003f80:	f240 300d 	movw	r0, #781	; 0x30d
 8003f84:	e7d8      	b.n	8003f38 <timer_deinit+0x68>
 8003f86:	bf00      	nop
 8003f88:	40001000 	andmi	r1, r0, r0
 8003f8c:	40000c00 	andmi	r0, r0, r0, lsl #24
 8003f90:	40012c00 	andmi	r2, r1, r0, lsl #24

08003f94 <timer_init>:
 8003f94:	880b      	ldrh	r3, [r1, #0]
 8003f96:	6283      	str	r3, [r0, #40]	; 0x28
 8003f98:	4b1a      	ldr	r3, [pc, #104]	; (8004004 <timer_init+0x70>)
 8003f9a:	4298      	cmp	r0, r3
 8003f9c:	d007      	beq.n	8003fae <timer_init+0x1a>
 8003f9e:	f420 6340 	bic.w	r3, r0, #3072	; 0xc00
 8003fa2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003fa6:	d002      	beq.n	8003fae <timer_init+0x1a>
 8003fa8:	4b17      	ldr	r3, [pc, #92]	; (8004008 <timer_init+0x74>)
 8003faa:	4298      	cmp	r0, r3
 8003fac:	d10b      	bne.n	8003fc6 <timer_init+0x32>
 8003fae:	6803      	ldr	r3, [r0, #0]
 8003fb0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003fb4:	6003      	str	r3, [r0, #0]
 8003fb6:	6802      	ldr	r2, [r0, #0]
 8003fb8:	884b      	ldrh	r3, [r1, #2]
 8003fba:	4313      	orrs	r3, r2
 8003fbc:	6003      	str	r3, [r0, #0]
 8003fbe:	6802      	ldr	r2, [r0, #0]
 8003fc0:	888b      	ldrh	r3, [r1, #4]
 8003fc2:	4313      	orrs	r3, r2
 8003fc4:	6003      	str	r3, [r0, #0]
 8003fc6:	688b      	ldr	r3, [r1, #8]
 8003fc8:	62c3      	str	r3, [r0, #44]	; 0x2c
 8003fca:	4b10      	ldr	r3, [pc, #64]	; (800400c <timer_init+0x78>)
 8003fcc:	4298      	cmp	r0, r3
 8003fce:	d003      	beq.n	8003fd8 <timer_init+0x44>
 8003fd0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003fd4:	4298      	cmp	r0, r3
 8003fd6:	d104      	bne.n	8003fe2 <timer_init+0x4e>
 8003fd8:	6943      	ldr	r3, [r0, #20]
 8003fda:	f043 0301 	orr.w	r3, r3, #1
 8003fde:	6143      	str	r3, [r0, #20]
 8003fe0:	4770      	bx	lr
 8003fe2:	6803      	ldr	r3, [r0, #0]
 8003fe4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003fe8:	6003      	str	r3, [r0, #0]
 8003fea:	6802      	ldr	r2, [r0, #0]
 8003fec:	88cb      	ldrh	r3, [r1, #6]
 8003fee:	4313      	orrs	r3, r2
 8003ff0:	6003      	str	r3, [r0, #0]
 8003ff2:	4b04      	ldr	r3, [pc, #16]	; (8004004 <timer_init+0x70>)
 8003ff4:	4298      	cmp	r0, r3
 8003ff6:	d002      	beq.n	8003ffe <timer_init+0x6a>
 8003ff8:	4b03      	ldr	r3, [pc, #12]	; (8004008 <timer_init+0x74>)
 8003ffa:	4298      	cmp	r0, r3
 8003ffc:	d1ec      	bne.n	8003fd8 <timer_init+0x44>
 8003ffe:	7b0b      	ldrb	r3, [r1, #12]
 8004000:	6303      	str	r3, [r0, #48]	; 0x30
 8004002:	e7e9      	b.n	8003fd8 <timer_init+0x44>
 8004004:	40012c00 	andmi	r2, r1, r0, lsl #24
 8004008:	40013400 	andmi	r3, r1, r0, lsl #8
 800400c:	40001000 	andmi	r1, r0, r0

08004010 <timer_enable>:
 8004010:	6803      	ldr	r3, [r0, #0]
 8004012:	f043 0301 	orr.w	r3, r3, #1
 8004016:	6003      	str	r3, [r0, #0]
 8004018:	4770      	bx	lr

0800401a <timer_interrupt_enable>:
 800401a:	68c3      	ldr	r3, [r0, #12]
 800401c:	4319      	orrs	r1, r3
 800401e:	60c1      	str	r1, [r0, #12]
 8004020:	4770      	bx	lr

08004022 <timer_interrupt_flag_clear>:
 8004022:	43c9      	mvns	r1, r1
 8004024:	6101      	str	r1, [r0, #16]
 8004026:	4770      	bx	lr

08004028 <timer_flag_clear>:
 8004028:	43c9      	mvns	r1, r1
 800402a:	6101      	str	r1, [r0, #16]
 800402c:	4770      	bx	lr

0800402e <timer_channel_output_mode_config>:
 800402e:	2903      	cmp	r1, #3
 8004030:	d81a      	bhi.n	8004068 <timer_channel_output_mode_config+0x3a>
 8004032:	e8df f001 	tbb	[pc, r1]
 8004036:	1a120a02 	bne	8486846 <__exidx_end+0x48144a>
 800403a:	6983      	ldr	r3, [r0, #24]
 800403c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004040:	6183      	str	r3, [r0, #24]
 8004042:	6983      	ldr	r3, [r0, #24]
 8004044:	4313      	orrs	r3, r2
 8004046:	6183      	str	r3, [r0, #24]
 8004048:	4770      	bx	lr
 800404a:	6983      	ldr	r3, [r0, #24]
 800404c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004050:	6183      	str	r3, [r0, #24]
 8004052:	6983      	ldr	r3, [r0, #24]
 8004054:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8004058:	e7f5      	b.n	8004046 <timer_channel_output_mode_config+0x18>
 800405a:	69c3      	ldr	r3, [r0, #28]
 800405c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004060:	61c3      	str	r3, [r0, #28]
 8004062:	69c3      	ldr	r3, [r0, #28]
 8004064:	4313      	orrs	r3, r2
 8004066:	61c3      	str	r3, [r0, #28]
 8004068:	4770      	bx	lr
 800406a:	69c3      	ldr	r3, [r0, #28]
 800406c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004070:	61c3      	str	r3, [r0, #28]
 8004072:	69c3      	ldr	r3, [r0, #28]
 8004074:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8004078:	e7f5      	b.n	8004066 <timer_channel_output_mode_config+0x38>

0800407a <timer_channel_output_pulse_value_config>:
 800407a:	2903      	cmp	r1, #3
 800407c:	d80a      	bhi.n	8004094 <timer_channel_output_pulse_value_config+0x1a>
 800407e:	e8df f001 	tbb	[pc, r1]
 8004082:	08060402 	stmdaeq	r6, {r1, sl}
 8004086:	6342      	str	r2, [r0, #52]	; 0x34
 8004088:	4770      	bx	lr
 800408a:	6382      	str	r2, [r0, #56]	; 0x38
 800408c:	4770      	bx	lr
 800408e:	63c2      	str	r2, [r0, #60]	; 0x3c
 8004090:	4770      	bx	lr
 8004092:	6402      	str	r2, [r0, #64]	; 0x40
 8004094:	4770      	bx	lr
	...

08004098 <usart_deinit>:
 8004098:	b508      	push	{r3, lr}
 800409a:	4b1d      	ldr	r3, [pc, #116]	; (8004110 <usart_deinit+0x78>)
 800409c:	4298      	cmp	r0, r3
 800409e:	d028      	beq.n	80040f2 <usart_deinit+0x5a>
 80040a0:	d808      	bhi.n	80040b4 <usart_deinit+0x1c>
 80040a2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80040a6:	4298      	cmp	r0, r3
 80040a8:	d015      	beq.n	80040d6 <usart_deinit+0x3e>
 80040aa:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80040ae:	4298      	cmp	r0, r3
 80040b0:	d018      	beq.n	80040e4 <usart_deinit+0x4c>
 80040b2:	bd08      	pop	{r3, pc}
 80040b4:	4b17      	ldr	r3, [pc, #92]	; (8004114 <usart_deinit+0x7c>)
 80040b6:	4298      	cmp	r0, r3
 80040b8:	d022      	beq.n	8004100 <usart_deinit+0x68>
 80040ba:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 80040be:	4298      	cmp	r0, r3
 80040c0:	d1f7      	bne.n	80040b2 <usart_deinit+0x1a>
 80040c2:	f240 300e 	movw	r0, #782	; 0x30e
 80040c6:	f7ff fe5a 	bl	8003d7e <rcu_periph_reset_enable>
 80040ca:	f240 300e 	movw	r0, #782	; 0x30e
 80040ce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80040d2:	f7ff be56 	b.w	8003d82 <rcu_periph_reset_disable>
 80040d6:	f240 4011 	movw	r0, #1041	; 0x411
 80040da:	f7ff fe50 	bl	8003d7e <rcu_periph_reset_enable>
 80040de:	f240 4011 	movw	r0, #1041	; 0x411
 80040e2:	e7f4      	b.n	80040ce <usart_deinit+0x36>
 80040e4:	f240 4012 	movw	r0, #1042	; 0x412
 80040e8:	f7ff fe49 	bl	8003d7e <rcu_periph_reset_enable>
 80040ec:	f240 4012 	movw	r0, #1042	; 0x412
 80040f0:	e7ed      	b.n	80040ce <usart_deinit+0x36>
 80040f2:	f240 4013 	movw	r0, #1043	; 0x413
 80040f6:	f7ff fe42 	bl	8003d7e <rcu_periph_reset_enable>
 80040fa:	f240 4013 	movw	r0, #1043	; 0x413
 80040fe:	e7e6      	b.n	80040ce <usart_deinit+0x36>
 8004100:	f240 4014 	movw	r0, #1044	; 0x414
 8004104:	f7ff fe3b 	bl	8003d7e <rcu_periph_reset_enable>
 8004108:	f240 4014 	movw	r0, #1044	; 0x414
 800410c:	e7df      	b.n	80040ce <usart_deinit+0x36>
 800410e:	bf00      	nop
 8004110:	40004c00 	andmi	r4, r0, r0, lsl #24
 8004114:	40005000 	andmi	r5, r0, r0

08004118 <usart_baudrate_set>:
 8004118:	b538      	push	{r3, r4, r5, lr}
 800411a:	4b11      	ldr	r3, [pc, #68]	; (8004160 <usart_baudrate_set+0x48>)
 800411c:	4298      	cmp	r0, r3
 800411e:	4604      	mov	r4, r0
 8004120:	460d      	mov	r5, r1
 8004122:	d01b      	beq.n	800415c <usart_baudrate_set+0x44>
 8004124:	d809      	bhi.n	800413a <usart_baudrate_set+0x22>
 8004126:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800412a:	4298      	cmp	r0, r3
 800412c:	d016      	beq.n	800415c <usart_baudrate_set+0x44>
 800412e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004132:	4298      	cmp	r0, r3
 8004134:	d012      	beq.n	800415c <usart_baudrate_set+0x44>
 8004136:	2000      	movs	r0, #0
 8004138:	e009      	b.n	800414e <usart_baudrate_set+0x36>
 800413a:	4b0a      	ldr	r3, [pc, #40]	; (8004164 <usart_baudrate_set+0x4c>)
 800413c:	4298      	cmp	r0, r3
 800413e:	d00d      	beq.n	800415c <usart_baudrate_set+0x44>
 8004140:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8004144:	4298      	cmp	r0, r3
 8004146:	d1f6      	bne.n	8004136 <usart_baudrate_set+0x1e>
 8004148:	2003      	movs	r0, #3
 800414a:	f7ff fe4b 	bl	8003de4 <rcu_clock_freq_get>
 800414e:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 8004152:	fbb3 f1f5 	udiv	r1, r3, r5
 8004156:	b289      	uxth	r1, r1
 8004158:	60a1      	str	r1, [r4, #8]
 800415a:	bd38      	pop	{r3, r4, r5, pc}
 800415c:	2002      	movs	r0, #2
 800415e:	e7f4      	b.n	800414a <usart_baudrate_set+0x32>
 8004160:	40004c00 	andmi	r4, r0, r0, lsl #24
 8004164:	40005000 	andmi	r5, r0, r0

08004168 <usart_parity_config>:
 8004168:	68c3      	ldr	r3, [r0, #12]
 800416a:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 800416e:	60c3      	str	r3, [r0, #12]
 8004170:	68c3      	ldr	r3, [r0, #12]
 8004172:	4319      	orrs	r1, r3
 8004174:	60c1      	str	r1, [r0, #12]
 8004176:	4770      	bx	lr

08004178 <usart_word_length_set>:
 8004178:	68c3      	ldr	r3, [r0, #12]
 800417a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800417e:	60c3      	str	r3, [r0, #12]
 8004180:	68c3      	ldr	r3, [r0, #12]
 8004182:	4319      	orrs	r1, r3
 8004184:	60c1      	str	r1, [r0, #12]
 8004186:	4770      	bx	lr

08004188 <usart_stop_bit_set>:
 8004188:	6903      	ldr	r3, [r0, #16]
 800418a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800418e:	6103      	str	r3, [r0, #16]
 8004190:	6903      	ldr	r3, [r0, #16]
 8004192:	4319      	orrs	r1, r3
 8004194:	6101      	str	r1, [r0, #16]
 8004196:	4770      	bx	lr

08004198 <usart_transmit_config>:
 8004198:	68c3      	ldr	r3, [r0, #12]
 800419a:	f023 0308 	bic.w	r3, r3, #8
 800419e:	4319      	orrs	r1, r3
 80041a0:	60c1      	str	r1, [r0, #12]
 80041a2:	4770      	bx	lr

080041a4 <usart_receive_config>:
 80041a4:	68c3      	ldr	r3, [r0, #12]
 80041a6:	f023 0304 	bic.w	r3, r3, #4
 80041aa:	4319      	orrs	r1, r3
 80041ac:	60c1      	str	r1, [r0, #12]
 80041ae:	4770      	bx	lr

080041b0 <usart_hardware_flow_rts_config>:
 80041b0:	6943      	ldr	r3, [r0, #20]
 80041b2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80041b6:	4319      	orrs	r1, r3
 80041b8:	6141      	str	r1, [r0, #20]
 80041ba:	4770      	bx	lr

080041bc <usart_hardware_flow_cts_config>:
 80041bc:	6943      	ldr	r3, [r0, #20]
 80041be:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80041c2:	4319      	orrs	r1, r3
 80041c4:	6141      	str	r1, [r0, #20]
 80041c6:	4770      	bx	lr

080041c8 <usart_dma_transmit_config>:
 80041c8:	6943      	ldr	r3, [r0, #20]
 80041ca:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80041ce:	4319      	orrs	r1, r3
 80041d0:	6141      	str	r1, [r0, #20]
 80041d2:	4770      	bx	lr

080041d4 <usart_flag_get>:
 80041d4:	098b      	lsrs	r3, r1, #6
 80041d6:	f001 011f 	and.w	r1, r1, #31
 80041da:	581a      	ldr	r2, [r3, r0]
 80041dc:	2301      	movs	r3, #1
 80041de:	408b      	lsls	r3, r1
 80041e0:	4213      	tst	r3, r2
 80041e2:	bf14      	ite	ne
 80041e4:	2001      	movne	r0, #1
 80041e6:	2000      	moveq	r0, #0
 80041e8:	4770      	bx	lr

080041ea <usart_flag_clear>:
 80041ea:	b510      	push	{r4, lr}
 80041ec:	098c      	lsrs	r4, r1, #6
 80041ee:	2201      	movs	r2, #1
 80041f0:	5823      	ldr	r3, [r4, r0]
 80041f2:	f001 011f 	and.w	r1, r1, #31
 80041f6:	408a      	lsls	r2, r1
 80041f8:	ea23 0302 	bic.w	r3, r3, r2
 80041fc:	5023      	str	r3, [r4, r0]
 80041fe:	bd10      	pop	{r4, pc}

08004200 <usart_interrupt_enable>:
 8004200:	098a      	lsrs	r2, r1, #6
 8004202:	b510      	push	{r4, lr}
 8004204:	f001 011f 	and.w	r1, r1, #31
 8004208:	5814      	ldr	r4, [r2, r0]
 800420a:	2301      	movs	r3, #1
 800420c:	408b      	lsls	r3, r1
 800420e:	4323      	orrs	r3, r4
 8004210:	5013      	str	r3, [r2, r0]
 8004212:	bd10      	pop	{r4, pc}

08004214 <usart_interrupt_disable>:
 8004214:	f7ff bfe9 	b.w	80041ea <usart_flag_clear>

08004218 <usart_interrupt_flag_clear>:
 8004218:	b510      	push	{r4, lr}
 800421a:	0d8c      	lsrs	r4, r1, #22
 800421c:	2201      	movs	r2, #1
 800421e:	5823      	ldr	r3, [r4, r0]
 8004220:	f3c1 4104 	ubfx	r1, r1, #16, #5
 8004224:	408a      	lsls	r2, r1
 8004226:	ea23 0302 	bic.w	r3, r3, r2
 800422a:	5023      	str	r3, [r4, r0]
 800422c:	bd10      	pop	{r4, pc}
	...

08004230 <gd32_adc_init()>:
 8004230:	b510      	push	{r4, lr}
 8004232:	f240 6009 	movw	r0, #1545	; 0x609
 8004236:	4c21      	ldr	r4, [pc, #132]	; (80042bc <gd32_adc_init()+0x8c>)
 8004238:	f7ff fd86 	bl	8003d48 <rcu_periph_clock_enable>
 800423c:	2005      	movs	r0, #5
 800423e:	f7ff fda3 	bl	8003d88 <rcu_adc_clock_config>
 8004242:	4620      	mov	r0, r4
 8004244:	2201      	movs	r2, #1
 8004246:	f44f 7180 	mov.w	r1, #256	; 0x100
 800424a:	f000 fae3 	bl	8004814 <adc_special_function_config>
 800424e:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8004252:	4620      	mov	r0, r4
 8004254:	2102      	movs	r1, #2
 8004256:	f000 fb74 	bl	8004942 <adc_external_trigger_source_config>
 800425a:	2100      	movs	r1, #0
 800425c:	4620      	mov	r0, r4
 800425e:	f000 fb01 	bl	8004864 <adc_data_alignment_config>
 8004262:	2000      	movs	r0, #0
 8004264:	f000 fac6 	bl	80047f4 <adc_mode_config>
 8004268:	2202      	movs	r2, #2
 800426a:	4611      	mov	r1, r2
 800426c:	4620      	mov	r0, r4
 800426e:	f000 fb02 	bl	8004876 <adc_channel_length_config>
 8004272:	4620      	mov	r0, r4
 8004274:	2307      	movs	r3, #7
 8004276:	2210      	movs	r2, #16
 8004278:	2100      	movs	r1, #0
 800427a:	f000 fb19 	bl	80048b0 <adc_inserted_channel_config>
 800427e:	2307      	movs	r3, #7
 8004280:	4620      	mov	r0, r4
 8004282:	2211      	movs	r2, #17
 8004284:	2101      	movs	r1, #1
 8004286:	f000 fb13 	bl	80048b0 <adc_inserted_channel_config>
 800428a:	2201      	movs	r2, #1
 800428c:	2102      	movs	r1, #2
 800428e:	4620      	mov	r0, r4
 8004290:	f000 fb3c 	bl	800490c <adc_external_trigger_config>
 8004294:	f000 faa4 	bl	80047e0 <adc_tempsensor_vrefint_enable>
 8004298:	4620      	mov	r0, r4
 800429a:	f000 fa87 	bl	80047ac <adc_enable>
 800429e:	2100      	movs	r1, #0
 80042a0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80042a4:	f000 fa6a 	bl	800477c <udelay(unsigned int, unsigned int)>
 80042a8:	4620      	mov	r0, r4
 80042aa:	f000 fa87 	bl	80047bc <adc_calibration_enable>
 80042ae:	4620      	mov	r0, r4
 80042b0:	2102      	movs	r1, #2
 80042b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80042b6:	f000 bb55 	b.w	8004964 <adc_software_trigger_enable>
 80042ba:	bf00      	nop
 80042bc:	40012400 	andmi	r2, r1, r0, lsl #8

080042c0 <_stop() [clone .isra.0]>:
 80042c0:	b508      	push	{r3, lr}
 80042c2:	4806      	ldr	r0, [pc, #24]	; (80042dc <_stop() [clone .isra.0]+0x1c>)
 80042c4:	f000 fc04 	bl	8004ad0 <i2c_stop_on_bus>
 80042c8:	4905      	ldr	r1, [pc, #20]	; (80042e0 <_stop() [clone .isra.0]+0x20>)
 80042ca:	f640 73ff 	movw	r3, #4095	; 0xfff
 80042ce:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 80042d2:	0592      	lsls	r2, r2, #22
 80042d4:	d501      	bpl.n	80042da <_stop() [clone .isra.0]+0x1a>
 80042d6:	3b01      	subs	r3, #1
 80042d8:	d1f9      	bne.n	80042ce <_stop() [clone .isra.0]+0xe>
 80042da:	bd08      	pop	{r3, pc}
 80042dc:	40005400 	andmi	r5, r0, r0, lsl #8
 80042e0:	40005000 	andmi	r5, r0, r0

080042e4 <gd32_i2c_begin>:
 80042e4:	b508      	push	{r3, lr}
 80042e6:	f240 7015 	movw	r0, #1813	; 0x715
 80042ea:	f7ff fd2d 	bl	8003d48 <rcu_periph_clock_enable>
 80042ee:	f240 6003 	movw	r0, #1539	; 0x603
 80042f2:	f7ff fd29 	bl	8003d48 <rcu_periph_clock_enable>
 80042f6:	f240 6003 	movw	r0, #1539	; 0x603
 80042fa:	f7ff fd25 	bl	8003d48 <rcu_periph_clock_enable>
 80042fe:	4810      	ldr	r0, [pc, #64]	; (8004340 <gd32_i2c_begin+0x5c>)
 8004300:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004304:	2203      	movs	r2, #3
 8004306:	211c      	movs	r1, #28
 8004308:	f7ff fc86 	bl	8003c18 <gpio_init>
 800430c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004310:	2203      	movs	r2, #3
 8004312:	480b      	ldr	r0, [pc, #44]	; (8004340 <gd32_i2c_begin+0x5c>)
 8004314:	211c      	movs	r1, #28
 8004316:	f7ff fc7f 	bl	8003c18 <gpio_init>
 800431a:	2101      	movs	r1, #1
 800431c:	2002      	movs	r0, #2
 800431e:	f7ff fcdb 	bl	8003cd8 <gpio_pin_remap_config>
 8004322:	4908      	ldr	r1, [pc, #32]	; (8004344 <gd32_i2c_begin+0x60>)
 8004324:	4808      	ldr	r0, [pc, #32]	; (8004348 <gd32_i2c_begin+0x64>)
 8004326:	2200      	movs	r2, #0
 8004328:	f000 fb2a 	bl	8004980 <i2c_clock_config>
 800432c:	4806      	ldr	r0, [pc, #24]	; (8004348 <gd32_i2c_begin+0x64>)
 800432e:	f000 fbc5 	bl	8004abc <i2c_enable>
 8004332:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004336:	4804      	ldr	r0, [pc, #16]	; (8004348 <gd32_i2c_begin+0x64>)
 8004338:	2101      	movs	r1, #1
 800433a:	f000 bba5 	b.w	8004a88 <i2c_ack_config>
 800433e:	bf00      	nop
 8004340:	40010c00 	andmi	r0, r1, r0, lsl #24
 8004344:	00061a80 	andeq	r1, r6, r0, lsl #21
 8004348:	40005400 	andmi	r5, r0, r0, lsl #8

0800434c <gd32_i2c_set_baudrate>:
 800434c:	4601      	mov	r1, r0
 800434e:	2200      	movs	r2, #0
 8004350:	4801      	ldr	r0, [pc, #4]	; (8004358 <gd32_i2c_set_baudrate+0xc>)
 8004352:	f000 bb15 	b.w	8004980 <i2c_clock_config>
 8004356:	bf00      	nop
 8004358:	40005400 	andmi	r5, r0, r0, lsl #8

0800435c <gd32_i2c_set_address>:
 800435c:	4b01      	ldr	r3, [pc, #4]	; (8004364 <gd32_i2c_set_address+0x8>)
 800435e:	0040      	lsls	r0, r0, #1
 8004360:	7018      	strb	r0, [r3, #0]
 8004362:	4770      	bx	lr
 8004364:	20001820 	andcs	r1, r0, r0, lsr #16

08004368 <gd32_i2c_write>:
 8004368:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800436a:	4e30      	ldr	r6, [pc, #192]	; (800442c <gd32_i2c_write+0xc4>)
 800436c:	4604      	mov	r4, r0
 800436e:	460f      	mov	r7, r1
 8004370:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004374:	f240 6101 	movw	r1, #1537	; 0x601
 8004378:	4630      	mov	r0, r6
 800437a:	f000 fbb3 	bl	8004ae4 <i2c_flag_get>
 800437e:	b9b0      	cbnz	r0, 80043ae <gd32_i2c_write+0x46>
 8004380:	482a      	ldr	r0, [pc, #168]	; (800442c <gd32_i2c_write+0xc4>)
 8004382:	4e2a      	ldr	r6, [pc, #168]	; (800442c <gd32_i2c_write+0xc4>)
 8004384:	f000 fb9f 	bl	8004ac6 <i2c_start_on_bus>
 8004388:	f640 75ff 	movw	r5, #4095	; 0xfff
 800438c:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8004390:	4630      	mov	r0, r6
 8004392:	f000 fba7 	bl	8004ae4 <i2c_flag_get>
 8004396:	b190      	cbz	r0, 80043be <gd32_i2c_write+0x56>
 8004398:	4b25      	ldr	r3, [pc, #148]	; (8004430 <gd32_i2c_write+0xc8>)
 800439a:	4824      	ldr	r0, [pc, #144]	; (800442c <gd32_i2c_write+0xc4>)
 800439c:	7819      	ldrb	r1, [r3, #0]
 800439e:	4e23      	ldr	r6, [pc, #140]	; (800442c <gd32_i2c_write+0xc4>)
 80043a0:	f06f 0201 	mvn.w	r2, #1
 80043a4:	f000 fb82 	bl	8004aac <i2c_master_addressing>
 80043a8:	f640 75ff 	movw	r5, #4095	; 0xfff
 80043ac:	e00c      	b.n	80043c8 <gd32_i2c_write+0x60>
 80043ae:	3d01      	subs	r5, #1
 80043b0:	d1e0      	bne.n	8004374 <gd32_i2c_write+0xc>
 80043b2:	f7ff ff85 	bl	80042c0 <_stop() [clone .isra.0]>
 80043b6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80043ba:	4240      	negs	r0, r0
 80043bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80043be:	3d01      	subs	r5, #1
 80043c0:	d1e4      	bne.n	800438c <gd32_i2c_write+0x24>
 80043c2:	e7f6      	b.n	80043b2 <gd32_i2c_write+0x4a>
 80043c4:	3d01      	subs	r5, #1
 80043c6:	d0f4      	beq.n	80043b2 <gd32_i2c_write+0x4a>
 80043c8:	f240 5101 	movw	r1, #1281	; 0x501
 80043cc:	4630      	mov	r0, r6
 80043ce:	f000 fb89 	bl	8004ae4 <i2c_flag_get>
 80043d2:	2800      	cmp	r0, #0
 80043d4:	d0f6      	beq.n	80043c4 <gd32_i2c_write+0x5c>
 80043d6:	4815      	ldr	r0, [pc, #84]	; (800442c <gd32_i2c_write+0xc4>)
 80043d8:	4e14      	ldr	r6, [pc, #80]	; (800442c <gd32_i2c_write+0xc4>)
 80043da:	f240 5101 	movw	r1, #1281	; 0x501
 80043de:	f000 fb8c 	bl	8004afa <i2c_flag_clear>
 80043e2:	f640 75ff 	movw	r5, #4095	; 0xfff
 80043e6:	f240 5107 	movw	r1, #1287	; 0x507
 80043ea:	4630      	mov	r0, r6
 80043ec:	f000 fb7a 	bl	8004ae4 <i2c_flag_get>
 80043f0:	2801      	cmp	r0, #1
 80043f2:	d107      	bne.n	8004404 <gd32_i2c_write+0x9c>
 80043f4:	4e0d      	ldr	r6, [pc, #52]	; (800442c <gd32_i2c_write+0xc4>)
 80043f6:	4427      	add	r7, r4
 80043f8:	42a7      	cmp	r7, r4
 80043fa:	d106      	bne.n	800440a <gd32_i2c_write+0xa2>
 80043fc:	f7ff ff60 	bl	80042c0 <_stop() [clone .isra.0]>
 8004400:	2000      	movs	r0, #0
 8004402:	e7da      	b.n	80043ba <gd32_i2c_write+0x52>
 8004404:	3d01      	subs	r5, #1
 8004406:	d1ee      	bne.n	80043e6 <gd32_i2c_write+0x7e>
 8004408:	e7d3      	b.n	80043b2 <gd32_i2c_write+0x4a>
 800440a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800440e:	4630      	mov	r0, r6
 8004410:	f000 fb63 	bl	8004ada <i2c_data_transmit>
 8004414:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004418:	f240 5102 	movw	r1, #1282	; 0x502
 800441c:	4630      	mov	r0, r6
 800441e:	f000 fb61 	bl	8004ae4 <i2c_flag_get>
 8004422:	2800      	cmp	r0, #0
 8004424:	d1e8      	bne.n	80043f8 <gd32_i2c_write+0x90>
 8004426:	3d01      	subs	r5, #1
 8004428:	d1f6      	bne.n	8004418 <gd32_i2c_write+0xb0>
 800442a:	e7c2      	b.n	80043b2 <gd32_i2c_write+0x4a>
 800442c:	40005400 	andmi	r5, r0, r0, lsl #8
 8004430:	20001820 	andcs	r1, r0, r0, lsr #16

08004434 <gd32_i2c_read>:
 8004434:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004438:	4f4d      	ldr	r7, [pc, #308]	; (8004570 <gd32_i2c_read+0x13c>)
 800443a:	4680      	mov	r8, r0
 800443c:	460c      	mov	r4, r1
 800443e:	f640 76ff 	movw	r6, #4095	; 0xfff
 8004442:	f240 6101 	movw	r1, #1537	; 0x601
 8004446:	4638      	mov	r0, r7
 8004448:	f000 fb4c 	bl	8004ae4 <i2c_flag_get>
 800444c:	4605      	mov	r5, r0
 800444e:	bb08      	cbnz	r0, 8004494 <gd32_i2c_read+0x60>
 8004450:	2c02      	cmp	r4, #2
 8004452:	d103      	bne.n	800445c <gd32_i2c_read+0x28>
 8004454:	4601      	mov	r1, r0
 8004456:	4846      	ldr	r0, [pc, #280]	; (8004570 <gd32_i2c_read+0x13c>)
 8004458:	f000 fb1f 	bl	8004a9a <i2c_ackpos_config>
 800445c:	4844      	ldr	r0, [pc, #272]	; (8004570 <gd32_i2c_read+0x13c>)
 800445e:	4f44      	ldr	r7, [pc, #272]	; (8004570 <gd32_i2c_read+0x13c>)
 8004460:	f000 fb31 	bl	8004ac6 <i2c_start_on_bus>
 8004464:	f640 76ff 	movw	r6, #4095	; 0xfff
 8004468:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 800446c:	4638      	mov	r0, r7
 800446e:	f000 fb39 	bl	8004ae4 <i2c_flag_get>
 8004472:	b1a8      	cbz	r0, 80044a0 <gd32_i2c_read+0x6c>
 8004474:	4b3f      	ldr	r3, [pc, #252]	; (8004574 <gd32_i2c_read+0x140>)
 8004476:	483e      	ldr	r0, [pc, #248]	; (8004570 <gd32_i2c_read+0x13c>)
 8004478:	7819      	ldrb	r1, [r3, #0]
 800447a:	2201      	movs	r2, #1
 800447c:	f000 fb16 	bl	8004aac <i2c_master_addressing>
 8004480:	2c02      	cmp	r4, #2
 8004482:	d803      	bhi.n	800448c <gd32_i2c_read+0x58>
 8004484:	483a      	ldr	r0, [pc, #232]	; (8004570 <gd32_i2c_read+0x13c>)
 8004486:	2100      	movs	r1, #0
 8004488:	f000 fafe 	bl	8004a88 <i2c_ack_config>
 800448c:	4f38      	ldr	r7, [pc, #224]	; (8004570 <gd32_i2c_read+0x13c>)
 800448e:	f640 76ff 	movw	r6, #4095	; 0xfff
 8004492:	e00a      	b.n	80044aa <gd32_i2c_read+0x76>
 8004494:	3e01      	subs	r6, #1
 8004496:	d1d4      	bne.n	8004442 <gd32_i2c_read+0xe>
 8004498:	f7ff ff12 	bl	80042c0 <_stop() [clone .isra.0]>
 800449c:	2504      	movs	r5, #4
 800449e:	e04d      	b.n	800453c <gd32_i2c_read+0x108>
 80044a0:	3e01      	subs	r6, #1
 80044a2:	d1e1      	bne.n	8004468 <gd32_i2c_read+0x34>
 80044a4:	e7f8      	b.n	8004498 <gd32_i2c_read+0x64>
 80044a6:	3e01      	subs	r6, #1
 80044a8:	d0f6      	beq.n	8004498 <gd32_i2c_read+0x64>
 80044aa:	f240 5101 	movw	r1, #1281	; 0x501
 80044ae:	4638      	mov	r0, r7
 80044b0:	f000 fb18 	bl	8004ae4 <i2c_flag_get>
 80044b4:	2800      	cmp	r0, #0
 80044b6:	d0f6      	beq.n	80044a6 <gd32_i2c_read+0x72>
 80044b8:	482d      	ldr	r0, [pc, #180]	; (8004570 <gd32_i2c_read+0x13c>)
 80044ba:	f240 5101 	movw	r1, #1281	; 0x501
 80044be:	f000 fb1c 	bl	8004afa <i2c_flag_clear>
 80044c2:	2c01      	cmp	r4, #1
 80044c4:	d102      	bne.n	80044cc <gd32_i2c_read+0x98>
 80044c6:	482a      	ldr	r0, [pc, #168]	; (8004570 <gd32_i2c_read+0x13c>)
 80044c8:	f000 fb02 	bl	8004ad0 <i2c_stop_on_bus>
 80044cc:	4e28      	ldr	r6, [pc, #160]	; (8004570 <gd32_i2c_read+0x13c>)
 80044ce:	f640 77ff 	movw	r7, #4095	; 0xfff
 80044d2:	e022      	b.n	800451a <gd32_i2c_read+0xe6>
 80044d4:	2c03      	cmp	r4, #3
 80044d6:	d134      	bne.n	8004542 <gd32_i2c_read+0x10e>
 80044d8:	f640 79ff 	movw	r9, #4095	; 0xfff
 80044dc:	e002      	b.n	80044e4 <gd32_i2c_read+0xb0>
 80044de:	f1b9 0901 	subs.w	r9, r9, #1
 80044e2:	d0d9      	beq.n	8004498 <gd32_i2c_read+0x64>
 80044e4:	f240 5102 	movw	r1, #1282	; 0x502
 80044e8:	4630      	mov	r0, r6
 80044ea:	f000 fafb 	bl	8004ae4 <i2c_flag_get>
 80044ee:	2800      	cmp	r0, #0
 80044f0:	d0f5      	beq.n	80044de <gd32_i2c_read+0xaa>
 80044f2:	2100      	movs	r1, #0
 80044f4:	4630      	mov	r0, r6
 80044f6:	f000 fac7 	bl	8004a88 <i2c_ack_config>
 80044fa:	f240 5106 	movw	r1, #1286	; 0x506
 80044fe:	4630      	mov	r0, r6
 8004500:	f000 faf0 	bl	8004ae4 <i2c_flag_get>
 8004504:	b138      	cbz	r0, 8004516 <gd32_i2c_read+0xe2>
 8004506:	4630      	mov	r0, r6
 8004508:	f000 fae9 	bl	8004ade <i2c_data_receive>
 800450c:	f808 0b01 	strb.w	r0, [r8], #1
 8004510:	3c01      	subs	r4, #1
 8004512:	f640 77ff 	movw	r7, #4095	; 0xfff
 8004516:	3f01      	subs	r7, #1
 8004518:	d0be      	beq.n	8004498 <gd32_i2c_read+0x64>
 800451a:	2c00      	cmp	r4, #0
 800451c:	d1da      	bne.n	80044d4 <gd32_i2c_read+0xa0>
 800451e:	4916      	ldr	r1, [pc, #88]	; (8004578 <gd32_i2c_read+0x144>)
 8004520:	f640 73ff 	movw	r3, #4095	; 0xfff
 8004524:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8004528:	0592      	lsls	r2, r2, #22
 800452a:	d41d      	bmi.n	8004568 <gd32_i2c_read+0x134>
 800452c:	4810      	ldr	r0, [pc, #64]	; (8004570 <gd32_i2c_read+0x13c>)
 800452e:	2101      	movs	r1, #1
 8004530:	f000 faaa 	bl	8004a88 <i2c_ack_config>
 8004534:	480e      	ldr	r0, [pc, #56]	; (8004570 <gd32_i2c_read+0x13c>)
 8004536:	2101      	movs	r1, #1
 8004538:	f000 faaf 	bl	8004a9a <i2c_ackpos_config>
 800453c:	4628      	mov	r0, r5
 800453e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004542:	2c02      	cmp	r4, #2
 8004544:	d1d9      	bne.n	80044fa <gd32_i2c_read+0xc6>
 8004546:	f640 79ff 	movw	r9, #4095	; 0xfff
 800454a:	e002      	b.n	8004552 <gd32_i2c_read+0x11e>
 800454c:	f1b9 0901 	subs.w	r9, r9, #1
 8004550:	d0a2      	beq.n	8004498 <gd32_i2c_read+0x64>
 8004552:	f240 5102 	movw	r1, #1282	; 0x502
 8004556:	4630      	mov	r0, r6
 8004558:	f000 fac4 	bl	8004ae4 <i2c_flag_get>
 800455c:	2800      	cmp	r0, #0
 800455e:	d0f5      	beq.n	800454c <gd32_i2c_read+0x118>
 8004560:	4630      	mov	r0, r6
 8004562:	f000 fab5 	bl	8004ad0 <i2c_stop_on_bus>
 8004566:	e7c8      	b.n	80044fa <gd32_i2c_read+0xc6>
 8004568:	3b01      	subs	r3, #1
 800456a:	d1db      	bne.n	8004524 <gd32_i2c_read+0xf0>
 800456c:	e796      	b.n	800449c <gd32_i2c_read+0x68>
 800456e:	bf00      	nop
 8004570:	40005400 	andmi	r5, r0, r0, lsl #8
 8004574:	20001820 	andcs	r1, r0, r0, lsr #16
 8004578:	40005000 	andmi	r5, r0, r0

0800457c <gd32_uart_begin>:
 800457c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800457e:	461e      	mov	r6, r3
 8004580:	4b63      	ldr	r3, [pc, #396]	; (8004710 <gd32_uart_begin+0x194>)
 8004582:	4298      	cmp	r0, r3
 8004584:	4604      	mov	r4, r0
 8004586:	460f      	mov	r7, r1
 8004588:	4615      	mov	r5, r2
 800458a:	d03b      	beq.n	8004604 <gd32_uart_begin+0x88>
 800458c:	d80a      	bhi.n	80045a4 <gd32_uart_begin+0x28>
 800458e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004592:	4298      	cmp	r0, r3
 8004594:	d02f      	beq.n	80045f6 <gd32_uart_begin+0x7a>
 8004596:	f240 7012 	movw	r0, #1810	; 0x712
 800459a:	f7ff fbd5 	bl	8003d48 <rcu_periph_clock_enable>
 800459e:	f240 6004 	movw	r0, #1540	; 0x604
 80045a2:	e008      	b.n	80045b6 <gd32_uart_begin+0x3a>
 80045a4:	4b5b      	ldr	r3, [pc, #364]	; (8004714 <gd32_uart_begin+0x198>)
 80045a6:	4298      	cmp	r0, r3
 80045a8:	d02f      	beq.n	800460a <gd32_uart_begin+0x8e>
 80045aa:	f240 600e 	movw	r0, #1550	; 0x60e
 80045ae:	f7ff fbcb 	bl	8003d48 <rcu_periph_clock_enable>
 80045b2:	f240 6003 	movw	r0, #1539	; 0x603
 80045b6:	f7ff fbc7 	bl	8003d48 <rcu_periph_clock_enable>
 80045ba:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80045be:	f7ff fbc3 	bl	8003d48 <rcu_periph_clock_enable>
 80045c2:	4b53      	ldr	r3, [pc, #332]	; (8004710 <gd32_uart_begin+0x194>)
 80045c4:	429c      	cmp	r4, r3
 80045c6:	f000 8084 	beq.w	80046d2 <gd32_uart_begin+0x156>
 80045ca:	d829      	bhi.n	8004620 <gd32_uart_begin+0xa4>
 80045cc:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80045d0:	429c      	cmp	r4, r3
 80045d2:	d071      	beq.n	80046b8 <gd32_uart_begin+0x13c>
 80045d4:	4850      	ldr	r0, [pc, #320]	; (8004718 <gd32_uart_begin+0x19c>)
 80045d6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80045da:	2203      	movs	r2, #3
 80045dc:	2118      	movs	r1, #24
 80045de:	f7ff fb1b 	bl	8003c18 <gpio_init>
 80045e2:	484d      	ldr	r0, [pc, #308]	; (8004718 <gd32_uart_begin+0x19c>)
 80045e4:	2104      	movs	r1, #4
 80045e6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80045ea:	2203      	movs	r2, #3
 80045ec:	f7ff fb14 	bl	8003c18 <gpio_init>
 80045f0:	484a      	ldr	r0, [pc, #296]	; (800471c <gd32_uart_begin+0x1a0>)
 80045f2:	2101      	movs	r1, #1
 80045f4:	e025      	b.n	8004642 <gd32_uart_begin+0xc6>
 80045f6:	f240 7011 	movw	r0, #1809	; 0x711
 80045fa:	f7ff fba5 	bl	8003d48 <rcu_periph_clock_enable>
 80045fe:	f240 6002 	movw	r0, #1538	; 0x602
 8004602:	e7d8      	b.n	80045b6 <gd32_uart_begin+0x3a>
 8004604:	f240 7013 	movw	r0, #1811	; 0x713
 8004608:	e7c7      	b.n	800459a <gd32_uart_begin+0x1e>
 800460a:	f240 7014 	movw	r0, #1812	; 0x714
 800460e:	f7ff fb9b 	bl	8003d48 <rcu_periph_clock_enable>
 8004612:	f240 6004 	movw	r0, #1540	; 0x604
 8004616:	f7ff fb97 	bl	8003d48 <rcu_periph_clock_enable>
 800461a:	f240 6005 	movw	r0, #1541	; 0x605
 800461e:	e7ca      	b.n	80045b6 <gd32_uart_begin+0x3a>
 8004620:	4b3c      	ldr	r3, [pc, #240]	; (8004714 <gd32_uart_begin+0x198>)
 8004622:	429c      	cmp	r4, r3
 8004624:	d062      	beq.n	80046ec <gd32_uart_begin+0x170>
 8004626:	483e      	ldr	r0, [pc, #248]	; (8004720 <gd32_uart_begin+0x1a4>)
 8004628:	2340      	movs	r3, #64	; 0x40
 800462a:	2203      	movs	r2, #3
 800462c:	2118      	movs	r1, #24
 800462e:	f7ff faf3 	bl	8003c18 <gpio_init>
 8004632:	483b      	ldr	r0, [pc, #236]	; (8004720 <gd32_uart_begin+0x1a4>)
 8004634:	2104      	movs	r1, #4
 8004636:	2380      	movs	r3, #128	; 0x80
 8004638:	2203      	movs	r2, #3
 800463a:	f7ff faed 	bl	8003c18 <gpio_init>
 800463e:	2101      	movs	r1, #1
 8004640:	2004      	movs	r0, #4
 8004642:	f7ff fb49 	bl	8003cd8 <gpio_pin_remap_config>
 8004646:	4620      	mov	r0, r4
 8004648:	f7ff fd26 	bl	8004098 <usart_deinit>
 800464c:	68e3      	ldr	r3, [r4, #12]
 800464e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004652:	60e3      	str	r3, [r4, #12]
 8004654:	4639      	mov	r1, r7
 8004656:	4620      	mov	r0, r4
 8004658:	f7ff fd5e 	bl	8004118 <usart_baudrate_set>
 800465c:	f1a5 0309 	sub.w	r3, r5, #9
 8004660:	4259      	negs	r1, r3
 8004662:	4159      	adcs	r1, r3
 8004664:	0309      	lsls	r1, r1, #12
 8004666:	4620      	mov	r0, r4
 8004668:	f7ff fd86 	bl	8004178 <usart_word_length_set>
 800466c:	9906      	ldr	r1, [sp, #24]
 800466e:	1e8a      	subs	r2, r1, #2
 8004670:	4251      	negs	r1, r2
 8004672:	4151      	adcs	r1, r2
 8004674:	0349      	lsls	r1, r1, #13
 8004676:	4620      	mov	r0, r4
 8004678:	f7ff fd86 	bl	8004188 <usart_stop_bit_set>
 800467c:	2e01      	cmp	r6, #1
 800467e:	d041      	beq.n	8004704 <gd32_uart_begin+0x188>
 8004680:	2e02      	cmp	r6, #2
 8004682:	d142      	bne.n	800470a <gd32_uart_begin+0x18e>
 8004684:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8004688:	4620      	mov	r0, r4
 800468a:	f7ff fd6d 	bl	8004168 <usart_parity_config>
 800468e:	2100      	movs	r1, #0
 8004690:	4620      	mov	r0, r4
 8004692:	f7ff fd8d 	bl	80041b0 <usart_hardware_flow_rts_config>
 8004696:	2100      	movs	r1, #0
 8004698:	4620      	mov	r0, r4
 800469a:	f7ff fd8f 	bl	80041bc <usart_hardware_flow_cts_config>
 800469e:	2104      	movs	r1, #4
 80046a0:	4620      	mov	r0, r4
 80046a2:	f7ff fd7f 	bl	80041a4 <usart_receive_config>
 80046a6:	2108      	movs	r1, #8
 80046a8:	4620      	mov	r0, r4
 80046aa:	f7ff fd75 	bl	8004198 <usart_transmit_config>
 80046ae:	68e3      	ldr	r3, [r4, #12]
 80046b0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80046b4:	60e3      	str	r3, [r4, #12]
 80046b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80046b8:	481a      	ldr	r0, [pc, #104]	; (8004724 <gd32_uart_begin+0x1a8>)
 80046ba:	2304      	movs	r3, #4
 80046bc:	2203      	movs	r2, #3
 80046be:	2118      	movs	r1, #24
 80046c0:	f7ff faaa 	bl	8003c18 <gpio_init>
 80046c4:	4817      	ldr	r0, [pc, #92]	; (8004724 <gd32_uart_begin+0x1a8>)
 80046c6:	2308      	movs	r3, #8
 80046c8:	2203      	movs	r2, #3
 80046ca:	2104      	movs	r1, #4
 80046cc:	f7ff faa4 	bl	8003c18 <gpio_init>
 80046d0:	e7b9      	b.n	8004646 <gd32_uart_begin+0xca>
 80046d2:	4811      	ldr	r0, [pc, #68]	; (8004718 <gd32_uart_begin+0x19c>)
 80046d4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80046d8:	2203      	movs	r2, #3
 80046da:	2118      	movs	r1, #24
 80046dc:	f7ff fa9c 	bl	8003c18 <gpio_init>
 80046e0:	480d      	ldr	r0, [pc, #52]	; (8004718 <gd32_uart_begin+0x19c>)
 80046e2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80046e6:	2203      	movs	r2, #3
 80046e8:	2104      	movs	r1, #4
 80046ea:	e7ef      	b.n	80046cc <gd32_uart_begin+0x150>
 80046ec:	480a      	ldr	r0, [pc, #40]	; (8004718 <gd32_uart_begin+0x19c>)
 80046ee:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80046f2:	2203      	movs	r2, #3
 80046f4:	2118      	movs	r1, #24
 80046f6:	f7ff fa8f 	bl	8003c18 <gpio_init>
 80046fa:	2304      	movs	r3, #4
 80046fc:	480a      	ldr	r0, [pc, #40]	; (8004728 <gd32_uart_begin+0x1ac>)
 80046fe:	2203      	movs	r2, #3
 8004700:	4619      	mov	r1, r3
 8004702:	e7e3      	b.n	80046cc <gd32_uart_begin+0x150>
 8004704:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8004708:	e7be      	b.n	8004688 <gd32_uart_begin+0x10c>
 800470a:	2100      	movs	r1, #0
 800470c:	e7bc      	b.n	8004688 <gd32_uart_begin+0x10c>
 800470e:	bf00      	nop
 8004710:	40004c00 	andmi	r4, r0, r0, lsl #24
 8004714:	40005000 	andmi	r5, r0, r0
 8004718:	40011000 	andmi	r1, r1, r0
 800471c:	00140010 	andseq	r0, r4, r0, lsl r0
 8004720:	40010c00 	andmi	r0, r1, r0, lsl #24
 8004724:	40010800 	andmi	r0, r1, r0, lsl #16
 8004728:	40011400 	andmi	r1, r1, r0, lsl #8

0800472c <mac_address_get(unsigned char*)>:
 800472c:	4a07      	ldr	r2, [pc, #28]	; (800474c <mac_address_get(unsigned char*)+0x20>)
 800472e:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8004732:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8004736:	7042      	strb	r2, [r0, #1]
 8004738:	0e1a      	lsrs	r2, r3, #24
 800473a:	7082      	strb	r2, [r0, #2]
 800473c:	0c1a      	lsrs	r2, r3, #16
 800473e:	2102      	movs	r1, #2
 8004740:	70c2      	strb	r2, [r0, #3]
 8004742:	0a1a      	lsrs	r2, r3, #8
 8004744:	7001      	strb	r1, [r0, #0]
 8004746:	7102      	strb	r2, [r0, #4]
 8004748:	7143      	strb	r3, [r0, #5]
 800474a:	4770      	bx	lr
 800474c:	1ffff000 	svcne	0x00fff000

08004750 <micros_init()>:
 8004750:	4770      	bx	lr
	...

08004754 <udelay_init()>:
 8004754:	4a07      	ldr	r2, [pc, #28]	; (8004774 <udelay_init()+0x20>)
 8004756:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 800475a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800475e:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8004762:	4b05      	ldr	r3, [pc, #20]	; (8004778 <udelay_init()+0x24>)
 8004764:	2200      	movs	r2, #0
 8004766:	605a      	str	r2, [r3, #4]
 8004768:	681a      	ldr	r2, [r3, #0]
 800476a:	f042 0201 	orr.w	r2, r2, #1
 800476e:	601a      	str	r2, [r3, #0]
 8004770:	4770      	bx	lr
 8004772:	bf00      	nop
 8004774:	e000ed00 	and	lr, r0, r0, lsl #26
 8004778:	e0001000 	and	r1, r0, r0

0800477c <udelay(unsigned int, unsigned int)>:
 800477c:	2378      	movs	r3, #120	; 0x78
 800477e:	b530      	push	{r4, r5, lr}
 8004780:	4358      	muls	r0, r3
 8004782:	b909      	cbnz	r1, 8004788 <udelay(unsigned int, unsigned int)+0xc>
 8004784:	4b08      	ldr	r3, [pc, #32]	; (80047a8 <udelay(unsigned int, unsigned int)+0x2c>)
 8004786:	6859      	ldr	r1, [r3, #4]
 8004788:	4c07      	ldr	r4, [pc, #28]	; (80047a8 <udelay(unsigned int, unsigned int)+0x2c>)
 800478a:	2300      	movs	r3, #0
 800478c:	6862      	ldr	r2, [r4, #4]
 800478e:	4291      	cmp	r1, r2
 8004790:	d0fc      	beq.n	800478c <udelay(unsigned int, unsigned int)+0x10>
 8004792:	bf2a      	itet	cs
 8004794:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8004798:	189b      	addcc	r3, r3, r2
 800479a:	195b      	addcs	r3, r3, r5
 800479c:	1a5b      	subs	r3, r3, r1
 800479e:	4283      	cmp	r3, r0
 80047a0:	d300      	bcc.n	80047a4 <udelay(unsigned int, unsigned int)+0x28>
 80047a2:	bd30      	pop	{r4, r5, pc}
 80047a4:	4611      	mov	r1, r2
 80047a6:	e7f1      	b.n	800478c <udelay(unsigned int, unsigned int)+0x10>
 80047a8:	e0001000 	and	r1, r0, r0

080047ac <adc_enable>:
 80047ac:	6883      	ldr	r3, [r0, #8]
 80047ae:	07db      	lsls	r3, r3, #31
 80047b0:	bf5e      	ittt	pl
 80047b2:	6883      	ldrpl	r3, [r0, #8]
 80047b4:	f043 0301 	orrpl.w	r3, r3, #1
 80047b8:	6083      	strpl	r3, [r0, #8]
 80047ba:	4770      	bx	lr

080047bc <adc_calibration_enable>:
 80047bc:	6883      	ldr	r3, [r0, #8]
 80047be:	f043 0308 	orr.w	r3, r3, #8
 80047c2:	f100 0208 	add.w	r2, r0, #8
 80047c6:	6083      	str	r3, [r0, #8]
 80047c8:	6813      	ldr	r3, [r2, #0]
 80047ca:	0719      	lsls	r1, r3, #28
 80047cc:	d4fc      	bmi.n	80047c8 <adc_calibration_enable+0xc>
 80047ce:	6883      	ldr	r3, [r0, #8]
 80047d0:	f043 0304 	orr.w	r3, r3, #4
 80047d4:	6083      	str	r3, [r0, #8]
 80047d6:	6813      	ldr	r3, [r2, #0]
 80047d8:	075b      	lsls	r3, r3, #29
 80047da:	d4fc      	bmi.n	80047d6 <adc_calibration_enable+0x1a>
 80047dc:	4770      	bx	lr
	...

080047e0 <adc_tempsensor_vrefint_enable>:
 80047e0:	4a03      	ldr	r2, [pc, #12]	; (80047f0 <adc_tempsensor_vrefint_enable+0x10>)
 80047e2:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 80047e6:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80047ea:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 80047ee:	4770      	bx	lr
 80047f0:	40012000 	andmi	r2, r1, r0

080047f4 <adc_mode_config>:
 80047f4:	4b06      	ldr	r3, [pc, #24]	; (8004810 <adc_mode_config+0x1c>)
 80047f6:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 80047fa:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 80047fe:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8004802:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8004806:	4310      	orrs	r0, r2
 8004808:	f8c3 0404 	str.w	r0, [r3, #1028]	; 0x404
 800480c:	4770      	bx	lr
 800480e:	bf00      	nop
 8004810:	40012000 	andmi	r2, r1, r0

08004814 <adc_special_function_config>:
 8004814:	b510      	push	{r4, lr}
 8004816:	f401 7380 	and.w	r3, r1, #256	; 0x100
 800481a:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 800481e:	f001 0102 	and.w	r1, r1, #2
 8004822:	b17a      	cbz	r2, 8004844 <adc_special_function_config+0x30>
 8004824:	b11b      	cbz	r3, 800482e <adc_special_function_config+0x1a>
 8004826:	6843      	ldr	r3, [r0, #4]
 8004828:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800482c:	6043      	str	r3, [r0, #4]
 800482e:	b11c      	cbz	r4, 8004838 <adc_special_function_config+0x24>
 8004830:	6843      	ldr	r3, [r0, #4]
 8004832:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8004836:	6043      	str	r3, [r0, #4]
 8004838:	b119      	cbz	r1, 8004842 <adc_special_function_config+0x2e>
 800483a:	6883      	ldr	r3, [r0, #8]
 800483c:	f043 0302 	orr.w	r3, r3, #2
 8004840:	6083      	str	r3, [r0, #8]
 8004842:	bd10      	pop	{r4, pc}
 8004844:	b11b      	cbz	r3, 800484e <adc_special_function_config+0x3a>
 8004846:	6843      	ldr	r3, [r0, #4]
 8004848:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800484c:	6043      	str	r3, [r0, #4]
 800484e:	b11c      	cbz	r4, 8004858 <adc_special_function_config+0x44>
 8004850:	6843      	ldr	r3, [r0, #4]
 8004852:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8004856:	6043      	str	r3, [r0, #4]
 8004858:	2900      	cmp	r1, #0
 800485a:	d0f2      	beq.n	8004842 <adc_special_function_config+0x2e>
 800485c:	6883      	ldr	r3, [r0, #8]
 800485e:	f023 0302 	bic.w	r3, r3, #2
 8004862:	e7ed      	b.n	8004840 <adc_special_function_config+0x2c>

08004864 <adc_data_alignment_config>:
 8004864:	6883      	ldr	r3, [r0, #8]
 8004866:	b119      	cbz	r1, 8004870 <adc_data_alignment_config+0xc>
 8004868:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800486c:	6083      	str	r3, [r0, #8]
 800486e:	4770      	bx	lr
 8004870:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004874:	e7fa      	b.n	800486c <adc_data_alignment_config+0x8>

08004876 <adc_channel_length_config>:
 8004876:	2901      	cmp	r1, #1
 8004878:	d002      	beq.n	8004880 <adc_channel_length_config+0xa>
 800487a:	2902      	cmp	r1, #2
 800487c:	d00c      	beq.n	8004898 <adc_channel_length_config+0x22>
 800487e:	4770      	bx	lr
 8004880:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8004882:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8004886:	62c3      	str	r3, [r0, #44]	; 0x2c
 8004888:	3a01      	subs	r2, #1
 800488a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800488c:	0512      	lsls	r2, r2, #20
 800488e:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8004892:	431a      	orrs	r2, r3
 8004894:	62c2      	str	r2, [r0, #44]	; 0x2c
 8004896:	4770      	bx	lr
 8004898:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800489a:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 800489e:	6383      	str	r3, [r0, #56]	; 0x38
 80048a0:	3a01      	subs	r2, #1
 80048a2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80048a4:	0512      	lsls	r2, r2, #20
 80048a6:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 80048aa:	431a      	orrs	r2, r3
 80048ac:	6382      	str	r2, [r0, #56]	; 0x38
 80048ae:	4770      	bx	lr

080048b0 <adc_inserted_channel_config>:
 80048b0:	b530      	push	{r4, r5, lr}
 80048b2:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80048b4:	6b84      	ldr	r4, [r0, #56]	; 0x38
 80048b6:	f3c5 5501 	ubfx	r5, r5, #20, #2
 80048ba:	3103      	adds	r1, #3
 80048bc:	1b49      	subs	r1, r1, r5
 80048be:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80048c2:	251f      	movs	r5, #31
 80048c4:	408d      	lsls	r5, r1
 80048c6:	ea24 0405 	bic.w	r4, r4, r5
 80048ca:	fa02 f101 	lsl.w	r1, r2, r1
 80048ce:	4321      	orrs	r1, r4
 80048d0:	2a09      	cmp	r2, #9
 80048d2:	6381      	str	r1, [r0, #56]	; 0x38
 80048d4:	d80a      	bhi.n	80048ec <adc_inserted_channel_config+0x3c>
 80048d6:	6901      	ldr	r1, [r0, #16]
 80048d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80048dc:	2407      	movs	r4, #7
 80048de:	4094      	lsls	r4, r2
 80048e0:	ea21 0104 	bic.w	r1, r1, r4
 80048e4:	4093      	lsls	r3, r2
 80048e6:	430b      	orrs	r3, r1
 80048e8:	6103      	str	r3, [r0, #16]
 80048ea:	bd30      	pop	{r4, r5, pc}
 80048ec:	2a11      	cmp	r2, #17
 80048ee:	d8fc      	bhi.n	80048ea <adc_inserted_channel_config+0x3a>
 80048f0:	2103      	movs	r1, #3
 80048f2:	f06f 051d 	mvn.w	r5, #29
 80048f6:	fb11 5202 	smlabb	r2, r1, r2, r5
 80048fa:	68c4      	ldr	r4, [r0, #12]
 80048fc:	2107      	movs	r1, #7
 80048fe:	4091      	lsls	r1, r2
 8004900:	ea24 0101 	bic.w	r1, r4, r1
 8004904:	4093      	lsls	r3, r2
 8004906:	430b      	orrs	r3, r1
 8004908:	60c3      	str	r3, [r0, #12]
 800490a:	e7ee      	b.n	80048ea <adc_inserted_channel_config+0x3a>

0800490c <adc_external_trigger_config>:
 800490c:	f001 0301 	and.w	r3, r1, #1
 8004910:	f001 0102 	and.w	r1, r1, #2
 8004914:	b152      	cbz	r2, 800492c <adc_external_trigger_config+0x20>
 8004916:	b11b      	cbz	r3, 8004920 <adc_external_trigger_config+0x14>
 8004918:	6883      	ldr	r3, [r0, #8]
 800491a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800491e:	6083      	str	r3, [r0, #8]
 8004920:	b119      	cbz	r1, 800492a <adc_external_trigger_config+0x1e>
 8004922:	6883      	ldr	r3, [r0, #8]
 8004924:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004928:	6083      	str	r3, [r0, #8]
 800492a:	4770      	bx	lr
 800492c:	b11b      	cbz	r3, 8004936 <adc_external_trigger_config+0x2a>
 800492e:	6883      	ldr	r3, [r0, #8]
 8004930:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8004934:	6083      	str	r3, [r0, #8]
 8004936:	2900      	cmp	r1, #0
 8004938:	d0f7      	beq.n	800492a <adc_external_trigger_config+0x1e>
 800493a:	6883      	ldr	r3, [r0, #8]
 800493c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8004940:	e7f2      	b.n	8004928 <adc_external_trigger_config+0x1c>

08004942 <adc_external_trigger_source_config>:
 8004942:	2901      	cmp	r1, #1
 8004944:	d002      	beq.n	800494c <adc_external_trigger_source_config+0xa>
 8004946:	2902      	cmp	r1, #2
 8004948:	d008      	beq.n	800495c <adc_external_trigger_source_config+0x1a>
 800494a:	4770      	bx	lr
 800494c:	6883      	ldr	r3, [r0, #8]
 800494e:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8004952:	6083      	str	r3, [r0, #8]
 8004954:	6883      	ldr	r3, [r0, #8]
 8004956:	4313      	orrs	r3, r2
 8004958:	6083      	str	r3, [r0, #8]
 800495a:	4770      	bx	lr
 800495c:	6883      	ldr	r3, [r0, #8]
 800495e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004962:	e7f6      	b.n	8004952 <adc_external_trigger_source_config+0x10>

08004964 <adc_software_trigger_enable>:
 8004964:	07ca      	lsls	r2, r1, #31
 8004966:	bf42      	ittt	mi
 8004968:	6883      	ldrmi	r3, [r0, #8]
 800496a:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 800496e:	6083      	strmi	r3, [r0, #8]
 8004970:	078b      	lsls	r3, r1, #30
 8004972:	bf42      	ittt	mi
 8004974:	6883      	ldrmi	r3, [r0, #8]
 8004976:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 800497a:	6083      	strmi	r3, [r0, #8]
 800497c:	4770      	bx	lr
	...

08004980 <i2c_clock_config>:
 8004980:	b570      	push	{r4, r5, r6, lr}
 8004982:	4604      	mov	r4, r0
 8004984:	4616      	mov	r6, r2
 8004986:	460d      	mov	r5, r1
 8004988:	b901      	cbnz	r1, 800498c <i2c_clock_config+0xc>
 800498a:	e7fe      	b.n	800498a <i2c_clock_config+0xa>
 800498c:	2002      	movs	r0, #2
 800498e:	f7ff fa29 	bl	8003de4 <rcu_clock_freq_get>
 8004992:	4a39      	ldr	r2, [pc, #228]	; (8004a78 <i2c_clock_config+0xf8>)
 8004994:	4939      	ldr	r1, [pc, #228]	; (8004a7c <i2c_clock_config+0xfc>)
 8004996:	fbb0 f1f1 	udiv	r1, r0, r1
 800499a:	4290      	cmp	r0, r2
 800499c:	bf34      	ite	cc
 800499e:	460b      	movcc	r3, r1
 80049a0:	233c      	movcs	r3, #60	; 0x3c
 80049a2:	6862      	ldr	r2, [r4, #4]
 80049a4:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 80049a8:	431a      	orrs	r2, r3
 80049aa:	6062      	str	r2, [r4, #4]
 80049ac:	4a34      	ldr	r2, [pc, #208]	; (8004a80 <i2c_clock_config+0x100>)
 80049ae:	4295      	cmp	r5, r2
 80049b0:	d816      	bhi.n	80049e0 <i2c_clock_config+0x60>
 80049b2:	3101      	adds	r1, #1
 80049b4:	293b      	cmp	r1, #59	; 0x3b
 80049b6:	d90d      	bls.n	80049d4 <i2c_clock_config+0x54>
 80049b8:	233c      	movs	r3, #60	; 0x3c
 80049ba:	6223      	str	r3, [r4, #32]
 80049bc:	006d      	lsls	r5, r5, #1
 80049be:	fbb0 f0f5 	udiv	r0, r0, r5
 80049c2:	2804      	cmp	r0, #4
 80049c4:	69e3      	ldr	r3, [r4, #28]
 80049c6:	bf38      	it	cc
 80049c8:	2004      	movcc	r0, #4
 80049ca:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80049ce:	4318      	orrs	r0, r3
 80049d0:	61e0      	str	r0, [r4, #28]
 80049d2:	bd70      	pop	{r4, r5, r6, pc}
 80049d4:	2902      	cmp	r1, #2
 80049d6:	d801      	bhi.n	80049dc <i2c_clock_config+0x5c>
 80049d8:	2302      	movs	r3, #2
 80049da:	e7ee      	b.n	80049ba <i2c_clock_config+0x3a>
 80049dc:	6221      	str	r1, [r4, #32]
 80049de:	e7ed      	b.n	80049bc <i2c_clock_config+0x3c>
 80049e0:	4a28      	ldr	r2, [pc, #160]	; (8004a84 <i2c_clock_config+0x104>)
 80049e2:	4295      	cmp	r5, r2
 80049e4:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80049e8:	d824      	bhi.n	8004a34 <i2c_clock_config+0xb4>
 80049ea:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80049ee:	4353      	muls	r3, r2
 80049f0:	fbb3 f3f1 	udiv	r3, r3, r1
 80049f4:	3301      	adds	r3, #1
 80049f6:	6223      	str	r3, [r4, #32]
 80049f8:	b9a6      	cbnz	r6, 8004a24 <i2c_clock_config+0xa4>
 80049fa:	eb05 0345 	add.w	r3, r5, r5, lsl #1
 80049fe:	fbb0 f0f3 	udiv	r0, r0, r3
 8004a02:	69e3      	ldr	r3, [r4, #28]
 8004a04:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8004a08:	61e3      	str	r3, [r4, #28]
 8004a0a:	f3c0 030b 	ubfx	r3, r0, #0, #12
 8004a0e:	b90b      	cbnz	r3, 8004a14 <i2c_clock_config+0x94>
 8004a10:	f040 0001 	orr.w	r0, r0, #1
 8004a14:	69e3      	ldr	r3, [r4, #28]
 8004a16:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004a1a:	61e3      	str	r3, [r4, #28]
 8004a1c:	69e3      	ldr	r3, [r4, #28]
 8004a1e:	4303      	orrs	r3, r0
 8004a20:	61e3      	str	r3, [r4, #28]
 8004a22:	e7d6      	b.n	80049d2 <i2c_clock_config+0x52>
 8004a24:	2319      	movs	r3, #25
 8004a26:	436b      	muls	r3, r5
 8004a28:	fbb0 f0f3 	udiv	r0, r0, r3
 8004a2c:	69e3      	ldr	r3, [r4, #28]
 8004a2e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004a32:	e7e9      	b.n	8004a08 <i2c_clock_config+0x88>
 8004a34:	2278      	movs	r2, #120	; 0x78
 8004a36:	4353      	muls	r3, r2
 8004a38:	fbb3 f3f1 	udiv	r3, r3, r1
 8004a3c:	3301      	adds	r3, #1
 8004a3e:	6223      	str	r3, [r4, #32]
 8004a40:	b996      	cbnz	r6, 8004a68 <i2c_clock_config+0xe8>
 8004a42:	69e3      	ldr	r3, [r4, #28]
 8004a44:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8004a48:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004a4c:	fbb0 f0f5 	udiv	r0, r0, r5
 8004a50:	61e3      	str	r3, [r4, #28]
 8004a52:	69e3      	ldr	r3, [r4, #28]
 8004a54:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004a58:	61e3      	str	r3, [r4, #28]
 8004a5a:	69e3      	ldr	r3, [r4, #28]
 8004a5c:	4303      	orrs	r3, r0
 8004a5e:	61e3      	str	r3, [r4, #28]
 8004a60:	2301      	movs	r3, #1
 8004a62:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 8004a66:	e7b4      	b.n	80049d2 <i2c_clock_config+0x52>
 8004a68:	2319      	movs	r3, #25
 8004a6a:	435d      	muls	r5, r3
 8004a6c:	69e3      	ldr	r3, [r4, #28]
 8004a6e:	fbb0 f0f5 	udiv	r0, r0, r5
 8004a72:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004a76:	e7eb      	b.n	8004a50 <i2c_clock_config+0xd0>
 8004a78:	03938700 	orrseq	r8, r3, #0, 14
 8004a7c:	000f4240 	andeq	r4, pc, r0, asr #4
 8004a80:	000186a0 	andeq	r8, r1, r0, lsr #13
 8004a84:	00061a80 	andeq	r1, r6, r0, lsl #21

08004a88 <i2c_ack_config>:
 8004a88:	6803      	ldr	r3, [r0, #0]
 8004a8a:	2901      	cmp	r1, #1
 8004a8c:	bf0c      	ite	eq
 8004a8e:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8004a92:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8004a96:	6003      	str	r3, [r0, #0]
 8004a98:	4770      	bx	lr

08004a9a <i2c_ackpos_config>:
 8004a9a:	6803      	ldr	r3, [r0, #0]
 8004a9c:	b919      	cbnz	r1, 8004aa6 <i2c_ackpos_config+0xc>
 8004a9e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8004aa2:	6003      	str	r3, [r0, #0]
 8004aa4:	4770      	bx	lr
 8004aa6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004aaa:	e7fa      	b.n	8004aa2 <i2c_ackpos_config+0x8>

08004aac <i2c_master_addressing>:
 8004aac:	3202      	adds	r2, #2
 8004aae:	bf0c      	ite	eq
 8004ab0:	f021 0101 	biceq.w	r1, r1, #1
 8004ab4:	f041 0101 	orrne.w	r1, r1, #1
 8004ab8:	6101      	str	r1, [r0, #16]
 8004aba:	4770      	bx	lr

08004abc <i2c_enable>:
 8004abc:	6803      	ldr	r3, [r0, #0]
 8004abe:	f043 0301 	orr.w	r3, r3, #1
 8004ac2:	6003      	str	r3, [r0, #0]
 8004ac4:	4770      	bx	lr

08004ac6 <i2c_start_on_bus>:
 8004ac6:	6803      	ldr	r3, [r0, #0]
 8004ac8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004acc:	6003      	str	r3, [r0, #0]
 8004ace:	4770      	bx	lr

08004ad0 <i2c_stop_on_bus>:
 8004ad0:	6803      	ldr	r3, [r0, #0]
 8004ad2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004ad6:	6003      	str	r3, [r0, #0]
 8004ad8:	4770      	bx	lr

08004ada <i2c_data_transmit>:
 8004ada:	6101      	str	r1, [r0, #16]
 8004adc:	4770      	bx	lr

08004ade <i2c_data_receive>:
 8004ade:	6900      	ldr	r0, [r0, #16]
 8004ae0:	b2c0      	uxtb	r0, r0
 8004ae2:	4770      	bx	lr

08004ae4 <i2c_flag_get>:
 8004ae4:	098b      	lsrs	r3, r1, #6
 8004ae6:	f001 011f 	and.w	r1, r1, #31
 8004aea:	581a      	ldr	r2, [r3, r0]
 8004aec:	2301      	movs	r3, #1
 8004aee:	408b      	lsls	r3, r1
 8004af0:	4213      	tst	r3, r2
 8004af2:	bf14      	ite	ne
 8004af4:	2001      	movne	r0, #1
 8004af6:	2000      	moveq	r0, #0
 8004af8:	4770      	bx	lr

08004afa <i2c_flag_clear>:
 8004afa:	f240 5301 	movw	r3, #1281	; 0x501
 8004afe:	4299      	cmp	r1, r3
 8004b00:	b510      	push	{r4, lr}
 8004b02:	d102      	bne.n	8004b0a <i2c_flag_clear+0x10>
 8004b04:	6943      	ldr	r3, [r0, #20]
 8004b06:	6983      	ldr	r3, [r0, #24]
 8004b08:	bd10      	pop	{r4, pc}
 8004b0a:	098c      	lsrs	r4, r1, #6
 8004b0c:	2201      	movs	r2, #1
 8004b0e:	5823      	ldr	r3, [r4, r0]
 8004b10:	f001 011f 	and.w	r1, r1, #31
 8004b14:	408a      	lsls	r2, r1
 8004b16:	ea23 0302 	bic.w	r3, r3, r2
 8004b1a:	5023      	str	r3, [r4, r0]
 8004b1c:	e7f4      	b.n	8004b08 <i2c_flag_clear+0xe>
	...

Disassembly of section .rodata:

08004b20 <deviceLabel-0x100>:
	...
 8004b28:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8004b2c:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8004b30:	00000000 	andeq	r0, r0, r0
 8004b34:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8004b38:	20636544 	rsbcs	r6, r3, r4, asr #10
 8004b3c:	32203731 	eorcc	r3, r0, #12845056	; 0xc40000
 8004b40:	00323230 	eorseq	r3, r2, r0, lsr r2
 8004b44:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8004b48:	33303346 	teqcc	r0, #402653185	; 0x18000001
 8004b4c:	5b004352 	blpl	801589c <__exidx_end+0x104a0>
 8004b50:	5d732556 	cfldr64pl	mvdx2, [r3, #-344]!	; 0xfffffea8
 8004b54:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8004b58:	706d6f43 	rsbvc	r6, sp, r3, asr #30
 8004b5c:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 8004b60:	206e6f20 	rsbcs	r6, lr, r0, lsr #30
 8004b64:	61207325 			; <UNDEFINED> instruction: 0x61207325
 8004b68:	73252074 			; <UNDEFINED> instruction: 0x73252074
 8004b6c:	3531000a 	ldrcc	r0, [r1, #-10]!
 8004b70:	3a30353a 	bcc	8c12060 <__exidx_end+0xc0cc64>
 8004b74:	52003434 	andpl	r3, r0, #52, 8	; 0x34000000
 8004b78:	43204d44 			; <UNDEFINED> instruction: 0x43204d44
 8004b7c:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 8004b80:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 8004b84:	69772072 	ldmdbvs	r7!, {r1, r4, r5, r6, sp}^
 8004b88:	55206874 	strpl	r6, [r0, #-2164]!	; 0xfffff78c
 8004b8c:	5b204253 	blpl	88154e0 <__exidx_end+0x8100e4>
 8004b90:	706d6f43 	rsbvc	r6, sp, r3, asr #30
 8004b94:	62697461 	rsbvs	r7, r9, #1627389952	; 0x61000000
 8004b98:	7720656c 	strvc	r6, [r0, -ip, ror #10]!
 8004b9c:	20687469 	rsbcs	r7, r8, r9, ror #8
 8004ba0:	74746e45 	ldrbtvc	r6, [r4], #-3653	; 0xfffff1bb
 8004ba4:	55206365 	strpl	r6, [r0, #-869]!	; 0xfffffc9b
 8004ba8:	50204253 	eorpl	r4, r0, r3, asr r2
 8004bac:	70206f72 	eorvc	r6, r0, r2, ror pc
 8004bb0:	6f746f72 	svcvs	0x00746f72
 8004bb4:	5d6c6f63 	stclpl	15, cr6, [ip, #-396]!	; 0xfffffe74
 8004bb8:	6957202c 	ldmdbvs	r7, {r2, r3, r5, sp}^
 8004bbc:	74656764 	strbtvc	r6, [r5], #-1892	; 0xfffff89c
 8004bc0:	646f6d20 	strbtvs	r6, [pc], #-3360	; 8004bc8 <_etext+0xa8>
 8004bc4:	203a2065 	eorscs	r2, sl, r5, rrx
 8004bc8:	28206425 	stmdacs	r0!, {r0, r2, r5, sl, sp, lr}
 8004bcc:	0a297325 	beq	8a61868 <__exidx_end+0xa5c46c>
 8004bd0:	76654400 	strbtvc	r4, [r5], -r0, lsl #8
 8004bd4:	20656369 	rsbcs	r6, r5, r9, ror #6
 8004bd8:	44495555 	strbmi	r5, [r9], #-1365	; 0xfffffaab
 8004bdc:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8004be0:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 8004be4:	3a78322e 	bcc	9e114a4 <__exidx_end+0x1e0c0a8>
 8004be8:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8004bec:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8004bf0:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8004bf4:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8004bf8:	4c00202c 	stcmi	0, cr2, [r0], {44}	; 0x2c
 8004bfc:	6c656261 	sfmvs	f6, 2, [r5], #-388	; 0xfffffe7c
 8004c00:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8004c04:	0a732a2e 	beq	9ccf4c4 <__exidx_end+0x1cca0c8>
 8004c08:	33444700 	movtcc	r4, #18176	; 0x4700
 8004c0c:	30314632 	eorscc	r4, r1, r2, lsr r6
 8004c10:	20435233 	subcs	r5, r3, r3, lsr r2
 8004c14:	20584d44 	subscs	r4, r8, r4, asr #26
 8004c18:	20425355 	subcs	r5, r2, r5, asr r3
 8004c1c:	006f7250 	rsbeq	r7, pc, r0, asr r2	; <UNPREDICTABLE>

08004c20 <deviceLabel>:
 8004c20:	08004c09 	stmdaeq	r0, {r0, r3, sl, fp, lr}
 8004c24:	00000016 	andeq	r0, r0, r6, lsl r0

08004c28 <SOFTWARE_VERSION>:
 8004c28:	00322e31 	eorseq	r2, r2, r1, lsr lr

08004c2c <widget_mode_names>:
 8004c2c:	5f584d44 	svcpl	0x00584d44
 8004c30:	004d4452 	subeq	r4, sp, r2, asr r4
 8004c34:	00000000 	andeq	r0, r0, r0
 8004c38:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8004c44:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8004c50:	5f4d4452 	svcpl	0x004d4452
 8004c54:	46494e53 			; <UNDEFINED> instruction: 0x46494e53
 8004c58:	00524546 	subseq	r4, r2, r6, asr #10
 8004c5c:	5f544547 	svcpl	0x00544547
 8004c60:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 8004c64:	505f5445 	subspl	r5, pc, r5, asr #8
 8004c68:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 8004c6c:	45525f53 	ldrbmi	r5, [r2, #-3923]	; 0xfffff0ad
 8004c70:	00594c50 	subseq	r4, r9, r0, asr ip
 8004c74:	5f544553 	svcpl	0x00544553
 8004c78:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 8004c7c:	505f5445 	subspl	r5, pc, r5, asr #8
 8004c80:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 8004c84:	45520053 	ldrbmi	r0, [r2, #-83]	; 0xffffffad
 8004c88:	56494543 	strbpl	r4, [r9], -r3, asr #10
 8004c8c:	445f4445 	ldrbmi	r4, [pc], #-1093	; 8004c94 <widget_mode_names+0x68>
 8004c90:	505f584d 	subspl	r5, pc, sp, asr #16
 8004c94:	454b4341 	strbmi	r4, [fp, #-833]	; 0xfffffcbf
 8004c98:	65530054 	ldrbvs	r0, [r3, #-84]	; 0xffffffac
 8004c9c:	4420646e 	strtmi	r6, [r0], #-1134	; 0xfffffb92
 8004ca0:	6420584d 	strtvs	r5, [r0], #-2125	; 0xfffff7b3
 8004ca4:	20617461 	rsbcs	r7, r1, r1, ror #8
 8004ca8:	48206f74 	stmdami	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}
 8004cac:	2c54534f 	mrrccs	3, 4, r5, r4, cr15
 8004cb0:	00642520 	rsbeq	r2, r4, r0, lsr #10
 8004cb4:	5054554f 	subspl	r5, r4, pc, asr #10
 8004cb8:	4f5f5455 	svcmi	0x005f5455
 8004cbc:	5f594c4e 	svcpl	0x00594c4e
 8004cc0:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 8004cc4:	584d445f 	stmdapl	sp, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8004cc8:	4341505f 	movtmi	r5, #4191	; 0x105f
 8004ccc:	5f54454b 	svcpl	0x0054454b
 8004cd0:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 8004cd4:	00545345 	subseq	r5, r4, r5, asr #6
 8004cd8:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 8004cdc:	4d44525f 	sfmmi	f5, 2, [r4, #-380]	; 0xfffffe84
 8004ce0:	4341505f 	movtmi	r5, #4191	; 0x105f
 8004ce4:	5f54454b 	svcpl	0x0054454b
 8004ce8:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 8004cec:	00545345 	subseq	r5, r4, r5, asr #6
 8004cf0:	45434552 	strbmi	r4, [r3, #-1362]	; 0xfffffaae
 8004cf4:	5f455649 	svcpl	0x00455649
 8004cf8:	5f584d44 	svcpl	0x00584d44
 8004cfc:	435f4e4f 	cmpmi	pc, #1264	; 0x4f0
 8004d00:	474e4148 	strbmi	r4, [lr, -r8, asr #2]
 8004d04:	45520045 	ldrbmi	r0, [r2, #-69]	; 0xffffffbb
 8004d08:	56494543 	strbpl	r4, [r9], -r3, asr #10
 8004d0c:	445f4445 	ldrbmi	r4, [pc], #-1093	; 8004d14 <widget_mode_names+0xe8>
 8004d10:	435f584d 	cmpmi	pc, #5046272	; 0x4d0000
 8004d14:	545f534f 	ldrbpl	r5, [pc], #-847	; 8004d1c <widget_mode_names+0xf0>
 8004d18:	00455059 	subeq	r5, r5, r9, asr r0
 8004d1c:	746e6553 	strbtvc	r6, [lr], #-1363	; 0xfffffaad
 8004d20:	61686320 	cmnvs	r8, r0, lsr #6
 8004d24:	6465676e 	strbtvs	r6, [r5], #-1902	; 0xfffff892
 8004d28:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8004d2c:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 8004d30:	6f742061 	svcvs	0x00742061
 8004d34:	534f4820 	movtpl	r4, #63520	; 0xf820
 8004d38:	45530054 	ldrbmi	r0, [r3, #-84]	; 0xffffffac
 8004d3c:	525f444e 	subspl	r4, pc, #1308622848	; 0x4e000000
 8004d40:	445f4d44 	ldrbmi	r4, [pc], #-3396	; 8004d48 <widget_mode_names+0x11c>
 8004d44:	4f435349 	svcmi	0x00435349
 8004d48:	59524556 	ldmdbpl	r2, {r1, r2, r4, r6, r8, sl, lr}^
 8004d4c:	5145525f 	cmppl	r5, pc, asr r2
 8004d50:	54534555 	ldrbpl	r4, [r3], #-1365	; 0xfffffaab
 8004d54:	6e655300 	cdpvs	3, 6, cr5, cr5, cr0, {0}
 8004d58:	44522064 	ldrbmi	r2, [r2], #-100	; 0xffffff9c
 8004d5c:	6164204d 	cmnvs	r4, sp, asr #32
 8004d60:	74206174 	strtvc	r6, [r0], #-372	; 0xfffffe8c
 8004d64:	4f48206f 	svcmi	0x0048206f
 8004d68:	202c5453 	eorcs	r5, ip, r3, asr r4
 8004d6c:	64253a6c 	strtvs	r3, [r5], #-2668	; 0xfffff594
 8004d70:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 8004d74:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
 8004d78:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
 8004d7c:	43455200 	movtmi	r5, #20992	; 0x5200
 8004d80:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 8004d84:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 8004d88:	41505f4d 	cmpmi	r0, sp, asr #30
 8004d8c:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 8004d90:	3a435320 	bcc	90d9a18 <__exidx_end+0x10d461c>
 8004d94:	43437830 	movtmi	r7, #14384	; 0x3830
 8004d98:	43455200 	movtmi	r5, #20992	; 0x5200
 8004d9c:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 8004da0:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 8004da4:	41505f4d 	cmpmi	r0, sp, asr #30
 8004da8:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 8004dac:	3a435320 	bcc	90d9a34 <__exidx_end+0x10d4638>
 8004db0:	45467830 	strbmi	r7, [r6, #-2096]	; 0xfffff7d0
 8004db4:	4e414d00 	cdpmi	13, 4, cr4, cr1, cr0, {0}
 8004db8:	43414655 	movtmi	r4, #5717	; 0x1655
 8004dbc:	45525554 	ldrbmi	r5, [r2, #-1364]	; 0xfffffaac
 8004dc0:	414c5f52 	cmpmi	ip, r2, asr pc
 8004dc4:	004c4542 	subeq	r4, ip, r2, asr #10
 8004dc8:	5f544547 	svcpl	0x00544547
 8004dcc:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 8004dd0:	4e5f5445 	cdpmi	4, 5, cr5, cr15, cr5, {2}
 8004dd4:	5f454d41 	svcpl	0x00454d41
 8004dd8:	4542414c 	strbmi	r4, [r2, #-332]	; 0xfffffeb4
 8004ddc:	3a4c004c 	bcc	9304f14 <__exidx_end+0x12ffb18>
 8004de0:	253a6425 	ldrcs	r6, [sl, #-1061]!	; 0xfffffbdb
 8004de4:	64252864 	strtvs	r2, [r5], #-2148	; 0xfffff79c
 8004de8:	 	ldmdbvs	r7!, {r0, r3, r5}^

08004dea <WidgetParamsConst::WIDGET_MODE>:
 8004dea:	67646977 			; <UNDEFINED> instruction: 0x67646977
 8004dee:	6d5f7465 	cfldrdvs	mvd7, [pc, #-404]	; 8004c60 <widget_mode_names+0x34>
 8004df2:	0065646f 	rsbeq	r6, r5, pc, ror #8

08004df6 <WidgetParamsConst::DMXUSBPRO_MAB_TIME>:
 8004df6:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 8004dfa:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8004dfe:	616d5f6f 	cmnvs	sp, pc, ror #30
 8004e02:	69745f62 	ldmdbvs	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 8004e06:	 	strvs	r6, [r0], #-1389	; 0xfffffa93

08004e09 <WidgetParamsConst::DMXUSBPRO_BREAK_TIME>:
 8004e09:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 8004e0d:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8004e11:	72625f6f 	rsbvc	r5, r2, #444	; 0x1bc
 8004e15:	5f6b6165 	svcpl	0x006b6165
 8004e19:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

08004e1e <WidgetParamsConst::DMXUSBPRO_REFRESH_RATE>:
 8004e1e:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 8004e22:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8004e26:	65725f6f 	ldrbvs	r5, [r2, #-3951]!	; 0xfffff091
 8004e2a:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 8004e2e:	61725f68 	cmnvs	r2, r8, ror #30
 8004e32:	 	strvs	r6, [r0], #-1396	; 0xfffffa8c

08004e35 <WidgetParamsConst::DMX_SEND_TO_HOST_THROTTLE>:
 8004e35:	5f786d64 	svcpl	0x00786d64
 8004e39:	646e6573 	strbtvs	r6, [lr], #-1395	; 0xfffffa8d
 8004e3d:	5f6f745f 	svcpl	0x006f745f
 8004e41:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8004e45:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
 8004e49:	6c74746f 	cfldrdvs	mvd7, [r4], #-444	; 0xfffffe44
 8004e4d:	46210065 	strtmi	r0, [r1], -r5, rrx
 8004e51:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8004e55:	43202164 			; <UNDEFINED> instruction: 0x43202164
 8004e59:	6f6e6e61 	svcvs	0x006e6e61
 8004e5d:	65732074 	ldrbvs	r2, [r3, #-116]!	; 0xffffff8c
 8004e61:	7420646e 	strtvc	r6, [r0], #-1134	; 0xfffffb92
 8004e65:	6f68206f 	svcvs	0x0068206f
 8004e69:	53007473 	movwpl	r7, #1139	; 0x473
 8004e6d:	20646e65 	rsbcs	r6, r4, r5, ror #28
 8004e71:	20584d44 	subscs	r4, r8, r4, asr #26
 8004e75:	61746164 	cmnvs	r4, r4, ror #2
 8004e79:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 8004e7d:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
 8004e81:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8004e85:	53006425 	movwpl	r6, #1061	; 0x425
 8004e89:	20646e65 	rsbcs	r6, r4, r5, ror #28
 8004e8d:	204d4452 	subcs	r4, sp, r2, asr r4
 8004e91:	61746164 	cmnvs	r4, r4, ror #2
 8004e95:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 8004e99:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
	...

08004e9e <RDMConst::MANUFACTURER_ID>:
 8004e9e:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

08004ea0 <RDMConst::MANUFACTURER_NAME>:
 8004ea0:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8004ea4:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 8004ea8:	6f2e7777 	svcvs	0x002e7777
 8004eac:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 8004eb0:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 8004eb4:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8004eb8:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8004ebc:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8004ec0:	2f2f3a73 	svccs	0x002f3a73
 8004ec4:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 8004ec8:	786d642d 	stmdavc	sp!, {r0, r2, r3, r5, sl, sp, lr}^
 8004ecc:	67726f2e 	ldrbvs	r6, [r2, -lr, lsr #30]!
	...

08004ed1 <DEVICE_LABEL>:
 8004ed1:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8004ed5:	33303346 	teqcc	r0, #402653185	; 0x18000001
 8004ed9:	52204352 	eorpl	r4, r0, #1207959553	; 0x48000001
 8004edd:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 8004ee1:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8004ee5:	6f6c0065 	svcvs	0x006c0065
 8004ee9:	 	andvs	r0, r0, r0

08004eec <s_aStorSize>:
 8004eec:	00000060 	andeq	r0, r0, r0, rrx
 8004ef0:	00000090 	muleq	r0, r0, r0
 8004ef4:	00000020 	andeq	r0, r0, r0, lsr #32
 8004ef8:	00000040 	andeq	r0, r0, r0, asr #32
 8004efc:	00000060 	andeq	r0, r0, r0, rrx
 8004f00:	00000040 	andeq	r0, r0, r0, asr #32
 8004f04:	00000020 	andeq	r0, r0, r0, lsr #32
 8004f08:	00000020 	andeq	r0, r0, r0, lsr #32
 8004f0c:	000001e0 	andeq	r0, r0, r0, ror #3
 8004f10:	00000040 	andeq	r0, r0, r0, asr #32
 8004f14:	00000020 	andeq	r0, r0, r0, lsr #32
 8004f18:	00000060 	andeq	r0, r0, r0, rrx
 8004f1c:	00000030 	andeq	r0, r0, r0, lsr r0
 8004f20:	00000020 	andeq	r0, r0, r0, lsr #32
 8004f24:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8004f28:	00000030 	andeq	r0, r0, r0, lsr r0
 8004f2c:	00000040 	andeq	r0, r0, r0, asr #32
 8004f30:	00000020 	andeq	r0, r0, r0, lsr #32
 8004f34:	00000060 	andeq	r0, r0, r0, rrx
 8004f38:	00000020 	andeq	r0, r0, r0, lsr #32
 8004f3c:	00000400 	andeq	r0, r0, r0, lsl #8
 8004f40:	00000020 	andeq	r0, r0, r0, lsr #32
 8004f44:	00000020 	andeq	r0, r0, r0, lsr #32
 8004f48:	00000040 	andeq	r0, r0, r0, asr #32
 8004f4c:	00000060 	andeq	r0, r0, r0, rrx
 8004f50:	00000020 	andeq	r0, r0, r0, lsr #32
 8004f54:	00000020 	andeq	r0, r0, r0, lsr #32
 8004f58:	000000c0 	andeq	r0, r0, r0, asr #1

08004f5c <vtable for StoreRDMDevice>:
	...
 8004f64:	08002abf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r7, r9, fp, sp}
 8004f68:	08002b2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, fp, sp}
 8004f6c:	08002ac5 	stmdaeq	r0, {r0, r2, r6, r7, r9, fp, sp}
 8004f70:	08002b41 	stmdaeq	r0, {r0, r6, r8, r9, fp, sp}
 8004f74:	08002ae9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, fp, sp}
 8004f78:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8004f7c:	00000000 	andeq	r0, r0, r0
 8004f80:	08002ac1 	stmdaeq	r0, {r0, r6, r7, r9, fp, sp}
 8004f84:	08002b39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, fp, sp}
 8004f88:	08002b25 	stmdaeq	r0, {r0, r2, r5, r8, r9, fp, sp}

08004f8c <vtable for StoreWidget>:
	...
 8004f94:	08002b7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, fp, sp}
 8004f98:	08002ba9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, fp, sp}
 8004f9c:	08002b85 	stmdaeq	r0, {r0, r2, r7, r8, r9, fp, sp}
 8004fa0:	08002bbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, fp, sp}
 8004fa4:	08001885 	stmdaeq	r0, {r0, r2, r7, fp, ip}
 8004fa8:	080018b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, ip}
 8004fac:	080018ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, fp, ip}
 8004fb0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8004fb4:	00000000 	andeq	r0, r0, r0
 8004fb8:	08002b7f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r8, r9, fp, sp}
 8004fbc:	08002bb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, fp, sp}
 8004fc0:	080018b1 	stmdaeq	r0, {r0, r4, r5, r7, fp, ip}
 8004fc4:	080018e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, fp, ip}
 8004fc8:	08001919 	stmdaeq	r0, {r0, r3, r4, r8, fp, ip}
 8004fcc:	3a434d46 	bcc	90d84ec <__exidx_end+0x10d30f0>
 8004fd0:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8004fd4:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8004fd8:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8004fdc:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8004fe0:	6f742068 	svcvs	0x00742068
 8004fe4:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8004fe8:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8004fec:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8004ff0:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8004ff4:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8004ff8:	6f4e000a 	svcvs	0x004e000a
 8004ffc:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8005000:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8005004:	756f6620 	strbvc	r6, [pc, #-1568]!	; 80049ec <i2c_clock_config+0x6c>
 8005008:	5300646e 	movwpl	r6, #1134	; 0x46e
 800500c:	30313148 	eorscc	r3, r1, r8, asr #2
 8005010:	53530036 	cmppl	r3, #54	; 0x36
 8005014:	30333144 	eorscc	r3, r3, r4, asr #2
 8005018:	73250036 			; <UNDEFINED> instruction: 0x73250036
 800501c:	64252820 	strtvs	r2, [r5], #-2080	; 0xfffff7e0
 8005020:	2964252c 	stmdbcs	r4!, {r2, r3, r5, r8, sl, sp}^
 8005024:	aa40000a 	bge	9005054 <__exidx_end+0xfffc58>
 8005028:	00eeaaee 	rsceq	sl, lr, lr, ror #21

0800502c <_OledFont8x6>:
 800502c:	00000040 	andeq	r0, r0, r0, asr #32
 8005030:	40000000 	andmi	r0, r0, r0
 8005034:	005f0000 	subseq	r0, pc, r0
 8005038:	00400000 	subeq	r0, r0, r0
 800503c:	00070007 	andeq	r0, r7, r7
 8005040:	7f144000 	svcvc	0x00144000
 8005044:	00147f14 	andseq	r7, r4, r4, lsl pc
 8005048:	7f2a2440 	svcvc	0x002a2440
 800504c:	4000122a 	andmi	r1, r0, sl, lsr #4
 8005050:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8005054:	36400062 	strbcc	r0, [r0], -r2, rrx
 8005058:	50205649 	eorpl	r5, r0, r9, asr #12
 800505c:	08004000 	stmdaeq	r0, {lr}
 8005060:	00000307 	andeq	r0, r0, r7, lsl #6
 8005064:	221c0040 	andscs	r0, ip, #64	; 0x40
 8005068:	40000041 	andmi	r0, r0, r1, asr #32
 800506c:	1c224100 	stfnes	f4, [r2], #-0
 8005070:	2a400000 	bcs	9005078 <__exidx_end+0xfffc7c>
 8005074:	2a1c7f1c 	bcs	8724cec <__exidx_end+0x71f8f0>
 8005078:	08084000 	stmdaeq	r8, {lr}
 800507c:	0008083e 	andeq	r0, r8, lr, lsr r8
 8005080:	70800040 	addvc	r0, r0, r0, asr #32
 8005084:	40000030 	andmi	r0, r0, r0, lsr r0
 8005088:	08080808 	stmdaeq	r8, {r3, fp}
 800508c:	00400008 	subeq	r0, r0, r8
 8005090:	00606000 	rsbeq	r6, r0, r0
 8005094:	10204000 	eorne	r4, r0, r0
 8005098:	00020408 	andeq	r0, r2, r8, lsl #8
 800509c:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 80050a0:	40003e45 	andmi	r3, r0, r5, asr #28
 80050a4:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 80050a8:	72400000 	subvc	r0, r0, #0
 80050ac:	46494949 	strbmi	r4, [r9], -r9, asr #18
 80050b0:	41214000 			; <UNDEFINED> instruction: 0x41214000
 80050b4:	00334d49 	eorseq	r4, r3, r9, asr #26
 80050b8:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 80050bc:	4000107f 	andmi	r1, r0, pc, ror r0
 80050c0:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 80050c4:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 80050c8:	3149494a 	cmpcc	r9, sl, asr #18
 80050cc:	21414000 	mrscs	r4, (UNDEF: 65)
 80050d0:	00070911 	andeq	r0, r7, r1, lsl r9
 80050d4:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 80050d8:	40003649 	andmi	r3, r0, r9, asr #12
 80050dc:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 80050e0:	0040001e 	subeq	r0, r0, lr, lsl r0
 80050e4:	00001400 	andeq	r1, r0, r0, lsl #8
 80050e8:	40004000 	andmi	r4, r0, r0
 80050ec:	00000034 	andeq	r0, r0, r4, lsr r0
 80050f0:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 80050f4:	40004122 	andmi	r4, r0, r2, lsr #2
 80050f8:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 80050fc:	00400014 	subeq	r0, r0, r4, lsl r0
 8005100:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8005104:	01024000 	mrseq	r4, (UNDEF: 2)
 8005108:	00060959 	andeq	r0, r6, r9, asr r9
 800510c:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8005110:	40004e59 	andmi	r4, r0, r9, asr lr
 8005114:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8005118:	7f40007c 	svcvc	0x0040007c
 800511c:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8005120:	413e4000 	teqmi	lr, r0
 8005124:	00224141 	eoreq	r4, r2, r1, asr #2
 8005128:	41417f40 	cmpmi	r1, r0, asr #30
 800512c:	40003e41 	andmi	r3, r0, r1, asr #28
 8005130:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8005134:	7f400041 	svcvc	0x00400041
 8005138:	01090909 	tsteq	r9, r9, lsl #18
 800513c:	413e4000 	teqmi	lr, r0
 8005140:	00735141 	rsbseq	r5, r3, r1, asr #2
 8005144:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8005148:	40007f08 	andmi	r7, r0, r8, lsl #30
 800514c:	417f4100 	cmnmi	pc, r0, lsl #2
 8005150:	20400000 	subcs	r0, r0, r0
 8005154:	013f4140 	teqeq	pc, r0, asr #2
 8005158:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 800515c:	00412214 	subeq	r2, r1, r4, lsl r2
 8005160:	40407f40 	submi	r7, r0, r0, asr #30
 8005164:	40004040 	andmi	r4, r0, r0, asr #32
 8005168:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 800516c:	7f40007f 	svcvc	0x0040007f
 8005170:	7f100804 	svcvc	0x00100804
 8005174:	413e4000 	teqmi	lr, r0
 8005178:	003e4141 	eorseq	r4, lr, r1, asr #2
 800517c:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8005180:	40000609 	andmi	r0, r0, r9, lsl #12
 8005184:	2151413e 	cmpcs	r1, lr, lsr r1
 8005188:	7f40005e 	svcvc	0x0040005e
 800518c:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8005190:	49264000 	stmdbmi	r6!, {lr}
 8005194:	00324949 	eorseq	r4, r2, r9, asr #18
 8005198:	7f010340 	svcvc	0x00010340
 800519c:	40000301 	andmi	r0, r0, r1, lsl #6
 80051a0:	4040403f 	submi	r4, r0, pc, lsr r0
 80051a4:	1f40003f 	svcne	0x0040003f
 80051a8:	1f204020 	svcne	0x00204020
 80051ac:	403f4000 	eorsmi	r4, pc, r0
 80051b0:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 80051b4:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 80051b8:	40006314 	andmi	r6, r0, r4, lsl r3
 80051bc:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 80051c0:	61400003 	cmpvs	r0, r3
 80051c4:	434d4959 	movtmi	r4, #55641	; 0xd959
 80051c8:	7f004000 	svcvc	0x00004000
 80051cc:	00414141 	subeq	r4, r1, r1, asr #2
 80051d0:	08040240 	stmdaeq	r4, {r6, r9}
 80051d4:	40002010 	andmi	r2, r0, r0, lsl r0
 80051d8:	41414100 	mrsmi	r4, (UNDEF: 81)
 80051dc:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 80051e0:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 80051e4:	40404000 	submi	r4, r0, r0
 80051e8:	00404040 	subeq	r4, r0, r0, asr #32
 80051ec:	07030040 	streq	r0, [r3, -r0, asr #32]
 80051f0:	40000008 	andmi	r0, r0, r8
 80051f4:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 80051f8:	7f400040 	svcvc	0x00400040
 80051fc:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8005200:	44384000 	ldrtmi	r4, [r8], #-0
 8005204:	00284444 	eoreq	r4, r8, r4, asr #8
 8005208:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 800520c:	40007f28 	andmi	r7, r0, r8, lsr #30
 8005210:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8005214:	00400018 	subeq	r0, r0, r8, lsl r0
 8005218:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 800521c:	a4184000 	ldrge	r4, [r8], #-0
 8005220:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8005224:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8005228:	40007804 	andmi	r7, r0, r4, lsl #16
 800522c:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8005230:	20400000 	subcs	r0, r0, r0
 8005234:	003d4040 	eorseq	r4, sp, r0, asr #32
 8005238:	107f4000 	rsbsne	r4, pc, r0
 800523c:	00004428 	andeq	r4, r0, r8, lsr #8
 8005240:	7f410040 	svcvc	0x00410040
 8005244:	40000040 	andmi	r0, r0, r0, asr #32
 8005248:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 800524c:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8005250:	78040408 	stmdavc	r4, {r3, sl}
 8005254:	44384000 	ldrtmi	r4, [r8], #-0
 8005258:	00384444 	eorseq	r4, r8, r4, asr #8
 800525c:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8005260:	40001824 	andmi	r1, r0, r4, lsr #16
 8005264:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8005268:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 800526c:	08040408 	stmdaeq	r4, {r3, sl}
 8005270:	54484000 	strbpl	r4, [r8], #-0
 8005274:	00245454 	eoreq	r5, r4, r4, asr r4
 8005278:	3f040440 	svccc	0x00040440
 800527c:	40002444 	andmi	r2, r0, r4, asr #8
 8005280:	2040403c 	subcs	r4, r0, ip, lsr r0
 8005284:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8005288:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 800528c:	403c4000 	eorsmi	r4, ip, r0
 8005290:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8005294:	10284440 	eorne	r4, r8, r0, asr #8
 8005298:	40004428 	andmi	r4, r0, r8, lsr #8
 800529c:	9090904c 	addsls	r9, r0, ip, asr #32
 80052a0:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 80052a4:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 80052a8:	08004000 	stmdaeq	r0, {lr}
 80052ac:	00004136 	andeq	r4, r0, r6, lsr r1
 80052b0:	77000040 	strvc	r0, [r0, -r0, asr #32]
 80052b4:	40000000 	andmi	r0, r0, r0
 80052b8:	08364100 	ldmdaeq	r6!, {r8, lr}
 80052bc:	02400000 	subeq	r0, r0, #0
 80052c0:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 80052c4:	263c4000 	ldrtcs	r4, [ip], -r0
 80052c8:	003c2623 	eorseq	r2, ip, r3, lsr #12

080052cc <oled_128x32_init>:
 80052cc:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 80052d0:	4000d31f 	andmi	sp, r0, pc, lsl r3
 80052d4:	0020148d 	eoreq	r1, r0, sp, lsl #9
 80052d8:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 80052dc:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 80052e0:	a6a440db 	ssatge	r4, #5, fp, asr #1

080052e4 <oled_128x64_init>:
 80052e4:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 80052e8:	4000d33f 	andmi	sp, r0, pc, lsr r3
 80052ec:	0020148d 	eoreq	r1, r0, sp, lsl #9
 80052f0:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 80052f4:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 80052f8:	a6a440db 	ssatge	r4, #5, fp, asr #1

080052fc <vtable for Ssd1306>:
	...
 8005304:	080030b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, ip, sp}
 8005308:	080030e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, ip, sp}
 800530c:	080033fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, ip, sp}
 8005310:	08003385 	stmdaeq	r0, {r0, r2, r7, r8, r9, ip, sp}
 8005314:	0800324d 	stmdaeq	r0, {r0, r2, r3, r6, r9, ip, sp}
 8005318:	08003105 	stmdaeq	r0, {r0, r2, r8, ip, sp}
 800531c:	08003131 	stmdaeq	r0, {r0, r4, r5, r8, ip, sp}
 8005320:	08003225 	stmdaeq	r0, {r0, r2, r5, r9, ip, sp}
 8005324:	080031dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, ip, sp}
 8005328:	080030bb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r7, ip, sp}
 800532c:	0800328d 	stmdaeq	r0, {r0, r2, r3, r7, r9, ip, sp}
 8005330:	08003299 	stmdaeq	r0, {r0, r3, r4, r7, r9, ip, sp}
 8005334:	080032b3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r9, ip, sp}
 8005338:	080030bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, ip, sp}
 800533c:	37335b1b 			; <UNDEFINED> instruction: 0x37335b1b
 8005340:	5b1b006d 	blpl	86c54fc <__exidx_end+0x6c0100>
 8005344:	006d3034 	rsbeq	r3, sp, r4, lsr r0
 8005348:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 800534c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005350:	000a7525 	andeq	r7, sl, r5, lsr #10
 8005354:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005358:	203a636f 	eorscs	r6, sl, pc, ror #6
 800535c:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8005360:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8005364:	6b636f6c 	blvs	98e111c <__exidx_end+0x18dbd20>
 8005368:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 800536c:	000a7469 	andeq	r7, sl, r9, ror #8
 8005370:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8005374:	203a636f 	eorscs	r6, sl, pc, ror #6
 8005378:	6f6c4270 	svcvs	0x006c4270
 800537c:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8005380:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8005384:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8005388:	7a697320 	bvc	9a62010 <__exidx_end+0x1a5cc14>
 800538c:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8005390:	6164202c 	cmnvs	r4, ip, lsr #32
 8005394:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8005398:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 800539c:	3a656572 	bcc	995e96c <__exidx_end+0x1959570>
 80053a0:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 80053a4:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80053a8:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 80053ac:	203d2072 	eorscs	r2, sp, r2, ror r0
 80053b0:	202c7025 	eorcs	r7, ip, r5, lsr #32
 80053b4:	6f6c4270 	svcvs	0x006c4270
 80053b8:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 80053bc:	0a702520 	beq	9c0e844 <__exidx_end+0x1c09448>
 80053c0:	00000000 	andeq	r0, r0, r0

080053c4 <days_of_month>:
 80053c4:	0000001f 	andeq	r0, r0, pc, lsl r0
 80053c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 80053cc:	0000001f 	andeq	r0, r0, pc, lsl r0
 80053d0:	0000001e 	andeq	r0, r0, lr, lsl r0
 80053d4:	0000001f 	andeq	r0, r0, pc, lsl r0
 80053d8:	0000001e 	andeq	r0, r0, lr, lsl r0
 80053dc:	0000001f 	andeq	r0, r0, pc, lsl r0
 80053e0:	0000001f 	andeq	r0, r0, pc, lsl r0
 80053e4:	0000001e 	andeq	r0, r0, lr, lsl r0
 80053e8:	0000001f 	andeq	r0, r0, pc, lsl r0
 80053ec:	0000001e 	andeq	r0, r0, lr, lsl r0
 80053f0:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

080053f4 <__exidx_start>:
 80053f4:	7fffb6c4 	svcvc	0x00ffb6c4
 80053f8:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

080053fc <.ARM.attributes>:
 80053fc:	00003441 	andeq	r3, r0, r1, asr #8
 8005400:	61656100 	cmnvs	r5, r0, lsl #2
 8005404:	01006962 	tsteq	r0, r2, ror #18
 8005408:	0000002a 	andeq	r0, r0, sl, lsr #32
 800540c:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8005410:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8005414:	0600344d 	streq	r3, [r0], -sp, asr #8
 8005418:	094d070d 	stmdbeq	sp, {r0, r2, r3, r8, r9, sl}^
 800541c:	12060a02 	andne	r0, r6, #8192	; 0x2000
 8005420:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
 8005424:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
 8005428:	1b011a01 	blne	804bc34 <__exidx_end+0x46838>
 800542c:	22011c01 	andcs	r1, r1, #256	; 0x100
 8005430:	Address 0x0000000008005430 is out of bounds.


Disassembly of section .data:

20000000 <WidgetConfiguration::s_nMabTime>:
20000000:	 	andeq	r0, r4, #16384	; 0x4000

20000001 <WidgetConfiguration::s_nBreakTime>:
20000001:	 	stmdacs	r2, {r0, r3, sl}

20000002 <WidgetConfiguration::s_nFirmwareLsb>:
20000002:	 			; <UNDEFINED> instruction: 0x01280204

20000003 <WidgetConfiguration::s_nFirmwareMsb>:
20000003:	 	andeq	r2, r1, r2, lsl #16

20000004 <WidgetConfiguration::s_nRefreshRate>:
20000004:	 	andeq	r0, r0, r8, lsr #2

20000005 <WidgetConfiguration::s_aDeviceTypeId>:
20000005:	 	stmdage	r0, {r0}

20000008 <s_nDmxTransmitPeriod>:
20000008:	000061a8 	andeq	r6, r0, r8, lsr #3

2000000c <s_nDmxTransmitMabTime>:
2000000c:	0000000c 	andeq	r0, r0, ip

20000010 <s_nDmxTransmitBreakTime>:
20000010:	0000005c 	andeq	r0, r0, ip, asr r0

20000014 <next_block>:
20000014:	2000a000 	andcs	sl, r0, r0

20000018 <s_block_bucket>:
20000018:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000028:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000038:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000048:	00000060 	andeq	r0, r0, r0, rrx
	...
20000058:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000068:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000078:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000088:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000098:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a8:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b8:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c8:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e8 <SystemCoreClock>:
200000e8:	07270e00 	streq	r0, [r7, -r0, lsl #28]!

Disassembly of section .bss:

200000f0 <outptr>:
200000f0:	00000000 	andeq	r0, r0, r0

200000f4 <Widget::s_pThis>:
200000f4:	00000000 	andeq	r0, r0, r0

200000f8 <s_RxBuffer>:
	...

20000308 <s_TxBuffer>:
	...

2000050c <sv_PortState>:
2000050c:	00000000 	andeq	r0, r0, r0

20000510 <s_RxDmxPrevious>:
	...

20000714 <sv_nRxDmxPackets>:
	...

20000724 <sv_nUartsSending>:
20000724:	00000000 	andeq	r0, r0, r0

20000728 <Dmx::s_pThis>:
20000728:	00000000 	andeq	r0, r0, r0

2000072c <gv_RdmDataReceiveEnd>:
2000072c:	00000000 	andeq	r0, r0, r0

20000730 <Network::s_pThis>:
20000730:	00000000 	andeq	r0, r0, r0

20000734 <ConfigStore::s_nWaitMillis>:
20000734:	00000000 	andeq	r0, r0, r0

20000738 <ConfigStore::s_SpiFlashData>:
	...

20001738 <ConfigStore::s_nStartAddress>:
20001738:	00000000 	andeq	r0, r0, r0

2000173c <ConfigStore::s_bHaveFlashChip>:
2000173c:	00000000 	andeq	r0, r0, r0

20001740 <ConfigStore::s_nSpiFlashStoreSize>:
20001740:	00000000 	andeq	r0, r0, r0

20001744 <ConfigStore::s_State>:
20001744:	00000000 	andeq	r0, r0, r0

20001748 <ConfigStore::s_pThis>:
20001748:	00000000 	andeq	r0, r0, r0

2000174c <ConfigStore::s_bIsNew>:
2000174c:	00000000 	andeq	r0, r0, r0

20001750 <StoreRDMDevice::s_pThis>:
20001750:	00000000 	andeq	r0, r0, r0

20001754 <StoreWidget::s_pThis>:
20001754:	00000000 	andeq	r0, r0, r0

20001758 <FlashCode::s_pThis>:
20001758:	00000000 	andeq	r0, r0, r0

2000175c <flashcode::s_nAddress>:
2000175c:	00000000 	andeq	r0, r0, r0

20001760 <flashcode::s_State>:
20001760:	00000000 	andeq	r0, r0, r0

20001764 <flashcode::s_nPage>:
20001764:	00000000 	andeq	r0, r0, r0

20001768 <flashcode::s_pData>:
20001768:	00000000 	andeq	r0, r0, r0

2000176c <flashcode::s_isBank0>:
2000176c:	00000000 	andeq	r0, r0, r0

20001770 <flashcode::s_nLength>:
20001770:	00000000 	andeq	r0, r0, r0

20001774 <Display::s_pThis>:
20001774:	00000000 	andeq	r0, r0, r0

20001778 <_ClearBuffer>:
	...

20001800 <Ssd1306::s_pThis>:
20001800:	00000000 	andeq	r0, r0, r0

20001804 <LedBlink::s_pThis>:
20001804:	00000000 	andeq	r0, r0, r0

20001808 <Hardware::s_pThis>:
	...

20001810 <s_micros>:
	...

20001818 <set_timer>:
20001818:	00000000 	andeq	r0, r0, r0

2000181c <s_nSysTickMillis>:
2000181c:	00000000 	andeq	r0, r0, r0

20001820 <s_nAddress>:
20001820:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

2000a000 <heap_low>:
	...

Disassembly of section .stack:

2000b000 <_sp-0x1000>:
	...
