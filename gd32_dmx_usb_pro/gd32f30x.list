
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08000000 <__gVectors>:
 8000000:	2000c000 	andcs	ip, r0, r0
 8000004:	08000165 	stmdaeq	r0, {r0, r2, r5, r6, r8}
 8000008:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 800000c:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000010:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000014:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000018:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
	...
 800002c:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000030:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 800003c:	08003651 	stmdaeq	r0, {r0, r4, r6, r9, sl, ip, sp}
 8000040:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000044:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000048:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 800004c:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000050:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000054:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000058:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 800005c:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000060:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000064:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000068:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 800006c:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000070:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000074:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000078:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 800007c:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000080:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000084:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000088:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 800008c:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000090:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000094:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000098:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 800009c:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000a0:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000a4:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000a8:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000ac:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000b0:	080019e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, fp, ip}
 80000b4:	08001aa1 	stmdaeq	r0, {r0, r5, r7, r9, fp, ip}
 80000b8:	08001af1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, fp, ip}
 80000bc:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000c0:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000c4:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000c8:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000cc:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000d0:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000d4:	00000000 	andeq	r0, r0, r0
 80000d8:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000dc:	08001795 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sl, ip}
 80000e0:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000e4:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000e8:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000ec:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000f0:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000f4:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000f8:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 80000fc:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000100:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000104:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000108:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 800010c:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000110:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000114:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000118:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 800011c:	08001b11 	stmdaeq	r0, {r0, r4, r8, r9, fp, ip}
 8000120:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000124:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 8000128:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}
 800012c:	080001dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8}

Disassembly of section .text:

08000130 <console_init>:
 8000130:	b508      	push	{r3, lr}
 8000132:	f003 fa1d 	bl	8003570 <uart0_init>
 8000136:	4804      	ldr	r0, [pc, #16]	; (8000148 <console_init+0x18>)
 8000138:	f003 fa4a 	bl	80035d0 <uart0_puts>
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <console_init+0x1c>)
 800013e:	f003 fa47 	bl	80035d0 <uart0_puts>
 8000142:	2000      	movs	r0, #0
 8000144:	bd08      	pop	{r3, pc}
 8000146:	bf00      	nop
 8000148:	080050a8 	stmdaeq	r0, {r3, r5, r7, ip, lr}
 800014c:	080050ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, ip, lr}
 8000150:	08005168 	stmdaeq	r0, {r3, r5, r6, r8, ip, lr}
 8000154:	20000000 	andcs	r0, r0, r0
 8000158:	200000ec 	andcs	r0, r0, ip, ror #1
 800015c:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8000160:	20001824 	andcs	r1, r0, r4, lsr #16

08000164 <Reset_Handler>:
 8000164:	2100      	movs	r1, #0
 8000166:	e003      	b.n	8000170 <DataInit>

08000168 <CopyData>:
 8000168:	4b0a      	ldr	r3, [pc, #40]	; (8000194 <Zerobss+0x10>)
 800016a:	585b      	ldr	r3, [r3, r1]
 800016c:	5043      	str	r3, [r0, r1]
 800016e:	3104      	adds	r1, #4

08000170 <DataInit>:
 8000170:	4809      	ldr	r0, [pc, #36]	; (8000198 <Zerobss+0x14>)
 8000172:	4b0a      	ldr	r3, [pc, #40]	; (800019c <Zerobss+0x18>)
 8000174:	1842      	adds	r2, r0, r1
 8000176:	429a      	cmp	r2, r3
 8000178:	d3f6      	bcc.n	8000168 <CopyData>
 800017a:	4a09      	ldr	r2, [pc, #36]	; (80001a0 <Zerobss+0x1c>)
 800017c:	e002      	b.n	8000184 <Zerobss>

0800017e <FillZerobss>:
 800017e:	2300      	movs	r3, #0
 8000180:	f842 3b04 	str.w	r3, [r2], #4

08000184 <Zerobss>:
 8000184:	4b07      	ldr	r3, [pc, #28]	; (80001a4 <Zerobss+0x20>)
 8000186:	429a      	cmp	r2, r3
 8000188:	d3f9      	bcc.n	800017e <FillZerobss>
 800018a:	f003 fa69 	bl	8003660 <SystemInit>
 800018e:	f000 f84f 	bl	8000230 <main>
 8000192:	4770      	bx	lr
 8000194:	08005168 	stmdaeq	r0, {r3, r5, r6, r8, ip, lr}
 8000198:	20000000 	andcs	r0, r0, r0
 800019c:	200000ec 	andcs	r0, r0, ip, ror #1
 80001a0:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 80001a4:	20001824 	andcs	r1, r0, r4, lsr #16

080001a8 <__aeabi_uldivmod>:
 80001a8:	b953      	cbnz	r3, 80001c0 <__aeabi_uldivmod+0x18>
 80001aa:	b94a      	cbnz	r2, 80001c0 <__aeabi_uldivmod+0x18>
 80001ac:	2900      	cmp	r1, #0
 80001ae:	bf08      	it	eq
 80001b0:	2800      	cmpeq	r0, #0
 80001b2:	bf1c      	itt	ne
 80001b4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 80001b8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80001bc:	f000 b80c 	b.w	80001d8 <__aeabi_idiv0>
 80001c0:	f1ad 0c08 	sub.w	ip, sp, #8
 80001c4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80001c8:	f000 fb2c 	bl	8000824 <__udivmoddi4>
 80001cc:	f8dd e004 	ldr.w	lr, [sp, #4]
 80001d0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80001d4:	b004      	add	sp, #16
 80001d6:	4770      	bx	lr

080001d8 <__aeabi_idiv0>:
 80001d8:	4770      	bx	lr
 80001da:	bf00      	nop

080001dc <ADC0_1_IRQHandler>:
 80001dc:	e7fe      	b.n	80001dc <ADC0_1_IRQHandler>

080001de <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 80001de:	b470      	push	{r4, r5, r6}
 80001e0:	790a      	ldrb	r2, [r1, #4]
 80001e2:	680b      	ldr	r3, [r1, #0]
 80001e4:	f890 1050 	ldrb.w	r1, [r0, #80]	; 0x50
 80001e8:	2a20      	cmp	r2, #32
 80001ea:	bf28      	it	cs
 80001ec:	2220      	movcs	r2, #32
 80001ee:	189c      	adds	r4, r3, r2
 80001f0:	b189      	cbz	r1, 8000216 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x38>
 80001f2:	f100 010a 	add.w	r1, r0, #10
 80001f6:	460d      	mov	r5, r1
 80001f8:	42a3      	cmp	r3, r4
 80001fa:	d107      	bne.n	800020c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x2e>
 80001fc:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 8000200:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8000202:	b170      	cbz	r0, 8000222 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x44>
 8000204:	6803      	ldr	r3, [r0, #0]
 8000206:	bc70      	pop	{r4, r5, r6}
 8000208:	689b      	ldr	r3, [r3, #8]
 800020a:	4718      	bx	r3
 800020c:	f813 6b01 	ldrb.w	r6, [r3], #1
 8000210:	f805 6b01 	strb.w	r6, [r5], #1
 8000214:	e7f0      	b.n	80001f8 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x1a>
 8000216:	f100 0151 	add.w	r1, r0, #81	; 0x51
 800021a:	42a3      	cmp	r3, r4
 800021c:	d103      	bne.n	8000226 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x48>
 800021e:	f880 2071 	strb.w	r2, [r0, #113]	; 0x71
 8000222:	bc70      	pop	{r4, r5, r6}
 8000224:	4770      	bx	lr
 8000226:	f813 5b01 	ldrb.w	r5, [r3], #1
 800022a:	f801 5b01 	strb.w	r5, [r1], #1
 800022e:	e7f4      	b.n	800021a <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3c>

08000230 <main>:
 8000230:	b570      	push	{r4, r5, r6, lr}
 8000232:	f5ad 7d76 	sub.w	sp, sp, #984	; 0x3d8
 8000236:	a807      	add	r0, sp, #28
 8000238:	f003 f818 	bl	800326c <Hardware::Hardware()>
 800023c:	a80f      	add	r0, sp, #60	; 0x3c
 800023e:	f002 fcf9 	bl	8002c34 <Network::Network()>
 8000242:	a817      	add	r0, sp, #92	; 0x5c
 8000244:	f002 fff0 	bl	8003228 <LedBlink::LedBlink()>
 8000248:	a81d      	add	r0, sp, #116	; 0x74
 800024a:	f002 fdbf 	bl	8002dcc <Display::Display()>
 800024e:	a805      	add	r0, sp, #20
 8000250:	f002 fb78 	bl	8002944 <FlashRom::FlashRom()>
 8000254:	a806      	add	r0, sp, #24
 8000256:	f002 f9f1 	bl	800263c <SpiFlashStore::SpiFlashStore()>
 800025a:	a830      	add	r0, sp, #192	; 0xc0
 800025c:	f000 fc46 	bl	8000aec <Widget::Widget()>
 8000260:	2300      	movs	r3, #0
 8000262:	4619      	mov	r1, r3
 8000264:	2201      	movs	r2, #1
 8000266:	a830      	add	r0, sp, #192	; 0xc0
 8000268:	f001 fd72 	bl	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800026c:	a809      	add	r0, sp, #36	; 0x24
 800026e:	f002 fb5d 	bl	800292c <StoreWidget::StoreWidget()>
 8000272:	a909      	add	r1, sp, #36	; 0x24
 8000274:	a813      	add	r0, sp, #76	; 0x4c
 8000276:	f000 ffeb 	bl	8001250 <WidgetParams::WidgetParams(WidgetParamsStore*)>
 800027a:	a813      	add	r0, sp, #76	; 0x4c
 800027c:	f000 fff0 	bl	8001260 <WidgetParams::Load()>
 8000280:	b128      	cbz	r0, 800028e <main+0x5e>
 8000282:	a813      	add	r0, sp, #76	; 0x4c
 8000284:	f001 f868 	bl	8001358 <WidgetParams::Set()>
 8000288:	a813      	add	r0, sp, #76	; 0x4c
 800028a:	f001 f888 	bl	800139e <WidgetParams::Dump()>
 800028e:	a80b      	add	r0, sp, #44	; 0x2c
 8000290:	f002 fb10 	bl	80028b4 <StoreRDMDevice::StoreRDMDevice()>
 8000294:	a90b      	add	r1, sp, #44	; 0x2c
 8000296:	a824      	add	r0, sp, #144	; 0x90
 8000298:	f002 f8d0 	bl	800243c <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 800029c:	a837      	add	r0, sp, #220	; 0xdc
 800029e:	4950      	ldr	r1, [pc, #320]	; (80003e0 <main+0x1b0>)
 80002a0:	f7ff ff9d 	bl	80001de <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 80002a4:	a824      	add	r0, sp, #144	; 0x90
 80002a6:	f002 f8db 	bl	8002460 <RDMDeviceParams::Load()>
 80002aa:	b130      	cbz	r0, 80002ba <main+0x8a>
 80002ac:	a824      	add	r0, sp, #144	; 0x90
 80002ae:	a937      	add	r1, sp, #220	; 0xdc
 80002b0:	f002 f8e1 	bl	8002476 <RDMDeviceParams::Set(RDMDevice*)>
 80002b4:	a824      	add	r0, sp, #144	; 0x90
 80002b6:	f002 f916 	bl	80024e6 <RDMDeviceParams::Dump()>
 80002ba:	2301      	movs	r3, #1
 80002bc:	f88d 312c 	strb.w	r3, [sp, #300]	; 0x12c
 80002c0:	f20d 132d 	addw	r3, sp, #301	; 0x12d
 80002c4:	930d      	str	r3, [sp, #52]	; 0x34
 80002c6:	a90d      	add	r1, sp, #52	; 0x34
 80002c8:	f89d 314d 	ldrb.w	r3, [sp, #333]	; 0x14d
 80002cc:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
 80002d0:	a837      	add	r0, sp, #220	; 0xdc
 80002d2:	f7ff ff84 	bl	80001de <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 80002d6:	f10d 01e6 	add.w	r1, sp, #230	; 0xe6
 80002da:	f89d 314d 	ldrb.w	r3, [sp, #333]	; 0x14d
 80002de:	f89d 5106 	ldrb.w	r5, [sp, #262]	; 0x106
 80002e2:	2200      	movs	r2, #0
 80002e4:	460e      	mov	r6, r1
 80002e6:	42aa      	cmp	r2, r5
 80002e8:	d373      	bcc.n	80003d2 <main+0x1a2>
 80002ea:	f8ad 314e 	strh.w	r3, [sp, #334]	; 0x14e
 80002ee:	4b3d      	ldr	r3, [pc, #244]	; (80003e4 <main+0x1b4>)
 80002f0:	f89d 4057 	ldrb.w	r4, [sp, #87]	; 0x57
 80002f4:	4a3c      	ldr	r2, [pc, #240]	; (80003e8 <main+0x1b8>)
 80002f6:	493d      	ldr	r1, [pc, #244]	; (80003ec <main+0x1bc>)
 80002f8:	9300      	str	r3, [sp, #0]
 80002fa:	483d      	ldr	r0, [pc, #244]	; (80003f0 <main+0x1c0>)
 80002fc:	4b3d      	ldr	r3, [pc, #244]	; (80003f4 <main+0x1c4>)
 80002fe:	f000 fa81 	bl	8000804 <printf>
 8000302:	4b3d      	ldr	r3, [pc, #244]	; (80003f8 <main+0x1c8>)
 8000304:	483d      	ldr	r0, [pc, #244]	; (80003fc <main+0x1cc>)
 8000306:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 800030a:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 800030e:	4621      	mov	r1, r4
 8000310:	f000 fa78 	bl	8000804 <printf>
 8000314:	f89d 30e1 	ldrb.w	r3, [sp, #225]	; 0xe1
 8000318:	9302      	str	r3, [sp, #8]
 800031a:	f89d 30e0 	ldrb.w	r3, [sp, #224]	; 0xe0
 800031e:	9301      	str	r3, [sp, #4]
 8000320:	f89d 30df 	ldrb.w	r3, [sp, #223]	; 0xdf
 8000324:	f89d 20dd 	ldrb.w	r2, [sp, #221]	; 0xdd
 8000328:	f89d 10dc 	ldrb.w	r1, [sp, #220]	; 0xdc
 800032c:	9300      	str	r3, [sp, #0]
 800032e:	4834      	ldr	r0, [pc, #208]	; (8000400 <main+0x1d0>)
 8000330:	f89d 30de 	ldrb.w	r3, [sp, #222]	; 0xde
 8000334:	f000 fa66 	bl	8000804 <printf>
 8000338:	4632      	mov	r2, r6
 800033a:	4629      	mov	r1, r5
 800033c:	4831      	ldr	r0, [pc, #196]	; (8000404 <main+0x1d4>)
 800033e:	f000 fa61 	bl	8000804 <printf>
 8000342:	2102      	movs	r1, #2
 8000344:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000348:	f003 fb04 	bl	8003954 <fwdgt_config>
 800034c:	2801      	cmp	r0, #1
 800034e:	bf0c      	ite	eq
 8000350:	2301      	moveq	r3, #1
 8000352:	2300      	movne	r3, #0
 8000354:	f88d 3020 	strb.w	r3, [sp, #32]
 8000358:	d101      	bne.n	800035e <main+0x12e>
 800035a:	f003 faeb 	bl	8003934 <fwdgt_enable>
 800035e:	2c03      	cmp	r4, #3
 8000360:	d108      	bne.n	8000374 <main+0x144>
 8000362:	2301      	movs	r3, #1
 8000364:	a830      	add	r0, sp, #192	; 0xc0
 8000366:	461a      	mov	r2, r3
 8000368:	2100      	movs	r1, #0
 800036a:	f001 fcf1 	bl	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800036e:	a830      	add	r0, sp, #192	; 0xc0
 8000370:	f001 f8f8 	bl	8001564 <Widget::SnifferFillTransmitBuffer()>
 8000374:	4c24      	ldr	r4, [pc, #144]	; (8000408 <main+0x1d8>)
 8000376:	4d25      	ldr	r5, [pc, #148]	; (800040c <main+0x1dc>)
 8000378:	2601      	movs	r6, #1
 800037a:	f003 fae3 	bl	8003944 <fwdgt_counter_reload>
 800037e:	a830      	add	r0, sp, #192	; 0xc0
 8000380:	f000 fe7e 	bl	8001080 <Widget::ReceiveDataFromHost()>
 8000384:	a830      	add	r0, sp, #192	; 0xc0
 8000386:	f000 fc2b 	bl	8000be0 <Widget::ReceivedDmxPacket()>
 800038a:	a830      	add	r0, sp, #192	; 0xc0
 800038c:	f000 fcf0 	bl	8000d70 <Widget::ReceivedDmxChangeOfStatePacket()>
 8000390:	a830      	add	r0, sp, #192	; 0xc0
 8000392:	f000 fd7b 	bl	8000e8c <Widget::ReceivedRdmPacket()>
 8000396:	a830      	add	r0, sp, #192	; 0xc0
 8000398:	f000 fdee 	bl	8000f78 <Widget::RdmTimeout()>
 800039c:	a830      	add	r0, sp, #192	; 0xc0
 800039e:	f001 f88b 	bl	80014b8 <Widget::SnifferRdm()>
 80003a2:	a830      	add	r0, sp, #192	; 0xc0
 80003a4:	f001 f862 	bl	800146c <Widget::SnifferDmx()>
 80003a8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80003aa:	b172      	cbz	r2, 80003ca <main+0x19a>
 80003ac:	6823      	ldr	r3, [r4, #0]
 80003ae:	991c      	ldr	r1, [sp, #112]	; 0x70
 80003b0:	1a5b      	subs	r3, r3, r1
 80003b2:	429a      	cmp	r2, r3
 80003b4:	d809      	bhi.n	80003ca <main+0x19a>
 80003b6:	6823      	ldr	r3, [r4, #0]
 80003b8:	931c      	str	r3, [sp, #112]	; 0x70
 80003ba:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80003bc:	2b01      	cmp	r3, #1
 80003be:	f083 0201 	eor.w	r2, r3, #1
 80003c2:	921b      	str	r2, [sp, #108]	; 0x6c
 80003c4:	bf14      	ite	ne
 80003c6:	612e      	strne	r6, [r5, #16]
 80003c8:	616b      	streq	r3, [r5, #20]
 80003ca:	a806      	add	r0, sp, #24
 80003cc:	f002 f9c6 	bl	800275c <SpiFlashStore::Flash()>
 80003d0:	e7d3      	b.n	800037a <main+0x14a>
 80003d2:	f811 0b01 	ldrb.w	r0, [r1], #1
 80003d6:	4403      	add	r3, r0
 80003d8:	b29b      	uxth	r3, r3
 80003da:	3201      	adds	r2, #1
 80003dc:	e783      	b.n	80002e6 <main+0xb6>
 80003de:	bf00      	nop
 80003e0:	0800498c 	stmdaeq	r0, {r2, r3, r7, r8, fp, lr}
 80003e4:	080048d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, fp, lr}
 80003e8:	080048b0 	stmdaeq	r0, {r4, r5, r7, fp, lr}
 80003ec:	08004994 	stmdaeq	r0, {r2, r4, r7, r8, fp, lr}
 80003f0:	080048ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, fp, lr}
 80003f4:	080048a4 	stmdaeq	r0, {r2, r5, r7, fp, lr}
 80003f8:	08004998 	stmdaeq	r0, {r3, r4, r7, r8, fp, lr}
 80003fc:	080048e2 	stmdaeq	r0, {r1, r5, r6, r7, fp, lr}
 8000400:	0800493c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp, lr}
 8000404:	08004966 	stmdaeq	r0, {r1, r2, r5, r6, r8, fp, lr}
 8000408:	2000181c 	andcs	r1, r0, ip, lsl r8
 800040c:	40011000 	andmi	r1, r1, r0

08000410 <_xputch>:
 8000410:	4603      	mov	r3, r0
 8000412:	b410      	push	{r4}
 8000414:	4c09      	ldr	r4, [pc, #36]	; (800043c <_xputch+0x2c>)
 8000416:	68da      	ldr	r2, [r3, #12]
 8000418:	4608      	mov	r0, r1
 800041a:	6821      	ldr	r1, [r4, #0]
 800041c:	3201      	adds	r2, #1
 800041e:	60da      	str	r2, [r3, #12]
 8000420:	b141      	cbz	r1, 8000434 <_xputch+0x24>
 8000422:	691b      	ldr	r3, [r3, #16]
 8000424:	429a      	cmp	r2, r3
 8000426:	da02      	bge.n	800042e <_xputch+0x1e>
 8000428:	1c4b      	adds	r3, r1, #1
 800042a:	6023      	str	r3, [r4, #0]
 800042c:	7008      	strb	r0, [r1, #0]
 800042e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000432:	4770      	bx	lr
 8000434:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000438:	f002 bef2 	b.w	8003220 <console_putc>
 800043c:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08000440 <_format_int>:
 8000440:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000444:	4698      	mov	r8, r3
 8000446:	b091      	sub	sp, #68	; 0x44
 8000448:	ea52 0308 	orrs.w	r3, r2, r8
 800044c:	4606      	mov	r6, r0
 800044e:	4617      	mov	r7, r2
 8000450:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8000454:	d133      	bne.n	80004be <_format_int+0x7e>
 8000456:	2330      	movs	r3, #48	; 0x30
 8000458:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800045c:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8000460:	6833      	ldr	r3, [r6, #0]
 8000462:	07d8      	lsls	r0, r3, #31
 8000464:	d507      	bpl.n	8000476 <_format_int+0x36>
 8000466:	6871      	ldr	r1, [r6, #4]
 8000468:	466a      	mov	r2, sp
 800046a:	2030      	movs	r0, #48	; 0x30
 800046c:	1b2f      	subs	r7, r5, r4
 800046e:	428f      	cmp	r7, r1
 8000470:	da01      	bge.n	8000476 <_format_int+0x36>
 8000472:	4294      	cmp	r4, r2
 8000474:	d839      	bhi.n	80004ea <_format_int+0xaa>
 8000476:	0699      	lsls	r1, r3, #26
 8000478:	d507      	bpl.n	800048a <_format_int+0x4a>
 800047a:	68b1      	ldr	r1, [r6, #8]
 800047c:	466a      	mov	r2, sp
 800047e:	2030      	movs	r0, #48	; 0x30
 8000480:	1b2f      	subs	r7, r5, r4
 8000482:	428f      	cmp	r7, r1
 8000484:	da01      	bge.n	800048a <_format_int+0x4a>
 8000486:	4294      	cmp	r4, r2
 8000488:	d832      	bhi.n	80004f0 <_format_int+0xb0>
 800048a:	071a      	lsls	r2, r3, #28
 800048c:	bf44      	itt	mi
 800048e:	222d      	movmi	r2, #45	; 0x2d
 8000490:	f804 2901 	strbmi.w	r2, [r4], #-1
 8000494:	065b      	lsls	r3, r3, #25
 8000496:	d407      	bmi.n	80004a8 <_format_int+0x68>
 8000498:	68b2      	ldr	r2, [r6, #8]
 800049a:	466b      	mov	r3, sp
 800049c:	2120      	movs	r1, #32
 800049e:	1b28      	subs	r0, r5, r4
 80004a0:	4290      	cmp	r0, r2
 80004a2:	da01      	bge.n	80004a8 <_format_int+0x68>
 80004a4:	429c      	cmp	r4, r3
 80004a6:	d826      	bhi.n	80004f6 <_format_int+0xb6>
 80004a8:	1b2d      	subs	r5, r5, r4
 80004aa:	3401      	adds	r4, #1
 80004ac:	ab10      	add	r3, sp, #64	; 0x40
 80004ae:	429c      	cmp	r4, r3
 80004b0:	d324      	bcc.n	80004fc <_format_int+0xbc>
 80004b2:	68b3      	ldr	r3, [r6, #8]
 80004b4:	42ab      	cmp	r3, r5
 80004b6:	dc27      	bgt.n	8000508 <_format_int+0xc8>
 80004b8:	b011      	add	sp, #68	; 0x44
 80004ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80004be:	462c      	mov	r4, r5
 80004c0:	46e9      	mov	r9, sp
 80004c2:	4638      	mov	r0, r7
 80004c4:	4641      	mov	r1, r8
 80004c6:	220a      	movs	r2, #10
 80004c8:	2300      	movs	r3, #0
 80004ca:	f7ff fe6d 	bl	80001a8 <__aeabi_uldivmod>
 80004ce:	3230      	adds	r2, #48	; 0x30
 80004d0:	f804 2901 	strb.w	r2, [r4], #-1
 80004d4:	463a      	mov	r2, r7
 80004d6:	4643      	mov	r3, r8
 80004d8:	2a0a      	cmp	r2, #10
 80004da:	f173 0300 	sbcs.w	r3, r3, #0
 80004de:	4607      	mov	r7, r0
 80004e0:	4688      	mov	r8, r1
 80004e2:	d3bd      	bcc.n	8000460 <_format_int+0x20>
 80004e4:	454c      	cmp	r4, r9
 80004e6:	d1ec      	bne.n	80004c2 <_format_int+0x82>
 80004e8:	e7ba      	b.n	8000460 <_format_int+0x20>
 80004ea:	f804 0901 	strb.w	r0, [r4], #-1
 80004ee:	e7bd      	b.n	800046c <_format_int+0x2c>
 80004f0:	f804 0901 	strb.w	r0, [r4], #-1
 80004f4:	e7c4      	b.n	8000480 <_format_int+0x40>
 80004f6:	f804 1901 	strb.w	r1, [r4], #-1
 80004fa:	e7d0      	b.n	800049e <_format_int+0x5e>
 80004fc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000500:	4630      	mov	r0, r6
 8000502:	f7ff ff85 	bl	8000410 <_xputch>
 8000506:	e7d1      	b.n	80004ac <_format_int+0x6c>
 8000508:	2120      	movs	r1, #32
 800050a:	4630      	mov	r0, r6
 800050c:	f7ff ff80 	bl	8000410 <_xputch>
 8000510:	3501      	adds	r5, #1
 8000512:	e7ce      	b.n	80004b2 <_format_int+0x72>

08000514 <_format_hex>:
 8000514:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000516:	b091      	sub	sp, #68	; 0x44
 8000518:	6804      	ldr	r4, [r0, #0]
 800051a:	4606      	mov	r6, r0
 800051c:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8000520:	bb61      	cbnz	r1, 800057c <_format_hex+0x68>
 8000522:	2330      	movs	r3, #48	; 0x30
 8000524:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8000528:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 800052c:	07e5      	lsls	r5, r4, #31
 800052e:	d507      	bpl.n	8000540 <_format_hex+0x2c>
 8000530:	6870      	ldr	r0, [r6, #4]
 8000532:	4669      	mov	r1, sp
 8000534:	2530      	movs	r5, #48	; 0x30
 8000536:	1ad7      	subs	r7, r2, r3
 8000538:	4287      	cmp	r7, r0
 800053a:	da01      	bge.n	8000540 <_format_hex+0x2c>
 800053c:	428b      	cmp	r3, r1
 800053e:	d831      	bhi.n	80005a4 <_format_hex+0x90>
 8000540:	06a0      	lsls	r0, r4, #26
 8000542:	d507      	bpl.n	8000554 <_format_hex+0x40>
 8000544:	68b0      	ldr	r0, [r6, #8]
 8000546:	4669      	mov	r1, sp
 8000548:	2530      	movs	r5, #48	; 0x30
 800054a:	1ad7      	subs	r7, r2, r3
 800054c:	4287      	cmp	r7, r0
 800054e:	da01      	bge.n	8000554 <_format_hex+0x40>
 8000550:	428b      	cmp	r3, r1
 8000552:	d82a      	bhi.n	80005aa <_format_hex+0x96>
 8000554:	0661      	lsls	r1, r4, #25
 8000556:	d407      	bmi.n	8000568 <_format_hex+0x54>
 8000558:	68b0      	ldr	r0, [r6, #8]
 800055a:	4669      	mov	r1, sp
 800055c:	2420      	movs	r4, #32
 800055e:	1ad5      	subs	r5, r2, r3
 8000560:	4285      	cmp	r5, r0
 8000562:	da01      	bge.n	8000568 <_format_hex+0x54>
 8000564:	428b      	cmp	r3, r1
 8000566:	d823      	bhi.n	80005b0 <_format_hex+0x9c>
 8000568:	1ad5      	subs	r5, r2, r3
 800056a:	1c5c      	adds	r4, r3, #1
 800056c:	ab10      	add	r3, sp, #64	; 0x40
 800056e:	429c      	cmp	r4, r3
 8000570:	d321      	bcc.n	80005b6 <_format_hex+0xa2>
 8000572:	68b3      	ldr	r3, [r6, #8]
 8000574:	429d      	cmp	r5, r3
 8000576:	db24      	blt.n	80005c2 <_format_hex+0xae>
 8000578:	b011      	add	sp, #68	; 0x44
 800057a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800057c:	f014 0f02 	tst.w	r4, #2
 8000580:	bf0c      	ite	eq
 8000582:	2757      	moveq	r7, #87	; 0x57
 8000584:	2737      	movne	r7, #55	; 0x37
 8000586:	4613      	mov	r3, r2
 8000588:	466d      	mov	r5, sp
 800058a:	f001 000f 	and.w	r0, r1, #15
 800058e:	2809      	cmp	r0, #9
 8000590:	bf94      	ite	ls
 8000592:	3030      	addls	r0, #48	; 0x30
 8000594:	19c0      	addhi	r0, r0, r7
 8000596:	0909      	lsrs	r1, r1, #4
 8000598:	f803 0901 	strb.w	r0, [r3], #-1
 800059c:	d0c6      	beq.n	800052c <_format_hex+0x18>
 800059e:	42ab      	cmp	r3, r5
 80005a0:	d1f3      	bne.n	800058a <_format_hex+0x76>
 80005a2:	e7c3      	b.n	800052c <_format_hex+0x18>
 80005a4:	f803 5901 	strb.w	r5, [r3], #-1
 80005a8:	e7c5      	b.n	8000536 <_format_hex+0x22>
 80005aa:	f803 5901 	strb.w	r5, [r3], #-1
 80005ae:	e7cc      	b.n	800054a <_format_hex+0x36>
 80005b0:	f803 4901 	strb.w	r4, [r3], #-1
 80005b4:	e7d3      	b.n	800055e <_format_hex+0x4a>
 80005b6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80005ba:	4630      	mov	r0, r6
 80005bc:	f7ff ff28 	bl	8000410 <_xputch>
 80005c0:	e7d4      	b.n	800056c <_format_hex+0x58>
 80005c2:	2120      	movs	r1, #32
 80005c4:	4630      	mov	r0, r6
 80005c6:	f7ff ff23 	bl	8000410 <_xputch>
 80005ca:	3501      	adds	r5, #1
 80005cc:	e7d1      	b.n	8000572 <_format_hex+0x5e>
	...

080005d0 <_vprintf>:
 80005d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80005d4:	2700      	movs	r7, #0
 80005d6:	b086      	sub	sp, #24
 80005d8:	e9cd 7004 	strd	r7, r0, [sp, #16]
 80005dc:	4614      	mov	r4, r2
 80005de:	f04f 080a 	mov.w	r8, #10
 80005e2:	780b      	ldrb	r3, [r1, #0]
 80005e4:	b91b      	cbnz	r3, 80005ee <_vprintf+0x1e>
 80005e6:	9804      	ldr	r0, [sp, #16]
 80005e8:	b006      	add	sp, #24
 80005ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80005ee:	2b25      	cmp	r3, #37	; 0x25
 80005f0:	f101 0601 	add.w	r6, r1, #1
 80005f4:	d005      	beq.n	8000602 <_vprintf+0x32>
 80005f6:	4619      	mov	r1, r3
 80005f8:	a801      	add	r0, sp, #4
 80005fa:	f7ff ff09 	bl	8000410 <_xputch>
 80005fe:	4631      	mov	r1, r6
 8000600:	e7ef      	b.n	80005e2 <_vprintf+0x12>
 8000602:	784b      	ldrb	r3, [r1, #1]
 8000604:	9703      	str	r7, [sp, #12]
 8000606:	2b30      	cmp	r3, #48	; 0x30
 8000608:	e9cd 7701 	strd	r7, r7, [sp, #4]
 800060c:	d126      	bne.n	800065c <_vprintf+0x8c>
 800060e:	2320      	movs	r3, #32
 8000610:	9301      	str	r3, [sp, #4]
 8000612:	1c8e      	adds	r6, r1, #2
 8000614:	2200      	movs	r2, #0
 8000616:	4635      	mov	r5, r6
 8000618:	4613      	mov	r3, r2
 800061a:	7829      	ldrb	r1, [r5, #0]
 800061c:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8000620:	2809      	cmp	r0, #9
 8000622:	462e      	mov	r6, r5
 8000624:	f105 0501 	add.w	r5, r5, #1
 8000628:	d91c      	bls.n	8000664 <_vprintf+0x94>
 800062a:	b12a      	cbz	r2, 8000638 <_vprintf+0x68>
 800062c:	9303      	str	r3, [sp, #12]
 800062e:	b11b      	cbz	r3, 8000638 <_vprintf+0x68>
 8000630:	9b01      	ldr	r3, [sp, #4]
 8000632:	f043 0310 	orr.w	r3, r3, #16
 8000636:	9301      	str	r3, [sp, #4]
 8000638:	292e      	cmp	r1, #46	; 0x2e
 800063a:	d122      	bne.n	8000682 <_vprintf+0xb2>
 800063c:	7873      	ldrb	r3, [r6, #1]
 800063e:	2b2a      	cmp	r3, #42	; 0x2a
 8000640:	d014      	beq.n	800066c <_vprintf+0x9c>
 8000642:	2100      	movs	r1, #0
 8000644:	1c70      	adds	r0, r6, #1
 8000646:	460a      	mov	r2, r1
 8000648:	7803      	ldrb	r3, [r0, #0]
 800064a:	3b30      	subs	r3, #48	; 0x30
 800064c:	2b09      	cmp	r3, #9
 800064e:	4606      	mov	r6, r0
 8000650:	f100 0001 	add.w	r0, r0, #1
 8000654:	d930      	bls.n	80006b8 <_vprintf+0xe8>
 8000656:	b181      	cbz	r1, 800067a <_vprintf+0xaa>
 8000658:	9202      	str	r2, [sp, #8]
 800065a:	e00e      	b.n	800067a <_vprintf+0xaa>
 800065c:	2b2d      	cmp	r3, #45	; 0x2d
 800065e:	d1d9      	bne.n	8000614 <_vprintf+0x44>
 8000660:	2340      	movs	r3, #64	; 0x40
 8000662:	e7d5      	b.n	8000610 <_vprintf+0x40>
 8000664:	fb08 0303 	mla	r3, r8, r3, r0
 8000668:	2201      	movs	r2, #1
 800066a:	e7d6      	b.n	800061a <_vprintf+0x4a>
 800066c:	f854 3b04 	ldr.w	r3, [r4], #4
 8000670:	2b00      	cmp	r3, #0
 8000672:	bfb8      	it	lt
 8000674:	425b      	neglt	r3, r3
 8000676:	3602      	adds	r6, #2
 8000678:	9302      	str	r3, [sp, #8]
 800067a:	9b01      	ldr	r3, [sp, #4]
 800067c:	f043 0301 	orr.w	r3, r3, #1
 8000680:	9301      	str	r3, [sp, #4]
 8000682:	7833      	ldrb	r3, [r6, #0]
 8000684:	2b6c      	cmp	r3, #108	; 0x6c
 8000686:	bf04      	itt	eq
 8000688:	3601      	addeq	r6, #1
 800068a:	9b01      	ldreq	r3, [sp, #4]
 800068c:	7831      	ldrb	r1, [r6, #0]
 800068e:	bf04      	itt	eq
 8000690:	f043 0304 	orreq.w	r3, r3, #4
 8000694:	9301      	streq	r3, [sp, #4]
 8000696:	2978      	cmp	r1, #120	; 0x78
 8000698:	d8ae      	bhi.n	80005f8 <_vprintf+0x28>
 800069a:	296f      	cmp	r1, #111	; 0x6f
 800069c:	d810      	bhi.n	80006c0 <_vprintf+0xf0>
 800069e:	2963      	cmp	r1, #99	; 0x63
 80006a0:	d048      	beq.n	8000734 <_vprintf+0x164>
 80006a2:	d827      	bhi.n	80006f4 <_vprintf+0x124>
 80006a4:	2958      	cmp	r1, #88	; 0x58
 80006a6:	d1a7      	bne.n	80005f8 <_vprintf+0x28>
 80006a8:	9b01      	ldr	r3, [sp, #4]
 80006aa:	f043 0302 	orr.w	r3, r3, #2
 80006ae:	9301      	str	r3, [sp, #4]
 80006b0:	4625      	mov	r5, r4
 80006b2:	f855 1b04 	ldr.w	r1, [r5], #4
 80006b6:	e056      	b.n	8000766 <_vprintf+0x196>
 80006b8:	fb08 3202 	mla	r2, r8, r2, r3
 80006bc:	2101      	movs	r1, #1
 80006be:	e7c3      	b.n	8000648 <_vprintf+0x78>
 80006c0:	f1a1 0370 	sub.w	r3, r1, #112	; 0x70
 80006c4:	2b08      	cmp	r3, #8
 80006c6:	d897      	bhi.n	80005f8 <_vprintf+0x28>
 80006c8:	a201      	add	r2, pc, #4	; (adr r2, 80006d0 <_vprintf+0x100>)
 80006ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80006ce:	bf00      	nop
 80006d0:	08000747 	stmdaeq	r0, {r0, r1, r2, r6, r8, r9, sl}
 80006d4:	080005f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl}
 80006d8:	080005f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl}
 80006dc:	0800076f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r8, r9, sl}
 80006e0:	080005f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl}
 80006e4:	080007e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, r9, sl}
 80006e8:	080005f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl}
 80006ec:	080005f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl}
 80006f0:	080006b1 	stmdaeq	r0, {r0, r4, r5, r7, r9, sl}
 80006f4:	2964      	cmp	r1, #100	; 0x64
 80006f6:	d002      	beq.n	80006fe <_vprintf+0x12e>
 80006f8:	2969      	cmp	r1, #105	; 0x69
 80006fa:	f47f af7d 	bne.w	80005f8 <_vprintf+0x28>
 80006fe:	9901      	ldr	r1, [sp, #4]
 8000700:	074d      	lsls	r5, r1, #29
 8000702:	bf4b      	itete	mi
 8000704:	3407      	addmi	r4, #7
 8000706:	4625      	movpl	r5, r4
 8000708:	f024 0407 	bicmi.w	r4, r4, #7
 800070c:	f855 2b04 	ldrpl.w	r2, [r5], #4
 8000710:	bf45      	ittet	mi
 8000712:	6863      	ldrmi	r3, [r4, #4]
 8000714:	4625      	movmi	r5, r4
 8000716:	17d3      	asrpl	r3, r2, #31
 8000718:	f855 2b08 	ldrmi.w	r2, [r5], #8
 800071c:	2b00      	cmp	r3, #0
 800071e:	da05      	bge.n	800072c <_vprintf+0x15c>
 8000720:	f041 0108 	orr.w	r1, r1, #8
 8000724:	4252      	negs	r2, r2
 8000726:	9101      	str	r1, [sp, #4]
 8000728:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800072c:	a801      	add	r0, sp, #4
 800072e:	f7ff fe87 	bl	8000440 <_format_int>
 8000732:	e005      	b.n	8000740 <_vprintf+0x170>
 8000734:	4625      	mov	r5, r4
 8000736:	a801      	add	r0, sp, #4
 8000738:	f855 1b04 	ldr.w	r1, [r5], #4
 800073c:	f7ff fe68 	bl	8000410 <_xputch>
 8000740:	3601      	adds	r6, #1
 8000742:	462c      	mov	r4, r5
 8000744:	e75b      	b.n	80005fe <_vprintf+0x2e>
 8000746:	4625      	mov	r5, r4
 8000748:	2308      	movs	r3, #8
 800074a:	f855 4b04 	ldr.w	r4, [r5], #4
 800074e:	9303      	str	r3, [sp, #12]
 8000750:	2130      	movs	r1, #48	; 0x30
 8000752:	2320      	movs	r3, #32
 8000754:	a801      	add	r0, sp, #4
 8000756:	9301      	str	r3, [sp, #4]
 8000758:	f7ff fe5a 	bl	8000410 <_xputch>
 800075c:	2178      	movs	r1, #120	; 0x78
 800075e:	a801      	add	r0, sp, #4
 8000760:	f7ff fe56 	bl	8000410 <_xputch>
 8000764:	4621      	mov	r1, r4
 8000766:	a801      	add	r0, sp, #4
 8000768:	f7ff fed4 	bl	8000514 <_format_hex>
 800076c:	e7e8      	b.n	8000740 <_vprintf+0x170>
 800076e:	4625      	mov	r5, r4
 8000770:	2400      	movs	r4, #0
 8000772:	f855 9b04 	ldr.w	r9, [r5], #4
 8000776:	f819 3004 	ldrb.w	r3, [r9, r4]
 800077a:	b993      	cbnz	r3, 80007a2 <_vprintf+0x1d2>
 800077c:	9b01      	ldr	r3, [sp, #4]
 800077e:	07d9      	lsls	r1, r3, #31
 8000780:	d503      	bpl.n	800078a <_vprintf+0x1ba>
 8000782:	9b02      	ldr	r3, [sp, #8]
 8000784:	429c      	cmp	r4, r3
 8000786:	bfa8      	it	ge
 8000788:	461c      	movge	r4, r3
 800078a:	9b01      	ldr	r3, [sp, #4]
 800078c:	065a      	lsls	r2, r3, #25
 800078e:	f104 0a01 	add.w	sl, r4, #1
 8000792:	d403      	bmi.n	800079c <_vprintf+0x1cc>
 8000794:	9b03      	ldr	r3, [sp, #12]
 8000796:	429c      	cmp	r4, r3
 8000798:	db05      	blt.n	80007a6 <_vprintf+0x1d6>
 800079a:	4654      	mov	r4, sl
 800079c:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80007a0:	e00d      	b.n	80007be <_vprintf+0x1ee>
 80007a2:	3401      	adds	r4, #1
 80007a4:	e7e7      	b.n	8000776 <_vprintf+0x1a6>
 80007a6:	2120      	movs	r1, #32
 80007a8:	a801      	add	r0, sp, #4
 80007aa:	f7ff fe31 	bl	8000410 <_xputch>
 80007ae:	4654      	mov	r4, sl
 80007b0:	e7eb      	b.n	800078a <_vprintf+0x1ba>
 80007b2:	a801      	add	r0, sp, #4
 80007b4:	f7ff fe2c 	bl	8000410 <_xputch>
 80007b8:	9b02      	ldr	r3, [sp, #8]
 80007ba:	3b01      	subs	r3, #1
 80007bc:	9302      	str	r3, [sp, #8]
 80007be:	9b01      	ldr	r3, [sp, #4]
 80007c0:	07db      	lsls	r3, r3, #31
 80007c2:	d501      	bpl.n	80007c8 <_vprintf+0x1f8>
 80007c4:	9b02      	ldr	r3, [sp, #8]
 80007c6:	b11b      	cbz	r3, 80007d0 <_vprintf+0x200>
 80007c8:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 80007cc:	2900      	cmp	r1, #0
 80007ce:	d1f0      	bne.n	80007b2 <_vprintf+0x1e2>
 80007d0:	9b03      	ldr	r3, [sp, #12]
 80007d2:	42a3      	cmp	r3, r4
 80007d4:	ddb4      	ble.n	8000740 <_vprintf+0x170>
 80007d6:	2120      	movs	r1, #32
 80007d8:	a801      	add	r0, sp, #4
 80007da:	f7ff fe19 	bl	8000410 <_xputch>
 80007de:	3401      	adds	r4, #1
 80007e0:	e7f6      	b.n	80007d0 <_vprintf+0x200>
 80007e2:	9b01      	ldr	r3, [sp, #4]
 80007e4:	f013 0304 	ands.w	r3, r3, #4
 80007e8:	bf1d      	ittte	ne
 80007ea:	3407      	addne	r4, #7
 80007ec:	f024 0407 	bicne.w	r4, r4, #7
 80007f0:	4625      	movne	r5, r4
 80007f2:	4625      	moveq	r5, r4
 80007f4:	bf1a      	itte	ne
 80007f6:	f855 2b08 	ldrne.w	r2, [r5], #8
 80007fa:	6863      	ldrne	r3, [r4, #4]
 80007fc:	f855 2b04 	ldreq.w	r2, [r5], #4
 8000800:	e794      	b.n	800072c <_vprintf+0x15c>
 8000802:	bf00      	nop

08000804 <printf>:
 8000804:	b40f      	push	{r0, r1, r2, r3}
 8000806:	b507      	push	{r0, r1, r2, lr}
 8000808:	aa04      	add	r2, sp, #16
 800080a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800080e:	f852 1b04 	ldr.w	r1, [r2], #4
 8000812:	9201      	str	r2, [sp, #4]
 8000814:	f7ff fedc 	bl	80005d0 <_vprintf>
 8000818:	b003      	add	sp, #12
 800081a:	f85d eb04 	ldr.w	lr, [sp], #4
 800081e:	b004      	add	sp, #16
 8000820:	4770      	bx	lr
	...

08000824 <__udivmoddi4>:
 8000824:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000828:	9e08      	ldr	r6, [sp, #32]
 800082a:	460d      	mov	r5, r1
 800082c:	4604      	mov	r4, r0
 800082e:	460f      	mov	r7, r1
 8000830:	2b00      	cmp	r3, #0
 8000832:	d14a      	bne.n	80008ca <__udivmoddi4+0xa6>
 8000834:	428a      	cmp	r2, r1
 8000836:	4694      	mov	ip, r2
 8000838:	d965      	bls.n	8000906 <__udivmoddi4+0xe2>
 800083a:	fab2 f382 	clz	r3, r2
 800083e:	b143      	cbz	r3, 8000852 <__udivmoddi4+0x2e>
 8000840:	fa02 fc03 	lsl.w	ip, r2, r3
 8000844:	f1c3 0220 	rsb	r2, r3, #32
 8000848:	409f      	lsls	r7, r3
 800084a:	fa20 f202 	lsr.w	r2, r0, r2
 800084e:	4317      	orrs	r7, r2
 8000850:	409c      	lsls	r4, r3
 8000852:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000856:	fa1f f58c 	uxth.w	r5, ip
 800085a:	fbb7 f1fe 	udiv	r1, r7, lr
 800085e:	0c22      	lsrs	r2, r4, #16
 8000860:	fb0e 7711 	mls	r7, lr, r1, r7
 8000864:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000868:	fb01 f005 	mul.w	r0, r1, r5
 800086c:	4290      	cmp	r0, r2
 800086e:	d90a      	bls.n	8000886 <__udivmoddi4+0x62>
 8000870:	eb1c 0202 	adds.w	r2, ip, r2
 8000874:	f101 37ff 	add.w	r7, r1, #4294967295	; 0xffffffff
 8000878:	f080 811c 	bcs.w	8000ab4 <__udivmoddi4+0x290>
 800087c:	4290      	cmp	r0, r2
 800087e:	f240 8119 	bls.w	8000ab4 <__udivmoddi4+0x290>
 8000882:	3902      	subs	r1, #2
 8000884:	4462      	add	r2, ip
 8000886:	1a12      	subs	r2, r2, r0
 8000888:	b2a4      	uxth	r4, r4
 800088a:	fbb2 f0fe 	udiv	r0, r2, lr
 800088e:	fb0e 2210 	mls	r2, lr, r0, r2
 8000892:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000896:	fb00 f505 	mul.w	r5, r0, r5
 800089a:	42a5      	cmp	r5, r4
 800089c:	d90a      	bls.n	80008b4 <__udivmoddi4+0x90>
 800089e:	eb1c 0404 	adds.w	r4, ip, r4
 80008a2:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80008a6:	f080 8107 	bcs.w	8000ab8 <__udivmoddi4+0x294>
 80008aa:	42a5      	cmp	r5, r4
 80008ac:	f240 8104 	bls.w	8000ab8 <__udivmoddi4+0x294>
 80008b0:	4464      	add	r4, ip
 80008b2:	3802      	subs	r0, #2
 80008b4:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80008b8:	1b64      	subs	r4, r4, r5
 80008ba:	2100      	movs	r1, #0
 80008bc:	b11e      	cbz	r6, 80008c6 <__udivmoddi4+0xa2>
 80008be:	40dc      	lsrs	r4, r3
 80008c0:	2300      	movs	r3, #0
 80008c2:	e9c6 4300 	strd	r4, r3, [r6]
 80008c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80008ca:	428b      	cmp	r3, r1
 80008cc:	d908      	bls.n	80008e0 <__udivmoddi4+0xbc>
 80008ce:	2e00      	cmp	r6, #0
 80008d0:	f000 80ed 	beq.w	8000aae <__udivmoddi4+0x28a>
 80008d4:	2100      	movs	r1, #0
 80008d6:	e9c6 0500 	strd	r0, r5, [r6]
 80008da:	4608      	mov	r0, r1
 80008dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80008e0:	fab3 f183 	clz	r1, r3
 80008e4:	2900      	cmp	r1, #0
 80008e6:	d149      	bne.n	800097c <__udivmoddi4+0x158>
 80008e8:	42ab      	cmp	r3, r5
 80008ea:	d302      	bcc.n	80008f2 <__udivmoddi4+0xce>
 80008ec:	4282      	cmp	r2, r0
 80008ee:	f200 80f8 	bhi.w	8000ae2 <__udivmoddi4+0x2be>
 80008f2:	1a84      	subs	r4, r0, r2
 80008f4:	eb65 0203 	sbc.w	r2, r5, r3
 80008f8:	2001      	movs	r0, #1
 80008fa:	4617      	mov	r7, r2
 80008fc:	2e00      	cmp	r6, #0
 80008fe:	d0e2      	beq.n	80008c6 <__udivmoddi4+0xa2>
 8000900:	e9c6 4700 	strd	r4, r7, [r6]
 8000904:	e7df      	b.n	80008c6 <__udivmoddi4+0xa2>
 8000906:	b902      	cbnz	r2, 800090a <__udivmoddi4+0xe6>
 8000908:	deff      	udf	#255	; 0xff
 800090a:	fab2 f382 	clz	r3, r2
 800090e:	2b00      	cmp	r3, #0
 8000910:	f040 8090 	bne.w	8000a34 <__udivmoddi4+0x210>
 8000914:	1a8a      	subs	r2, r1, r2
 8000916:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800091a:	fa1f fe8c 	uxth.w	lr, ip
 800091e:	2101      	movs	r1, #1
 8000920:	fbb2 f5f7 	udiv	r5, r2, r7
 8000924:	fb07 2015 	mls	r0, r7, r5, r2
 8000928:	0c22      	lsrs	r2, r4, #16
 800092a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800092e:	fb0e f005 	mul.w	r0, lr, r5
 8000932:	4290      	cmp	r0, r2
 8000934:	d908      	bls.n	8000948 <__udivmoddi4+0x124>
 8000936:	eb1c 0202 	adds.w	r2, ip, r2
 800093a:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800093e:	d202      	bcs.n	8000946 <__udivmoddi4+0x122>
 8000940:	4290      	cmp	r0, r2
 8000942:	f200 80cb 	bhi.w	8000adc <__udivmoddi4+0x2b8>
 8000946:	4645      	mov	r5, r8
 8000948:	1a12      	subs	r2, r2, r0
 800094a:	b2a4      	uxth	r4, r4
 800094c:	fbb2 f0f7 	udiv	r0, r2, r7
 8000950:	fb07 2210 	mls	r2, r7, r0, r2
 8000954:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000958:	fb0e fe00 	mul.w	lr, lr, r0
 800095c:	45a6      	cmp	lr, r4
 800095e:	d908      	bls.n	8000972 <__udivmoddi4+0x14e>
 8000960:	eb1c 0404 	adds.w	r4, ip, r4
 8000964:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8000968:	d202      	bcs.n	8000970 <__udivmoddi4+0x14c>
 800096a:	45a6      	cmp	lr, r4
 800096c:	f200 80bb 	bhi.w	8000ae6 <__udivmoddi4+0x2c2>
 8000970:	4610      	mov	r0, r2
 8000972:	eba4 040e 	sub.w	r4, r4, lr
 8000976:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800097a:	e79f      	b.n	80008bc <__udivmoddi4+0x98>
 800097c:	f1c1 0720 	rsb	r7, r1, #32
 8000980:	408b      	lsls	r3, r1
 8000982:	fa22 fc07 	lsr.w	ip, r2, r7
 8000986:	ea4c 0c03 	orr.w	ip, ip, r3
 800098a:	fa05 f401 	lsl.w	r4, r5, r1
 800098e:	fa20 f307 	lsr.w	r3, r0, r7
 8000992:	40fd      	lsrs	r5, r7
 8000994:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000998:	4323      	orrs	r3, r4
 800099a:	fbb5 f8f9 	udiv	r8, r5, r9
 800099e:	fa1f fe8c 	uxth.w	lr, ip
 80009a2:	fb09 5518 	mls	r5, r9, r8, r5
 80009a6:	0c1c      	lsrs	r4, r3, #16
 80009a8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80009ac:	fb08 f50e 	mul.w	r5, r8, lr
 80009b0:	42a5      	cmp	r5, r4
 80009b2:	fa02 f201 	lsl.w	r2, r2, r1
 80009b6:	fa00 f001 	lsl.w	r0, r0, r1
 80009ba:	d90b      	bls.n	80009d4 <__udivmoddi4+0x1b0>
 80009bc:	eb1c 0404 	adds.w	r4, ip, r4
 80009c0:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 80009c4:	f080 8088 	bcs.w	8000ad8 <__udivmoddi4+0x2b4>
 80009c8:	42a5      	cmp	r5, r4
 80009ca:	f240 8085 	bls.w	8000ad8 <__udivmoddi4+0x2b4>
 80009ce:	f1a8 0802 	sub.w	r8, r8, #2
 80009d2:	4464      	add	r4, ip
 80009d4:	1b64      	subs	r4, r4, r5
 80009d6:	b29d      	uxth	r5, r3
 80009d8:	fbb4 f3f9 	udiv	r3, r4, r9
 80009dc:	fb09 4413 	mls	r4, r9, r3, r4
 80009e0:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 80009e4:	fb03 fe0e 	mul.w	lr, r3, lr
 80009e8:	45a6      	cmp	lr, r4
 80009ea:	d908      	bls.n	80009fe <__udivmoddi4+0x1da>
 80009ec:	eb1c 0404 	adds.w	r4, ip, r4
 80009f0:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
 80009f4:	d26c      	bcs.n	8000ad0 <__udivmoddi4+0x2ac>
 80009f6:	45a6      	cmp	lr, r4
 80009f8:	d96a      	bls.n	8000ad0 <__udivmoddi4+0x2ac>
 80009fa:	3b02      	subs	r3, #2
 80009fc:	4464      	add	r4, ip
 80009fe:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000a02:	fba3 9502 	umull	r9, r5, r3, r2
 8000a06:	eba4 040e 	sub.w	r4, r4, lr
 8000a0a:	42ac      	cmp	r4, r5
 8000a0c:	46c8      	mov	r8, r9
 8000a0e:	46ae      	mov	lr, r5
 8000a10:	d356      	bcc.n	8000ac0 <__udivmoddi4+0x29c>
 8000a12:	d053      	beq.n	8000abc <__udivmoddi4+0x298>
 8000a14:	b156      	cbz	r6, 8000a2c <__udivmoddi4+0x208>
 8000a16:	ebb0 0208 	subs.w	r2, r0, r8
 8000a1a:	eb64 040e 	sbc.w	r4, r4, lr
 8000a1e:	fa04 f707 	lsl.w	r7, r4, r7
 8000a22:	40ca      	lsrs	r2, r1
 8000a24:	40cc      	lsrs	r4, r1
 8000a26:	4317      	orrs	r7, r2
 8000a28:	e9c6 7400 	strd	r7, r4, [r6]
 8000a2c:	4618      	mov	r0, r3
 8000a2e:	2100      	movs	r1, #0
 8000a30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a34:	f1c3 0120 	rsb	r1, r3, #32
 8000a38:	fa02 fc03 	lsl.w	ip, r2, r3
 8000a3c:	fa20 f201 	lsr.w	r2, r0, r1
 8000a40:	fa25 f101 	lsr.w	r1, r5, r1
 8000a44:	409d      	lsls	r5, r3
 8000a46:	432a      	orrs	r2, r5
 8000a48:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000a4c:	fa1f fe8c 	uxth.w	lr, ip
 8000a50:	fbb1 f0f7 	udiv	r0, r1, r7
 8000a54:	fb07 1510 	mls	r5, r7, r0, r1
 8000a58:	0c11      	lsrs	r1, r2, #16
 8000a5a:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000a5e:	fb00 f50e 	mul.w	r5, r0, lr
 8000a62:	428d      	cmp	r5, r1
 8000a64:	fa04 f403 	lsl.w	r4, r4, r3
 8000a68:	d908      	bls.n	8000a7c <__udivmoddi4+0x258>
 8000a6a:	eb1c 0101 	adds.w	r1, ip, r1
 8000a6e:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 8000a72:	d22f      	bcs.n	8000ad4 <__udivmoddi4+0x2b0>
 8000a74:	428d      	cmp	r5, r1
 8000a76:	d92d      	bls.n	8000ad4 <__udivmoddi4+0x2b0>
 8000a78:	3802      	subs	r0, #2
 8000a7a:	4461      	add	r1, ip
 8000a7c:	1b49      	subs	r1, r1, r5
 8000a7e:	b292      	uxth	r2, r2
 8000a80:	fbb1 f5f7 	udiv	r5, r1, r7
 8000a84:	fb07 1115 	mls	r1, r7, r5, r1
 8000a88:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000a8c:	fb05 f10e 	mul.w	r1, r5, lr
 8000a90:	4291      	cmp	r1, r2
 8000a92:	d908      	bls.n	8000aa6 <__udivmoddi4+0x282>
 8000a94:	eb1c 0202 	adds.w	r2, ip, r2
 8000a98:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8000a9c:	d216      	bcs.n	8000acc <__udivmoddi4+0x2a8>
 8000a9e:	4291      	cmp	r1, r2
 8000aa0:	d914      	bls.n	8000acc <__udivmoddi4+0x2a8>
 8000aa2:	3d02      	subs	r5, #2
 8000aa4:	4462      	add	r2, ip
 8000aa6:	1a52      	subs	r2, r2, r1
 8000aa8:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000aac:	e738      	b.n	8000920 <__udivmoddi4+0xfc>
 8000aae:	4631      	mov	r1, r6
 8000ab0:	4630      	mov	r0, r6
 8000ab2:	e708      	b.n	80008c6 <__udivmoddi4+0xa2>
 8000ab4:	4639      	mov	r1, r7
 8000ab6:	e6e6      	b.n	8000886 <__udivmoddi4+0x62>
 8000ab8:	4610      	mov	r0, r2
 8000aba:	e6fb      	b.n	80008b4 <__udivmoddi4+0x90>
 8000abc:	4548      	cmp	r0, r9
 8000abe:	d2a9      	bcs.n	8000a14 <__udivmoddi4+0x1f0>
 8000ac0:	ebb9 0802 	subs.w	r8, r9, r2
 8000ac4:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000ac8:	3b01      	subs	r3, #1
 8000aca:	e7a3      	b.n	8000a14 <__udivmoddi4+0x1f0>
 8000acc:	4645      	mov	r5, r8
 8000ace:	e7ea      	b.n	8000aa6 <__udivmoddi4+0x282>
 8000ad0:	462b      	mov	r3, r5
 8000ad2:	e794      	b.n	80009fe <__udivmoddi4+0x1da>
 8000ad4:	4640      	mov	r0, r8
 8000ad6:	e7d1      	b.n	8000a7c <__udivmoddi4+0x258>
 8000ad8:	46d0      	mov	r8, sl
 8000ada:	e77b      	b.n	80009d4 <__udivmoddi4+0x1b0>
 8000adc:	3d02      	subs	r5, #2
 8000ade:	4462      	add	r2, ip
 8000ae0:	e732      	b.n	8000948 <__udivmoddi4+0x124>
 8000ae2:	4608      	mov	r0, r1
 8000ae4:	e70a      	b.n	80008fc <__udivmoddi4+0xd8>
 8000ae6:	4464      	add	r4, ip
 8000ae8:	3802      	subs	r0, #2
 8000aea:	e742      	b.n	8000972 <__udivmoddi4+0x14e>

08000aec <Widget::Widget()>:
 8000aec:	b510      	push	{r4, lr}
 8000aee:	4604      	mov	r4, r0
 8000af0:	f001 f95c 	bl	8001dac <Dmx::Dmx()>
 8000af4:	f104 001c 	add.w	r0, r4, #28
 8000af8:	f001 fc2c 	bl	8002354 <RDMDevice::RDMDevice()>
 8000afc:	2300      	movs	r3, #0
 8000afe:	e9c4 33bb 	strd	r3, r3, [r4, #748]	; 0x2ec
 8000b02:	e9c4 33bd 	strd	r3, r3, [r4, #756]	; 0x2f4
 8000b06:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8000b0a:	f884 3300 	strb.w	r3, [r4, #768]	; 0x300
 8000b0e:	f8c4 3304 	str.w	r3, [r4, #772]	; 0x304
 8000b12:	4b03      	ldr	r3, [pc, #12]	; (8000b20 <Widget::Widget()+0x34>)
 8000b14:	601c      	str	r4, [r3, #0]
 8000b16:	f001 fb43 	bl	80021a0 <FT245RL_init>
 8000b1a:	4620      	mov	r0, r4
 8000b1c:	bd10      	pop	{r4, pc}
 8000b1e:	bf00      	nop
 8000b20:	200000f4 	strdcs	r0, [r0], -r4

08000b24 <Widget::GetParamsReply()>:
 8000b24:	b513      	push	{r0, r1, r4, lr}
 8000b26:	4604      	mov	r4, r0
 8000b28:	4911      	ldr	r1, [pc, #68]	; (8000b70 <Widget::GetParamsReply()+0x4c>)
 8000b2a:	2007      	movs	r0, #7
 8000b2c:	f000 fb8c 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000b30:	2100      	movs	r1, #0
 8000b32:	201c      	movs	r0, #28
 8000b34:	f000 fb88 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000b38:	4b0e      	ldr	r3, [pc, #56]	; (8000b74 <Widget::GetParamsReply()+0x50>)
 8000b3a:	781b      	ldrb	r3, [r3, #0]
 8000b3c:	f88d 3002 	strb.w	r3, [sp, #2]
 8000b40:	4b0d      	ldr	r3, [pc, #52]	; (8000b78 <Widget::GetParamsReply()+0x54>)
 8000b42:	781b      	ldrb	r3, [r3, #0]
 8000b44:	f88d 3000 	strb.w	r3, [sp]
 8000b48:	4b0c      	ldr	r3, [pc, #48]	; (8000b7c <Widget::GetParamsReply()+0x58>)
 8000b4a:	781b      	ldrb	r3, [r3, #0]
 8000b4c:	f88d 3001 	strb.w	r3, [sp, #1]
 8000b50:	4b0b      	ldr	r3, [pc, #44]	; (8000b80 <Widget::GetParamsReply()+0x5c>)
 8000b52:	781b      	ldrb	r3, [r3, #0]
 8000b54:	f88d 3003 	strb.w	r3, [sp, #3]
 8000b58:	4b0a      	ldr	r3, [pc, #40]	; (8000b84 <Widget::GetParamsReply()+0x60>)
 8000b5a:	781b      	ldrb	r3, [r3, #0]
 8000b5c:	f88d 3004 	strb.w	r3, [sp, #4]
 8000b60:	466a      	mov	r2, sp
 8000b62:	2305      	movs	r3, #5
 8000b64:	2103      	movs	r1, #3
 8000b66:	4620      	mov	r0, r4
 8000b68:	f000 fd30 	bl	80015cc <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>
 8000b6c:	b002      	add	sp, #8
 8000b6e:	bd10      	pop	{r4, pc}
 8000b70:	080049c8 	stmdaeq	r0, {r3, r6, r7, r8, fp, lr}
 8000b74:	20000001 	andcs	r0, r0, r1
 8000b78:	20000002 	andcs	r0, r0, r2
 8000b7c:	20000003 	andcs	r0, r0, r3
 8000b80:	20000000 	andcs	r0, r0, r0
 8000b84:	20000004 	andcs	r0, r0, r4

08000b88 <Widget::SetParams()>:
 8000b88:	b513      	push	{r0, r1, r4, lr}
 8000b8a:	4604      	mov	r4, r0
 8000b8c:	4912      	ldr	r1, [pc, #72]	; (8000bd8 <Widget::SetParams()+0x50>)
 8000b8e:	2007      	movs	r0, #7
 8000b90:	f000 fb5a 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000b94:	2100      	movs	r1, #0
 8000b96:	201c      	movs	r0, #28
 8000b98:	f000 fb56 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000b9c:	2300      	movs	r3, #0
 8000b9e:	4619      	mov	r1, r3
 8000ba0:	4620      	mov	r0, r4
 8000ba2:	2201      	movs	r2, #1
 8000ba4:	f001 f8d4 	bl	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000ba8:	f894 3098 	ldrb.w	r3, [r4, #152]	; 0x98
 8000bac:	f8b4 2096 	ldrh.w	r2, [r4, #150]	; 0x96
 8000bb0:	f8ad 2002 	strh.w	r2, [sp, #2]
 8000bb4:	4668      	mov	r0, sp
 8000bb6:	f88d 3004 	strb.w	r3, [sp, #4]
 8000bba:	f000 fd67 	bl	800168c <WidgetConfiguration::Store(TWidgetConfiguration const*)>
 8000bbe:	2301      	movs	r3, #1
 8000bc0:	461a      	mov	r2, r3
 8000bc2:	2100      	movs	r1, #0
 8000bc4:	4620      	mov	r0, r4
 8000bc6:	f001 f8c3 	bl	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000bca:	4b04      	ldr	r3, [pc, #16]	; (8000bdc <Widget::SetParams()+0x54>)
 8000bcc:	681b      	ldr	r3, [r3, #0]
 8000bce:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 8000bd2:	b002      	add	sp, #8
 8000bd4:	bd10      	pop	{r4, pc}
 8000bd6:	bf00      	nop
 8000bd8:	080049e0 	stmdaeq	r0, {r5, r6, r7, r8, fp, lr}
 8000bdc:	2000181c 	andcs	r1, r0, ip, lsl r8

08000be0 <Widget::ReceivedDmxPacket()>:
 8000be0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000be2:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
 8000be6:	2b03      	cmp	r3, #3
 8000be8:	4604      	mov	r4, r0
 8000bea:	d042      	beq.n	8000c72 <Widget::ReceivedDmxPacket()+0x92>
 8000bec:	f890 7300 	ldrb.w	r7, [r0, #768]	; 0x300
 8000bf0:	2f00      	cmp	r7, #0
 8000bf2:	d13e      	bne.n	8000c72 <Widget::ReceivedDmxPacket()+0x92>
 8000bf4:	6943      	ldr	r3, [r0, #20]
 8000bf6:	2b01      	cmp	r3, #1
 8000bf8:	d13b      	bne.n	8000c72 <Widget::ReceivedDmxPacket()+0x92>
 8000bfa:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8000bfe:	2b01      	cmp	r3, #1
 8000c00:	d037      	beq.n	8000c72 <Widget::ReceivedDmxPacket()+0x92>
 8000c02:	4639      	mov	r1, r7
 8000c04:	f001 fa1a 	bl	800203c <Dmx::GetDmxAvailable(unsigned int)>
 8000c08:	4605      	mov	r5, r0
 8000c0a:	b390      	cbz	r0, 8000c72 <Widget::ReceivedDmxPacket()+0x92>
 8000c0c:	4b19      	ldr	r3, [pc, #100]	; (8000c74 <Widget::ReceivedDmxPacket()+0x94>)
 8000c0e:	f8d4 12f4 	ldr.w	r1, [r4, #756]	; 0x2f4
 8000c12:	681a      	ldr	r2, [r3, #0]
 8000c14:	f8d4 32f8 	ldr.w	r3, [r4, #760]	; 0x2f8
 8000c18:	1ad3      	subs	r3, r2, r3
 8000c1a:	428b      	cmp	r3, r1
 8000c1c:	d329      	bcc.n	8000c72 <Widget::ReceivedDmxPacket()+0x92>
 8000c1e:	f8d4 3304 	ldr.w	r3, [r4, #772]	; 0x304
 8000c22:	f8c4 22f8 	str.w	r2, [r4, #760]	; 0x2f8
 8000c26:	3301      	adds	r3, #1
 8000c28:	f8c4 3304 	str.w	r3, [r4, #772]	; 0x304
 8000c2c:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 8000c30:	4911      	ldr	r1, [pc, #68]	; (8000c78 <Widget::ReceivedDmxPacket()+0x98>)
 8000c32:	3601      	adds	r6, #1
 8000c34:	2006      	movs	r0, #6
 8000c36:	f000 fb07 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000c3a:	4632      	mov	r2, r6
 8000c3c:	490f      	ldr	r1, [pc, #60]	; (8000c7c <Widget::ReceivedDmxPacket()+0x9c>)
 8000c3e:	2007      	movs	r0, #7
 8000c40:	f000 fb02 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000c44:	4639      	mov	r1, r7
 8000c46:	201c      	movs	r0, #28
 8000c48:	f000 fafe 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000c4c:	1c72      	adds	r2, r6, #1
 8000c4e:	b292      	uxth	r2, r2
 8000c50:	2105      	movs	r1, #5
 8000c52:	4620      	mov	r0, r4
 8000c54:	f000 fc9a 	bl	800158c <Widget::SendHeader(unsigned char, unsigned int)>
 8000c58:	4638      	mov	r0, r7
 8000c5a:	f001 fa82 	bl	8002162 <usb_send_byte>
 8000c5e:	4620      	mov	r0, r4
 8000c60:	b2b2      	uxth	r2, r6
 8000c62:	4629      	mov	r1, r5
 8000c64:	f000 fca4 	bl	80015b0 <Widget::SendData(unsigned char const*, unsigned int)>
 8000c68:	4620      	mov	r0, r4
 8000c6a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8000c6e:	f000 bcaa 	b.w	80015c6 <Widget::SendFooter()>
 8000c72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c74:	2000181c 	andcs	r1, r0, ip, lsl r8
 8000c78:	080049f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, fp, lr}
 8000c7c:	08004a06 	stmdaeq	r0, {r1, r2, r9, fp, lr}

08000c80 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>:
 8000c80:	b570      	push	{r4, r5, r6, lr}
 8000c82:	f8d0 52fc 	ldr.w	r5, [r0, #764]	; 0x2fc
 8000c86:	4604      	mov	r4, r0
 8000c88:	460e      	mov	r6, r1
 8000c8a:	b9e5      	cbnz	r5, 8000cc6 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x46>
 8000c8c:	490e      	ldr	r1, [pc, #56]	; (8000cc8 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x48>)
 8000c8e:	2007      	movs	r0, #7
 8000c90:	f000 fada 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000c94:	4629      	mov	r1, r5
 8000c96:	201c      	movs	r0, #28
 8000c98:	f000 fad6 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000c9c:	462b      	mov	r3, r5
 8000c9e:	462a      	mov	r2, r5
 8000ca0:	4629      	mov	r1, r5
 8000ca2:	4620      	mov	r0, r4
 8000ca4:	f001 f854 	bl	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000ca8:	4633      	mov	r3, r6
 8000caa:	f104 0294 	add.w	r2, r4, #148	; 0x94
 8000cae:	4629      	mov	r1, r5
 8000cb0:	4620      	mov	r0, r4
 8000cb2:	f001 f99b 	bl	8001fec <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)>
 8000cb6:	462a      	mov	r2, r5
 8000cb8:	4629      	mov	r1, r5
 8000cba:	4620      	mov	r0, r4
 8000cbc:	2301      	movs	r3, #1
 8000cbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000cc2:	f001 b845 	b.w	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000cc6:	bd70      	pop	{r4, r5, r6, pc}
 8000cc8:	08004a20 	stmdaeq	r0, {r5, r9, fp, lr}

08000ccc <Widget::SendRdmPacketRequest(unsigned short)>:
 8000ccc:	b570      	push	{r4, r5, r6, lr}
 8000cce:	4604      	mov	r4, r0
 8000cd0:	460d      	mov	r5, r1
 8000cd2:	2007      	movs	r0, #7
 8000cd4:	4910      	ldr	r1, [pc, #64]	; (8000d18 <Widget::SendRdmPacketRequest(unsigned short)+0x4c>)
 8000cd6:	f000 fab7 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000cda:	2100      	movs	r1, #0
 8000cdc:	201c      	movs	r0, #28
 8000cde:	f000 fab3 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000ce2:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 8000ce6:	f1a3 0210 	sub.w	r2, r3, #16
 8000cea:	4253      	negs	r3, r2
 8000cec:	4153      	adcs	r3, r2
 8000cee:	f104 0694 	add.w	r6, r4, #148	; 0x94
 8000cf2:	f884 3300 	strb.w	r3, [r4, #768]	; 0x300
 8000cf6:	462a      	mov	r2, r5
 8000cf8:	4631      	mov	r1, r6
 8000cfa:	2000      	movs	r0, #0
 8000cfc:	f000 fd2a 	bl	8001754 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 8000d00:	4b06      	ldr	r3, [pc, #24]	; (8000d1c <Widget::SendRdmPacketRequest(unsigned short)+0x50>)
 8000d02:	681b      	ldr	r3, [r3, #0]
 8000d04:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8000d08:	4632      	mov	r2, r6
 8000d0a:	4629      	mov	r1, r5
 8000d0c:	2301      	movs	r3, #1
 8000d0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000d12:	2011      	movs	r0, #17
 8000d14:	f000 bd14 	b.w	8001740 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8000d18:	08004a44 	stmdaeq	r0, {r2, r6, r9, fp, lr}
 8000d1c:	2000181c 	andcs	r1, r0, ip, lsl r8

08000d20 <Widget::ReceiveDmxOnChange()>:
 8000d20:	b510      	push	{r4, lr}
 8000d22:	4911      	ldr	r1, [pc, #68]	; (8000d68 <Widget::ReceiveDmxOnChange()+0x48>)
 8000d24:	4604      	mov	r4, r0
 8000d26:	2007      	movs	r0, #7
 8000d28:	f000 fa8e 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000d2c:	2100      	movs	r1, #0
 8000d2e:	201c      	movs	r0, #28
 8000d30:	f000 fa8a 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000d34:	f894 3094 	ldrb.w	r3, [r4, #148]	; 0x94
 8000d38:	f8c4 32f0 	str.w	r3, [r4, #752]	; 0x2f0
 8000d3c:	2300      	movs	r3, #0
 8000d3e:	4619      	mov	r1, r3
 8000d40:	2201      	movs	r2, #1
 8000d42:	4620      	mov	r0, r4
 8000d44:	f001 f804 	bl	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000d48:	2100      	movs	r1, #0
 8000d4a:	4620      	mov	r0, r4
 8000d4c:	f000 fef6 	bl	8001b3c <Dmx::ClearData(unsigned int)>
 8000d50:	2301      	movs	r3, #1
 8000d52:	461a      	mov	r2, r3
 8000d54:	2100      	movs	r1, #0
 8000d56:	4620      	mov	r0, r4
 8000d58:	f000 fffa 	bl	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000d5c:	4b03      	ldr	r3, [pc, #12]	; (8000d6c <Widget::ReceiveDmxOnChange()+0x4c>)
 8000d5e:	681b      	ldr	r3, [r3, #0]
 8000d60:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 8000d64:	bd10      	pop	{r4, pc}
 8000d66:	bf00      	nop
 8000d68:	08004a5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, fp, lr}
 8000d6c:	2000181c 	andcs	r1, r0, ip, lsl r8

08000d70 <Widget::ReceivedDmxChangeOfStatePacket()>:
 8000d70:	f8d0 22ec 	ldr.w	r2, [r0, #748]	; 0x2ec
 8000d74:	2a03      	cmp	r2, #3
 8000d76:	b510      	push	{r4, lr}
 8000d78:	d01a      	beq.n	8000db0 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8000d7a:	f890 4300 	ldrb.w	r4, [r0, #768]	; 0x300
 8000d7e:	b9bc      	cbnz	r4, 8000db0 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8000d80:	6942      	ldr	r2, [r0, #20]
 8000d82:	2a01      	cmp	r2, #1
 8000d84:	d114      	bne.n	8000db0 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8000d86:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8000d8a:	b18b      	cbz	r3, 8000db0 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8000d8c:	4621      	mov	r1, r4
 8000d8e:	f001 f969 	bl	8002064 <Dmx::GetDmxChanged(unsigned int)>
 8000d92:	b168      	cbz	r0, 8000db0 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8000d94:	4907      	ldr	r1, [pc, #28]	; (8000db4 <Widget::ReceivedDmxChangeOfStatePacket()+0x44>)
 8000d96:	2007      	movs	r0, #7
 8000d98:	f000 fa56 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000d9c:	4621      	mov	r1, r4
 8000d9e:	201c      	movs	r0, #28
 8000da0:	f000 fa52 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000da4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000da8:	4903      	ldr	r1, [pc, #12]	; (8000db8 <Widget::ReceivedDmxChangeOfStatePacket()+0x48>)
 8000daa:	2007      	movs	r0, #7
 8000dac:	f000 ba4c 	b.w	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000db0:	bd10      	pop	{r4, pc}
 8000db2:	bf00      	nop
 8000db4:	08004a72 	stmdaeq	r0, {r1, r4, r5, r6, r9, fp, lr}
 8000db8:	08004a88 	stmdaeq	r0, {r3, r7, r9, fp, lr}

08000dbc <Widget::GetSnReply()>:
 8000dbc:	b510      	push	{r4, lr}
 8000dbe:	4910      	ldr	r1, [pc, #64]	; (8000e00 <Widget::GetSnReply()+0x44>)
 8000dc0:	4604      	mov	r4, r0
 8000dc2:	2007      	movs	r0, #7
 8000dc4:	f000 fa40 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000dc8:	2100      	movs	r1, #0
 8000dca:	201c      	movs	r0, #28
 8000dcc:	f000 fa3c 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000dd0:	2300      	movs	r3, #0
 8000dd2:	4619      	mov	r1, r3
 8000dd4:	2201      	movs	r2, #1
 8000dd6:	4620      	mov	r0, r4
 8000dd8:	f000 ffba 	bl	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000ddc:	2304      	movs	r3, #4
 8000dde:	f104 0222 	add.w	r2, r4, #34	; 0x22
 8000de2:	210a      	movs	r1, #10
 8000de4:	4620      	mov	r0, r4
 8000de6:	f000 fbf1 	bl	80015cc <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>
 8000dea:	2301      	movs	r3, #1
 8000dec:	461a      	mov	r2, r3
 8000dee:	2100      	movs	r1, #0
 8000df0:	4620      	mov	r0, r4
 8000df2:	f000 ffad 	bl	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000df6:	4b03      	ldr	r3, [pc, #12]	; (8000e04 <Widget::GetSnReply()+0x48>)
 8000df8:	681b      	ldr	r3, [r3, #0]
 8000dfa:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 8000dfe:	bd10      	pop	{r4, pc}
 8000e00:	080049c8 	stmdaeq	r0, {r3, r6, r7, r8, fp, lr}
 8000e04:	2000181c 	andcs	r1, r0, ip, lsl r8

08000e08 <Widget::SendRdmDiscoveryRequest(unsigned short)>:
 8000e08:	b570      	push	{r4, r5, r6, lr}
 8000e0a:	4604      	mov	r4, r0
 8000e0c:	460d      	mov	r5, r1
 8000e0e:	2007      	movs	r0, #7
 8000e10:	490d      	ldr	r1, [pc, #52]	; (8000e48 <Widget::SendRdmDiscoveryRequest(unsigned short)+0x40>)
 8000e12:	f000 fa19 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000e16:	f104 0694 	add.w	r6, r4, #148	; 0x94
 8000e1a:	2100      	movs	r1, #0
 8000e1c:	201c      	movs	r0, #28
 8000e1e:	f000 fa13 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000e22:	462a      	mov	r2, r5
 8000e24:	4631      	mov	r1, r6
 8000e26:	2000      	movs	r0, #0
 8000e28:	f000 fc94 	bl	8001754 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 8000e2c:	4a07      	ldr	r2, [pc, #28]	; (8000e4c <Widget::SendRdmDiscoveryRequest(unsigned short)+0x44>)
 8000e2e:	2301      	movs	r3, #1
 8000e30:	6812      	ldr	r2, [r2, #0]
 8000e32:	f8c4 22fc 	str.w	r2, [r4, #764]	; 0x2fc
 8000e36:	f884 3300 	strb.w	r3, [r4, #768]	; 0x300
 8000e3a:	4632      	mov	r2, r6
 8000e3c:	4629      	mov	r1, r5
 8000e3e:	2011      	movs	r0, #17
 8000e40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000e44:	f000 bc7c 	b.w	8001740 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8000e48:	08004aa6 	stmdaeq	r0, {r1, r2, r5, r7, r9, fp, lr}
 8000e4c:	2000181c 	andcs	r1, r0, ip, lsl r8

08000e50 <Widget::RdmTimeOutMessage()>:
 8000e50:	b510      	push	{r4, lr}
 8000e52:	2200      	movs	r2, #0
 8000e54:	4604      	mov	r4, r0
 8000e56:	490b      	ldr	r1, [pc, #44]	; (8000e84 <Widget::RdmTimeOutMessage()+0x34>)
 8000e58:	2007      	movs	r0, #7
 8000e5a:	f000 f9f5 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000e5e:	490a      	ldr	r1, [pc, #40]	; (8000e88 <Widget::RdmTimeOutMessage()+0x38>)
 8000e60:	201c      	movs	r0, #28
 8000e62:	f000 f9f1 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000e66:	2200      	movs	r2, #0
 8000e68:	210c      	movs	r1, #12
 8000e6a:	4620      	mov	r0, r4
 8000e6c:	f000 fb8e 	bl	800158c <Widget::SendHeader(unsigned char, unsigned int)>
 8000e70:	4620      	mov	r0, r4
 8000e72:	f000 fba8 	bl	80015c6 <Widget::SendFooter()>
 8000e76:	2300      	movs	r3, #0
 8000e78:	f884 3300 	strb.w	r3, [r4, #768]	; 0x300
 8000e7c:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8000e80:	bd10      	pop	{r4, pc}
 8000e82:	bf00      	nop
 8000e84:	08004ac1 	stmdaeq	r0, {r0, r6, r7, r9, fp, lr}
 8000e88:	08004add 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, fp, lr}

08000e8c <Widget::ReceivedRdmPacket()>:
 8000e8c:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
 8000e90:	f023 0302 	bic.w	r3, r3, #2
 8000e94:	2b01      	cmp	r3, #1
 8000e96:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e9a:	4604      	mov	r4, r0
 8000e9c:	d063      	beq.n	8000f66 <Widget::ReceivedRdmPacket()+0xda>
 8000e9e:	f8d0 32f0 	ldr.w	r3, [r0, #752]	; 0x2f0
 8000ea2:	2b01      	cmp	r3, #1
 8000ea4:	d05f      	beq.n	8000f66 <Widget::ReceivedRdmPacket()+0xda>
 8000ea6:	2000      	movs	r0, #0
 8000ea8:	f000 fc4c 	bl	8001744 <Rdm::Receive(unsigned int)>
 8000eac:	4605      	mov	r5, r0
 8000eae:	2800      	cmp	r0, #0
 8000eb0:	d059      	beq.n	8000f66 <Widget::ReceivedRdmPacket()+0xda>
 8000eb2:	7803      	ldrb	r3, [r0, #0]
 8000eb4:	2bcc      	cmp	r3, #204	; 0xcc
 8000eb6:	d134      	bne.n	8000f22 <Widget::ReceivedRdmPacket()+0x96>
 8000eb8:	7886      	ldrb	r6, [r0, #2]
 8000eba:	7d07      	ldrb	r7, [r0, #20]
 8000ebc:	492b      	ldr	r1, [pc, #172]	; (8000f6c <Widget::ReceivedRdmPacket()+0xe0>)
 8000ebe:	3602      	adds	r6, #2
 8000ec0:	b2f6      	uxtb	r6, r6
 8000ec2:	4632      	mov	r2, r6
 8000ec4:	2007      	movs	r0, #7
 8000ec6:	f000 f9bf 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000eca:	4929      	ldr	r1, [pc, #164]	; (8000f70 <Widget::ReceivedRdmPacket()+0xe4>)
 8000ecc:	201c      	movs	r0, #28
 8000ece:	f000 f9bb 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000ed2:	1c72      	adds	r2, r6, #1
 8000ed4:	2105      	movs	r1, #5
 8000ed6:	4620      	mov	r0, r4
 8000ed8:	f000 fb58 	bl	800158c <Widget::SendHeader(unsigned char, unsigned int)>
 8000edc:	2000      	movs	r0, #0
 8000ede:	f001 f940 	bl	8002162 <usb_send_byte>
 8000ee2:	4632      	mov	r2, r6
 8000ee4:	4629      	mov	r1, r5
 8000ee6:	4620      	mov	r0, r4
 8000ee8:	f000 fb62 	bl	80015b0 <Widget::SendData(unsigned char const*, unsigned int)>
 8000eec:	4620      	mov	r0, r4
 8000eee:	f000 fb6a 	bl	80015c6 <Widget::SendFooter()>
 8000ef2:	2f11      	cmp	r7, #17
 8000ef4:	7d6a      	ldrb	r2, [r5, #21]
 8000ef6:	7dab      	ldrb	r3, [r5, #22]
 8000ef8:	d10f      	bne.n	8000f1a <Widget::ReceivedRdmPacket()+0x8e>
 8000efa:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8000efe:	b29b      	uxth	r3, r3
 8000f00:	2b02      	cmp	r3, #2
 8000f02:	d00a      	beq.n	8000f1a <Widget::ReceivedRdmPacket()+0x8e>
 8000f04:	4620      	mov	r0, r4
 8000f06:	f7ff ffa3 	bl	8000e50 <Widget::RdmTimeOutMessage()>
 8000f0a:	462a      	mov	r2, r5
 8000f0c:	4631      	mov	r1, r6
 8000f0e:	2300      	movs	r3, #0
 8000f10:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f14:	2011      	movs	r0, #17
 8000f16:	f000 bc13 	b.w	8001740 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8000f1a:	2300      	movs	r3, #0
 8000f1c:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8000f20:	e7f3      	b.n	8000f0a <Widget::ReceivedRdmPacket()+0x7e>
 8000f22:	2bfe      	cmp	r3, #254	; 0xfe
 8000f24:	d11d      	bne.n	8000f62 <Widget::ReceivedRdmPacket()+0xd6>
 8000f26:	2218      	movs	r2, #24
 8000f28:	4910      	ldr	r1, [pc, #64]	; (8000f6c <Widget::ReceivedRdmPacket()+0xe0>)
 8000f2a:	2007      	movs	r0, #7
 8000f2c:	f000 f98c 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000f30:	4910      	ldr	r1, [pc, #64]	; (8000f74 <Widget::ReceivedRdmPacket()+0xe8>)
 8000f32:	201c      	movs	r0, #28
 8000f34:	f000 f988 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000f38:	2219      	movs	r2, #25
 8000f3a:	2105      	movs	r1, #5
 8000f3c:	4620      	mov	r0, r4
 8000f3e:	f000 fb25 	bl	800158c <Widget::SendHeader(unsigned char, unsigned int)>
 8000f42:	2000      	movs	r0, #0
 8000f44:	f001 f90d 	bl	8002162 <usb_send_byte>
 8000f48:	2218      	movs	r2, #24
 8000f4a:	4629      	mov	r1, r5
 8000f4c:	4620      	mov	r0, r4
 8000f4e:	f000 fb2f 	bl	80015b0 <Widget::SendData(unsigned char const*, unsigned int)>
 8000f52:	4620      	mov	r0, r4
 8000f54:	f000 fb37 	bl	80015c6 <Widget::SendFooter()>
 8000f58:	4620      	mov	r0, r4
 8000f5a:	f7ff ff79 	bl	8000e50 <Widget::RdmTimeOutMessage()>
 8000f5e:	2618      	movs	r6, #24
 8000f60:	e7d3      	b.n	8000f0a <Widget::ReceivedRdmPacket()+0x7e>
 8000f62:	2600      	movs	r6, #0
 8000f64:	e7d1      	b.n	8000f0a <Widget::ReceivedRdmPacket()+0x7e>
 8000f66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f6a:	bf00      	nop
 8000f6c:	08004ac1 	stmdaeq	r0, {r0, r6, r7, r9, fp, lr}
 8000f70:	08004ae9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, fp, lr}
 8000f74:	08004b05 	stmdaeq	r0, {r0, r2, r8, r9, fp, lr}

08000f78 <Widget::RdmTimeout()>:
 8000f78:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
 8000f7c:	2b03      	cmp	r3, #3
 8000f7e:	b510      	push	{r4, lr}
 8000f80:	4604      	mov	r4, r0
 8000f82:	d00d      	beq.n	8000fa0 <Widget::RdmTimeout()+0x28>
 8000f84:	f8d0 22fc 	ldr.w	r2, [r0, #764]	; 0x2fc
 8000f88:	b152      	cbz	r2, 8000fa0 <Widget::RdmTimeout()+0x28>
 8000f8a:	4b06      	ldr	r3, [pc, #24]	; (8000fa4 <Widget::RdmTimeout()+0x2c>)
 8000f8c:	681b      	ldr	r3, [r3, #0]
 8000f8e:	1a9b      	subs	r3, r3, r2
 8000f90:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8000f94:	d304      	bcc.n	8000fa0 <Widget::RdmTimeout()+0x28>
 8000f96:	f7ff ff5b 	bl	8000e50 <Widget::RdmTimeOutMessage()>
 8000f9a:	2300      	movs	r3, #0
 8000f9c:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
 8000fa0:	bd10      	pop	{r4, pc}
 8000fa2:	bf00      	nop
 8000fa4:	2000181c 	andcs	r1, r0, ip, lsl r8

08000fa8 <Widget::GetManufacturerReply()>:
 8000fa8:	b538      	push	{r3, r4, r5, lr}
 8000faa:	4917      	ldr	r1, [pc, #92]	; (8001008 <Widget::GetManufacturerReply()+0x60>)
 8000fac:	4604      	mov	r4, r0
 8000fae:	2007      	movs	r0, #7
 8000fb0:	f000 f94a 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000fb4:	2100      	movs	r1, #0
 8000fb6:	201c      	movs	r0, #28
 8000fb8:	f000 f946 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8000fbc:	2300      	movs	r3, #0
 8000fbe:	f894 5067 	ldrb.w	r5, [r4, #103]	; 0x67
 8000fc2:	4619      	mov	r1, r3
 8000fc4:	2201      	movs	r2, #1
 8000fc6:	4620      	mov	r0, r4
 8000fc8:	f000 fec2 	bl	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000fcc:	1caa      	adds	r2, r5, #2
 8000fce:	214d      	movs	r1, #77	; 0x4d
 8000fd0:	4620      	mov	r0, r4
 8000fd2:	f000 fadb 	bl	800158c <Widget::SendHeader(unsigned char, unsigned int)>
 8000fd6:	490d      	ldr	r1, [pc, #52]	; (800100c <Widget::GetManufacturerReply()+0x64>)
 8000fd8:	2202      	movs	r2, #2
 8000fda:	4620      	mov	r0, r4
 8000fdc:	f000 fae8 	bl	80015b0 <Widget::SendData(unsigned char const*, unsigned int)>
 8000fe0:	462a      	mov	r2, r5
 8000fe2:	f104 0147 	add.w	r1, r4, #71	; 0x47
 8000fe6:	4620      	mov	r0, r4
 8000fe8:	f000 fae2 	bl	80015b0 <Widget::SendData(unsigned char const*, unsigned int)>
 8000fec:	4620      	mov	r0, r4
 8000fee:	f000 faea 	bl	80015c6 <Widget::SendFooter()>
 8000ff2:	2301      	movs	r3, #1
 8000ff4:	461a      	mov	r2, r3
 8000ff6:	2100      	movs	r1, #0
 8000ff8:	4620      	mov	r0, r4
 8000ffa:	f000 fea9 	bl	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8000ffe:	4b04      	ldr	r3, [pc, #16]	; (8001010 <Widget::GetManufacturerReply()+0x68>)
 8001000:	681b      	ldr	r3, [r3, #0]
 8001002:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 8001006:	bd38      	pop	{r3, r4, r5, pc}
 8001008:	08004b21 	stmdaeq	r0, {r0, r5, r8, r9, fp, lr}
 800100c:	08004c0a 	stmdaeq	r0, {r1, r3, sl, fp, lr}
 8001010:	2000181c 	andcs	r1, r0, ip, lsl r8

08001014 <Widget::GetNameReply()>:
 8001014:	b538      	push	{r3, r4, r5, lr}
 8001016:	4917      	ldr	r1, [pc, #92]	; (8001074 <Widget::GetNameReply()+0x60>)
 8001018:	4604      	mov	r4, r0
 800101a:	2007      	movs	r0, #7
 800101c:	f000 f914 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8001020:	2100      	movs	r1, #0
 8001022:	201c      	movs	r0, #28
 8001024:	f000 f910 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8001028:	2300      	movs	r3, #0
 800102a:	f894 5046 	ldrb.w	r5, [r4, #70]	; 0x46
 800102e:	4619      	mov	r1, r3
 8001030:	2201      	movs	r2, #1
 8001032:	4620      	mov	r0, r4
 8001034:	f000 fe8c 	bl	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001038:	1caa      	adds	r2, r5, #2
 800103a:	214e      	movs	r1, #78	; 0x4e
 800103c:	4620      	mov	r0, r4
 800103e:	f000 faa5 	bl	800158c <Widget::SendHeader(unsigned char, unsigned int)>
 8001042:	490d      	ldr	r1, [pc, #52]	; (8001078 <Widget::GetNameReply()+0x64>)
 8001044:	2202      	movs	r2, #2
 8001046:	4620      	mov	r0, r4
 8001048:	f000 fab2 	bl	80015b0 <Widget::SendData(unsigned char const*, unsigned int)>
 800104c:	462a      	mov	r2, r5
 800104e:	f104 0126 	add.w	r1, r4, #38	; 0x26
 8001052:	4620      	mov	r0, r4
 8001054:	f000 faac 	bl	80015b0 <Widget::SendData(unsigned char const*, unsigned int)>
 8001058:	4620      	mov	r0, r4
 800105a:	f000 fab4 	bl	80015c6 <Widget::SendFooter()>
 800105e:	2301      	movs	r3, #1
 8001060:	461a      	mov	r2, r3
 8001062:	2100      	movs	r1, #0
 8001064:	4620      	mov	r0, r4
 8001066:	f000 fe73 	bl	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800106a:	4b04      	ldr	r3, [pc, #16]	; (800107c <Widget::GetNameReply()+0x68>)
 800106c:	681b      	ldr	r3, [r3, #0]
 800106e:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 8001072:	bd38      	pop	{r3, r4, r5, pc}
 8001074:	08004b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp, lr}
 8001078:	20000005 	andcs	r0, r0, r5
 800107c:	2000181c 	andcs	r1, r0, ip, lsl r8

08001080 <Widget::ReceiveDataFromHost()>:
 8001080:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001084:	4604      	mov	r4, r0
 8001086:	f001 f94d 	bl	8002324 <FT245RL_data_available>
 800108a:	2800      	cmp	r0, #0
 800108c:	d040      	beq.n	8001110 <Widget::ReceiveDataFromHost()+0x90>
 800108e:	f001 f85f 	bl	8002150 <usb_read_byte>
 8001092:	287e      	cmp	r0, #126	; 0x7e
 8001094:	d13c      	bne.n	8001110 <Widget::ReceiveDataFromHost()+0x90>
 8001096:	f001 f85b 	bl	8002150 <usb_read_byte>
 800109a:	4607      	mov	r7, r0
 800109c:	f001 f858 	bl	8002150 <usb_read_byte>
 80010a0:	4605      	mov	r5, r0
 80010a2:	f001 f855 	bl	8002150 <usb_read_byte>
 80010a6:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 80010aa:	b2ad      	uxth	r5, r5
 80010ac:	f06f 0993 	mvn.w	r9, #147	; 0x93
 80010b0:	f104 0894 	add.w	r8, r4, #148	; 0x94
 80010b4:	462e      	mov	r6, r5
 80010b6:	eba9 0904 	sub.w	r9, r9, r4
 80010ba:	eb09 0308 	add.w	r3, r9, r8
 80010be:	429d      	cmp	r5, r3
 80010c0:	d81d      	bhi.n	80010fe <Widget::ReceiveDataFromHost()+0x7e>
 80010c2:	f001 f845 	bl	8002150 <usb_read_byte>
 80010c6:	28e7      	cmp	r0, #231	; 0xe7
 80010c8:	d004      	beq.n	80010d4 <Widget::ReceiveDataFromHost()+0x54>
 80010ca:	1c73      	adds	r3, r6, #1
 80010cc:	f5b6 7f16 	cmp.w	r6, #600	; 0x258
 80010d0:	461e      	mov	r6, r3
 80010d2:	d3f6      	bcc.n	80010c2 <Widget::ReceiveDataFromHost()+0x42>
 80010d4:	492c      	ldr	r1, [pc, #176]	; (8001188 <Widget::ReceiveDataFromHost()+0x108>)
 80010d6:	9600      	str	r6, [sp, #0]
 80010d8:	462b      	mov	r3, r5
 80010da:	463a      	mov	r2, r7
 80010dc:	2006      	movs	r0, #6
 80010de:	f000 f8b3 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 80010e2:	2f0b      	cmp	r7, #11
 80010e4:	d810      	bhi.n	8001108 <Widget::ReceiveDataFromHost()+0x88>
 80010e6:	2f02      	cmp	r7, #2
 80010e8:	d912      	bls.n	8001110 <Widget::ReceiveDataFromHost()+0x90>
 80010ea:	3f03      	subs	r7, #3
 80010ec:	2f08      	cmp	r7, #8
 80010ee:	d80f      	bhi.n	8001110 <Widget::ReceiveDataFromHost()+0x90>
 80010f0:	e8df f007 	tbb	[pc, r7]
 80010f4:	2f0e1d11 	svccs	0x000e1d11
 80010f8:	170e363c 	smladxne	lr, ip, r6, r3
 80010fc:	f0010043 			; <UNDEFINED> instruction: 0xf0010043
 8001100:	f827 f808 	strh.w	pc, [r7, <undefined>]
 8001104:	0b01      	lsrs	r1, r0, #12
 8001106:	e7d8      	b.n	80010ba <Widget::ReceiveDataFromHost()+0x3a>
 8001108:	2f4d      	cmp	r7, #77	; 0x4d
 800110a:	d01c      	beq.n	8001146 <Widget::ReceiveDataFromHost()+0xc6>
 800110c:	2f4e      	cmp	r7, #78	; 0x4e
 800110e:	d014      	beq.n	800113a <Widget::ReceiveDataFromHost()+0xba>
 8001110:	b003      	add	sp, #12
 8001112:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001116:	4620      	mov	r0, r4
 8001118:	b003      	add	sp, #12
 800111a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800111e:	f7ff bd01 	b.w	8000b24 <Widget::GetParamsReply()>
 8001122:	4620      	mov	r0, r4
 8001124:	b003      	add	sp, #12
 8001126:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800112a:	f7ff be47 	b.w	8000dbc <Widget::GetSnReply()>
 800112e:	4620      	mov	r0, r4
 8001130:	b003      	add	sp, #12
 8001132:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001136:	f7ff bd27 	b.w	8000b88 <Widget::SetParams()>
 800113a:	4620      	mov	r0, r4
 800113c:	b003      	add	sp, #12
 800113e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001142:	f7ff bf67 	b.w	8001014 <Widget::GetNameReply()>
 8001146:	4620      	mov	r0, r4
 8001148:	b003      	add	sp, #12
 800114a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800114e:	f7ff bf2b 	b.w	8000fa8 <Widget::GetManufacturerReply()>
 8001152:	4629      	mov	r1, r5
 8001154:	4620      	mov	r0, r4
 8001156:	b003      	add	sp, #12
 8001158:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800115c:	f7ff bd90 	b.w	8000c80 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>
 8001160:	4620      	mov	r0, r4
 8001162:	b003      	add	sp, #12
 8001164:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001168:	f7ff bdda 	b.w	8000d20 <Widget::ReceiveDmxOnChange()>
 800116c:	4629      	mov	r1, r5
 800116e:	4620      	mov	r0, r4
 8001170:	b003      	add	sp, #12
 8001172:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001176:	f7ff bda9 	b.w	8000ccc <Widget::SendRdmPacketRequest(unsigned short)>
 800117a:	4629      	mov	r1, r5
 800117c:	4620      	mov	r0, r4
 800117e:	b003      	add	sp, #12
 8001180:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001184:	f7ff be40 	b.w	8000e08 <Widget::SendRdmDiscoveryRequest(unsigned short)>
 8001188:	08004b4a 	stmdaeq	r0, {r1, r3, r6, r8, r9, fp, lr}

0800118c <WidgetConfiguration::SetRefreshRate(unsigned char)>:
 800118c:	4b05      	ldr	r3, [pc, #20]	; (80011a4 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x18>)
 800118e:	4601      	mov	r1, r0
 8001190:	7018      	strb	r0, [r3, #0]
 8001192:	b110      	cbz	r0, 800119a <WidgetConfiguration::SetRefreshRate(unsigned char)+0xe>
 8001194:	4b04      	ldr	r3, [pc, #16]	; (80011a8 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x1c>)
 8001196:	fbb3 f1f0 	udiv	r1, r3, r0
 800119a:	4b04      	ldr	r3, [pc, #16]	; (80011ac <WidgetConfiguration::SetRefreshRate(unsigned char)+0x20>)
 800119c:	6818      	ldr	r0, [r3, #0]
 800119e:	f000 bee1 	b.w	8001f64 <Dmx::SetDmxPeriodTime(unsigned int)>
 80011a2:	bf00      	nop
 80011a4:	20000004 	andcs	r0, r0, r4
 80011a8:	000f4240 	andeq	r4, pc, r0, asr #4
 80011ac:	20000728 	andcs	r0, r0, r8, lsr #14

080011b0 <WidgetConfiguration::SetBreakTime(unsigned char)>:
 80011b0:	ee07 0a90 	vmov	s15, r0
 80011b4:	ed9f 7a07 	vldr	s14, [pc, #28]	; 80011d4 <WidgetConfiguration::SetBreakTime(unsigned char)+0x24>
 80011b8:	4b07      	ldr	r3, [pc, #28]	; (80011d8 <WidgetConfiguration::SetBreakTime(unsigned char)+0x28>)
 80011ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80011be:	7018      	strb	r0, [r3, #0]
 80011c0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80011c4:	4b05      	ldr	r3, [pc, #20]	; (80011dc <WidgetConfiguration::SetBreakTime(unsigned char)+0x2c>)
 80011c6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80011ca:	6818      	ldr	r0, [r3, #0]
 80011cc:	ee17 1a90 	vmov	r1, s15
 80011d0:	f000 bef8 	b.w	8001fc4 <Dmx::SetDmxBreakTime(unsigned int)>
 80011d4:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 80011d8:	20000001 	andcs	r0, r0, r1
 80011dc:	20000728 	andcs	r0, r0, r8, lsr #14

080011e0 <WidgetConfiguration::SetMabTime(unsigned char)>:
 80011e0:	ee07 0a90 	vmov	s15, r0
 80011e4:	ed9f 7a07 	vldr	s14, [pc, #28]	; 8001204 <WidgetConfiguration::SetMabTime(unsigned char)+0x24>
 80011e8:	4b07      	ldr	r3, [pc, #28]	; (8001208 <WidgetConfiguration::SetMabTime(unsigned char)+0x28>)
 80011ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80011ee:	7018      	strb	r0, [r3, #0]
 80011f0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80011f4:	4b05      	ldr	r3, [pc, #20]	; (800120c <WidgetConfiguration::SetMabTime(unsigned char)+0x2c>)
 80011f6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80011fa:	6818      	ldr	r0, [r3, #0]
 80011fc:	ee17 1a90 	vmov	r1, s15
 8001200:	f000 beea 	b.w	8001fd8 <Dmx::SetDmxMabTime(unsigned int)>
 8001204:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 8001208:	20000000 	andcs	r0, r0, r0
 800120c:	20000728 	andcs	r0, r0, r8, lsr #14

08001210 <WidgetConfiguration::SetMode(widget::Mode)>:
 8001210:	2800      	cmp	r0, #0
 8001212:	4b05      	ldr	r3, [pc, #20]	; (8001228 <WidgetConfiguration::SetMode(widget::Mode)+0x18>)
 8001214:	bf14      	ite	ne
 8001216:	4602      	movne	r2, r0
 8001218:	2202      	moveq	r2, #2
 800121a:	701a      	strb	r2, [r3, #0]
 800121c:	4b03      	ldr	r3, [pc, #12]	; (800122c <WidgetConfiguration::SetMode(widget::Mode)+0x1c>)
 800121e:	681b      	ldr	r3, [r3, #0]
 8001220:	f8c3 02ec 	str.w	r0, [r3, #748]	; 0x2ec
 8001224:	4770      	bx	lr
 8001226:	bf00      	nop
 8001228:	20000002 	andcs	r0, r0, r2
 800122c:	200000f4 	strdcs	r0, [r0], -r4

08001230 <WidgetConfiguration::SetThrottle(unsigned char)>:
 8001230:	b118      	cbz	r0, 800123a <WidgetConfiguration::SetThrottle(unsigned char)+0xa>
 8001232:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001236:	fbb3 f0f0 	udiv	r0, r3, r0
 800123a:	4b02      	ldr	r3, [pc, #8]	; (8001244 <WidgetConfiguration::SetThrottle(unsigned char)+0x14>)
 800123c:	681b      	ldr	r3, [r3, #0]
 800123e:	f8c3 02f4 	str.w	r0, [r3, #756]	; 0x2f4
 8001242:	4770      	bx	lr
 8001244:	200000f4 	strdcs	r0, [r0], -r4

08001248 <WidgetMonitor::Line(int, char const*, ...)>:
 8001248:	b40e      	push	{r1, r2, r3}
 800124a:	b003      	add	sp, #12
 800124c:	4770      	bx	lr
	...

08001250 <WidgetParams::WidgetParams(WidgetParamsStore*)>:
 8001250:	4a02      	ldr	r2, [pc, #8]	; (800125c <WidgetParams::WidgetParams(WidgetParamsStore*)+0xc>)
 8001252:	6082      	str	r2, [r0, #8]
 8001254:	2200      	movs	r2, #0
 8001256:	6001      	str	r1, [r0, #0]
 8001258:	7302      	strb	r2, [r0, #12]
 800125a:	4770      	bx	lr
 800125c:	00280109 	eoreq	r0, r8, r9, lsl #2

08001260 <WidgetParams::Load()>:
 8001260:	b513      	push	{r0, r1, r4, lr}
 8001262:	2300      	movs	r3, #0
 8001264:	4604      	mov	r4, r0
 8001266:	6043      	str	r3, [r0, #4]
 8001268:	4602      	mov	r2, r0
 800126a:	4909      	ldr	r1, [pc, #36]	; (8001290 <WidgetParams::Load()+0x30>)
 800126c:	4668      	mov	r0, sp
 800126e:	f001 fcf4 	bl	8002c5a <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8001272:	6820      	ldr	r0, [r4, #0]
 8001274:	b150      	cbz	r0, 800128c <WidgetParams::Load()+0x2c>
 8001276:	6803      	ldr	r3, [r0, #0]
 8001278:	1d21      	adds	r1, r4, #4
 800127a:	68db      	ldr	r3, [r3, #12]
 800127c:	4798      	blx	r3
 800127e:	2401      	movs	r4, #1
 8001280:	4668      	mov	r0, sp
 8001282:	f001 fced 	bl	8002c60 <ReadConfigFile::~ReadConfigFile()>
 8001286:	4620      	mov	r0, r4
 8001288:	b002      	add	sp, #8
 800128a:	bd10      	pop	{r4, pc}
 800128c:	4604      	mov	r4, r0
 800128e:	e7f7      	b.n	8001280 <WidgetParams::Load()+0x20>
 8001290:	08001355 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, ip}

08001294 <WidgetParams::callbackFunction(char const*)>:
 8001294:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001296:	460d      	mov	r5, r1
 8001298:	4604      	mov	r4, r0
 800129a:	4929      	ldr	r1, [pc, #164]	; (8001340 <WidgetParams::callbackFunction(char const*)+0xac>)
 800129c:	f10d 0207 	add.w	r2, sp, #7
 80012a0:	4628      	mov	r0, r5
 80012a2:	f001 fcde 	bl	8002c62 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80012a6:	b960      	cbnz	r0, 80012c2 <WidgetParams::callbackFunction(char const*)+0x2e>
 80012a8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80012ac:	f1a3 0209 	sub.w	r2, r3, #9
 80012b0:	2a76      	cmp	r2, #118	; 0x76
 80012b2:	d806      	bhi.n	80012c2 <WidgetParams::callbackFunction(char const*)+0x2e>
 80012b4:	7223      	strb	r3, [r4, #8]
 80012b6:	6863      	ldr	r3, [r4, #4]
 80012b8:	f043 0301 	orr.w	r3, r3, #1
 80012bc:	6063      	str	r3, [r4, #4]
 80012be:	b003      	add	sp, #12
 80012c0:	bd30      	pop	{r4, r5, pc}
 80012c2:	4920      	ldr	r1, [pc, #128]	; (8001344 <WidgetParams::callbackFunction(char const*)+0xb0>)
 80012c4:	f10d 0207 	add.w	r2, sp, #7
 80012c8:	4628      	mov	r0, r5
 80012ca:	f001 fcca 	bl	8002c62 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80012ce:	b950      	cbnz	r0, 80012e6 <WidgetParams::callbackFunction(char const*)+0x52>
 80012d0:	f99d 2007 	ldrsb.w	r2, [sp, #7]
 80012d4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80012d8:	2a00      	cmp	r2, #0
 80012da:	dd04      	ble.n	80012e6 <WidgetParams::callbackFunction(char const*)+0x52>
 80012dc:	7263      	strb	r3, [r4, #9]
 80012de:	6863      	ldr	r3, [r4, #4]
 80012e0:	f043 0302 	orr.w	r3, r3, #2
 80012e4:	e7ea      	b.n	80012bc <WidgetParams::callbackFunction(char const*)+0x28>
 80012e6:	4918      	ldr	r1, [pc, #96]	; (8001348 <WidgetParams::callbackFunction(char const*)+0xb4>)
 80012e8:	f10d 0207 	add.w	r2, sp, #7
 80012ec:	4628      	mov	r0, r5
 80012ee:	f001 fcb8 	bl	8002c62 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80012f2:	b930      	cbnz	r0, 8001302 <WidgetParams::callbackFunction(char const*)+0x6e>
 80012f4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80012f8:	72a3      	strb	r3, [r4, #10]
 80012fa:	6863      	ldr	r3, [r4, #4]
 80012fc:	f043 0304 	orr.w	r3, r3, #4
 8001300:	e7dc      	b.n	80012bc <WidgetParams::callbackFunction(char const*)+0x28>
 8001302:	4912      	ldr	r1, [pc, #72]	; (800134c <WidgetParams::callbackFunction(char const*)+0xb8>)
 8001304:	f10d 0207 	add.w	r2, sp, #7
 8001308:	4628      	mov	r0, r5
 800130a:	f001 fcaa 	bl	8002c62 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800130e:	b940      	cbnz	r0, 8001322 <WidgetParams::callbackFunction(char const*)+0x8e>
 8001310:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001314:	2b03      	cmp	r3, #3
 8001316:	d804      	bhi.n	8001322 <WidgetParams::callbackFunction(char const*)+0x8e>
 8001318:	72e3      	strb	r3, [r4, #11]
 800131a:	6863      	ldr	r3, [r4, #4]
 800131c:	f043 0308 	orr.w	r3, r3, #8
 8001320:	e7cc      	b.n	80012bc <WidgetParams::callbackFunction(char const*)+0x28>
 8001322:	490b      	ldr	r1, [pc, #44]	; (8001350 <WidgetParams::callbackFunction(char const*)+0xbc>)
 8001324:	f10d 0207 	add.w	r2, sp, #7
 8001328:	4628      	mov	r0, r5
 800132a:	f001 fc9a 	bl	8002c62 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800132e:	2800      	cmp	r0, #0
 8001330:	d1c5      	bne.n	80012be <WidgetParams::callbackFunction(char const*)+0x2a>
 8001332:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001336:	7323      	strb	r3, [r4, #12]
 8001338:	6863      	ldr	r3, [r4, #4]
 800133a:	f043 0310 	orr.w	r3, r3, #16
 800133e:	e7bd      	b.n	80012bc <WidgetParams::callbackFunction(char const*)+0x28>
 8001340:	08004b75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, fp, lr}
 8001344:	08004b62 	stmdaeq	r0, {r1, r5, r6, r8, r9, fp, lr}
 8001348:	08004b8a 	stmdaeq	r0, {r1, r3, r7, r8, r9, fp, lr}
 800134c:	08004b56 	stmdaeq	r0, {r1, r2, r4, r6, r8, r9, fp, lr}
 8001350:	08004ba1 	stmdaeq	r0, {r0, r5, r7, r8, r9, fp, lr}

08001354 <WidgetParams::staticCallbackFunction(void*, char const*)>:
 8001354:	f7ff bf9e 	b.w	8001294 <WidgetParams::callbackFunction(char const*)>

08001358 <WidgetParams::Set()>:
 8001358:	6843      	ldr	r3, [r0, #4]
 800135a:	075b      	lsls	r3, r3, #29
 800135c:	b510      	push	{r4, lr}
 800135e:	4604      	mov	r4, r0
 8001360:	d502      	bpl.n	8001368 <WidgetParams::Set()+0x10>
 8001362:	7a80      	ldrb	r0, [r0, #10]
 8001364:	f7ff ff12 	bl	800118c <WidgetConfiguration::SetRefreshRate(unsigned char)>
 8001368:	6863      	ldr	r3, [r4, #4]
 800136a:	07d8      	lsls	r0, r3, #31
 800136c:	d502      	bpl.n	8001374 <WidgetParams::Set()+0x1c>
 800136e:	7a20      	ldrb	r0, [r4, #8]
 8001370:	f7ff ff1e 	bl	80011b0 <WidgetConfiguration::SetBreakTime(unsigned char)>
 8001374:	6863      	ldr	r3, [r4, #4]
 8001376:	0799      	lsls	r1, r3, #30
 8001378:	d502      	bpl.n	8001380 <WidgetParams::Set()+0x28>
 800137a:	7a60      	ldrb	r0, [r4, #9]
 800137c:	f7ff ff30 	bl	80011e0 <WidgetConfiguration::SetMabTime(unsigned char)>
 8001380:	6863      	ldr	r3, [r4, #4]
 8001382:	06da      	lsls	r2, r3, #27
 8001384:	d502      	bpl.n	800138c <WidgetParams::Set()+0x34>
 8001386:	7b20      	ldrb	r0, [r4, #12]
 8001388:	f7ff ff52 	bl	8001230 <WidgetConfiguration::SetThrottle(unsigned char)>
 800138c:	6863      	ldr	r3, [r4, #4]
 800138e:	071b      	lsls	r3, r3, #28
 8001390:	d504      	bpl.n	800139c <WidgetParams::Set()+0x44>
 8001392:	7ae0      	ldrb	r0, [r4, #11]
 8001394:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001398:	f7ff bf3a 	b.w	8001210 <WidgetConfiguration::SetMode(widget::Mode)>
 800139c:	bd10      	pop	{r4, pc}

0800139e <WidgetParams::Dump()>:
 800139e:	4770      	bx	lr

080013a0 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>:
 80013a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80013a4:	4606      	mov	r6, r0
 80013a6:	460f      	mov	r7, r1
 80013a8:	461d      	mov	r5, r3
 80013aa:	eb03 0802 	add.w	r8, r3, r2
 80013ae:	eba8 0405 	sub.w	r4, r8, r5
 80013b2:	2d63      	cmp	r5, #99	; 0x63
 80013b4:	f04f 02c8 	mov.w	r2, #200	; 0xc8
 80013b8:	f04f 0181 	mov.w	r1, #129	; 0x81
 80013bc:	4630      	mov	r0, r6
 80013be:	fa17 f484 	uxtah	r4, r7, r4
 80013c2:	d81e      	bhi.n	8001402 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x62>
 80013c4:	f000 f8e2 	bl	800158c <Widget::SendHeader(unsigned char, unsigned int)>
 80013c8:	f04f 0800 	mov.w	r8, #0
 80013cc:	4545      	cmp	r5, r8
 80013ce:	462f      	mov	r7, r5
 80013d0:	d80d      	bhi.n	80013ee <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x4e>
 80013d2:	2000      	movs	r0, #0
 80013d4:	f000 fec5 	bl	8002162 <usb_send_byte>
 80013d8:	3701      	adds	r7, #1
 80013da:	2002      	movs	r0, #2
 80013dc:	f000 fec1 	bl	8002162 <usb_send_byte>
 80013e0:	2f64      	cmp	r7, #100	; 0x64
 80013e2:	d1f6      	bne.n	80013d2 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x32>
 80013e4:	4630      	mov	r0, r6
 80013e6:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80013ea:	f000 b8ec 	b.w	80015c6 <Widget::SendFooter()>
 80013ee:	2080      	movs	r0, #128	; 0x80
 80013f0:	f000 feb7 	bl	8002162 <usb_send_byte>
 80013f4:	f814 0b01 	ldrb.w	r0, [r4], #1
 80013f8:	f000 feb3 	bl	8002162 <usb_send_byte>
 80013fc:	f108 0801 	add.w	r8, r8, #1
 8001400:	e7e4      	b.n	80013cc <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x2c>
 8001402:	f000 f8c3 	bl	800158c <Widget::SendHeader(unsigned char, unsigned int)>
 8001406:	f04f 0900 	mov.w	r9, #0
 800140a:	2080      	movs	r0, #128	; 0x80
 800140c:	f000 fea9 	bl	8002162 <usb_send_byte>
 8001410:	f109 0901 	add.w	r9, r9, #1
 8001414:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001418:	f000 fea3 	bl	8002162 <usb_send_byte>
 800141c:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8001420:	d1f3      	bne.n	800140a <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x6a>
 8001422:	4630      	mov	r0, r6
 8001424:	3d64      	subs	r5, #100	; 0x64
 8001426:	f000 f8ce 	bl	80015c6 <Widget::SendFooter()>
 800142a:	b2ad      	uxth	r5, r5
 800142c:	e7bf      	b.n	80013ae <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0xe>
	...

08001430 <Widget::UsbCanSend()>:
 8001430:	b570      	push	{r4, r5, r6, lr}
 8001432:	4e0c      	ldr	r6, [pc, #48]	; (8001464 <Widget::UsbCanSend()+0x34>)
 8001434:	2578      	movs	r5, #120	; 0x78
 8001436:	6874      	ldr	r4, [r6, #4]
 8001438:	fbb4 f4f5 	udiv	r4, r4, r5
 800143c:	f000 ff7e 	bl	800233c <FT245RL_can_write>
 8001440:	b930      	cbnz	r0, 8001450 <Widget::UsbCanSend()+0x20>
 8001442:	6873      	ldr	r3, [r6, #4]
 8001444:	fbb3 f3f5 	udiv	r3, r3, r5
 8001448:	1b1b      	subs	r3, r3, r4
 800144a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800144e:	d3f5      	bcc.n	800143c <Widget::UsbCanSend()+0xc>
 8001450:	f000 ff74 	bl	800233c <FT245RL_can_write>
 8001454:	4604      	mov	r4, r0
 8001456:	b918      	cbnz	r0, 8001460 <Widget::UsbCanSend()+0x30>
 8001458:	4903      	ldr	r1, [pc, #12]	; (8001468 <Widget::UsbCanSend()+0x38>)
 800145a:	2007      	movs	r0, #7
 800145c:	f7ff fef4 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8001460:	4620      	mov	r0, r4
 8001462:	bd70      	pop	{r4, r5, r6, pc}
 8001464:	e0001000 	and	r1, r0, r0
 8001468:	08004bbb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r7, r8, r9, fp, lr}

0800146c <Widget::SnifferDmx()>:
 800146c:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
 8001470:	2b03      	cmp	r3, #3
 8001472:	b570      	push	{r4, r5, r6, lr}
 8001474:	4604      	mov	r4, r0
 8001476:	d11c      	bne.n	80014b2 <Widget::SnifferDmx()+0x46>
 8001478:	f7ff ffda 	bl	8001430 <Widget::UsbCanSend()>
 800147c:	b1c8      	cbz	r0, 80014b2 <Widget::SnifferDmx()+0x46>
 800147e:	2100      	movs	r1, #0
 8001480:	4620      	mov	r0, r4
 8001482:	f000 fdef 	bl	8002064 <Dmx::GetDmxChanged(unsigned int)>
 8001486:	4605      	mov	r5, r0
 8001488:	b198      	cbz	r0, 80014b2 <Widget::SnifferDmx()+0x46>
 800148a:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 800148e:	4620      	mov	r0, r4
 8001490:	f7ff ffce 	bl	8001430 <Widget::UsbCanSend()>
 8001494:	b168      	cbz	r0, 80014b2 <Widget::SnifferDmx()+0x46>
 8001496:	3601      	adds	r6, #1
 8001498:	4632      	mov	r2, r6
 800149a:	4906      	ldr	r1, [pc, #24]	; (80014b4 <Widget::SnifferDmx()+0x48>)
 800149c:	2007      	movs	r0, #7
 800149e:	f7ff fed3 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 80014a2:	b2b3      	uxth	r3, r6
 80014a4:	4629      	mov	r1, r5
 80014a6:	4620      	mov	r0, r4
 80014a8:	2200      	movs	r2, #0
 80014aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80014ae:	f7ff bf77 	b.w	80013a0 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 80014b2:	bd70      	pop	{r4, r5, r6, pc}
 80014b4:	08004bd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, fp, lr}

080014b8 <Widget::SnifferRdm()>:
 80014b8:	f8d0 32ec 	ldr.w	r3, [r0, #748]	; 0x2ec
 80014bc:	2b03      	cmp	r3, #3
 80014be:	b570      	push	{r4, r5, r6, lr}
 80014c0:	4604      	mov	r4, r0
 80014c2:	d14c      	bne.n	800155e <Widget::SnifferRdm()+0xa6>
 80014c4:	f7ff ffb4 	bl	8001430 <Widget::UsbCanSend()>
 80014c8:	2800      	cmp	r0, #0
 80014ca:	d048      	beq.n	800155e <Widget::SnifferRdm()+0xa6>
 80014cc:	2000      	movs	r0, #0
 80014ce:	f000 f939 	bl	8001744 <Rdm::Receive(unsigned int)>
 80014d2:	4605      	mov	r5, r0
 80014d4:	2800      	cmp	r0, #0
 80014d6:	d042      	beq.n	800155e <Widget::SnifferRdm()+0xa6>
 80014d8:	7803      	ldrb	r3, [r0, #0]
 80014da:	2bcc      	cmp	r3, #204	; 0xcc
 80014dc:	d134      	bne.n	8001548 <Widget::SnifferRdm()+0x90>
 80014de:	7886      	ldrb	r6, [r0, #2]
 80014e0:	7d03      	ldrb	r3, [r0, #20]
 80014e2:	3602      	adds	r6, #2
 80014e4:	2b20      	cmp	r3, #32
 80014e6:	b2f6      	uxtb	r6, r6
 80014e8:	d028      	beq.n	800153c <Widget::SnifferRdm()+0x84>
 80014ea:	d813      	bhi.n	8001514 <Widget::SnifferRdm()+0x5c>
 80014ec:	2b10      	cmp	r3, #16
 80014ee:	d019      	beq.n	8001524 <Widget::SnifferRdm()+0x6c>
 80014f0:	2b11      	cmp	r3, #17
 80014f2:	d01d      	beq.n	8001530 <Widget::SnifferRdm()+0x78>
 80014f4:	4620      	mov	r0, r4
 80014f6:	f7ff ff9b 	bl	8001430 <Widget::UsbCanSend()>
 80014fa:	b380      	cbz	r0, 800155e <Widget::SnifferRdm()+0xa6>
 80014fc:	4918      	ldr	r1, [pc, #96]	; (8001560 <Widget::SnifferRdm()+0xa8>)
 80014fe:	2007      	movs	r0, #7
 8001500:	f7ff fea2 	bl	8001248 <WidgetMonitor::Line(int, char const*, ...)>
 8001504:	4633      	mov	r3, r6
 8001506:	4629      	mov	r1, r5
 8001508:	4620      	mov	r0, r4
 800150a:	2200      	movs	r2, #0
 800150c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001510:	f7ff bf46 	b.w	80013a0 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 8001514:	2b30      	cmp	r3, #48	; 0x30
 8001516:	d1ed      	bne.n	80014f4 <Widget::SnifferRdm()+0x3c>
 8001518:	f8d4 3314 	ldr.w	r3, [r4, #788]	; 0x314
 800151c:	3301      	adds	r3, #1
 800151e:	f8c4 3314 	str.w	r3, [r4, #788]	; 0x314
 8001522:	e7e7      	b.n	80014f4 <Widget::SnifferRdm()+0x3c>
 8001524:	f8d4 3308 	ldr.w	r3, [r4, #776]	; 0x308
 8001528:	3301      	adds	r3, #1
 800152a:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
 800152e:	e7e1      	b.n	80014f4 <Widget::SnifferRdm()+0x3c>
 8001530:	f8d4 330c 	ldr.w	r3, [r4, #780]	; 0x30c
 8001534:	3301      	adds	r3, #1
 8001536:	f8c4 330c 	str.w	r3, [r4, #780]	; 0x30c
 800153a:	e7db      	b.n	80014f4 <Widget::SnifferRdm()+0x3c>
 800153c:	f8d4 3310 	ldr.w	r3, [r4, #784]	; 0x310
 8001540:	3301      	adds	r3, #1
 8001542:	f8c4 3310 	str.w	r3, [r4, #784]	; 0x310
 8001546:	e7d5      	b.n	80014f4 <Widget::SnifferRdm()+0x3c>
 8001548:	2bfe      	cmp	r3, #254	; 0xfe
 800154a:	bf01      	itttt	eq
 800154c:	f8d4 330c 	ldreq.w	r3, [r4, #780]	; 0x30c
 8001550:	3301      	addeq	r3, #1
 8001552:	f8c4 330c 	streq.w	r3, [r4, #780]	; 0x30c
 8001556:	2618      	moveq	r6, #24
 8001558:	bf18      	it	ne
 800155a:	2600      	movne	r6, #0
 800155c:	e7ca      	b.n	80014f4 <Widget::SnifferRdm()+0x3c>
 800155e:	bd70      	pop	{r4, r5, r6, pc}
 8001560:	08004bf4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, fp, lr}

08001564 <Widget::SnifferFillTransmitBuffer()>:
 8001564:	b538      	push	{r3, r4, r5, lr}
 8001566:	4605      	mov	r5, r0
 8001568:	f7ff ff62 	bl	8001430 <Widget::UsbCanSend()>
 800156c:	b958      	cbnz	r0, 8001586 <Widget::SnifferFillTransmitBuffer()+0x22>
 800156e:	bd38      	pop	{r3, r4, r5, pc}
 8001570:	4628      	mov	r0, r5
 8001572:	f7ff ff5d 	bl	8001430 <Widget::UsbCanSend()>
 8001576:	2800      	cmp	r0, #0
 8001578:	d0f9      	beq.n	800156e <Widget::SnifferFillTransmitBuffer()+0xa>
 800157a:	2000      	movs	r0, #0
 800157c:	f000 fdf1 	bl	8002162 <usb_send_byte>
 8001580:	3c01      	subs	r4, #1
 8001582:	d1f5      	bne.n	8001570 <Widget::SnifferFillTransmitBuffer()+0xc>
 8001584:	e7f3      	b.n	800156e <Widget::SnifferFillTransmitBuffer()+0xa>
 8001586:	f240 1401 	movw	r4, #257	; 0x101
 800158a:	e7f9      	b.n	8001580 <Widget::SnifferFillTransmitBuffer()+0x1c>

0800158c <Widget::SendHeader(unsigned char, unsigned int)>:
 800158c:	b538      	push	{r3, r4, r5, lr}
 800158e:	207e      	movs	r0, #126	; 0x7e
 8001590:	460d      	mov	r5, r1
 8001592:	4614      	mov	r4, r2
 8001594:	f000 fde5 	bl	8002162 <usb_send_byte>
 8001598:	4628      	mov	r0, r5
 800159a:	f000 fde2 	bl	8002162 <usb_send_byte>
 800159e:	b2e0      	uxtb	r0, r4
 80015a0:	f000 fddf 	bl	8002162 <usb_send_byte>
 80015a4:	f3c4 2007 	ubfx	r0, r4, #8, #8
 80015a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80015ac:	f000 bdd9 	b.w	8002162 <usb_send_byte>

080015b0 <Widget::SendData(unsigned char const*, unsigned int)>:
 80015b0:	b538      	push	{r3, r4, r5, lr}
 80015b2:	460c      	mov	r4, r1
 80015b4:	188d      	adds	r5, r1, r2
 80015b6:	42ac      	cmp	r4, r5
 80015b8:	d100      	bne.n	80015bc <Widget::SendData(unsigned char const*, unsigned int)+0xc>
 80015ba:	bd38      	pop	{r3, r4, r5, pc}
 80015bc:	f814 0b01 	ldrb.w	r0, [r4], #1
 80015c0:	f000 fdcf 	bl	8002162 <usb_send_byte>
 80015c4:	e7f7      	b.n	80015b6 <Widget::SendData(unsigned char const*, unsigned int)+0x6>

080015c6 <Widget::SendFooter()>:
 80015c6:	20e7      	movs	r0, #231	; 0xe7
 80015c8:	f000 bdcb 	b.w	8002162 <usb_send_byte>

080015cc <Widget::SendMessage(unsigned char, unsigned char const*, unsigned int)>:
 80015cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80015ce:	4604      	mov	r4, r0
 80015d0:	4615      	mov	r5, r2
 80015d2:	461a      	mov	r2, r3
 80015d4:	9301      	str	r3, [sp, #4]
 80015d6:	f7ff ffd9 	bl	800158c <Widget::SendHeader(unsigned char, unsigned int)>
 80015da:	4620      	mov	r0, r4
 80015dc:	9a01      	ldr	r2, [sp, #4]
 80015de:	4629      	mov	r1, r5
 80015e0:	f7ff ffe6 	bl	80015b0 <Widget::SendData(unsigned char const*, unsigned int)>
 80015e4:	20e7      	movs	r0, #231	; 0xe7
 80015e6:	b003      	add	sp, #12
 80015e8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80015ec:	f000 bdb9 	b.w	8002162 <usb_send_byte>

080015f0 <StoreWidget::UpdateBreakTime(unsigned char)>:
 80015f0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80015f2:	2301      	movs	r3, #1
 80015f4:	2200      	movs	r2, #0
 80015f6:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80015fa:	4807      	ldr	r0, [pc, #28]	; (8001618 <StoreWidget::UpdateBreakTime(unsigned char)+0x28>)
 80015fc:	9300      	str	r3, [sp, #0]
 80015fe:	f88d 1017 	strb.w	r1, [sp, #23]
 8001602:	6800      	ldr	r0, [r0, #0]
 8001604:	f10d 0317 	add.w	r3, sp, #23
 8001608:	2204      	movs	r2, #4
 800160a:	210a      	movs	r1, #10
 800160c:	f001 f83c 	bl	8002688 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8001610:	b007      	add	sp, #28
 8001612:	f85d fb04 	ldr.w	pc, [sp], #4
 8001616:	bf00      	nop
 8001618:	20001744 	andcs	r1, r0, r4, asr #14

0800161c <non-virtual thunk to StoreWidget::UpdateBreakTime(unsigned char)>:
 800161c:	f1a0 0004 	sub.w	r0, r0, #4
 8001620:	e7e6      	b.n	80015f0 <StoreWidget::UpdateBreakTime(unsigned char)>
 8001622:	bf00      	nop

08001624 <StoreWidget::UpdateMabTime(unsigned char)>:
 8001624:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8001626:	2302      	movs	r3, #2
 8001628:	2200      	movs	r2, #0
 800162a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800162e:	4807      	ldr	r0, [pc, #28]	; (800164c <StoreWidget::UpdateMabTime(unsigned char)+0x28>)
 8001630:	f88d 1017 	strb.w	r1, [sp, #23]
 8001634:	2301      	movs	r3, #1
 8001636:	9300      	str	r3, [sp, #0]
 8001638:	6800      	ldr	r0, [r0, #0]
 800163a:	f10d 0317 	add.w	r3, sp, #23
 800163e:	2205      	movs	r2, #5
 8001640:	210a      	movs	r1, #10
 8001642:	f001 f821 	bl	8002688 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8001646:	b007      	add	sp, #28
 8001648:	f85d fb04 	ldr.w	pc, [sp], #4
 800164c:	20001744 	andcs	r1, r0, r4, asr #14

08001650 <non-virtual thunk to StoreWidget::UpdateMabTime(unsigned char)>:
 8001650:	f1a0 0004 	sub.w	r0, r0, #4
 8001654:	e7e6      	b.n	8001624 <StoreWidget::UpdateMabTime(unsigned char)>
 8001656:	bf00      	nop

08001658 <StoreWidget::UpdateRefreshRate(unsigned char)>:
 8001658:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800165a:	2304      	movs	r3, #4
 800165c:	2200      	movs	r2, #0
 800165e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001662:	4807      	ldr	r0, [pc, #28]	; (8001680 <StoreWidget::UpdateRefreshRate(unsigned char)+0x28>)
 8001664:	f88d 1017 	strb.w	r1, [sp, #23]
 8001668:	2301      	movs	r3, #1
 800166a:	9300      	str	r3, [sp, #0]
 800166c:	6800      	ldr	r0, [r0, #0]
 800166e:	f10d 0317 	add.w	r3, sp, #23
 8001672:	2206      	movs	r2, #6
 8001674:	210a      	movs	r1, #10
 8001676:	f001 f807 	bl	8002688 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800167a:	b007      	add	sp, #28
 800167c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001680:	20001744 	andcs	r1, r0, r4, asr #14

08001684 <non-virtual thunk to StoreWidget::UpdateRefreshRate(unsigned char)>:
 8001684:	f1a0 0004 	sub.w	r0, r0, #4
 8001688:	e7e6      	b.n	8001658 <StoreWidget::UpdateRefreshRate(unsigned char)>
 800168a:	bf00      	nop

0800168c <WidgetConfiguration::Store(TWidgetConfiguration const*)>:
 800168c:	b510      	push	{r4, lr}
 800168e:	4a25      	ldr	r2, [pc, #148]	; (8001724 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x98>)
 8001690:	7883      	ldrb	r3, [r0, #2]
 8001692:	7811      	ldrb	r1, [r2, #0]
 8001694:	4299      	cmp	r1, r3
 8001696:	4604      	mov	r4, r0
 8001698:	d015      	beq.n	80016c6 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x3a>
 800169a:	ee07 3a90 	vmov	s15, r3
 800169e:	ed9f 7a22 	vldr	s14, [pc, #136]	; 8001728 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>
 80016a2:	7013      	strb	r3, [r2, #0]
 80016a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80016a8:	4b20      	ldr	r3, [pc, #128]	; (800172c <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 80016aa:	ee67 7a87 	vmul.f32	s15, s15, s14
 80016ae:	6818      	ldr	r0, [r3, #0]
 80016b0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80016b4:	ee17 1a90 	vmov	r1, s15
 80016b8:	f000 fc84 	bl	8001fc4 <Dmx::SetDmxBreakTime(unsigned int)>
 80016bc:	4b1c      	ldr	r3, [pc, #112]	; (8001730 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa4>)
 80016be:	78a1      	ldrb	r1, [r4, #2]
 80016c0:	6818      	ldr	r0, [r3, #0]
 80016c2:	f7ff ff95 	bl	80015f0 <StoreWidget::UpdateBreakTime(unsigned char)>
 80016c6:	4a1b      	ldr	r2, [pc, #108]	; (8001734 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa8>)
 80016c8:	78e3      	ldrb	r3, [r4, #3]
 80016ca:	7811      	ldrb	r1, [r2, #0]
 80016cc:	4299      	cmp	r1, r3
 80016ce:	d015      	beq.n	80016fc <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x70>
 80016d0:	ee07 3a90 	vmov	s15, r3
 80016d4:	ed9f 7a14 	vldr	s14, [pc, #80]	; 8001728 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>
 80016d8:	7013      	strb	r3, [r2, #0]
 80016da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80016de:	4b13      	ldr	r3, [pc, #76]	; (800172c <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 80016e0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80016e4:	6818      	ldr	r0, [r3, #0]
 80016e6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80016ea:	ee17 1a90 	vmov	r1, s15
 80016ee:	f000 fc73 	bl	8001fd8 <Dmx::SetDmxMabTime(unsigned int)>
 80016f2:	4b0f      	ldr	r3, [pc, #60]	; (8001730 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa4>)
 80016f4:	78e1      	ldrb	r1, [r4, #3]
 80016f6:	6818      	ldr	r0, [r3, #0]
 80016f8:	f7ff ff94 	bl	8001624 <StoreWidget::UpdateMabTime(unsigned char)>
 80016fc:	4b0e      	ldr	r3, [pc, #56]	; (8001738 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xac>)
 80016fe:	7921      	ldrb	r1, [r4, #4]
 8001700:	781a      	ldrb	r2, [r3, #0]
 8001702:	428a      	cmp	r2, r1
 8001704:	d00d      	beq.n	8001722 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x96>
 8001706:	7019      	strb	r1, [r3, #0]
 8001708:	4b08      	ldr	r3, [pc, #32]	; (800172c <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 800170a:	6818      	ldr	r0, [r3, #0]
 800170c:	b111      	cbz	r1, 8001714 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x88>
 800170e:	4b0b      	ldr	r3, [pc, #44]	; (800173c <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xb0>)
 8001710:	fbb3 f1f1 	udiv	r1, r3, r1
 8001714:	f000 fc26 	bl	8001f64 <Dmx::SetDmxPeriodTime(unsigned int)>
 8001718:	4b05      	ldr	r3, [pc, #20]	; (8001730 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa4>)
 800171a:	7921      	ldrb	r1, [r4, #4]
 800171c:	6818      	ldr	r0, [r3, #0]
 800171e:	f7ff ff9b 	bl	8001658 <StoreWidget::UpdateRefreshRate(unsigned char)>
 8001722:	bd10      	pop	{r4, pc}
 8001724:	20000001 	andcs	r0, r0, r1
 8001728:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 800172c:	20000728 	andcs	r0, r0, r8, lsr #14
 8001730:	20001750 	andcs	r1, r0, r0, asr r7
 8001734:	20000000 	andcs	r0, r0, r0
 8001738:	20000004 	andcs	r0, r0, r4
 800173c:	000f4240 	andeq	r4, pc, r0, asr #4

08001740 <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>:
 8001740:	4770      	bx	lr
	...

08001744 <Rdm::Receive(unsigned int)>:
 8001744:	4b02      	ldr	r3, [pc, #8]	; (8001750 <Rdm::Receive(unsigned int)+0xc>)
 8001746:	4601      	mov	r1, r0
 8001748:	6818      	ldr	r0, [r3, #0]
 800174a:	f000 bcef 	b.w	800212c <Dmx::RdmReceive(unsigned int)>
 800174e:	bf00      	nop
 8001750:	20000728 	andcs	r0, r0, r8, lsr #14

08001754 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>:
 8001754:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001758:	4d0d      	ldr	r5, [pc, #52]	; (8001790 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)+0x3c>)
 800175a:	2300      	movs	r3, #0
 800175c:	4604      	mov	r4, r0
 800175e:	460e      	mov	r6, r1
 8001760:	4617      	mov	r7, r2
 8001762:	4601      	mov	r1, r0
 8001764:	461a      	mov	r2, r3
 8001766:	6828      	ldr	r0, [r5, #0]
 8001768:	f000 faf2 	bl	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800176c:	463b      	mov	r3, r7
 800176e:	4632      	mov	r2, r6
 8001770:	6828      	ldr	r0, [r5, #0]
 8001772:	4621      	mov	r1, r4
 8001774:	f000 fc94 	bl	80020a0 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>
 8001778:	2100      	movs	r1, #0
 800177a:	2004      	movs	r0, #4
 800177c:	f002 feb4 	bl	80044e8 <udelay(unsigned int, unsigned int)>
 8001780:	2301      	movs	r3, #1
 8001782:	6828      	ldr	r0, [r5, #0]
 8001784:	4621      	mov	r1, r4
 8001786:	461a      	mov	r2, r3
 8001788:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800178c:	f000 bae0 	b.w	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001790:	20000728 	andcs	r0, r0, r8, lsr #14

08001794 <USART2_IRQHandler>:
 8001794:	b510      	push	{r4, lr}
 8001796:	f3bf 8f5f 	dmb	sy
 800179a:	498d      	ldr	r1, [pc, #564]	; (80019d0 <USART2_IRQHandler+0x23c>)
 800179c:	2408      	movs	r4, #8
 800179e:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 80017a2:	f8c1 4c10 	str.w	r4, [r1, #3088]	; 0xc10
 80017a6:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 80017aa:	f013 0f02 	tst.w	r3, #2
 80017ae:	4b89      	ldr	r3, [pc, #548]	; (80019d4 <USART2_IRQHandler+0x240>)
 80017b0:	d016      	beq.n	80017e0 <USART2_IRQHandler+0x4c>
 80017b2:	f8d2 0800 	ldr.w	r0, [r2, #2048]	; 0x800
 80017b6:	f020 0002 	bic.w	r0, r0, #2
 80017ba:	f8c2 0800 	str.w	r0, [r2, #2048]	; 0x800
 80017be:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 80017c2:	2200      	movs	r2, #0
 80017c4:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80017c8:	2202      	movs	r2, #2
 80017ca:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 80017ce:	2310      	movs	r3, #16
 80017d0:	f8c1 4c14 	str.w	r4, [r1, #3092]	; 0xc14
 80017d4:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 80017d8:	2320      	movs	r3, #32
 80017da:	f8c1 3c14 	str.w	r3, [r1, #3092]	; 0xc14
 80017de:	bd10      	pop	{r4, pc}
 80017e0:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 80017e4:	f8d3 020c 	ldr.w	r0, [r3, #524]	; 0x20c
 80017e8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80017ec:	280a      	cmp	r0, #10
 80017ee:	f200 80eb 	bhi.w	80019c8 <USART2_IRQHandler+0x234>
 80017f2:	e8df f010 	tbh	[pc, r0, lsl #1]
 80017f6:	00e9000b 	rsceq	r0, r9, fp
 80017fa:	00e90019 	rsceq	r0, r9, r9, lsl r0
 80017fe:	005c0039 	subseq	r0, ip, r9, lsr r0
 8001802:	00870077 	addeq	r0, r7, r7, ror r0
 8001806:	00b900a8 	adcseq	r0, r9, r8, lsr #1
 800180a:	210800cd 	smlabtcs	r8, sp, r0, r0
 800180e:	701a      	strb	r2, [r3, #0]
 8001810:	2201      	movs	r2, #1
 8001812:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8001816:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800181a:	4b6d      	ldr	r3, [pc, #436]	; (80019d0 <USART2_IRQHandler+0x23c>)
 800181c:	2208      	movs	r2, #8
 800181e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8001822:	f3bf 8f5f 	dmb	sy
 8001826:	e7da      	b.n	80017de <USART2_IRQHandler+0x4a>
 8001828:	b11a      	cbz	r2, 8001832 <USART2_IRQHandler+0x9e>
 800182a:	2acc      	cmp	r2, #204	; 0xcc
 800182c:	d016      	beq.n	800185c <USART2_IRQHandler+0xc8>
 800182e:	2200      	movs	r2, #0
 8001830:	e065      	b.n	80018fe <USART2_IRQHandler+0x16a>
 8001832:	701a      	strb	r2, [r3, #0]
 8001834:	2201      	movs	r2, #1
 8001836:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800183a:	4a67      	ldr	r2, [pc, #412]	; (80019d8 <USART2_IRQHandler+0x244>)
 800183c:	6851      	ldr	r1, [r2, #4]
 800183e:	3101      	adds	r1, #1
 8001840:	6051      	str	r1, [r2, #4]
 8001842:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8001846:	f8d1 1424 	ldr.w	r1, [r1, #1060]	; 0x424
 800184a:	60d1      	str	r1, [r2, #12]
 800184c:	2204      	movs	r2, #4
 800184e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001852:	4b5f      	ldr	r3, [pc, #380]	; (80019d0 <USART2_IRQHandler+0x23c>)
 8001854:	2210      	movs	r2, #16
 8001856:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800185a:	e7de      	b.n	800181a <USART2_IRQHandler+0x86>
 800185c:	701a      	strb	r2, [r3, #0]
 800185e:	4a5f      	ldr	r2, [pc, #380]	; (80019dc <USART2_IRQHandler+0x248>)
 8001860:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001864:	2205      	movs	r2, #5
 8001866:	e7f2      	b.n	800184e <USART2_IRQHandler+0xba>
 8001868:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 800186c:	b288      	uxth	r0, r1
 800186e:	541a      	strb	r2, [r3, r0]
 8001870:	1c4a      	adds	r2, r1, #1
 8001872:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8001876:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800187a:	d90b      	bls.n	8001894 <USART2_IRQHandler+0x100>
 800187c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001880:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001884:	2200      	movs	r2, #0
 8001886:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800188a:	4b51      	ldr	r3, [pc, #324]	; (80019d0 <USART2_IRQHandler+0x23c>)
 800188c:	2210      	movs	r2, #16
 800188e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8001892:	e7c2      	b.n	800181a <USART2_IRQHandler+0x86>
 8001894:	4850      	ldr	r0, [pc, #320]	; (80019d8 <USART2_IRQHandler+0x244>)
 8001896:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800189a:	f8d2 1424 	ldr.w	r1, [r2, #1060]	; 0x424
 800189e:	68c3      	ldr	r3, [r0, #12]
 80018a0:	60c1      	str	r1, [r0, #12]
 80018a2:	ebc3 0341 	rsb	r3, r3, r1, lsl #1
 80018a6:	3304      	adds	r3, #4
 80018a8:	f8c2 3434 	str.w	r3, [r2, #1076]	; 0x434
 80018ac:	e7b5      	b.n	800181a <USART2_IRQHandler+0x86>
 80018ae:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 80018b2:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 80018b6:	541a      	strb	r2, [r3, r0]
 80018b8:	1c41      	adds	r1, r0, #1
 80018ba:	3817      	subs	r0, #23
 80018bc:	b289      	uxth	r1, r1
 80018be:	4422      	add	r2, r4
 80018c0:	28e7      	cmp	r0, #231	; 0xe7
 80018c2:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 80018c6:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 80018ca:	d808      	bhi.n	80018de <USART2_IRQHandler+0x14a>
 80018cc:	789a      	ldrb	r2, [r3, #2]
 80018ce:	428a      	cmp	r2, r1
 80018d0:	d105      	bne.n	80018de <USART2_IRQHandler+0x14a>
 80018d2:	2206      	movs	r2, #6
 80018d4:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 80018d8:	4b3d      	ldr	r3, [pc, #244]	; (80019d0 <USART2_IRQHandler+0x23c>)
 80018da:	2220      	movs	r2, #32
 80018dc:	e7bb      	b.n	8001856 <USART2_IRQHandler+0xc2>
 80018de:	29ff      	cmp	r1, #255	; 0xff
 80018e0:	d99b      	bls.n	800181a <USART2_IRQHandler+0x86>
 80018e2:	e7a4      	b.n	800182e <USART2_IRQHandler+0x9a>
 80018e4:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 80018e8:	545a      	strb	r2, [r3, r1]
 80018ea:	3101      	adds	r1, #1
 80018ec:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 80018f0:	f8b3 1206 	ldrh.w	r1, [r3, #518]	; 0x206
 80018f4:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 80018f8:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 80018fc:	2207      	movs	r2, #7
 80018fe:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001902:	e78a      	b.n	800181a <USART2_IRQHandler+0x86>
 8001904:	2020      	movs	r0, #32
 8001906:	f8c1 0c14 	str.w	r0, [r1, #3092]	; 0xc14
 800190a:	f8b3 4206 	ldrh.w	r4, [r3, #518]	; 0x206
 800190e:	f8b3 0204 	ldrh.w	r0, [r3, #516]	; 0x204
 8001912:	541a      	strb	r2, [r3, r0]
 8001914:	1aa2      	subs	r2, r4, r2
 8001916:	b292      	uxth	r2, r2
 8001918:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 800191c:	b912      	cbnz	r2, 8001924 <USART2_IRQHandler+0x190>
 800191e:	785a      	ldrb	r2, [r3, #1]
 8001920:	2a01      	cmp	r2, #1
 8001922:	d003      	beq.n	800192c <USART2_IRQHandler+0x198>
 8001924:	2200      	movs	r2, #0
 8001926:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800192a:	e780      	b.n	800182e <USART2_IRQHandler+0x9a>
 800192c:	3001      	adds	r0, #1
 800192e:	4a2c      	ldr	r2, [pc, #176]	; (80019e0 <USART2_IRQHandler+0x24c>)
 8001930:	f440 4080 	orr.w	r0, r0, #16384	; 0x4000
 8001934:	f8a3 0204 	strh.w	r0, [r3, #516]	; 0x204
 8001938:	6850      	ldr	r0, [r2, #4]
 800193a:	4a2a      	ldr	r2, [pc, #168]	; (80019e4 <USART2_IRQHandler+0x250>)
 800193c:	6010      	str	r0, [r2, #0]
 800193e:	2210      	movs	r2, #16
 8001940:	f8c1 2c14 	str.w	r2, [r1, #3092]	; 0xc14
 8001944:	e773      	b.n	800182e <USART2_IRQHandler+0x9a>
 8001946:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 800194a:	545a      	strb	r2, [r3, r1]
 800194c:	3101      	adds	r1, #1
 800194e:	b289      	uxth	r1, r1
 8001950:	2aaa      	cmp	r2, #170	; 0xaa
 8001952:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 8001956:	d002      	beq.n	800195e <USART2_IRQHandler+0x1ca>
 8001958:	2909      	cmp	r1, #9
 800195a:	f47f af5e 	bne.w	800181a <USART2_IRQHandler+0x86>
 800195e:	2200      	movs	r2, #0
 8001960:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8001964:	2209      	movs	r2, #9
 8001966:	e7ca      	b.n	80018fe <USART2_IRQHandler+0x16a>
 8001968:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 800196c:	545a      	strb	r2, [r3, r1]
 800196e:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 8001972:	3201      	adds	r2, #1
 8001974:	b292      	uxth	r2, r2
 8001976:	3101      	adds	r1, #1
 8001978:	2a0c      	cmp	r2, #12
 800197a:	f8a3 1204 	strh.w	r1, [r3, #516]	; 0x204
 800197e:	d002      	beq.n	8001986 <USART2_IRQHandler+0x1f2>
 8001980:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8001984:	e749      	b.n	800181a <USART2_IRQHandler+0x86>
 8001986:	2200      	movs	r2, #0
 8001988:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800198c:	220a      	movs	r2, #10
 800198e:	e7b6      	b.n	80018fe <USART2_IRQHandler+0x16a>
 8001990:	f8b3 1204 	ldrh.w	r1, [r3, #516]	; 0x204
 8001994:	545a      	strb	r2, [r3, r1]
 8001996:	1c4a      	adds	r2, r1, #1
 8001998:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 800199c:	3101      	adds	r1, #1
 800199e:	b289      	uxth	r1, r1
 80019a0:	b292      	uxth	r2, r2
 80019a2:	2904      	cmp	r1, #4
 80019a4:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 80019a8:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 80019ac:	f47f af35 	bne.w	800181a <USART2_IRQHandler+0x86>
 80019b0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80019b4:	2100      	movs	r1, #0
 80019b6:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 80019ba:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 80019be:	4b08      	ldr	r3, [pc, #32]	; (80019e0 <USART2_IRQHandler+0x24c>)
 80019c0:	685a      	ldr	r2, [r3, #4]
 80019c2:	4b08      	ldr	r3, [pc, #32]	; (80019e4 <USART2_IRQHandler+0x250>)
 80019c4:	601a      	str	r2, [r3, #0]
 80019c6:	e728      	b.n	800181a <USART2_IRQHandler+0x86>
 80019c8:	2200      	movs	r2, #0
 80019ca:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80019ce:	e796      	b.n	80018fe <USART2_IRQHandler+0x16a>
 80019d0:	40010000 	andmi	r0, r1, r0
 80019d4:	200000f8 	strdcs	r0, [r0], -r8
 80019d8:	20000714 	andcs	r0, r0, r4, lsl r7
 80019dc:	00cc0001 	sbceq	r0, ip, r1
 80019e0:	e0001000 	and	r1, r0, r0
 80019e4:	2000072c 	andcs	r0, r0, ip, lsr #14

080019e8 <TIMER1_IRQHandler>:
 80019e8:	b538      	push	{r3, r4, r5, lr}
 80019ea:	f3bf 8f5f 	dmb	sy
 80019ee:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80019f2:	4a25      	ldr	r2, [pc, #148]	; (8001a88 <TIMER1_IRQHandler+0xa0>)
 80019f4:	691c      	ldr	r4, [r3, #16]
 80019f6:	4925      	ldr	r1, [pc, #148]	; (8001a8c <TIMER1_IRQHandler+0xa4>)
 80019f8:	8813      	ldrh	r3, [r2, #0]
 80019fa:	2008      	movs	r0, #8
 80019fc:	f8c1 0c10 	str.w	r0, [r1, #3088]	; 0xc10
 8001a00:	07a1      	lsls	r1, r4, #30
 8001a02:	b29b      	uxth	r3, r3
 8001a04:	d51d      	bpl.n	8001a42 <TIMER1_IRQHandler+0x5a>
 8001a06:	07dd      	lsls	r5, r3, #31
 8001a08:	d50f      	bpl.n	8001a2a <TIMER1_IRQHandler+0x42>
 8001a0a:	8813      	ldrh	r3, [r2, #0]
 8001a0c:	4d20      	ldr	r5, [pc, #128]	; (8001a90 <TIMER1_IRQHandler+0xa8>)
 8001a0e:	b29b      	uxth	r3, r3
 8001a10:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001a14:	8013      	strh	r3, [r2, #0]
 8001a16:	2110      	movs	r1, #16
 8001a18:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001a1c:	2203      	movs	r2, #3
 8001a1e:	4628      	mov	r0, r5
 8001a20:	f001 ffc2 	bl	80039a8 <gpio_init>
 8001a24:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001a28:	616b      	str	r3, [r5, #20]
 8001a2a:	4621      	mov	r1, r4
 8001a2c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001a30:	f002 f9bf 	bl	8003db2 <timer_interrupt_flag_clear>
 8001a34:	4b15      	ldr	r3, [pc, #84]	; (8001a8c <TIMER1_IRQHandler+0xa4>)
 8001a36:	2208      	movs	r2, #8
 8001a38:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8001a3c:	f3bf 8f5f 	dmb	sy
 8001a40:	bd38      	pop	{r3, r4, r5, pc}
 8001a42:	0760      	lsls	r0, r4, #29
 8001a44:	d509      	bpl.n	8001a5a <TIMER1_IRQHandler+0x72>
 8001a46:	05d9      	lsls	r1, r3, #23
 8001a48:	d5ef      	bpl.n	8001a2a <TIMER1_IRQHandler+0x42>
 8001a4a:	4811      	ldr	r0, [pc, #68]	; (8001a90 <TIMER1_IRQHandler+0xa8>)
 8001a4c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001a50:	2203      	movs	r2, #3
 8001a52:	2118      	movs	r1, #24
 8001a54:	f001 ffa8 	bl	80039a8 <gpio_init>
 8001a58:	e7e7      	b.n	8001a2a <TIMER1_IRQHandler+0x42>
 8001a5a:	0722      	lsls	r2, r4, #28
 8001a5c:	d5e5      	bpl.n	8001a2a <TIMER1_IRQHandler+0x42>
 8001a5e:	05db      	lsls	r3, r3, #23
 8001a60:	d5e3      	bpl.n	8001a2a <TIMER1_IRQHandler+0x42>
 8001a62:	4b0c      	ldr	r3, [pc, #48]	; (8001a94 <TIMER1_IRQHandler+0xac>)
 8001a64:	480c      	ldr	r0, [pc, #48]	; (8001a98 <TIMER1_IRQHandler+0xb0>)
 8001a66:	69da      	ldr	r2, [r3, #28]
 8001a68:	f022 0201 	bic.w	r2, r2, #1
 8001a6c:	61da      	str	r2, [r3, #28]
 8001a6e:	4a0b      	ldr	r2, [pc, #44]	; (8001a9c <TIMER1_IRQHandler+0xb4>)
 8001a70:	629a      	str	r2, [r3, #40]	; 0x28
 8001a72:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 8001a76:	621a      	str	r2, [r3, #32]
 8001a78:	69da      	ldr	r2, [r3, #28]
 8001a7a:	f042 0201 	orr.w	r2, r2, #1
 8001a7e:	61da      	str	r2, [r3, #28]
 8001a80:	2180      	movs	r1, #128	; 0x80
 8001a82:	f002 fa69 	bl	8003f58 <usart_dma_transmit_config>
 8001a86:	e7d0      	b.n	8001a2a <TIMER1_IRQHandler+0x42>
 8001a88:	20000724 	andcs	r0, r0, r4, lsr #14
 8001a8c:	40010000 	andmi	r0, r1, r0
 8001a90:	40011000 	andmi	r1, r1, r0
 8001a94:	40020000 	andmi	r0, r2, r0
 8001a98:	40004800 	andmi	r4, r0, r0, lsl #16
 8001a9c:	20000308 	andcs	r0, r0, r8, lsl #6

08001aa0 <TIMER2_IRQHandler>:
 8001aa0:	b508      	push	{r3, lr}
 8001aa2:	f3bf 8f5f 	dmb	sy
 8001aa6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001aaa:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 8001aae:	078b      	lsls	r3, r1, #30
 8001ab0:	d511      	bpl.n	8001ad6 <TIMER2_IRQHandler+0x36>
 8001ab2:	4b0c      	ldr	r3, [pc, #48]	; (8001ae4 <TIMER2_IRQHandler+0x44>)
 8001ab4:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8001ab8:	2a04      	cmp	r2, #4
 8001aba:	d10c      	bne.n	8001ad6 <TIMER2_IRQHandler+0x36>
 8001abc:	2200      	movs	r2, #0
 8001abe:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001ac2:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8001ac6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001aca:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001ace:	4b06      	ldr	r3, [pc, #24]	; (8001ae8 <TIMER2_IRQHandler+0x48>)
 8001ad0:	2210      	movs	r2, #16
 8001ad2:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8001ad6:	4805      	ldr	r0, [pc, #20]	; (8001aec <TIMER2_IRQHandler+0x4c>)
 8001ad8:	f002 f96b 	bl	8003db2 <timer_interrupt_flag_clear>
 8001adc:	f3bf 8f5f 	dmb	sy
 8001ae0:	bd08      	pop	{r3, pc}
 8001ae2:	bf00      	nop
 8001ae4:	200000f8 	strdcs	r0, [r0], -r8
 8001ae8:	40010000 	andmi	r0, r1, r0
 8001aec:	40000400 	andmi	r0, r0, r0, lsl #8

08001af0 <TIMER3_IRQHandler>:
 8001af0:	b508      	push	{r3, lr}
 8001af2:	f3bf 8f5f 	dmb	sy
 8001af6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001afa:	4804      	ldr	r0, [pc, #16]	; (8001b0c <TIMER3_IRQHandler+0x1c>)
 8001afc:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 8001b00:	f002 f957 	bl	8003db2 <timer_interrupt_flag_clear>
 8001b04:	f3bf 8f5f 	dmb	sy
 8001b08:	bd08      	pop	{r3, pc}
 8001b0a:	bf00      	nop
 8001b0c:	40000800 	andmi	r0, r0, r0, lsl #16

08001b10 <TIMER6_IRQHandler>:
 8001b10:	b508      	push	{r3, lr}
 8001b12:	f3bf 8f5f 	dmb	sy
 8001b16:	4b07      	ldr	r3, [pc, #28]	; (8001b34 <TIMER6_IRQHandler+0x24>)
 8001b18:	4807      	ldr	r0, [pc, #28]	; (8001b38 <TIMER6_IRQHandler+0x28>)
 8001b1a:	685a      	ldr	r2, [r3, #4]
 8001b1c:	6899      	ldr	r1, [r3, #8]
 8001b1e:	1a52      	subs	r2, r2, r1
 8001b20:	601a      	str	r2, [r3, #0]
 8001b22:	685a      	ldr	r2, [r3, #4]
 8001b24:	609a      	str	r2, [r3, #8]
 8001b26:	2101      	movs	r1, #1
 8001b28:	f002 f943 	bl	8003db2 <timer_interrupt_flag_clear>
 8001b2c:	f3bf 8f5f 	dmb	sy
 8001b30:	bd08      	pop	{r3, pc}
 8001b32:	bf00      	nop
 8001b34:	20000714 	andcs	r0, r0, r4, lsl r7
 8001b38:	40001400 	andmi	r1, r0, r0, lsl #8

08001b3c <Dmx::ClearData(unsigned int)>:
 8001b3c:	4a0a      	ldr	r2, [pc, #40]	; (8001b68 <Dmx::ClearData(unsigned int)+0x2c>)
 8001b3e:	f44f 7301 	mov.w	r3, #516	; 0x204
 8001b42:	fb03 2301 	mla	r3, r3, r1, r2
 8001b46:	b510      	push	{r4, lr}
 8001b48:	f203 2002 	addw	r0, r3, #514	; 0x202
 8001b4c:	2400      	movs	r4, #0
 8001b4e:	f823 4b02 	strh.w	r4, [r3], #2
 8001b52:	4283      	cmp	r3, r0
 8001b54:	d1fb      	bne.n	8001b4e <Dmx::ClearData(unsigned int)+0x12>
 8001b56:	f44f 7301 	mov.w	r3, #516	; 0x204
 8001b5a:	fb03 2101 	mla	r1, r3, r1, r2
 8001b5e:	f240 2301 	movw	r3, #513	; 0x201
 8001b62:	f8a1 3202 	strh.w	r3, [r1, #514]	; 0x202
 8001b66:	bd10      	pop	{r4, pc}
 8001b68:	20000308 	andcs	r0, r0, r8, lsl #6

08001b6c <Dmx::StartData(unsigned int, unsigned int)>:
 8001b6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b6e:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8001b72:	b085      	sub	sp, #20
 8001b74:	6943      	ldr	r3, [r0, #20]
 8001b76:	460c      	mov	r4, r1
 8001b78:	4615      	mov	r5, r2
 8001b7a:	2b00      	cmp	r3, #0
 8001b7c:	d168      	bne.n	8001c50 <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 8001b7e:	4e46      	ldr	r6, [pc, #280]	; (8001c98 <Dmx::StartData(unsigned int, unsigned int)+0x12c>)
 8001b80:	8834      	ldrh	r4, [r6, #0]
 8001b82:	b2a4      	uxth	r4, r4
 8001b84:	2c00      	cmp	r4, #0
 8001b86:	d157      	bne.n	8001c38 <Dmx::StartData(unsigned int, unsigned int)+0xcc>
 8001b88:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 8001b8c:	f001 ffa4 	bl	8003ad8 <rcu_periph_clock_enable>
 8001b90:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001b94:	f002 f864 	bl	8003c60 <timer_deinit>
 8001b98:	4b40      	ldr	r3, [pc, #256]	; (8001c9c <Dmx::StartData(unsigned int, unsigned int)+0x130>)
 8001b9a:	f88d 400c 	strb.w	r4, [sp, #12]
 8001b9e:	681b      	ldr	r3, [r3, #0]
 8001ba0:	9302      	str	r3, [sp, #8]
 8001ba2:	4669      	mov	r1, sp
 8001ba4:	2377      	movs	r3, #119	; 0x77
 8001ba6:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001baa:	e9cd 3400 	strd	r3, r4, [sp]
 8001bae:	f002 f8b9 	bl	8003d24 <timer_init>
 8001bb2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001bb6:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001bba:	f002 f8fd 	bl	8003db8 <timer_flag_clear>
 8001bbe:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001bc2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001bc6:	f002 f8f4 	bl	8003db2 <timer_interrupt_flag_clear>
 8001bca:	2210      	movs	r2, #16
 8001bcc:	4621      	mov	r1, r4
 8001bce:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001bd2:	f002 f8f4 	bl	8003dbe <timer_channel_output_mode_config>
 8001bd6:	2210      	movs	r2, #16
 8001bd8:	2101      	movs	r1, #1
 8001bda:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001bde:	f002 f8ee 	bl	8003dbe <timer_channel_output_mode_config>
 8001be2:	4f2f      	ldr	r7, [pc, #188]	; (8001ca0 <Dmx::StartData(unsigned int, unsigned int)+0x134>)
 8001be4:	2210      	movs	r2, #16
 8001be6:	2102      	movs	r1, #2
 8001be8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001bec:	f002 f8e7 	bl	8003dbe <timer_channel_output_mode_config>
 8001bf0:	4622      	mov	r2, r4
 8001bf2:	4621      	mov	r1, r4
 8001bf4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001bf8:	f002 f907 	bl	8003e0a <timer_channel_output_pulse_value_config>
 8001bfc:	683a      	ldr	r2, [r7, #0]
 8001bfe:	2101      	movs	r1, #1
 8001c00:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001c04:	f002 f901 	bl	8003e0a <timer_channel_output_pulse_value_config>
 8001c08:	4b26      	ldr	r3, [pc, #152]	; (8001ca4 <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 8001c0a:	683a      	ldr	r2, [r7, #0]
 8001c0c:	681b      	ldr	r3, [r3, #0]
 8001c0e:	2102      	movs	r1, #2
 8001c10:	441a      	add	r2, r3
 8001c12:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001c16:	f002 f8f8 	bl	8003e0a <timer_channel_output_pulse_value_config>
 8001c1a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001c1e:	210e      	movs	r1, #14
 8001c20:	f002 f8c3 	bl	8003daa <timer_interrupt_enable>
 8001c24:	4b20      	ldr	r3, [pc, #128]	; (8001ca8 <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 8001c26:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001c2a:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 8001c2e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001c32:	601a      	str	r2, [r3, #0]
 8001c34:	f002 f8b4 	bl	8003da0 <timer_enable>
 8001c38:	8831      	ldrh	r1, [r6, #0]
 8001c3a:	2201      	movs	r2, #1
 8001c3c:	fa02 f305 	lsl.w	r3, r2, r5
 8001c40:	430b      	orrs	r3, r1
 8001c42:	b29b      	uxth	r3, r3
 8001c44:	8033      	strh	r3, [r6, #0]
 8001c46:	4b19      	ldr	r3, [pc, #100]	; (8001cac <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 8001c48:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8001c4c:	b005      	add	sp, #20
 8001c4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c50:	4b17      	ldr	r3, [pc, #92]	; (8001cb0 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 8001c52:	f44f 7204 	mov.w	r2, #528	; 0x210
 8001c56:	fb02 3305 	mla	r3, r2, r5, r3
 8001c5a:	2200      	movs	r2, #0
 8001c5c:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001c60:	2107      	movs	r1, #7
 8001c62:	4620      	mov	r0, r4
 8001c64:	f002 f97e 	bl	8003f64 <usart_flag_get>
 8001c68:	2800      	cmp	r0, #0
 8001c6a:	d0f9      	beq.n	8001c60 <Dmx::StartData(unsigned int, unsigned int)+0xf4>
 8001c6c:	4911      	ldr	r1, [pc, #68]	; (8001cb4 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 8001c6e:	4620      	mov	r0, r4
 8001c70:	f002 f99a 	bl	8003fa8 <usart_interrupt_flag_clear>
 8001c74:	f240 3105 	movw	r1, #773	; 0x305
 8001c78:	4620      	mov	r0, r4
 8001c7a:	f002 f989 	bl	8003f90 <usart_interrupt_enable>
 8001c7e:	4b0b      	ldr	r3, [pc, #44]	; (8001cac <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 8001c80:	2202      	movs	r2, #2
 8001c82:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8001c86:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001c8a:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8001c8e:	f043 0302 	orr.w	r3, r3, #2
 8001c92:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8001c96:	e7d9      	b.n	8001c4c <Dmx::StartData(unsigned int, unsigned int)+0xe0>
 8001c98:	20000724 	andcs	r0, r0, r4, lsr #14
 8001c9c:	20000008 	andcs	r0, r0, r8
 8001ca0:	20000010 	andcs	r0, r0, r0, lsl r0
 8001ca4:	2000000c 	andcs	r0, r0, ip
 8001ca8:	e000e100 	and	lr, r0, r0, lsl #2
 8001cac:	2000050c 	andcs	r0, r0, ip, lsl #10
 8001cb0:	200000f8 	strdcs	r0, [r0], -r8
 8001cb4:	00050305 	andeq	r0, r5, r5, lsl #6

08001cb8 <Dmx::StopData(unsigned int, unsigned int)>:
 8001cb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001cbc:	4f21      	ldr	r7, [pc, #132]	; (8001d44 <Dmx::StopData(unsigned int, unsigned int)+0x8c>)
 8001cbe:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
 8001cc2:	4688      	mov	r8, r1
 8001cc4:	4614      	mov	r4, r2
 8001cc6:	b323      	cbz	r3, 8001d12 <Dmx::StopData(unsigned int, unsigned int)+0x5a>
 8001cc8:	6943      	ldr	r3, [r0, #20]
 8001cca:	bb23      	cbnz	r3, 8001d16 <Dmx::StopData(unsigned int, unsigned int)+0x5e>
 8001ccc:	4d1e      	ldr	r5, [pc, #120]	; (8001d48 <Dmx::StopData(unsigned int, unsigned int)+0x90>)
 8001cce:	882b      	ldrh	r3, [r5, #0]
 8001cd0:	2601      	movs	r6, #1
 8001cd2:	fa06 f202 	lsl.w	r2, r6, r2
 8001cd6:	b29b      	uxth	r3, r3
 8001cd8:	ea23 0302 	bic.w	r3, r3, r2
 8001cdc:	802b      	strh	r3, [r5, #0]
 8001cde:	f3bf 8f5f 	dmb	sy
 8001ce2:	882b      	ldrh	r3, [r5, #0]
 8001ce4:	f104 0208 	add.w	r2, r4, #8
 8001ce8:	b29b      	uxth	r3, r3
 8001cea:	4096      	lsls	r6, r2
 8001cec:	ea36 0303 	bics.w	r3, r6, r3
 8001cf0:	d105      	bne.n	8001cfe <Dmx::StopData(unsigned int, unsigned int)+0x46>
 8001cf2:	2107      	movs	r1, #7
 8001cf4:	4640      	mov	r0, r8
 8001cf6:	f002 f935 	bl	8003f64 <usart_flag_get>
 8001cfa:	2801      	cmp	r0, #1
 8001cfc:	d1f9      	bne.n	8001cf2 <Dmx::StopData(unsigned int, unsigned int)+0x3a>
 8001cfe:	882b      	ldrh	r3, [r5, #0]
 8001d00:	b29b      	uxth	r3, r3
 8001d02:	ea23 0306 	bic.w	r3, r3, r6
 8001d06:	802b      	strh	r3, [r5, #0]
 8001d08:	f3bf 8f4f 	dsb	sy
 8001d0c:	2300      	movs	r3, #0
 8001d0e:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 8001d12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001d16:	f240 3105 	movw	r1, #773	; 0x305
 8001d1a:	4640      	mov	r0, r8
 8001d1c:	f002 f942 	bl	8003fa4 <usart_interrupt_disable>
 8001d20:	4b0a      	ldr	r3, [pc, #40]	; (8001d4c <Dmx::StopData(unsigned int, unsigned int)+0x94>)
 8001d22:	f44f 7204 	mov.w	r2, #528	; 0x210
 8001d26:	fb02 3304 	mla	r3, r2, r4, r3
 8001d2a:	2200      	movs	r2, #0
 8001d2c:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001d30:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001d34:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8001d38:	f023 0302 	bic.w	r3, r3, #2
 8001d3c:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8001d40:	e7e4      	b.n	8001d0c <Dmx::StopData(unsigned int, unsigned int)+0x54>
 8001d42:	bf00      	nop
 8001d44:	2000050c 	andcs	r0, r0, ip, lsl #10
 8001d48:	20000724 	andcs	r0, r0, r4, lsr #14
 8001d4c:	200000f8 	strdcs	r0, [r0], -r8

08001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 8001d50:	b570      	push	{r4, r5, r6, lr}
 8001d52:	461d      	mov	r5, r3
 8001d54:	6943      	ldr	r3, [r0, #20]
 8001d56:	4293      	cmp	r3, r2
 8001d58:	4606      	mov	r6, r0
 8001d5a:	4614      	mov	r4, r2
 8001d5c:	d014      	beq.n	8001d88 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 8001d5e:	6142      	str	r2, [r0, #20]
 8001d60:	4910      	ldr	r1, [pc, #64]	; (8001da4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8001d62:	2200      	movs	r2, #0
 8001d64:	f7ff ffa8 	bl	8001cb8 <Dmx::StopData(unsigned int, unsigned int)>
 8001d68:	b934      	cbnz	r4, 8001d78 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x28>
 8001d6a:	4b0f      	ldr	r3, [pc, #60]	; (8001da8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 8001d6c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001d70:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8001d74:	b94d      	cbnz	r5, 8001d8a <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 8001d76:	bd70      	pop	{r4, r5, r6, pc}
 8001d78:	2c01      	cmp	r4, #1
 8001d7a:	d1fb      	bne.n	8001d74 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 8001d7c:	4b0a      	ldr	r3, [pc, #40]	; (8001da8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>)
 8001d7e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001d82:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8001d86:	e7f5      	b.n	8001d74 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x24>
 8001d88:	b135      	cbz	r5, 8001d98 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x48>
 8001d8a:	4630      	mov	r0, r6
 8001d8c:	4905      	ldr	r1, [pc, #20]	; (8001da4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8001d8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001d92:	2200      	movs	r2, #0
 8001d94:	f7ff beea 	b.w	8001b6c <Dmx::StartData(unsigned int, unsigned int)>
 8001d98:	462a      	mov	r2, r5
 8001d9a:	4902      	ldr	r1, [pc, #8]	; (8001da4 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>)
 8001d9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001da0:	f7ff bf8a 	b.w	8001cb8 <Dmx::StopData(unsigned int, unsigned int)>
 8001da4:	40004800 	andmi	r4, r0, r0, lsl #16
 8001da8:	40010000 	andmi	r0, r1, r0

08001dac <Dmx::Dmx()>:
 8001dac:	225c      	movs	r2, #92	; 0x5c
 8001dae:	230c      	movs	r3, #12
 8001db0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001db4:	e9c0 2300 	strd	r2, r3, [r0]
 8001db8:	f246 13a8 	movw	r3, #25000	; 0x61a8
 8001dbc:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8001dc0:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001dc4:	8203      	strh	r3, [r0, #16]
 8001dc6:	4b5b      	ldr	r3, [pc, #364]	; (8001f34 <Dmx::Dmx()+0x188>)
 8001dc8:	4e5b      	ldr	r6, [pc, #364]	; (8001f38 <Dmx::Dmx()+0x18c>)
 8001dca:	6018      	str	r0, [r3, #0]
 8001dcc:	4b5b      	ldr	r3, [pc, #364]	; (8001f3c <Dmx::Dmx()+0x190>)
 8001dce:	f8df 8190 	ldr.w	r8, [pc, #400]	; 8001f60 <Dmx::Dmx()+0x1b4>
 8001dd2:	2400      	movs	r4, #0
 8001dd4:	b08b      	sub	sp, #44	; 0x2c
 8001dd6:	4605      	mov	r5, r0
 8001dd8:	801c      	strh	r4, [r3, #0]
 8001dda:	2203      	movs	r2, #3
 8001ddc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001de0:	4857      	ldr	r0, [pc, #348]	; (8001f40 <Dmx::Dmx()+0x194>)
 8001de2:	2110      	movs	r1, #16
 8001de4:	f001 fde0 	bl	80039a8 <gpio_init>
 8001de8:	4621      	mov	r1, r4
 8001dea:	4628      	mov	r0, r5
 8001dec:	f7ff fea6 	bl	8001b3c <Dmx::ClearData(unsigned int)>
 8001df0:	4b54      	ldr	r3, [pc, #336]	; (8001f44 <Dmx::Dmx()+0x198>)
 8001df2:	2201      	movs	r2, #1
 8001df4:	4621      	mov	r1, r4
 8001df6:	601c      	str	r4, [r3, #0]
 8001df8:	4628      	mov	r0, r5
 8001dfa:	4623      	mov	r3, r4
 8001dfc:	f7ff ffa8 	bl	8001d50 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8001e00:	4b51      	ldr	r3, [pc, #324]	; (8001f48 <Dmx::Dmx()+0x19c>)
 8001e02:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8001e06:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 8001e0a:	f001 fe65 	bl	8003ad8 <rcu_periph_clock_enable>
 8001e0e:	f240 5001 	movw	r0, #1281	; 0x501
 8001e12:	f001 fe61 	bl	8003ad8 <rcu_periph_clock_enable>
 8001e16:	484d      	ldr	r0, [pc, #308]	; (8001f4c <Dmx::Dmx()+0x1a0>)
 8001e18:	2101      	movs	r1, #1
 8001e1a:	f001 fcc5 	bl	80037a8 <dma_deinit>
 8001e1e:	4b4c      	ldr	r3, [pc, #304]	; (8001f50 <Dmx::Dmx()+0x1a4>)
 8001e20:	484a      	ldr	r0, [pc, #296]	; (8001f4c <Dmx::Dmx()+0x1a0>)
 8001e22:	9406      	str	r4, [sp, #24]
 8001e24:	2701      	movs	r7, #1
 8001e26:	e9cd 3403 	strd	r3, r4, [sp, #12]
 8001e2a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001e2e:	aa03      	add	r2, sp, #12
 8001e30:	9308      	str	r3, [sp, #32]
 8001e32:	4639      	mov	r1, r7
 8001e34:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001e38:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8001e3c:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 8001e40:	f001 fcce 	bl	80037e0 <dma_init>
 8001e44:	4639      	mov	r1, r7
 8001e46:	4841      	ldr	r0, [pc, #260]	; (8001f4c <Dmx::Dmx()+0x1a0>)
 8001e48:	f001 fd04 	bl	8003854 <dma_circulation_disable>
 8001e4c:	4639      	mov	r1, r7
 8001e4e:	483f      	ldr	r0, [pc, #252]	; (8001f4c <Dmx::Dmx()+0x1a0>)
 8001e50:	f001 fd10 	bl	8003874 <dma_memory_to_memory_disable>
 8001e54:	f240 7001 	movw	r0, #1793	; 0x701
 8001e58:	f001 fe3e 	bl	8003ad8 <rcu_periph_clock_enable>
 8001e5c:	4630      	mov	r0, r6
 8001e5e:	f001 feff 	bl	8003c60 <timer_deinit>
 8001e62:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 8001e66:	2377      	movs	r3, #119	; 0x77
 8001e68:	a903      	add	r1, sp, #12
 8001e6a:	4630      	mov	r0, r6
 8001e6c:	e9cd 3403 	strd	r3, r4, [sp, #12]
 8001e70:	f8cd 9014 	str.w	r9, [sp, #20]
 8001e74:	f88d 4018 	strb.w	r4, [sp, #24]
 8001e78:	f001 ff54 	bl	8003d24 <timer_init>
 8001e7c:	4649      	mov	r1, r9
 8001e7e:	4630      	mov	r0, r6
 8001e80:	f001 ff9a 	bl	8003db8 <timer_flag_clear>
 8001e84:	4649      	mov	r1, r9
 8001e86:	4630      	mov	r0, r6
 8001e88:	f001 ff93 	bl	8003db2 <timer_interrupt_flag_clear>
 8001e8c:	4621      	mov	r1, r4
 8001e8e:	4630      	mov	r0, r6
 8001e90:	2210      	movs	r2, #16
 8001e92:	f001 ff94 	bl	8003dbe <timer_channel_output_mode_config>
 8001e96:	4639      	mov	r1, r7
 8001e98:	4630      	mov	r0, r6
 8001e9a:	2210      	movs	r2, #16
 8001e9c:	f001 ff8f 	bl	8003dbe <timer_channel_output_mode_config>
 8001ea0:	4630      	mov	r0, r6
 8001ea2:	2210      	movs	r2, #16
 8001ea4:	2102      	movs	r1, #2
 8001ea6:	f001 ff8a 	bl	8003dbe <timer_channel_output_mode_config>
 8001eaa:	2210      	movs	r2, #16
 8001eac:	2103      	movs	r1, #3
 8001eae:	4630      	mov	r0, r6
 8001eb0:	f001 ff85 	bl	8003dbe <timer_channel_output_mode_config>
 8001eb4:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8001eb8:	f888 431d 	strb.w	r4, [r8, #797]	; 0x31d
 8001ebc:	4630      	mov	r0, r6
 8001ebe:	f8c8 3000 	str.w	r3, [r8]
 8001ec2:	f001 ff6d 	bl	8003da0 <timer_enable>
 8001ec6:	f240 7005 	movw	r0, #1797	; 0x705
 8001eca:	f001 fe05 	bl	8003ad8 <rcu_periph_clock_enable>
 8001ece:	4821      	ldr	r0, [pc, #132]	; (8001f54 <Dmx::Dmx()+0x1a8>)
 8001ed0:	f001 fec6 	bl	8003c60 <timer_deinit>
 8001ed4:	f642 63df 	movw	r3, #11999	; 0x2edf
 8001ed8:	f8ad 300c 	strh.w	r3, [sp, #12]
 8001edc:	a903      	add	r1, sp, #12
 8001ede:	f242 7310 	movw	r3, #10000	; 0x2710
 8001ee2:	481c      	ldr	r0, [pc, #112]	; (8001f54 <Dmx::Dmx()+0x1a8>)
 8001ee4:	9305      	str	r3, [sp, #20]
 8001ee6:	f001 ff1d 	bl	8003d24 <timer_init>
 8001eea:	4649      	mov	r1, r9
 8001eec:	4819      	ldr	r0, [pc, #100]	; (8001f54 <Dmx::Dmx()+0x1a8>)
 8001eee:	f001 ff63 	bl	8003db8 <timer_flag_clear>
 8001ef2:	4649      	mov	r1, r9
 8001ef4:	4817      	ldr	r0, [pc, #92]	; (8001f54 <Dmx::Dmx()+0x1a8>)
 8001ef6:	f001 ff5c 	bl	8003db2 <timer_interrupt_flag_clear>
 8001efa:	4639      	mov	r1, r7
 8001efc:	4815      	ldr	r0, [pc, #84]	; (8001f54 <Dmx::Dmx()+0x1a8>)
 8001efe:	f001 ff54 	bl	8003daa <timer_interrupt_enable>
 8001f02:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8001f06:	f888 4337 	strb.w	r4, [r8, #823]	; 0x337
 8001f0a:	4812      	ldr	r0, [pc, #72]	; (8001f54 <Dmx::Dmx()+0x1a8>)
 8001f0c:	f8c8 3004 	str.w	r3, [r8, #4]
 8001f10:	f001 ff46 	bl	8003da0 <timer_enable>
 8001f14:	2302      	movs	r3, #2
 8001f16:	9300      	str	r3, [sp, #0]
 8001f18:	490f      	ldr	r1, [pc, #60]	; (8001f58 <Dmx::Dmx()+0x1ac>)
 8001f1a:	4810      	ldr	r0, [pc, #64]	; (8001f5c <Dmx::Dmx()+0x1b0>)
 8001f1c:	4623      	mov	r3, r4
 8001f1e:	2208      	movs	r2, #8
 8001f20:	f002 f9f4 	bl	800430c <gd32_uart_begin>
 8001f24:	2380      	movs	r3, #128	; 0x80
 8001f26:	4628      	mov	r0, r5
 8001f28:	f8c8 3004 	str.w	r3, [r8, #4]
 8001f2c:	b00b      	add	sp, #44	; 0x2c
 8001f2e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001f32:	bf00      	nop
 8001f34:	20000728 	andcs	r0, r0, r8, lsr #14
 8001f38:	40000400 	andmi	r0, r0, r0, lsl #8
 8001f3c:	20000724 	andcs	r0, r0, r4, lsr #14
 8001f40:	40010c00 	andmi	r0, r1, r0, lsl #24
 8001f44:	2000050c 	andcs	r0, r0, ip, lsl #10
 8001f48:	200000f8 	strdcs	r0, [r0], -r8
 8001f4c:	40020000 	andmi	r0, r2, r0
 8001f50:	40004804 	andmi	r4, r0, r4, lsl #16
 8001f54:	40001400 	andmi	r1, r0, r0, lsl #8
 8001f58:	0003d090 	muleq	r3, r0, r0
 8001f5c:	40004800 	andmi	r4, r0, r0, lsl #16
 8001f60:	e000e100 	and	lr, r0, r0, lsl #2

08001f64 <Dmx::SetDmxPeriodTime(unsigned int)>:
 8001f64:	4b13      	ldr	r3, [pc, #76]	; (8001fb4 <Dmx::SetDmxPeriodTime(unsigned int)+0x50>)
 8001f66:	b570      	push	{r4, r5, r6, lr}
 8001f68:	4d13      	ldr	r5, [pc, #76]	; (8001fb8 <Dmx::SetDmxPeriodTime(unsigned int)+0x54>)
 8001f6a:	4c14      	ldr	r4, [pc, #80]	; (8001fbc <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 8001f6c:	60c1      	str	r1, [r0, #12]
 8001f6e:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 8001f72:	682a      	ldr	r2, [r5, #0]
 8001f74:	232c      	movs	r3, #44	; 0x2c
 8001f76:	4358      	muls	r0, r3
 8001f78:	6823      	ldr	r3, [r4, #0]
 8001f7a:	4413      	add	r3, r2
 8001f7c:	4403      	add	r3, r0
 8001f7e:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 8001f82:	42b3      	cmp	r3, r6
 8001f84:	d908      	bls.n	8001f98 <Dmx::SetDmxPeriodTime(unsigned int)+0x34>
 8001f86:	2ab0      	cmp	r2, #176	; 0xb0
 8001f88:	4613      	mov	r3, r2
 8001f8a:	bf28      	it	cs
 8001f8c:	23b0      	movcs	r3, #176	; 0xb0
 8001f8e:	220c      	movs	r2, #12
 8001f90:	602b      	str	r3, [r5, #0]
 8001f92:	4413      	add	r3, r2
 8001f94:	6022      	str	r2, [r4, #0]
 8001f96:	4403      	add	r3, r0
 8001f98:	b109      	cbz	r1, 8001f9e <Dmx::SetDmxPeriodTime(unsigned int)+0x3a>
 8001f9a:	428b      	cmp	r3, r1
 8001f9c:	d906      	bls.n	8001fac <Dmx::SetDmxPeriodTime(unsigned int)+0x48>
 8001f9e:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 8001fa2:	f240 43b4 	movw	r3, #1204	; 0x4b4
 8001fa6:	4299      	cmp	r1, r3
 8001fa8:	bf38      	it	cc
 8001faa:	4619      	movcc	r1, r3
 8001fac:	4b04      	ldr	r3, [pc, #16]	; (8001fc0 <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 8001fae:	6019      	str	r1, [r3, #0]
 8001fb0:	bd70      	pop	{r4, r5, r6, pc}
 8001fb2:	bf00      	nop
 8001fb4:	20000308 	andcs	r0, r0, r8, lsl #6
 8001fb8:	20000010 	andcs	r0, r0, r0, lsl r0
 8001fbc:	2000000c 	andcs	r0, r0, ip
 8001fc0:	20000008 	andcs	r0, r0, r8

08001fc4 <Dmx::SetDmxBreakTime(unsigned int)>:
 8001fc4:	295c      	cmp	r1, #92	; 0x5c
 8001fc6:	4b03      	ldr	r3, [pc, #12]	; (8001fd4 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 8001fc8:	bf38      	it	cc
 8001fca:	215c      	movcc	r1, #92	; 0x5c
 8001fcc:	6019      	str	r1, [r3, #0]
 8001fce:	68c1      	ldr	r1, [r0, #12]
 8001fd0:	f7ff bfc8 	b.w	8001f64 <Dmx::SetDmxPeriodTime(unsigned int)>
 8001fd4:	20000010 	andcs	r0, r0, r0, lsl r0

08001fd8 <Dmx::SetDmxMabTime(unsigned int)>:
 8001fd8:	290c      	cmp	r1, #12
 8001fda:	4b03      	ldr	r3, [pc, #12]	; (8001fe8 <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 8001fdc:	bf38      	it	cc
 8001fde:	210c      	movcc	r1, #12
 8001fe0:	6019      	str	r1, [r3, #0]
 8001fe2:	68c1      	ldr	r1, [r0, #12]
 8001fe4:	f7ff bfbe 	b.w	8001f64 <Dmx::SetDmxPeriodTime(unsigned int)>
 8001fe8:	2000000c 	andcs	r0, r0, ip

08001fec <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)>:
 8001fec:	b4f0      	push	{r4, r5, r6, r7}
 8001fee:	8a04      	ldrh	r4, [r0, #16]
 8001ff0:	4d11      	ldr	r5, [pc, #68]	; (8002038 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 8001ff2:	f892 f000 	pld	[r2]
 8001ff6:	42a3      	cmp	r3, r4
 8001ff8:	bf28      	it	cs
 8001ffa:	4623      	movcs	r3, r4
 8001ffc:	f44f 7401 	mov.w	r4, #516	; 0x204
 8002000:	434c      	muls	r4, r1
 8002002:	192e      	adds	r6, r5, r4
 8002004:	1c5f      	adds	r7, r3, #1
 8002006:	3c01      	subs	r4, #1
 8002008:	442c      	add	r4, r5
 800200a:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 800200e:	18d5      	adds	r5, r2, r3
 8002010:	4295      	cmp	r5, r2
 8002012:	d109      	bne.n	8002028 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x3c>
 8002014:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8002018:	698a      	ldr	r2, [r1, #24]
 800201a:	429a      	cmp	r2, r3
 800201c:	d009      	beq.n	8002032 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x46>
 800201e:	618b      	str	r3, [r1, #24]
 8002020:	bcf0      	pop	{r4, r5, r6, r7}
 8002022:	68c1      	ldr	r1, [r0, #12]
 8002024:	f7ff bf9e 	b.w	8001f64 <Dmx::SetDmxPeriodTime(unsigned int)>
 8002028:	f812 6b01 	ldrb.w	r6, [r2], #1
 800202c:	f804 6f01 	strb.w	r6, [r4, #1]!
 8002030:	e7ee      	b.n	8002010 <Dmx::SetSendData(unsigned int, unsigned char const*, unsigned int)+0x24>
 8002032:	bcf0      	pop	{r4, r5, r6, r7}
 8002034:	4770      	bx	lr
 8002036:	bf00      	nop
 8002038:	20000308 	andcs	r0, r0, r8, lsl #6

0800203c <Dmx::GetDmxAvailable(unsigned int)>:
 800203c:	4b08      	ldr	r3, [pc, #32]	; (8002060 <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 800203e:	f44f 7204 	mov.w	r2, #528	; 0x210
 8002042:	fb02 3101 	mla	r1, r2, r1, r3
 8002046:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 800204a:	f413 4000 	ands.w	r0, r3, #32768	; 0x8000
 800204e:	bf1f      	itttt	ne
 8002050:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 8002054:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 8002058:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 800205c:	4608      	movne	r0, r1
 800205e:	4770      	bx	lr
 8002060:	200000f8 	strdcs	r0, [r0], -r8

08002064 <Dmx::GetDmxChanged(unsigned int)>:
 8002064:	b570      	push	{r4, r5, r6, lr}
 8002066:	460c      	mov	r4, r1
 8002068:	f7ff ffe8 	bl	800203c <Dmx::GetDmxAvailable(unsigned int)>
 800206c:	b1a0      	cbz	r0, 8002098 <Dmx::GetDmxChanged(unsigned int)+0x34>
 800206e:	490b      	ldr	r1, [pc, #44]	; (800209c <Dmx::GetDmxChanged(unsigned int)+0x38>)
 8002070:	f240 2202 	movw	r2, #514	; 0x202
 8002074:	fb02 1104 	mla	r1, r2, r4, r1
 8002078:	1e8b      	subs	r3, r1, #2
 800207a:	1e84      	subs	r4, r0, #2
 800207c:	f501 7100 	add.w	r1, r1, #512	; 0x200
 8002080:	2200      	movs	r2, #0
 8002082:	f833 6f02 	ldrh.w	r6, [r3, #2]!
 8002086:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800208a:	42ae      	cmp	r6, r5
 800208c:	bf1c      	itt	ne
 800208e:	801d      	strhne	r5, [r3, #0]
 8002090:	2201      	movne	r2, #1
 8002092:	428b      	cmp	r3, r1
 8002094:	d1f5      	bne.n	8002082 <Dmx::GetDmxChanged(unsigned int)+0x1e>
 8002096:	b902      	cbnz	r2, 800209a <Dmx::GetDmxChanged(unsigned int)+0x36>
 8002098:	2000      	movs	r0, #0
 800209a:	bd70      	pop	{r4, r5, r6, pc}
 800209c:	20000510 	andcs	r0, r0, r0, lsl r5

080020a0 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>:
 80020a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80020a2:	4e20      	ldr	r6, [pc, #128]	; (8002124 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x84>)
 80020a4:	4614      	mov	r4, r2
 80020a6:	461d      	mov	r5, r3
 80020a8:	2106      	movs	r1, #6
 80020aa:	4630      	mov	r0, r6
 80020ac:	f001 ff5a 	bl	8003f64 <usart_flag_get>
 80020b0:	2800      	cmp	r0, #0
 80020b2:	d0f9      	beq.n	80020a8 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x8>
 80020b4:	4e1c      	ldr	r6, [pc, #112]	; (8002128 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x88>)
 80020b6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80020ba:	2203      	movs	r2, #3
 80020bc:	4630      	mov	r0, r6
 80020be:	f44f 6780 	mov.w	r7, #1024	; 0x400
 80020c2:	2110      	movs	r1, #16
 80020c4:	f001 fc70 	bl	80039a8 <gpio_init>
 80020c8:	6177      	str	r7, [r6, #20]
 80020ca:	2100      	movs	r1, #0
 80020cc:	20b0      	movs	r0, #176	; 0xb0
 80020ce:	f002 fa0b 	bl	80044e8 <udelay(unsigned int, unsigned int)>
 80020d2:	463b      	mov	r3, r7
 80020d4:	4630      	mov	r0, r6
 80020d6:	2203      	movs	r2, #3
 80020d8:	2118      	movs	r1, #24
 80020da:	f001 fc65 	bl	80039a8 <gpio_init>
 80020de:	2100      	movs	r1, #0
 80020e0:	200c      	movs	r0, #12
 80020e2:	f002 fa01 	bl	80044e8 <udelay(unsigned int, unsigned int)>
 80020e6:	4425      	add	r5, r4
 80020e8:	f5a6 4648 	sub.w	r6, r6, #51200	; 0xc800
 80020ec:	f04f 2740 	mov.w	r7, #1073758208	; 0x40004000
 80020f0:	42ac      	cmp	r4, r5
 80020f2:	d109      	bne.n	8002108 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x68>
 80020f4:	4c0b      	ldr	r4, [pc, #44]	; (8002124 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x84>)
 80020f6:	f04f 2540 	mov.w	r5, #1073758208	; 0x40004000
 80020fa:	2106      	movs	r1, #6
 80020fc:	4620      	mov	r0, r4
 80020fe:	f001 ff31 	bl	8003f64 <usart_flag_get>
 8002102:	2801      	cmp	r0, #1
 8002104:	d10b      	bne.n	800211e <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x7e>
 8002106:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002108:	2107      	movs	r1, #7
 800210a:	4630      	mov	r0, r6
 800210c:	f001 ff2a 	bl	8003f64 <usart_flag_get>
 8002110:	2800      	cmp	r0, #0
 8002112:	d0f9      	beq.n	8002108 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x68>
 8002114:	f814 3b01 	ldrb.w	r3, [r4], #1
 8002118:	f8c7 3804 	str.w	r3, [r7, #2052]	; 0x804
 800211c:	e7e8      	b.n	80020f0 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x50>
 800211e:	f8d5 3804 	ldr.w	r3, [r5, #2052]	; 0x804
 8002122:	e7ea      	b.n	80020fa <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x5a>
 8002124:	40004800 	andmi	r4, r0, r0, lsl #16
 8002128:	40011000 	andmi	r1, r1, r0

0800212c <Dmx::RdmReceive(unsigned int)>:
 800212c:	4b07      	ldr	r3, [pc, #28]	; (800214c <Dmx::RdmReceive(unsigned int)+0x20>)
 800212e:	f44f 7204 	mov.w	r2, #528	; 0x210
 8002132:	fb02 3101 	mla	r1, r2, r1, r3
 8002136:	f8b1 0204 	ldrh.w	r0, [r1, #516]	; 0x204
 800213a:	f410 4080 	ands.w	r0, r0, #16384	; 0x4000
 800213e:	bf1e      	ittt	ne
 8002140:	2300      	movne	r3, #0
 8002142:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 8002146:	4608      	movne	r0, r1
 8002148:	4770      	bx	lr
 800214a:	bf00      	nop
 800214c:	200000f8 	strdcs	r0, [r0], -r8

08002150 <usb_read_byte>:
 8002150:	b508      	push	{r3, lr}
 8002152:	f000 f8e7 	bl	8002324 <FT245RL_data_available>
 8002156:	2800      	cmp	r0, #0
 8002158:	d0fb      	beq.n	8002152 <usb_read_byte+0x2>
 800215a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800215e:	f000 b8a7 	b.w	80022b0 <FT245RL_read_data>

08002162 <usb_send_byte>:
 8002162:	b510      	push	{r4, lr}
 8002164:	4604      	mov	r4, r0
 8002166:	f000 f8e9 	bl	800233c <FT245RL_can_write>
 800216a:	2800      	cmp	r0, #0
 800216c:	d0fb      	beq.n	8002166 <usb_send_byte+0x4>
 800216e:	4620      	mov	r0, r4
 8002170:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002174:	f000 b856 	b.w	8002224 <FT245RL_write_data>

08002178 <data_gpio_fsel_input>:
 8002178:	b510      	push	{r4, lr}
 800217a:	4807      	ldr	r0, [pc, #28]	; (8002198 <data_gpio_fsel_input+0x20>)
 800217c:	f24c 0340 	movw	r3, #49216	; 0xc040
 8002180:	2203      	movs	r2, #3
 8002182:	2104      	movs	r1, #4
 8002184:	f001 fc10 	bl	80039a8 <gpio_init>
 8002188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800218c:	4803      	ldr	r0, [pc, #12]	; (800219c <data_gpio_fsel_input+0x24>)
 800218e:	23f8      	movs	r3, #248	; 0xf8
 8002190:	2203      	movs	r2, #3
 8002192:	2104      	movs	r1, #4
 8002194:	f001 bc08 	b.w	80039a8 <gpio_init>
 8002198:	40010800 	andmi	r0, r1, r0, lsl #16
 800219c:	40010c00 	andmi	r0, r1, r0, lsl #24

080021a0 <FT245RL_init>:
 80021a0:	b508      	push	{r3, lr}
 80021a2:	f240 6002 	movw	r0, #1538	; 0x602
 80021a6:	f001 fc97 	bl	8003ad8 <rcu_periph_clock_enable>
 80021aa:	f240 6003 	movw	r0, #1539	; 0x603
 80021ae:	f001 fc93 	bl	8003ad8 <rcu_periph_clock_enable>
 80021b2:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80021b6:	f001 fc8f 	bl	8003ad8 <rcu_periph_clock_enable>
 80021ba:	4816      	ldr	r0, [pc, #88]	; (8002214 <FT245RL_init+0x74>)
 80021bc:	2101      	movs	r1, #1
 80021be:	f001 fc53 	bl	8003a68 <gpio_pin_remap_config>
 80021c2:	f7ff ffd9 	bl	8002178 <data_gpio_fsel_input>
 80021c6:	4814      	ldr	r0, [pc, #80]	; (8002218 <FT245RL_init+0x78>)
 80021c8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80021cc:	2203      	movs	r2, #3
 80021ce:	2110      	movs	r1, #16
 80021d0:	f001 fbea 	bl	80039a8 <gpio_init>
 80021d4:	4810      	ldr	r0, [pc, #64]	; (8002218 <FT245RL_init+0x78>)
 80021d6:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80021da:	2203      	movs	r2, #3
 80021dc:	2110      	movs	r1, #16
 80021de:	f001 fbe3 	bl	80039a8 <gpio_init>
 80021e2:	480e      	ldr	r0, [pc, #56]	; (800221c <FT245RL_init+0x7c>)
 80021e4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80021e8:	2203      	movs	r2, #3
 80021ea:	2148      	movs	r1, #72	; 0x48
 80021ec:	f001 fbdc 	bl	80039a8 <gpio_init>
 80021f0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80021f4:	2203      	movs	r2, #3
 80021f6:	4809      	ldr	r0, [pc, #36]	; (800221c <FT245RL_init+0x7c>)
 80021f8:	2148      	movs	r1, #72	; 0x48
 80021fa:	f001 fbd5 	bl	80039a8 <gpio_init>
 80021fe:	4b08      	ldr	r3, [pc, #32]	; (8002220 <FT245RL_init+0x80>)
 8002200:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8002204:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8002208:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800220c:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8002210:	bd08      	pop	{r3, pc}
 8002212:	bf00      	nop
 8002214:	00300400 	eorseq	r0, r0, r0, lsl #8
 8002218:	40010c00 	andmi	r0, r1, r0, lsl #24
 800221c:	40010800 	andmi	r0, r1, r0, lsl #16
 8002220:	40010000 	andmi	r0, r1, r0

08002224 <FT245RL_write_data>:
 8002224:	b510      	push	{r4, lr}
 8002226:	f24c 0340 	movw	r3, #49216	; 0xc040
 800222a:	4604      	mov	r4, r0
 800222c:	2203      	movs	r2, #3
 800222e:	481d      	ldr	r0, [pc, #116]	; (80022a4 <FT245RL_write_data+0x80>)
 8002230:	2110      	movs	r1, #16
 8002232:	f001 fbb9 	bl	80039a8 <gpio_init>
 8002236:	481c      	ldr	r0, [pc, #112]	; (80022a8 <FT245RL_write_data+0x84>)
 8002238:	23f8      	movs	r3, #248	; 0xf8
 800223a:	2203      	movs	r2, #3
 800223c:	2110      	movs	r1, #16
 800223e:	f001 fbb3 	bl	80039a8 <gpio_init>
 8002242:	4a1a      	ldr	r2, [pc, #104]	; (80022ac <FT245RL_write_data+0x88>)
 8002244:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8002248:	f8c2 1c10 	str.w	r1, [r2, #3088]	; 0xc10
 800224c:	bf00      	nop
 800224e:	bf00      	nop
 8002250:	02e3      	lsls	r3, r4, #11
 8002252:	0120      	lsls	r0, r4, #4
 8002254:	f000 0040 	and.w	r0, r0, #64	; 0x40
 8002258:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800225c:	4303      	orrs	r3, r0
 800225e:	f8c2 3810 	str.w	r3, [r2, #2064]	; 0x810
 8002262:	f483 4340 	eor.w	r3, r3, #49152	; 0xc000
 8002266:	f083 0340 	eor.w	r3, r3, #64	; 0x40
 800226a:	f8c2 3814 	str.w	r3, [r2, #2068]	; 0x814
 800226e:	01e0      	lsls	r0, r4, #7
 8002270:	0163      	lsls	r3, r4, #5
 8002272:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002276:	b2c0      	uxtb	r0, r0
 8002278:	4318      	orrs	r0, r3
 800227a:	1063      	asrs	r3, r4, #1
 800227c:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8002280:	f344 1403 	sbfx	r4, r4, #4, #4
 8002284:	4303      	orrs	r3, r0
 8002286:	f004 0408 	and.w	r4, r4, #8
 800228a:	431c      	orrs	r4, r3
 800228c:	f8c2 4c10 	str.w	r4, [r2, #3088]	; 0xc10
 8002290:	f084 04f8 	eor.w	r4, r4, #248	; 0xf8
 8002294:	f8c2 4c14 	str.w	r4, [r2, #3092]	; 0xc14
 8002298:	bf00      	nop
 800229a:	bf00      	nop
 800229c:	f8c2 1c14 	str.w	r1, [r2, #3092]	; 0xc14
 80022a0:	bd10      	pop	{r4, pc}
 80022a2:	bf00      	nop
 80022a4:	40010800 	andmi	r0, r1, r0, lsl #16
 80022a8:	40010c00 	andmi	r0, r1, r0, lsl #24
 80022ac:	40010000 	andmi	r0, r1, r0

080022b0 <FT245RL_read_data>:
 80022b0:	b510      	push	{r4, lr}
 80022b2:	4c1a      	ldr	r4, [pc, #104]	; (800231c <FT245RL_read_data+0x6c>)
 80022b4:	f7ff ff60 	bl	8002178 <data_gpio_fsel_input>
 80022b8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80022bc:	f8c4 3c14 	str.w	r3, [r4, #3092]	; 0xc14
 80022c0:	2318      	movs	r3, #24
 80022c2:	bf00      	nop
 80022c4:	3b01      	subs	r3, #1
 80022c6:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 80022ca:	d1fa      	bne.n	80022c2 <FT245RL_read_data+0x12>
 80022cc:	f8d4 2808 	ldr.w	r2, [r4, #2056]	; 0x808
 80022d0:	f8d4 1c08 	ldr.w	r1, [r4, #3080]	; 0xc08
 80022d4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80022d8:	f8c4 3c10 	str.w	r3, [r4, #3088]	; 0xc10
 80022dc:	f3c2 130b 	ubfx	r3, r2, #4, #12
 80022e0:	f3c2 24c4 	ubfx	r4, r2, #11, #5
 80022e4:	f004 0408 	and.w	r4, r4, #8
 80022e8:	f003 0304 	and.w	r3, r3, #4
 80022ec:	f342 22c4 	sbfx	r2, r2, #11, #5
 80022f0:	4323      	orrs	r3, r4
 80022f2:	f002 0210 	and.w	r2, r2, #16
 80022f6:	4313      	orrs	r3, r2
 80022f8:	f3c1 12c0 	ubfx	r2, r1, #7, #1
 80022fc:	4313      	orrs	r3, r2
 80022fe:	f3c1 124a 	ubfx	r2, r1, #5, #11
 8002302:	0048      	lsls	r0, r1, #1
 8002304:	f002 0202 	and.w	r2, r2, #2
 8002308:	4313      	orrs	r3, r2
 800230a:	f000 0060 	and.w	r0, r0, #96	; 0x60
 800230e:	4318      	orrs	r0, r3
 8002310:	4b03      	ldr	r3, [pc, #12]	; (8002320 <FT245RL_read_data+0x70>)
 8002312:	0109      	lsls	r1, r1, #4
 8002314:	400b      	ands	r3, r1
 8002316:	4318      	orrs	r0, r3
 8002318:	b2c0      	uxtb	r0, r0
 800231a:	bd10      	pop	{r4, pc}
 800231c:	40010000 	andmi	r0, r1, r0
 8002320:	000fff80 	andeq	pc, pc, r0, lsl #31

08002324 <FT245RL_data_available>:
 8002324:	b508      	push	{r3, lr}
 8002326:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800232a:	4803      	ldr	r0, [pc, #12]	; (8002338 <FT245RL_data_available+0x14>)
 800232c:	f001 fb96 	bl	8003a5c <gpio_input_bit_get>
 8002330:	fab0 f080 	clz	r0, r0
 8002334:	0940      	lsrs	r0, r0, #5
 8002336:	bd08      	pop	{r3, pc}
 8002338:	40010800 	andmi	r0, r1, r0, lsl #16

0800233c <FT245RL_can_write>:
 800233c:	b508      	push	{r3, lr}
 800233e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002342:	4803      	ldr	r0, [pc, #12]	; (8002350 <FT245RL_can_write+0x14>)
 8002344:	f001 fb8a 	bl	8003a5c <gpio_input_bit_get>
 8002348:	fab0 f080 	clz	r0, r0
 800234c:	0940      	lsrs	r0, r0, #5
 800234e:	bd08      	pop	{r3, pc}
 8002350:	40010800 	andmi	r0, r1, r0, lsl #16

08002354 <RDMDevice::RDMDevice()>:
 8002354:	4a33      	ldr	r2, [pc, #204]	; (8002424 <RDMDevice::RDMDevice()+0xd0>)
 8002356:	2300      	movs	r3, #0
 8002358:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800235a:	4604      	mov	r4, r0
 800235c:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 8002360:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
 8002364:	f8a0 3072 	strh.w	r3, [r0, #114]	; 0x72
 8002368:	6743      	str	r3, [r0, #116]	; 0x74
 800236a:	4611      	mov	r1, r2
 800236c:	4613      	mov	r3, r2
 800236e:	3201      	adds	r2, #1
 8002370:	7818      	ldrb	r0, [r3, #0]
 8002372:	2800      	cmp	r0, #0
 8002374:	d1fa      	bne.n	800236c <RDMDevice::RDMDevice()+0x18>
 8002376:	1a5b      	subs	r3, r3, r1
 8002378:	2b20      	cmp	r3, #32
 800237a:	bf28      	it	cs
 800237c:	2320      	movcs	r3, #32
 800237e:	f104 052b 	add.w	r5, r4, #43	; 0x2b
 8002382:	4828      	ldr	r0, [pc, #160]	; (8002424 <RDMDevice::RDMDevice()+0xd0>)
 8002384:	4629      	mov	r1, r5
 8002386:	461a      	mov	r2, r3
 8002388:	3a01      	subs	r2, #1
 800238a:	d23b      	bcs.n	8002404 <RDMDevice::RDMDevice()+0xb0>
 800238c:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 8002390:	4b25      	ldr	r3, [pc, #148]	; (8002428 <RDMDevice::RDMDevice()+0xd4>)
 8002392:	781a      	ldrb	r2, [r3, #0]
 8002394:	7022      	strb	r2, [r4, #0]
 8002396:	785b      	ldrb	r3, [r3, #1]
 8002398:	7063      	strb	r3, [r4, #1]
 800239a:	4b24      	ldr	r3, [pc, #144]	; (800242c <RDMDevice::RDMDevice()+0xd8>)
 800239c:	4669      	mov	r1, sp
 800239e:	6818      	ldr	r0, [r3, #0]
 80023a0:	f000 fc58 	bl	8002c54 <Network::MacAddressCopyTo(unsigned char*)>
 80023a4:	f89d 3002 	ldrb.w	r3, [sp, #2]
 80023a8:	70a3      	strb	r3, [r4, #2]
 80023aa:	7263      	strb	r3, [r4, #9]
 80023ac:	4b20      	ldr	r3, [pc, #128]	; (8002430 <RDMDevice::RDMDevice()+0xdc>)
 80023ae:	f89d 2003 	ldrb.w	r2, [sp, #3]
 80023b2:	f89d 1004 	ldrb.w	r1, [sp, #4]
 80023b6:	f89d 0005 	ldrb.w	r0, [sp, #5]
 80023ba:	70e2      	strb	r2, [r4, #3]
 80023bc:	7222      	strb	r2, [r4, #8]
 80023be:	7121      	strb	r1, [r4, #4]
 80023c0:	7160      	strb	r0, [r4, #5]
 80023c2:	71a0      	strb	r0, [r4, #6]
 80023c4:	71e1      	strb	r1, [r4, #7]
 80023c6:	461a      	mov	r2, r3
 80023c8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80023cc:	2900      	cmp	r1, #0
 80023ce:	d1fb      	bne.n	80023c8 <RDMDevice::RDMDevice()+0x74>
 80023d0:	1a9b      	subs	r3, r3, r2
 80023d2:	2b20      	cmp	r3, #32
 80023d4:	bf28      	it	cs
 80023d6:	2320      	movcs	r3, #32
 80023d8:	4915      	ldr	r1, [pc, #84]	; (8002430 <RDMDevice::RDMDevice()+0xdc>)
 80023da:	461a      	mov	r2, r3
 80023dc:	3a01      	subs	r2, #1
 80023de:	d216      	bcs.n	800240e <RDMDevice::RDMDevice()+0xba>
 80023e0:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 80023e4:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 80023e8:	64e3      	str	r3, [r4, #76]	; 0x4c
 80023ea:	4a12      	ldr	r2, [pc, #72]	; (8002434 <RDMDevice::RDMDevice()+0xe0>)
 80023ec:	2314      	movs	r3, #20
 80023ee:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
 80023f2:	f104 0165 	add.w	r1, r4, #101	; 0x65
 80023f6:	f104 0351 	add.w	r3, r4, #81	; 0x51
 80023fa:	4299      	cmp	r1, r3
 80023fc:	d10c      	bne.n	8002418 <RDMDevice::RDMDevice()+0xc4>
 80023fe:	4620      	mov	r0, r4
 8002400:	b002      	add	sp, #8
 8002402:	bd70      	pop	{r4, r5, r6, pc}
 8002404:	f810 6b01 	ldrb.w	r6, [r0], #1
 8002408:	f801 6b01 	strb.w	r6, [r1], #1
 800240c:	e7bc      	b.n	8002388 <RDMDevice::RDMDevice()+0x34>
 800240e:	f811 0b01 	ldrb.w	r0, [r1], #1
 8002412:	f805 0b01 	strb.w	r0, [r5], #1
 8002416:	e7e1      	b.n	80023dc <RDMDevice::RDMDevice()+0x88>
 8002418:	f812 0b01 	ldrb.w	r0, [r2], #1
 800241c:	f803 0b01 	strb.w	r0, [r3], #1
 8002420:	e7eb      	b.n	80023fa <RDMDevice::RDMDevice()+0xa6>
 8002422:	bf00      	nop
 8002424:	08004c0c 	stmdaeq	r0, {r2, r3, sl, fp, lr}
 8002428:	08004c0a 	stmdaeq	r0, {r1, r3, sl, fp, lr}
 800242c:	20001770 	andcs	r1, r0, r0, ror r7
 8002430:	08004c28 	stmdaeq	r0, {r3, r5, sl, fp, lr}
 8002434:	08004c3c 	stmdaeq	r0, {r2, r3, r4, r5, sl, fp, lr}

08002438 <memcpy.isra.0>:
 8002438:	f000 bfdc 	b.w	80033f4 <memcpy>

0800243c <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800243c:	b510      	push	{r4, lr}
 800243e:	6001      	str	r1, [r0, #0]
 8002440:	2100      	movs	r1, #0
 8002442:	4604      	mov	r4, r0
 8002444:	6041      	str	r1, [r0, #4]
 8002446:	2220      	movs	r2, #32
 8002448:	3008      	adds	r0, #8
 800244a:	f000 ffde 	bl	800340a <memset>
 800244e:	4b03      	ldr	r3, [pc, #12]	; (800245c <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 8002450:	62a3      	str	r3, [r4, #40]	; 0x28
 8002452:	237f      	movs	r3, #127	; 0x7f
 8002454:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8002458:	4620      	mov	r0, r4
 800245a:	bd10      	pop	{r4, pc}
 800245c:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

08002460 <RDMDeviceParams::Load()>:
 8002460:	4601      	mov	r1, r0
 8002462:	6800      	ldr	r0, [r0, #0]
 8002464:	b130      	cbz	r0, 8002474 <RDMDeviceParams::Load()+0x14>
 8002466:	b508      	push	{r3, lr}
 8002468:	6803      	ldr	r3, [r0, #0]
 800246a:	3104      	adds	r1, #4
 800246c:	68db      	ldr	r3, [r3, #12]
 800246e:	4798      	blx	r3
 8002470:	2001      	movs	r0, #1
 8002472:	bd08      	pop	{r3, pc}
 8002474:	4770      	bx	lr

08002476 <RDMDeviceParams::Set(RDMDevice*)>:
 8002476:	6843      	ldr	r3, [r0, #4]
 8002478:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800247c:	460c      	mov	r4, r1
 800247e:	07d9      	lsls	r1, r3, #31
 8002480:	4605      	mov	r5, r0
 8002482:	d519      	bpl.n	80024b8 <RDMDeviceParams::Set(RDMDevice*)+0x42>
 8002484:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 8002488:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800248c:	2e20      	cmp	r6, #32
 800248e:	f100 0108 	add.w	r1, r0, #8
 8002492:	bf28      	it	cs
 8002494:	2620      	movcs	r6, #32
 8002496:	b1f3      	cbz	r3, 80024d6 <RDMDeviceParams::Set(RDMDevice*)+0x60>
 8002498:	f104 070a 	add.w	r7, r4, #10
 800249c:	4638      	mov	r0, r7
 800249e:	4632      	mov	r2, r6
 80024a0:	f7ff ffca 	bl	8002438 <memcpy.isra.0>
 80024a4:	6f60      	ldr	r0, [r4, #116]	; 0x74
 80024a6:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 80024aa:	b128      	cbz	r0, 80024b8 <RDMDeviceParams::Set(RDMDevice*)+0x42>
 80024ac:	6802      	ldr	r2, [r0, #0]
 80024ae:	4639      	mov	r1, r7
 80024b0:	f8d2 8008 	ldr.w	r8, [r2, #8]
 80024b4:	4632      	mov	r2, r6
 80024b6:	47c0      	blx	r8
 80024b8:	686b      	ldr	r3, [r5, #4]
 80024ba:	079a      	lsls	r2, r3, #30
 80024bc:	bf44      	itt	mi
 80024be:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 80024c2:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 80024c6:	075b      	lsls	r3, r3, #29
 80024c8:	bf44      	itt	mi
 80024ca:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 80024ce:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 80024d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80024d6:	4632      	mov	r2, r6
 80024d8:	f104 0051 	add.w	r0, r4, #81	; 0x51
 80024dc:	f7ff ffac 	bl	8002438 <memcpy.isra.0>
 80024e0:	f884 6071 	strb.w	r6, [r4, #113]	; 0x71
 80024e4:	e7e8      	b.n	80024b8 <RDMDeviceParams::Set(RDMDevice*)+0x42>

080024e6 <RDMDeviceParams::Dump()>:
 80024e6:	4770      	bx	lr

080024e8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 80024e8:	b510      	push	{r4, lr}
 80024ea:	4a05      	ldr	r2, [pc, #20]	; (8002500 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 80024ec:	2300      	movs	r3, #0
 80024ee:	2020      	movs	r0, #32
 80024f0:	428b      	cmp	r3, r1
 80024f2:	d100      	bne.n	80024f6 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 80024f4:	bd10      	pop	{r4, pc}
 80024f6:	f852 4b04 	ldr.w	r4, [r2], #4
 80024fa:	3301      	adds	r3, #1
 80024fc:	4420      	add	r0, r4
 80024fe:	e7f7      	b.n	80024f0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 8002500:	08004c54 	stmdaeq	r0, {r2, r4, r6, sl, fp, lr}

08002504 <SpiFlashStore::Init()>:
 8002504:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002508:	f8df 8128 	ldr.w	r8, [pc, #296]	; 8002634 <SpiFlashStore::Init()+0x130>
 800250c:	b085      	sub	sp, #20
 800250e:	4607      	mov	r7, r0
 8002510:	f8d8 0000 	ldr.w	r0, [r8]
 8002514:	f000 fa36 	bl	8002984 <FlashRom::GetSectorSize() const>
 8002518:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800251c:	4605      	mov	r5, r0
 800251e:	d17e      	bne.n	800261e <SpiFlashStore::Init()+0x11a>
 8002520:	f8d8 0000 	ldr.w	r0, [r8]
 8002524:	f000 fa26 	bl	8002974 <FlashRom::GetSize() const>
 8002528:	4b3e      	ldr	r3, [pc, #248]	; (8002624 <SpiFlashStore::Init()+0x120>)
 800252a:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800252e:	f3c1 060b 	ubfx	r6, r1, #0, #12
 8002532:	6019      	str	r1, [r3, #0]
 8002534:	2e00      	cmp	r6, #0
 8002536:	d172      	bne.n	800261e <SpiFlashStore::Init()+0x11a>
 8002538:	4c3b      	ldr	r4, [pc, #236]	; (8002628 <SpiFlashStore::Init()+0x124>)
 800253a:	ab03      	add	r3, sp, #12
 800253c:	9300      	str	r3, [sp, #0]
 800253e:	462a      	mov	r2, r5
 8002540:	4623      	mov	r3, r4
 8002542:	f8d8 0000 	ldr.w	r0, [r8]
 8002546:	f000 fa20 	bl	800298a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800254a:	7823      	ldrb	r3, [r4, #0]
 800254c:	2b41      	cmp	r3, #65	; 0x41
 800254e:	bf1c      	itt	ne
 8002550:	2341      	movne	r3, #65	; 0x41
 8002552:	7023      	strbne	r3, [r4, #0]
 8002554:	7863      	ldrb	r3, [r4, #1]
 8002556:	bf14      	ite	ne
 8002558:	4635      	movne	r5, r6
 800255a:	2501      	moveq	r5, #1
 800255c:	2b76      	cmp	r3, #118	; 0x76
 800255e:	bf1c      	itt	ne
 8002560:	2376      	movne	r3, #118	; 0x76
 8002562:	7063      	strbne	r3, [r4, #1]
 8002564:	78a3      	ldrb	r3, [r4, #2]
 8002566:	bf18      	it	ne
 8002568:	2500      	movne	r5, #0
 800256a:	2b56      	cmp	r3, #86	; 0x56
 800256c:	bf1c      	itt	ne
 800256e:	2356      	movne	r3, #86	; 0x56
 8002570:	70a3      	strbne	r3, [r4, #2]
 8002572:	78e3      	ldrb	r3, [r4, #3]
 8002574:	bf18      	it	ne
 8002576:	2500      	movne	r5, #0
 8002578:	2b10      	cmp	r3, #16
 800257a:	d023      	beq.n	80025c4 <SpiFlashStore::Init()+0xc0>
 800257c:	2310      	movs	r3, #16
 800257e:	70e3      	strb	r3, [r4, #3]
 8002580:	4b2a      	ldr	r3, [pc, #168]	; (800262c <SpiFlashStore::Init()+0x128>)
 8002582:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 8002638 <SpiFlashStore::Init()+0x134>
 8002586:	2201      	movs	r2, #1
 8002588:	701a      	strb	r2, [r3, #0]
 800258a:	2500      	movs	r5, #0
 800258c:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8002590:	4631      	mov	r1, r6
 8002592:	4638      	mov	r0, r7
 8002594:	f7ff ffa8 	bl	80024e8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8002598:	1821      	adds	r1, r4, r0
 800259a:	5425      	strb	r5, [r4, r0]
 800259c:	704d      	strb	r5, [r1, #1]
 800259e:	708d      	strb	r5, [r1, #2]
 80025a0:	70cd      	strb	r5, [r1, #3]
 80025a2:	f858 1b04 	ldr.w	r1, [r8], #4
 80025a6:	4603      	mov	r3, r0
 80025a8:	1d02      	adds	r2, r0, #4
 80025aa:	440b      	add	r3, r1
 80025ac:	429a      	cmp	r2, r3
 80025ae:	d332      	bcc.n	8002616 <SpiFlashStore::Init()+0x112>
 80025b0:	3601      	adds	r6, #1
 80025b2:	2e1c      	cmp	r6, #28
 80025b4:	d1ec      	bne.n	8002590 <SpiFlashStore::Init()+0x8c>
 80025b6:	4b1e      	ldr	r3, [pc, #120]	; (8002630 <SpiFlashStore::Init()+0x12c>)
 80025b8:	2501      	movs	r5, #1
 80025ba:	601d      	str	r5, [r3, #0]
 80025bc:	4628      	mov	r0, r5
 80025be:	b005      	add	sp, #20
 80025c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80025c4:	2d00      	cmp	r5, #0
 80025c6:	d0db      	beq.n	8002580 <SpiFlashStore::Init()+0x7c>
 80025c8:	f04f 0900 	mov.w	r9, #0
 80025cc:	46c8      	mov	r8, r9
 80025ce:	4631      	mov	r1, r6
 80025d0:	4638      	mov	r0, r7
 80025d2:	f7ff ff89 	bl	80024e8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 80025d6:	5c23      	ldrb	r3, [r4, r0]
 80025d8:	2bff      	cmp	r3, #255	; 0xff
 80025da:	d112      	bne.n	8002602 <SpiFlashStore::Init()+0xfe>
 80025dc:	1823      	adds	r3, r4, r0
 80025de:	785a      	ldrb	r2, [r3, #1]
 80025e0:	2aff      	cmp	r2, #255	; 0xff
 80025e2:	d10e      	bne.n	8002602 <SpiFlashStore::Init()+0xfe>
 80025e4:	789a      	ldrb	r2, [r3, #2]
 80025e6:	2aff      	cmp	r2, #255	; 0xff
 80025e8:	d10b      	bne.n	8002602 <SpiFlashStore::Init()+0xfe>
 80025ea:	78da      	ldrb	r2, [r3, #3]
 80025ec:	2aff      	cmp	r2, #255	; 0xff
 80025ee:	d108      	bne.n	8002602 <SpiFlashStore::Init()+0xfe>
 80025f0:	f804 8000 	strb.w	r8, [r4, r0]
 80025f4:	46a9      	mov	r9, r5
 80025f6:	f883 8001 	strb.w	r8, [r3, #1]
 80025fa:	f883 8002 	strb.w	r8, [r3, #2]
 80025fe:	f883 8003 	strb.w	r8, [r3, #3]
 8002602:	3601      	adds	r6, #1
 8002604:	2e1c      	cmp	r6, #28
 8002606:	d1e2      	bne.n	80025ce <SpiFlashStore::Init()+0xca>
 8002608:	f1b9 0f00 	cmp.w	r9, #0
 800260c:	d0d6      	beq.n	80025bc <SpiFlashStore::Init()+0xb8>
 800260e:	4b08      	ldr	r3, [pc, #32]	; (8002630 <SpiFlashStore::Init()+0x12c>)
 8002610:	2201      	movs	r2, #1
 8002612:	601a      	str	r2, [r3, #0]
 8002614:	e7d2      	b.n	80025bc <SpiFlashStore::Init()+0xb8>
 8002616:	f804 9002 	strb.w	r9, [r4, r2]
 800261a:	3201      	adds	r2, #1
 800261c:	e7c6      	b.n	80025ac <SpiFlashStore::Init()+0xa8>
 800261e:	2500      	movs	r5, #0
 8002620:	e7cc      	b.n	80025bc <SpiFlashStore::Init()+0xb8>
 8002622:	bf00      	nop
 8002624:	20001734 	andcs	r1, r0, r4, lsr r7
 8002628:	20000734 	andcs	r0, r0, r4, lsr r7
 800262c:	20001748 	andcs	r1, r0, r8, asr #14
 8002630:	20001740 	andcs	r1, r0, r0, asr #14
 8002634:	20001754 	andcs	r1, r0, r4, asr r7
 8002638:	08004c54 	stmdaeq	r0, {r2, r4, r6, sl, fp, lr}

0800263c <SpiFlashStore::SpiFlashStore()>:
 800263c:	b538      	push	{r3, r4, r5, lr}
 800263e:	4b0d      	ldr	r3, [pc, #52]	; (8002674 <SpiFlashStore::SpiFlashStore()+0x38>)
 8002640:	4d0d      	ldr	r5, [pc, #52]	; (8002678 <SpiFlashStore::SpiFlashStore()+0x3c>)
 8002642:	6018      	str	r0, [r3, #0]
 8002644:	4b0d      	ldr	r3, [pc, #52]	; (800267c <SpiFlashStore::SpiFlashStore()+0x40>)
 8002646:	681b      	ldr	r3, [r3, #0]
 8002648:	781b      	ldrb	r3, [r3, #0]
 800264a:	4604      	mov	r4, r0
 800264c:	b113      	cbz	r3, 8002654 <SpiFlashStore::SpiFlashStore()+0x18>
 800264e:	f7ff ff59 	bl	8002504 <SpiFlashStore::Init()>
 8002652:	7028      	strb	r0, [r5, #0]
 8002654:	782b      	ldrb	r3, [r5, #0]
 8002656:	b153      	cbz	r3, 800266e <SpiFlashStore::SpiFlashStore()+0x32>
 8002658:	4909      	ldr	r1, [pc, #36]	; (8002680 <SpiFlashStore::SpiFlashStore()+0x44>)
 800265a:	2320      	movs	r3, #32
 800265c:	2200      	movs	r2, #0
 800265e:	f851 0b04 	ldr.w	r0, [r1], #4
 8002662:	3201      	adds	r2, #1
 8002664:	2a1c      	cmp	r2, #28
 8002666:	4403      	add	r3, r0
 8002668:	d1f9      	bne.n	800265e <SpiFlashStore::SpiFlashStore()+0x22>
 800266a:	4a06      	ldr	r2, [pc, #24]	; (8002684 <SpiFlashStore::SpiFlashStore()+0x48>)
 800266c:	6013      	str	r3, [r2, #0]
 800266e:	4620      	mov	r0, r4
 8002670:	bd38      	pop	{r3, r4, r5, pc}
 8002672:	bf00      	nop
 8002674:	20001744 	andcs	r1, r0, r4, asr #14
 8002678:	20001738 	andcs	r1, r0, r8, lsr r7
 800267c:	20001754 	andcs	r1, r0, r4, asr r7
 8002680:	08004c54 	stmdaeq	r0, {r2, r4, r6, sl, fp, lr}
 8002684:	2000173c 	andcs	r1, r0, ip, lsr r7

08002688 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 8002688:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800268c:	461c      	mov	r4, r3
 800268e:	4b19      	ldr	r3, [pc, #100]	; (80026f4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 8002690:	9e07      	ldr	r6, [sp, #28]
 8002692:	781f      	ldrb	r7, [r3, #0]
 8002694:	4615      	mov	r5, r2
 8002696:	b307      	cbz	r7, 80026da <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8002698:	f7ff ff26 	bl	80024e8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800269c:	4a16      	ldr	r2, [pc, #88]	; (80026f8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800269e:	1941      	adds	r1, r0, r5
 80026a0:	1e63      	subs	r3, r4, #1
 80026a2:	9c06      	ldr	r4, [sp, #24]
 80026a4:	4411      	add	r1, r2
 80026a6:	440c      	add	r4, r1
 80026a8:	f04f 0c00 	mov.w	ip, #0
 80026ac:	42a1      	cmp	r1, r4
 80026ae:	d116      	bne.n	80026de <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 80026b0:	f1bc 0f00 	cmp.w	ip, #0
 80026b4:	d011      	beq.n	80026da <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 80026b6:	4b11      	ldr	r3, [pc, #68]	; (80026fc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 80026b8:	6819      	ldr	r1, [r3, #0]
 80026ba:	b109      	cbz	r1, 80026c0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 80026bc:	2906      	cmp	r1, #6
 80026be:	d101      	bne.n	80026c4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 80026c0:	2101      	movs	r1, #1
 80026c2:	6019      	str	r1, [r3, #0]
 80026c4:	4b0e      	ldr	r3, [pc, #56]	; (8002700 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 80026c6:	6819      	ldr	r1, [r3, #0]
 80026c8:	4b0e      	ldr	r3, [pc, #56]	; (8002704 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 80026ca:	6019      	str	r1, [r3, #0]
 80026cc:	b12d      	cbz	r5, 80026da <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 80026ce:	b126      	cbz	r6, 80026da <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 80026d0:	9b08      	ldr	r3, [sp, #32]
 80026d2:	4418      	add	r0, r3
 80026d4:	5813      	ldr	r3, [r2, r0]
 80026d6:	4333      	orrs	r3, r6
 80026d8:	5013      	str	r3, [r2, r0]
 80026da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80026de:	f891 8000 	ldrb.w	r8, [r1]
 80026e2:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 80026e6:	45f0      	cmp	r8, lr
 80026e8:	bf1c      	itt	ne
 80026ea:	f881 e000 	strbne.w	lr, [r1]
 80026ee:	46bc      	movne	ip, r7
 80026f0:	3101      	adds	r1, #1
 80026f2:	e7db      	b.n	80026ac <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 80026f4:	20001738 	andcs	r1, r0, r8, lsr r7
 80026f8:	20000734 	andcs	r0, r0, r4, lsr r7
 80026fc:	20001740 	andcs	r1, r0, r0, asr #14
 8002700:	2000181c 	andcs	r1, r0, ip, lsl r8
 8002704:	20000730 	andcs	r0, r0, r0, lsr r7

08002708 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 8002708:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800270c:	461d      	mov	r5, r3
 800270e:	4b11      	ldr	r3, [pc, #68]	; (8002754 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x4c>)
 8002710:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8002714:	781b      	ldrb	r3, [r3, #0]
 8002716:	4607      	mov	r7, r0
 8002718:	4614      	mov	r4, r2
 800271a:	b1c3      	cbz	r3, 800274e <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x46>
 800271c:	f7ff fee4 	bl	80024e8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8002720:	4a0d      	ldr	r2, [pc, #52]	; (8002758 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x50>)
 8002722:	eb00 0608 	add.w	r6, r0, r8
 8002726:	18b3      	adds	r3, r6, r2
 8002728:	5990      	ldr	r0, [r2, r6]
 800272a:	b140      	cbz	r0, 800273e <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x36>
 800272c:	3c01      	subs	r4, #1
 800272e:	441d      	add	r5, r3
 8002730:	429d      	cmp	r5, r3
 8002732:	d00c      	beq.n	800274e <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x46>
 8002734:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002738:	f804 2f01 	strb.w	r2, [r4, #1]!
 800273c:	e7f8      	b.n	8002730 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x28>
 800273e:	e9cd 0001 	strd	r0, r0, [sp, #4]
 8002742:	9500      	str	r5, [sp, #0]
 8002744:	4623      	mov	r3, r4
 8002746:	4642      	mov	r2, r8
 8002748:	4638      	mov	r0, r7
 800274a:	f7ff ff9d 	bl	8002688 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800274e:	b004      	add	sp, #16
 8002750:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002754:	20001738 	andcs	r1, r0, r8, lsr r7
 8002758:	20000734 	andcs	r0, r0, r4, lsr r7

0800275c <SpiFlashStore::Flash()>:
 800275c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800275e:	4c25      	ldr	r4, [pc, #148]	; (80027f4 <SpiFlashStore::Flash()+0x98>)
 8002760:	6820      	ldr	r0, [r4, #0]
 8002762:	2800      	cmp	r0, #0
 8002764:	d043      	beq.n	80027ee <SpiFlashStore::Flash()+0x92>
 8002766:	3801      	subs	r0, #1
 8002768:	2805      	cmp	r0, #5
 800276a:	d831      	bhi.n	80027d0 <SpiFlashStore::Flash()+0x74>
 800276c:	e8df f000 	tbb	[pc, r0]
 8002770:	2e140b03 	vnmlscs.f64	d0, d4, d3
 8002774:	4b203025 	blmi	880e810 <__exidx_end+0x8096a8>
 8002778:	681a      	ldr	r2, [r3, #0]
 800277a:	4b20      	ldr	r3, [pc, #128]	; (80027fc <SpiFlashStore::Flash()+0xa0>)
 800277c:	601a      	str	r2, [r3, #0]
 800277e:	2302      	movs	r3, #2
 8002780:	6023      	str	r3, [r4, #0]
 8002782:	2001      	movs	r0, #1
 8002784:	e033      	b.n	80027ee <SpiFlashStore::Flash()+0x92>
 8002786:	4b1c      	ldr	r3, [pc, #112]	; (80027f8 <SpiFlashStore::Flash()+0x9c>)
 8002788:	4a1c      	ldr	r2, [pc, #112]	; (80027fc <SpiFlashStore::Flash()+0xa0>)
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	6812      	ldr	r2, [r2, #0]
 800278e:	1a9b      	subs	r3, r3, r2
 8002790:	2b63      	cmp	r3, #99	; 0x63
 8002792:	d9f6      	bls.n	8002782 <SpiFlashStore::Flash()+0x26>
 8002794:	2303      	movs	r3, #3
 8002796:	e7f3      	b.n	8002780 <SpiFlashStore::Flash()+0x24>
 8002798:	4919      	ldr	r1, [pc, #100]	; (8002800 <SpiFlashStore::Flash()+0xa4>)
 800279a:	481a      	ldr	r0, [pc, #104]	; (8002804 <SpiFlashStore::Flash()+0xa8>)
 800279c:	6809      	ldr	r1, [r1, #0]
 800279e:	6800      	ldr	r0, [r0, #0]
 80027a0:	ab03      	add	r3, sp, #12
 80027a2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80027a6:	f000 f8ff 	bl	80029a8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 80027aa:	2800      	cmp	r0, #0
 80027ac:	d0e9      	beq.n	8002782 <SpiFlashStore::Flash()+0x26>
 80027ae:	4b12      	ldr	r3, [pc, #72]	; (80027f8 <SpiFlashStore::Flash()+0x9c>)
 80027b0:	681a      	ldr	r2, [r3, #0]
 80027b2:	4b12      	ldr	r3, [pc, #72]	; (80027fc <SpiFlashStore::Flash()+0xa0>)
 80027b4:	601a      	str	r2, [r3, #0]
 80027b6:	2305      	movs	r3, #5
 80027b8:	e7e2      	b.n	8002780 <SpiFlashStore::Flash()+0x24>
 80027ba:	4b0f      	ldr	r3, [pc, #60]	; (80027f8 <SpiFlashStore::Flash()+0x9c>)
 80027bc:	4a0f      	ldr	r2, [pc, #60]	; (80027fc <SpiFlashStore::Flash()+0xa0>)
 80027be:	681b      	ldr	r3, [r3, #0]
 80027c0:	6812      	ldr	r2, [r2, #0]
 80027c2:	1a9b      	subs	r3, r3, r2
 80027c4:	2b63      	cmp	r3, #99	; 0x63
 80027c6:	d9dc      	bls.n	8002782 <SpiFlashStore::Flash()+0x26>
 80027c8:	2304      	movs	r3, #4
 80027ca:	e7d9      	b.n	8002780 <SpiFlashStore::Flash()+0x24>
 80027cc:	2306      	movs	r3, #6
 80027ce:	e7d7      	b.n	8002780 <SpiFlashStore::Flash()+0x24>
 80027d0:	ab03      	add	r3, sp, #12
 80027d2:	4a0d      	ldr	r2, [pc, #52]	; (8002808 <SpiFlashStore::Flash()+0xac>)
 80027d4:	490a      	ldr	r1, [pc, #40]	; (8002800 <SpiFlashStore::Flash()+0xa4>)
 80027d6:	480b      	ldr	r0, [pc, #44]	; (8002804 <SpiFlashStore::Flash()+0xa8>)
 80027d8:	9300      	str	r3, [sp, #0]
 80027da:	6812      	ldr	r2, [r2, #0]
 80027dc:	4b0b      	ldr	r3, [pc, #44]	; (800280c <SpiFlashStore::Flash()+0xb0>)
 80027de:	6809      	ldr	r1, [r1, #0]
 80027e0:	6800      	ldr	r0, [r0, #0]
 80027e2:	f000 f981 	bl	8002ae8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 80027e6:	2800      	cmp	r0, #0
 80027e8:	d0cb      	beq.n	8002782 <SpiFlashStore::Flash()+0x26>
 80027ea:	2000      	movs	r0, #0
 80027ec:	6020      	str	r0, [r4, #0]
 80027ee:	b004      	add	sp, #16
 80027f0:	bd10      	pop	{r4, pc}
 80027f2:	bf00      	nop
 80027f4:	20001740 	andcs	r1, r0, r0, asr #14
 80027f8:	2000181c 	andcs	r1, r0, ip, lsl r8
 80027fc:	20000730 	andcs	r0, r0, r0, lsr r7
 8002800:	20001734 	andcs	r1, r0, r4, lsr r7
 8002804:	20001754 	andcs	r1, r0, r4, asr r7
 8002808:	2000173c 	andcs	r1, r0, ip, lsr r7
 800280c:	20000734 	andcs	r0, r0, r4, lsr r7

08002810 <StoreRDMDevice::~StoreRDMDevice()>:
 8002810:	4770      	bx	lr

08002812 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8002812:	3804      	subs	r0, #4
 8002814:	4770      	bx	lr
	...

08002818 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 8002818:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800281a:	2200      	movs	r2, #0
 800281c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8002820:	460b      	mov	r3, r1
 8002822:	4805      	ldr	r0, [pc, #20]	; (8002838 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 8002824:	2129      	movs	r1, #41	; 0x29
 8002826:	9100      	str	r1, [sp, #0]
 8002828:	6800      	ldr	r0, [r0, #0]
 800282a:	210b      	movs	r1, #11
 800282c:	f7ff ff2c 	bl	8002688 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8002830:	b005      	add	sp, #20
 8002832:	f85d fb04 	ldr.w	pc, [sp], #4
 8002836:	bf00      	nop
 8002838:	20001744 	andcs	r1, r0, r4, asr #14

0800283c <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800283c:	b570      	push	{r4, r5, r6, lr}
 800283e:	4d0d      	ldr	r5, [pc, #52]	; (8002874 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 8002840:	b086      	sub	sp, #24
 8002842:	2401      	movs	r4, #1
 8002844:	2600      	movs	r6, #0
 8002846:	6828      	ldr	r0, [r5, #0]
 8002848:	f88d 2017 	strb.w	r2, [sp, #23]
 800284c:	460b      	mov	r3, r1
 800284e:	9200      	str	r2, [sp, #0]
 8002850:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002854:	2204      	movs	r2, #4
 8002856:	210b      	movs	r1, #11
 8002858:	f7ff ff16 	bl	8002688 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800285c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002860:	6828      	ldr	r0, [r5, #0]
 8002862:	9400      	str	r4, [sp, #0]
 8002864:	f10d 0317 	add.w	r3, sp, #23
 8002868:	2224      	movs	r2, #36	; 0x24
 800286a:	210b      	movs	r1, #11
 800286c:	f7ff ff0c 	bl	8002688 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8002870:	b006      	add	sp, #24
 8002872:	bd70      	pop	{r4, r5, r6, pc}
 8002874:	20001744 	andcs	r1, r0, r4, asr #14

08002878 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8002878:	f1a0 0004 	sub.w	r0, r0, #4
 800287c:	e7de      	b.n	800283c <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 800287e:	bf00      	nop

08002880 <StoreRDMDevice::~StoreRDMDevice()>:
 8002880:	b510      	push	{r4, lr}
 8002882:	4604      	mov	r4, r0
 8002884:	f000 fd42 	bl	800330c <operator delete(void*)>
 8002888:	4620      	mov	r0, r4
 800288a:	bd10      	pop	{r4, pc}

0800288c <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800288c:	f1a0 0004 	sub.w	r0, r0, #4
 8002890:	e7f6      	b.n	8002880 <StoreRDMDevice::~StoreRDMDevice()>
	...

08002894 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 8002894:	b507      	push	{r0, r1, r2, lr}
 8002896:	2300      	movs	r3, #0
 8002898:	4805      	ldr	r0, [pc, #20]	; (80028b0 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x1c>)
 800289a:	9300      	str	r3, [sp, #0]
 800289c:	460a      	mov	r2, r1
 800289e:	6800      	ldr	r0, [r0, #0]
 80028a0:	2329      	movs	r3, #41	; 0x29
 80028a2:	210b      	movs	r1, #11
 80028a4:	f7ff ff30 	bl	8002708 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 80028a8:	b003      	add	sp, #12
 80028aa:	f85d fb04 	ldr.w	pc, [sp], #4
 80028ae:	bf00      	nop
 80028b0:	20001744 	andcs	r1, r0, r4, asr #14

080028b4 <StoreRDMDevice::StoreRDMDevice()>:
 80028b4:	4a03      	ldr	r2, [pc, #12]	; (80028c4 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 80028b6:	6002      	str	r2, [r0, #0]
 80028b8:	321c      	adds	r2, #28
 80028ba:	6042      	str	r2, [r0, #4]
 80028bc:	4a02      	ldr	r2, [pc, #8]	; (80028c8 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 80028be:	6010      	str	r0, [r2, #0]
 80028c0:	4770      	bx	lr
 80028c2:	bf00      	nop
 80028c4:	08004ccc 	stmdaeq	r0, {r2, r3, r6, r7, sl, fp, lr}
 80028c8:	2000174c 	andcs	r1, r0, ip, asr #14

080028cc <StoreWidget::~StoreWidget()>:
 80028cc:	4770      	bx	lr

080028ce <non-virtual thunk to StoreWidget::~StoreWidget()>:
 80028ce:	3804      	subs	r0, #4
 80028d0:	4770      	bx	lr
	...

080028d4 <StoreWidget::Update(TWidgetParams const*)>:
 80028d4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80028d6:	2200      	movs	r2, #0
 80028d8:	e9cd 2201 	strd	r2, r2, [sp, #4]
 80028dc:	460b      	mov	r3, r1
 80028de:	4805      	ldr	r0, [pc, #20]	; (80028f4 <StoreWidget::Update(TWidgetParams const*)+0x20>)
 80028e0:	210c      	movs	r1, #12
 80028e2:	9100      	str	r1, [sp, #0]
 80028e4:	6800      	ldr	r0, [r0, #0]
 80028e6:	210a      	movs	r1, #10
 80028e8:	f7ff fece 	bl	8002688 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80028ec:	b005      	add	sp, #20
 80028ee:	f85d fb04 	ldr.w	pc, [sp], #4
 80028f2:	bf00      	nop
 80028f4:	20001744 	andcs	r1, r0, r4, asr #14

080028f8 <StoreWidget::~StoreWidget()>:
 80028f8:	b510      	push	{r4, lr}
 80028fa:	4604      	mov	r4, r0
 80028fc:	f000 fd06 	bl	800330c <operator delete(void*)>
 8002900:	4620      	mov	r0, r4
 8002902:	bd10      	pop	{r4, pc}

08002904 <non-virtual thunk to StoreWidget::~StoreWidget()>:
 8002904:	f1a0 0004 	sub.w	r0, r0, #4
 8002908:	e7f6      	b.n	80028f8 <StoreWidget::~StoreWidget()>
	...

0800290c <StoreWidget::Copy(TWidgetParams*)>:
 800290c:	b507      	push	{r0, r1, r2, lr}
 800290e:	2300      	movs	r3, #0
 8002910:	4805      	ldr	r0, [pc, #20]	; (8002928 <StoreWidget::Copy(TWidgetParams*)+0x1c>)
 8002912:	9300      	str	r3, [sp, #0]
 8002914:	460a      	mov	r2, r1
 8002916:	6800      	ldr	r0, [r0, #0]
 8002918:	230c      	movs	r3, #12
 800291a:	210a      	movs	r1, #10
 800291c:	f7ff fef4 	bl	8002708 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 8002920:	b003      	add	sp, #12
 8002922:	f85d fb04 	ldr.w	pc, [sp], #4
 8002926:	bf00      	nop
 8002928:	20001744 	andcs	r1, r0, r4, asr #14

0800292c <StoreWidget::StoreWidget()>:
 800292c:	4a03      	ldr	r2, [pc, #12]	; (800293c <StoreWidget::StoreWidget()+0x10>)
 800292e:	6002      	str	r2, [r0, #0]
 8002930:	3224      	adds	r2, #36	; 0x24
 8002932:	6042      	str	r2, [r0, #4]
 8002934:	4a02      	ldr	r2, [pc, #8]	; (8002940 <StoreWidget::StoreWidget()+0x14>)
 8002936:	6010      	str	r0, [r2, #0]
 8002938:	4770      	bx	lr
 800293a:	bf00      	nop
 800293c:	08004cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp, lr}
 8002940:	20001750 	andcs	r1, r0, r0, asr r7

08002944 <FlashRom::FlashRom()>:
 8002944:	4b07      	ldr	r3, [pc, #28]	; (8002964 <FlashRom::FlashRom()+0x20>)
 8002946:	4908      	ldr	r1, [pc, #32]	; (8002968 <FlashRom::FlashRom()+0x24>)
 8002948:	b510      	push	{r4, lr}
 800294a:	6018      	str	r0, [r3, #0]
 800294c:	2301      	movs	r3, #1
 800294e:	7003      	strb	r3, [r0, #0]
 8002950:	4b06      	ldr	r3, [pc, #24]	; (800296c <FlashRom::FlashRom()+0x28>)
 8002952:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8002956:	4604      	mov	r4, r0
 8002958:	029a      	lsls	r2, r3, #10
 800295a:	4805      	ldr	r0, [pc, #20]	; (8002970 <FlashRom::FlashRom()+0x2c>)
 800295c:	f7fd ff52 	bl	8000804 <printf>
 8002960:	4620      	mov	r0, r4
 8002962:	bd10      	pop	{r4, pc}
 8002964:	20001754 	andcs	r1, r0, r4, asr r7
 8002968:	080048b0 	stmdaeq	r0, {r4, r5, r7, fp, lr}
 800296c:	1ffff700 	svcne	0x00fff700
 8002970:	08004d34 	stmdaeq	r0, {r2, r4, r5, r8, sl, fp, lr}

08002974 <FlashRom::GetSize() const>:
 8002974:	4b02      	ldr	r3, [pc, #8]	; (8002980 <FlashRom::GetSize() const+0xc>)
 8002976:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800297a:	0280      	lsls	r0, r0, #10
 800297c:	4770      	bx	lr
 800297e:	bf00      	nop
 8002980:	1ffff700 	svcne	0x00fff700

08002984 <FlashRom::GetSectorSize() const>:
 8002984:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8002988:	4770      	bx	lr

0800298a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800298a:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800298e:	441a      	add	r2, r3
 8002990:	4293      	cmp	r3, r2
 8002992:	d104      	bne.n	800299e <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 8002994:	9b00      	ldr	r3, [sp, #0]
 8002996:	2200      	movs	r2, #0
 8002998:	601a      	str	r2, [r3, #0]
 800299a:	2001      	movs	r0, #1
 800299c:	4770      	bx	lr
 800299e:	f851 0b04 	ldr.w	r0, [r1], #4
 80029a2:	f843 0b04 	str.w	r0, [r3], #4
 80029a6:	e7f3      	b.n	8002990 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>

080029a8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 80029a8:	b538      	push	{r3, r4, r5, lr}
 80029aa:	4c48      	ldr	r4, [pc, #288]	; (8002acc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 80029ac:	2000      	movs	r0, #0
 80029ae:	6018      	str	r0, [r3, #0]
 80029b0:	6823      	ldr	r3, [r4, #0]
 80029b2:	2b04      	cmp	r3, #4
 80029b4:	f200 8082 	bhi.w	8002abc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 80029b8:	e8df f003 	tbb	[pc, r3]
 80029bc:	78452003 	stmdavc	r5, {r0, r1, sp}^
 80029c0:	4b430080 	blmi	90c2bc8 <__exidx_end+0x10bda60>
 80029c4:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 80029c8:	6019      	str	r1, [r3, #0]
 80029ca:	4b42      	ldr	r3, [pc, #264]	; (8002ad4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 80029cc:	601a      	str	r2, [r3, #0]
 80029ce:	4b42      	ldr	r3, [pc, #264]	; (8002ad8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 80029d0:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 80029d4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80029d8:	4b40      	ldr	r3, [pc, #256]	; (8002adc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 80029da:	d807      	bhi.n	80029ec <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 80029dc:	2201      	movs	r2, #1
 80029de:	701a      	strb	r2, [r3, #0]
 80029e0:	f000 ff58 	bl	8003894 <fmc_bank0_unlock>
 80029e4:	2301      	movs	r3, #1
 80029e6:	6023      	str	r3, [r4, #0]
 80029e8:	2000      	movs	r0, #0
 80029ea:	e026      	b.n	8002a3a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 80029ec:	4a3c      	ldr	r2, [pc, #240]	; (8002ae0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 80029ee:	4291      	cmp	r1, r2
 80029f0:	d3f4      	bcc.n	80029dc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 80029f2:	2200      	movs	r2, #0
 80029f4:	701a      	strb	r2, [r3, #0]
 80029f6:	f000 ff5b 	bl	80038b0 <fmc_bank1_unlock>
 80029fa:	e7f3      	b.n	80029e4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 80029fc:	4d37      	ldr	r5, [pc, #220]	; (8002adc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 80029fe:	782b      	ldrb	r3, [r5, #0]
 8002a00:	b15b      	cbz	r3, 8002a1a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 8002a02:	f000 ff73 	bl	80038ec <fmc_bank0_state_get>
 8002a06:	2801      	cmp	r0, #1
 8002a08:	d0ee      	beq.n	80029e8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 8002a0a:	7829      	ldrb	r1, [r5, #0]
 8002a0c:	4b35      	ldr	r3, [pc, #212]	; (8002ae4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 8002a0e:	b939      	cbnz	r1, 8002a20 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 8002a10:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002a12:	f022 0202 	bic.w	r2, r2, #2
 8002a16:	651a      	str	r2, [r3, #80]	; 0x50
 8002a18:	e006      	b.n	8002a28 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 8002a1a:	f000 ff79 	bl	8003910 <fmc_bank1_state_get>
 8002a1e:	e7f2      	b.n	8002a06 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 8002a20:	691a      	ldr	r2, [r3, #16]
 8002a22:	f022 0202 	bic.w	r2, r2, #2
 8002a26:	611a      	str	r2, [r3, #16]
 8002a28:	4b2a      	ldr	r3, [pc, #168]	; (8002ad4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 8002a2a:	681b      	ldr	r3, [r3, #0]
 8002a2c:	b94b      	cbnz	r3, 8002a42 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 8002a2e:	b129      	cbz	r1, 8002a3c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 8002a30:	f000 ff4c 	bl	80038cc <fmc_bank0_lock>
 8002a34:	2300      	movs	r3, #0
 8002a36:	6023      	str	r3, [r4, #0]
 8002a38:	2001      	movs	r0, #1
 8002a3a:	bd38      	pop	{r3, r4, r5, pc}
 8002a3c:	f000 ff4e 	bl	80038dc <fmc_bank1_lock>
 8002a40:	e7f8      	b.n	8002a34 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 8002a42:	2302      	movs	r3, #2
 8002a44:	e7cf      	b.n	80029e6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 8002a46:	4923      	ldr	r1, [pc, #140]	; (8002ad4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 8002a48:	680b      	ldr	r3, [r1, #0]
 8002a4a:	2b00      	cmp	r3, #0
 8002a4c:	d0ca      	beq.n	80029e4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 8002a4e:	4b23      	ldr	r3, [pc, #140]	; (8002adc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 8002a50:	4a1f      	ldr	r2, [pc, #124]	; (8002ad0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 8002a52:	7818      	ldrb	r0, [r3, #0]
 8002a54:	4b23      	ldr	r3, [pc, #140]	; (8002ae4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 8002a56:	b190      	cbz	r0, 8002a7e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 8002a58:	6918      	ldr	r0, [r3, #16]
 8002a5a:	f040 0002 	orr.w	r0, r0, #2
 8002a5e:	6118      	str	r0, [r3, #16]
 8002a60:	6810      	ldr	r0, [r2, #0]
 8002a62:	6158      	str	r0, [r3, #20]
 8002a64:	6918      	ldr	r0, [r3, #16]
 8002a66:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 8002a6a:	6118      	str	r0, [r3, #16]
 8002a6c:	680b      	ldr	r3, [r1, #0]
 8002a6e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8002a72:	600b      	str	r3, [r1, #0]
 8002a74:	6813      	ldr	r3, [r2, #0]
 8002a76:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8002a7a:	6013      	str	r3, [r2, #0]
 8002a7c:	e7b2      	b.n	80029e4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 8002a7e:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8002a80:	f040 0002 	orr.w	r0, r0, #2
 8002a84:	6518      	str	r0, [r3, #80]	; 0x50
 8002a86:	6810      	ldr	r0, [r2, #0]
 8002a88:	6558      	str	r0, [r3, #84]	; 0x54
 8002a8a:	69dd      	ldr	r5, [r3, #28]
 8002a8c:	07ad      	lsls	r5, r5, #30
 8002a8e:	bf48      	it	mi
 8002a90:	6158      	strmi	r0, [r3, #20]
 8002a92:	4814      	ldr	r0, [pc, #80]	; (8002ae4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 8002a94:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8002a96:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002a9a:	6503      	str	r3, [r0, #80]	; 0x50
 8002a9c:	680b      	ldr	r3, [r1, #0]
 8002a9e:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8002aa2:	600b      	str	r3, [r1, #0]
 8002aa4:	6813      	ldr	r3, [r2, #0]
 8002aa6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002aaa:	e7e6      	b.n	8002a7a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 8002aac:	4b0b      	ldr	r3, [pc, #44]	; (8002adc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 8002aae:	781a      	ldrb	r2, [r3, #0]
 8002ab0:	4b0c      	ldr	r3, [pc, #48]	; (8002ae4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 8002ab2:	b132      	cbz	r2, 8002ac2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 8002ab4:	691a      	ldr	r2, [r3, #16]
 8002ab6:	f022 0201 	bic.w	r2, r2, #1
 8002aba:	611a      	str	r2, [r3, #16]
 8002abc:	2000      	movs	r0, #0
 8002abe:	6020      	str	r0, [r4, #0]
 8002ac0:	e7bb      	b.n	8002a3a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 8002ac2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002ac4:	f022 0201 	bic.w	r2, r2, #1
 8002ac8:	651a      	str	r2, [r3, #80]	; 0x50
 8002aca:	e7f7      	b.n	8002abc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 8002acc:	2000175c 	andcs	r1, r0, ip, asr r7
 8002ad0:	20001760 	andcs	r1, r0, r0, ror #14
 8002ad4:	2000176c 	andcs	r1, r0, ip, ror #14
 8002ad8:	1ffff700 	svcne	0x00fff700
 8002adc:	20001768 	andcs	r1, r0, r8, ror #14
 8002ae0:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8002ae4:	40022000 	andmi	r2, r2, r0

08002ae8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 8002ae8:	b570      	push	{r4, r5, r6, lr}
 8002aea:	9804      	ldr	r0, [sp, #16]
 8002aec:	2400      	movs	r4, #0
 8002aee:	6004      	str	r4, [r0, #0]
 8002af0:	4c48      	ldr	r4, [pc, #288]	; (8002c14 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 8002af2:	6820      	ldr	r0, [r4, #0]
 8002af4:	2804      	cmp	r0, #4
 8002af6:	d848      	bhi.n	8002b8a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 8002af8:	e8df f000 	tbb	[pc, r0]
 8002afc:	22847c03 	addcs	r7, r4, #768	; 0x300
 8002b00:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 8002b04:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8002b08:	6001      	str	r1, [r0, #0]
 8002b0a:	4844      	ldr	r0, [pc, #272]	; (8002c1c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8002b0c:	6003      	str	r3, [r0, #0]
 8002b0e:	4b44      	ldr	r3, [pc, #272]	; (8002c20 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 8002b10:	601a      	str	r2, [r3, #0]
 8002b12:	4b44      	ldr	r3, [pc, #272]	; (8002c24 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 8002b14:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8002b18:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002b1c:	4b42      	ldr	r3, [pc, #264]	; (8002c28 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8002b1e:	d807      	bhi.n	8002b30 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 8002b20:	2201      	movs	r2, #1
 8002b22:	701a      	strb	r2, [r3, #0]
 8002b24:	f000 feb6 	bl	8003894 <fmc_bank0_unlock>
 8002b28:	2303      	movs	r3, #3
 8002b2a:	6023      	str	r3, [r4, #0]
 8002b2c:	2000      	movs	r0, #0
 8002b2e:	e026      	b.n	8002b7e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 8002b30:	4a3e      	ldr	r2, [pc, #248]	; (8002c2c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 8002b32:	4291      	cmp	r1, r2
 8002b34:	d3f4      	bcc.n	8002b20 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 8002b36:	2200      	movs	r2, #0
 8002b38:	701a      	strb	r2, [r3, #0]
 8002b3a:	f000 feb9 	bl	80038b0 <fmc_bank1_unlock>
 8002b3e:	e7f3      	b.n	8002b28 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8002b40:	4d39      	ldr	r5, [pc, #228]	; (8002c28 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8002b42:	782b      	ldrb	r3, [r5, #0]
 8002b44:	b15b      	cbz	r3, 8002b5e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 8002b46:	f000 fed1 	bl	80038ec <fmc_bank0_state_get>
 8002b4a:	2801      	cmp	r0, #1
 8002b4c:	d0ee      	beq.n	8002b2c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 8002b4e:	7829      	ldrb	r1, [r5, #0]
 8002b50:	4b37      	ldr	r3, [pc, #220]	; (8002c30 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 8002b52:	b939      	cbnz	r1, 8002b64 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 8002b54:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002b56:	f022 0201 	bic.w	r2, r2, #1
 8002b5a:	651a      	str	r2, [r3, #80]	; 0x50
 8002b5c:	e006      	b.n	8002b6c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 8002b5e:	f000 fed7 	bl	8003910 <fmc_bank1_state_get>
 8002b62:	e7f2      	b.n	8002b4a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 8002b64:	691a      	ldr	r2, [r3, #16]
 8002b66:	f022 0201 	bic.w	r2, r2, #1
 8002b6a:	611a      	str	r2, [r3, #16]
 8002b6c:	4b2c      	ldr	r3, [pc, #176]	; (8002c20 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 8002b6e:	681b      	ldr	r3, [r3, #0]
 8002b70:	b94b      	cbnz	r3, 8002b86 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 8002b72:	b129      	cbz	r1, 8002b80 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 8002b74:	f000 feaa 	bl	80038cc <fmc_bank0_lock>
 8002b78:	2300      	movs	r3, #0
 8002b7a:	6023      	str	r3, [r4, #0]
 8002b7c:	2001      	movs	r0, #1
 8002b7e:	bd70      	pop	{r4, r5, r6, pc}
 8002b80:	f000 feac 	bl	80038dc <fmc_bank1_lock>
 8002b84:	e7f8      	b.n	8002b78 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 8002b86:	2304      	movs	r3, #4
 8002b88:	e7cf      	b.n	8002b2a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 8002b8a:	4a25      	ldr	r2, [pc, #148]	; (8002c20 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 8002b8c:	6813      	ldr	r3, [r2, #0]
 8002b8e:	2b03      	cmp	r3, #3
 8002b90:	d91a      	bls.n	8002bc8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 8002b92:	4b25      	ldr	r3, [pc, #148]	; (8002c28 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8002b94:	7819      	ldrb	r1, [r3, #0]
 8002b96:	4b26      	ldr	r3, [pc, #152]	; (8002c30 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 8002b98:	b189      	cbz	r1, 8002bbe <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 8002b9a:	6919      	ldr	r1, [r3, #16]
 8002b9c:	f041 0101 	orr.w	r1, r1, #1
 8002ba0:	6119      	str	r1, [r3, #16]
 8002ba2:	4d1e      	ldr	r5, [pc, #120]	; (8002c1c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8002ba4:	481c      	ldr	r0, [pc, #112]	; (8002c18 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 8002ba6:	6829      	ldr	r1, [r5, #0]
 8002ba8:	6803      	ldr	r3, [r0, #0]
 8002baa:	f851 6b04 	ldr.w	r6, [r1], #4
 8002bae:	f843 6b04 	str.w	r6, [r3], #4
 8002bb2:	6003      	str	r3, [r0, #0]
 8002bb4:	6813      	ldr	r3, [r2, #0]
 8002bb6:	6029      	str	r1, [r5, #0]
 8002bb8:	3b04      	subs	r3, #4
 8002bba:	6013      	str	r3, [r2, #0]
 8002bbc:	e7b4      	b.n	8002b28 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8002bbe:	6d19      	ldr	r1, [r3, #80]	; 0x50
 8002bc0:	f041 0101 	orr.w	r1, r1, #1
 8002bc4:	6519      	str	r1, [r3, #80]	; 0x50
 8002bc6:	e7ec      	b.n	8002ba2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 8002bc8:	2b00      	cmp	r3, #0
 8002bca:	d0ad      	beq.n	8002b28 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8002bcc:	4b16      	ldr	r3, [pc, #88]	; (8002c28 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8002bce:	781a      	ldrb	r2, [r3, #0]
 8002bd0:	4b17      	ldr	r3, [pc, #92]	; (8002c30 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 8002bd2:	b152      	cbz	r2, 8002bea <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 8002bd4:	691a      	ldr	r2, [r3, #16]
 8002bd6:	f042 0201 	orr.w	r2, r2, #1
 8002bda:	611a      	str	r2, [r3, #16]
 8002bdc:	4a0f      	ldr	r2, [pc, #60]	; (8002c1c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8002bde:	4b0e      	ldr	r3, [pc, #56]	; (8002c18 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 8002be0:	6812      	ldr	r2, [r2, #0]
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	6812      	ldr	r2, [r2, #0]
 8002be6:	601a      	str	r2, [r3, #0]
 8002be8:	e79e      	b.n	8002b28 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8002bea:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002bec:	f042 0201 	orr.w	r2, r2, #1
 8002bf0:	651a      	str	r2, [r3, #80]	; 0x50
 8002bf2:	e7f3      	b.n	8002bdc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 8002bf4:	4b0c      	ldr	r3, [pc, #48]	; (8002c28 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8002bf6:	781a      	ldrb	r2, [r3, #0]
 8002bf8:	4b0d      	ldr	r3, [pc, #52]	; (8002c30 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 8002bfa:	b132      	cbz	r2, 8002c0a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 8002bfc:	691a      	ldr	r2, [r3, #16]
 8002bfe:	f022 0202 	bic.w	r2, r2, #2
 8002c02:	611a      	str	r2, [r3, #16]
 8002c04:	2000      	movs	r0, #0
 8002c06:	6020      	str	r0, [r4, #0]
 8002c08:	e7b9      	b.n	8002b7e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 8002c0a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002c0c:	f022 0202 	bic.w	r2, r2, #2
 8002c10:	651a      	str	r2, [r3, #80]	; 0x50
 8002c12:	e7f7      	b.n	8002c04 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 8002c14:	2000175c 	andcs	r1, r0, ip, asr r7
 8002c18:	20001758 	andcs	r1, r0, r8, asr r7
 8002c1c:	20001764 	andcs	r1, r0, r4, ror #14
 8002c20:	2000176c 	andcs	r1, r0, ip, ror #14
 8002c24:	1ffff700 	svcne	0x00fff700
 8002c28:	20001768 	andcs	r1, r0, r8, ror #14
 8002c2c:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8002c30:	40022000 	andmi	r2, r2, r0

08002c34 <Network::Network()>:
 8002c34:	4b05      	ldr	r3, [pc, #20]	; (8002c4c <Network::Network()+0x18>)
 8002c36:	4906      	ldr	r1, [pc, #24]	; (8002c50 <Network::Network()+0x1c>)
 8002c38:	6018      	str	r0, [r3, #0]
 8002c3a:	1e42      	subs	r2, r0, #1
 8002c3c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002c40:	f802 3f01 	strb.w	r3, [r2, #1]!
 8002c44:	2b00      	cmp	r3, #0
 8002c46:	d1f9      	bne.n	8002c3c <Network::Network()+0x8>
 8002c48:	4770      	bx	lr
 8002c4a:	bf00      	nop
 8002c4c:	20001770 	andcs	r1, r0, r0, ror r7
 8002c50:	08004d62 	stmdaeq	r0, {r1, r5, r6, r8, sl, fp, lr}

08002c54 <Network::MacAddressCopyTo(unsigned char*)>:
 8002c54:	4608      	mov	r0, r1
 8002c56:	f000 bccb 	b.w	80035f0 <mac_address_get>

08002c5a <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8002c5a:	e9c0 1200 	strd	r1, r2, [r0]
 8002c5e:	4770      	bx	lr

08002c60 <ReadConfigFile::~ReadConfigFile()>:
 8002c60:	4770      	bx	lr

08002c62 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8002c62:	b538      	push	{r3, r4, r5, lr}
 8002c64:	4614      	mov	r4, r2
 8002c66:	f000 f81a 	bl	8002c9e <Sscan::checkName(char const*, char const*)>
 8002c6a:	b1a0      	cbz	r0, 8002c96 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x34>
 8002c6c:	2100      	movs	r1, #0
 8002c6e:	220a      	movs	r2, #10
 8002c70:	7803      	ldrb	r3, [r0, #0]
 8002c72:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 8002c76:	2d09      	cmp	r5, #9
 8002c78:	d80f      	bhi.n	8002c9a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 8002c7a:	fb02 3101 	mla	r1, r2, r1, r3
 8002c7e:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8002c82:	f013 03df 	ands.w	r3, r3, #223	; 0xdf
 8002c86:	f1a1 0130 	sub.w	r1, r1, #48	; 0x30
 8002c8a:	d1f1      	bne.n	8002c70 <Sscan::Uint8(char const*, char const*, unsigned char&)+0xe>
 8002c8c:	29ff      	cmp	r1, #255	; 0xff
 8002c8e:	d804      	bhi.n	8002c9a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 8002c90:	7021      	strb	r1, [r4, #0]
 8002c92:	4618      	mov	r0, r3
 8002c94:	bd38      	pop	{r3, r4, r5, pc}
 8002c96:	2301      	movs	r3, #1
 8002c98:	e7fb      	b.n	8002c92 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8002c9a:	2302      	movs	r3, #2
 8002c9c:	e7f9      	b.n	8002c92 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08002c9e <Sscan::checkName(char const*, char const*)>:
 8002c9e:	b510      	push	{r4, lr}
 8002ca0:	3901      	subs	r1, #1
 8002ca2:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8002ca6:	4604      	mov	r4, r0
 8002ca8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8002cac:	b123      	cbz	r3, 8002cb8 <Sscan::checkName(char const*, char const*)+0x1a>
 8002cae:	b10a      	cbz	r2, 8002cb4 <Sscan::checkName(char const*, char const*)+0x16>
 8002cb0:	4293      	cmp	r3, r2
 8002cb2:	d0f6      	beq.n	8002ca2 <Sscan::checkName(char const*, char const*)+0x4>
 8002cb4:	2000      	movs	r0, #0
 8002cb6:	e006      	b.n	8002cc6 <Sscan::checkName(char const*, char const*)+0x28>
 8002cb8:	2a3d      	cmp	r2, #61	; 0x3d
 8002cba:	d1fb      	bne.n	8002cb4 <Sscan::checkName(char const*, char const*)+0x16>
 8002cbc:	7860      	ldrb	r0, [r4, #1]
 8002cbe:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8002cc2:	d000      	beq.n	8002cc6 <Sscan::checkName(char const*, char const*)+0x28>
 8002cc4:	1c60      	adds	r0, r4, #1
 8002cc6:	bd10      	pop	{r4, pc}

08002cc8 <Display::PrintInfo() [clone .isra.0]>:
 8002cc8:	b910      	cbnz	r0, 8002cd0 <Display::PrintInfo() [clone .isra.0]+0x8>
 8002cca:	4803      	ldr	r0, [pc, #12]	; (8002cd8 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8002ccc:	f000 bbbe 	b.w	800344c <puts>
 8002cd0:	6803      	ldr	r3, [r0, #0]
 8002cd2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002cd4:	4718      	bx	r3
 8002cd6:	bf00      	nop
 8002cd8:	08004d65 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, fp, lr}

08002cdc <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8002cdc:	b513      	push	{r0, r1, r4, lr}
 8002cde:	4604      	mov	r4, r0
 8002ce0:	0a13      	lsrs	r3, r2, #8
 8002ce2:	7800      	ldrb	r0, [r0, #0]
 8002ce4:	f88d 1004 	strb.w	r1, [sp, #4]
 8002ce8:	f88d 3005 	strb.w	r3, [sp, #5]
 8002cec:	f88d 2006 	strb.w	r2, [sp, #6]
 8002cf0:	f001 f9fc 	bl	80040ec <gd32_i2c_set_address>
 8002cf4:	6860      	ldr	r0, [r4, #4]
 8002cf6:	f001 f9f1 	bl	80040dc <gd32_i2c_set_baudrate>
 8002cfa:	2103      	movs	r1, #3
 8002cfc:	a801      	add	r0, sp, #4
 8002cfe:	f001 f9fb 	bl	80040f8 <gd32_i2c_write>
 8002d02:	b002      	add	sp, #8
 8002d04:	bd10      	pop	{r4, pc}

08002d06 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8002d06:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002d08:	460d      	mov	r5, r1
 8002d0a:	4604      	mov	r4, r0
 8002d0c:	f001 f9ee 	bl	80040ec <gd32_i2c_set_address>
 8002d10:	4628      	mov	r0, r5
 8002d12:	f001 f9e3 	bl	80040dc <gd32_i2c_set_baudrate>
 8002d16:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8002d1a:	2b07      	cmp	r3, #7
 8002d1c:	d902      	bls.n	8002d24 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8002d1e:	3c50      	subs	r4, #80	; 0x50
 8002d20:	2c0f      	cmp	r4, #15
 8002d22:	d809      	bhi.n	8002d38 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8002d24:	2101      	movs	r1, #1
 8002d26:	f10d 0007 	add.w	r0, sp, #7
 8002d2a:	f001 fa4b 	bl	80041c4 <gd32_i2c_read>
 8002d2e:	fab0 f080 	clz	r0, r0
 8002d32:	0940      	lsrs	r0, r0, #5
 8002d34:	b003      	add	sp, #12
 8002d36:	bd30      	pop	{r4, r5, pc}
 8002d38:	2100      	movs	r1, #0
 8002d3a:	4608      	mov	r0, r1
 8002d3c:	f001 f9dc 	bl	80040f8 <gd32_i2c_write>
 8002d40:	e7f5      	b.n	8002d2e <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

08002d42 <Display::Detect7Segment()>:
 8002d42:	b513      	push	{r0, r1, r4, lr}
 8002d44:	68c1      	ldr	r1, [r0, #12]
 8002d46:	4604      	mov	r4, r0
 8002d48:	7a00      	ldrb	r0, [r0, #8]
 8002d4a:	f7ff ffdc 	bl	8002d06 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8002d4e:	7460      	strb	r0, [r4, #17]
 8002d50:	b170      	cbz	r0, 8002d70 <Display::Detect7Segment()+0x2e>
 8002d52:	2200      	movs	r2, #0
 8002d54:	f104 0008 	add.w	r0, r4, #8
 8002d58:	4611      	mov	r1, r2
 8002d5a:	9001      	str	r0, [sp, #4]
 8002d5c:	f7ff ffbe 	bl	8002cdc <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8002d60:	7c63      	ldrb	r3, [r4, #17]
 8002d62:	9801      	ldr	r0, [sp, #4]
 8002d64:	b123      	cbz	r3, 8002d70 <Display::Detect7Segment()+0x2e>
 8002d66:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8002d6a:	2112      	movs	r1, #18
 8002d6c:	f7ff ffb6 	bl	8002cdc <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8002d70:	b002      	add	sp, #8
 8002d72:	bd10      	pop	{r4, pc}

08002d74 <Display::Detect(display::Type)>:
 8002d74:	2902      	cmp	r1, #2
 8002d76:	b538      	push	{r3, r4, r5, lr}
 8002d78:	4604      	mov	r4, r0
 8002d7a:	d014      	beq.n	8002da6 <Display::Detect(display::Type)+0x32>
 8002d7c:	2904      	cmp	r1, #4
 8002d7e:	d01b      	beq.n	8002db8 <Display::Detect(display::Type)+0x44>
 8002d80:	69a0      	ldr	r0, [r4, #24]
 8002d82:	b168      	cbz	r0, 8002da0 <Display::Detect(display::Type)+0x2c>
 8002d84:	6803      	ldr	r3, [r0, #0]
 8002d86:	689b      	ldr	r3, [r3, #8]
 8002d88:	4798      	blx	r3
 8002d8a:	69a3      	ldr	r3, [r4, #24]
 8002d8c:	b9b0      	cbnz	r0, 8002dbc <Display::Detect(display::Type)+0x48>
 8002d8e:	b11b      	cbz	r3, 8002d98 <Display::Detect(display::Type)+0x24>
 8002d90:	681a      	ldr	r2, [r3, #0]
 8002d92:	4618      	mov	r0, r3
 8002d94:	6852      	ldr	r2, [r2, #4]
 8002d96:	4790      	blx	r2
 8002d98:	2300      	movs	r3, #0
 8002d9a:	61a3      	str	r3, [r4, #24]
 8002d9c:	2304      	movs	r3, #4
 8002d9e:	6023      	str	r3, [r4, #0]
 8002da0:	2300      	movs	r3, #0
 8002da2:	6163      	str	r3, [r4, #20]
 8002da4:	e011      	b.n	8002dca <Display::Detect(display::Type)+0x56>
 8002da6:	2018      	movs	r0, #24
 8002da8:	f000 fab2 	bl	8003310 <operator new(unsigned int)>
 8002dac:	2100      	movs	r1, #0
 8002dae:	4605      	mov	r5, r0
 8002db0:	f000 f8a2 	bl	8002ef8 <Ssd1306::Ssd1306(TOledPanel)>
 8002db4:	61a5      	str	r5, [r4, #24]
 8002db6:	e7e3      	b.n	8002d80 <Display::Detect(display::Type)+0xc>
 8002db8:	6001      	str	r1, [r0, #0]
 8002dba:	e7e1      	b.n	8002d80 <Display::Detect(display::Type)+0xc>
 8002dbc:	681a      	ldr	r2, [r3, #0]
 8002dbe:	4618      	mov	r0, r3
 8002dc0:	68d2      	ldr	r2, [r2, #12]
 8002dc2:	4790      	blx	r2
 8002dc4:	69a3      	ldr	r3, [r4, #24]
 8002dc6:	2b00      	cmp	r3, #0
 8002dc8:	d0ea      	beq.n	8002da0 <Display::Detect(display::Type)+0x2c>
 8002dca:	bd38      	pop	{r3, r4, r5, pc}

08002dcc <Display::Display()>:
 8002dcc:	2304      	movs	r3, #4
 8002dce:	b510      	push	{r4, lr}
 8002dd0:	6003      	str	r3, [r0, #0]
 8002dd2:	4b0f      	ldr	r3, [pc, #60]	; (8002e10 <Display::Display()+0x44>)
 8002dd4:	4a0f      	ldr	r2, [pc, #60]	; (8002e14 <Display::Display()+0x48>)
 8002dd6:	681b      	ldr	r3, [r3, #0]
 8002dd8:	6043      	str	r3, [r0, #4]
 8002dda:	2321      	movs	r3, #33	; 0x21
 8002ddc:	7203      	strb	r3, [r0, #8]
 8002dde:	4b0e      	ldr	r3, [pc, #56]	; (8002e18 <Display::Display()+0x4c>)
 8002de0:	60c3      	str	r3, [r0, #12]
 8002de2:	2300      	movs	r3, #0
 8002de4:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8002de8:	8203      	strh	r3, [r0, #16]
 8002dea:	4b0c      	ldr	r3, [pc, #48]	; (8002e1c <Display::Display()+0x50>)
 8002dec:	4604      	mov	r4, r0
 8002dee:	2102      	movs	r1, #2
 8002df0:	6018      	str	r0, [r3, #0]
 8002df2:	f7ff ffbf 	bl	8002d74 <Display::Detect(display::Type)>
 8002df6:	4620      	mov	r0, r4
 8002df8:	f7ff ffa3 	bl	8002d42 <Display::Detect7Segment()>
 8002dfc:	69a3      	ldr	r3, [r4, #24]
 8002dfe:	b10b      	cbz	r3, 8002e04 <Display::Display()+0x38>
 8002e00:	f000 f80e 	bl	8002e20 <display::timeout::gpio_init()>
 8002e04:	69a0      	ldr	r0, [r4, #24]
 8002e06:	f7ff ff5f 	bl	8002cc8 <Display::PrintInfo() [clone .isra.0]>
 8002e0a:	4620      	mov	r0, r4
 8002e0c:	bd10      	pop	{r4, pc}
 8002e0e:	bf00      	nop
 8002e10:	2000181c 	andcs	r1, r0, ip, lsl r8
 8002e14:	000493e0 	andeq	r9, r4, r0, ror #7
 8002e18:	00061a80 	andeq	r1, r6, r0, lsl #21
 8002e1c:	20001774 	andcs	r1, r0, r4, ror r7

08002e20 <display::timeout::gpio_init()>:
 8002e20:	4770      	bx	lr

08002e22 <Ssd1306::~Ssd1306()>:
 8002e22:	4770      	bx	lr

08002e24 <Ssd1306::SetCursor(unsigned int)>:
 8002e24:	4770      	bx	lr
	...

08002e28 <Ssd1306::PrintInfo()>:
 8002e28:	b410      	push	{r4}
 8002e2a:	4906      	ldr	r1, [pc, #24]	; (8002e44 <Ssd1306::PrintInfo()+0x1c>)
 8002e2c:	7c44      	ldrb	r4, [r0, #17]
 8002e2e:	7903      	ldrb	r3, [r0, #4]
 8002e30:	7942      	ldrb	r2, [r0, #5]
 8002e32:	4805      	ldr	r0, [pc, #20]	; (8002e48 <Ssd1306::PrintInfo()+0x20>)
 8002e34:	2c00      	cmp	r4, #0
 8002e36:	bf08      	it	eq
 8002e38:	4601      	moveq	r1, r0
 8002e3a:	4804      	ldr	r0, [pc, #16]	; (8002e4c <Ssd1306::PrintInfo()+0x24>)
 8002e3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002e40:	f7fd bce0 	b.w	8000804 <printf>
 8002e44:	08004d76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, sl, fp, lr}
 8002e48:	08004d7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, sl, fp, lr}
 8002e4c:	08004d85 	stmdaeq	r0, {r0, r2, r7, r8, sl, fp, lr}

08002e50 <Ssd1306::~Ssd1306()>:
 8002e50:	b510      	push	{r4, lr}
 8002e52:	4604      	mov	r4, r0
 8002e54:	f000 fa5a 	bl	800330c <operator delete(void*)>
 8002e58:	4620      	mov	r0, r4
 8002e5a:	bd10      	pop	{r4, pc}

08002e5c <HAL_I2C::Setup()>:
 8002e5c:	b510      	push	{r4, lr}
 8002e5e:	4604      	mov	r4, r0
 8002e60:	7800      	ldrb	r0, [r0, #0]
 8002e62:	f001 f943 	bl	80040ec <gd32_i2c_set_address>
 8002e66:	6860      	ldr	r0, [r4, #4]
 8002e68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002e6c:	f001 b936 	b.w	80040dc <gd32_i2c_set_baudrate>

08002e70 <Ssd1306::PutChar(int)>:
 8002e70:	b510      	push	{r4, lr}
 8002e72:	3920      	subs	r1, #32
 8002e74:	295f      	cmp	r1, #95	; 0x5f
 8002e76:	f100 0008 	add.w	r0, r0, #8
 8002e7a:	bf94      	ite	ls
 8002e7c:	460c      	movls	r4, r1
 8002e7e:	2400      	movhi	r4, #0
 8002e80:	f7ff ffec 	bl	8002e5c <HAL_I2C::Setup()>
 8002e84:	4804      	ldr	r0, [pc, #16]	; (8002e98 <Ssd1306::PutChar(int)+0x28>)
 8002e86:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8002e8a:	4420      	add	r0, r4
 8002e8c:	2107      	movs	r1, #7
 8002e8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002e92:	f001 b931 	b.w	80040f8 <gd32_i2c_write>
 8002e96:	bf00      	nop
 8002e98:	08004d98 	stmdaeq	r0, {r3, r4, r7, r8, sl, fp, lr}

08002e9c <Ssd1306::PutString(char const*)>:
 8002e9c:	b538      	push	{r3, r4, r5, lr}
 8002e9e:	4605      	mov	r5, r0
 8002ea0:	1e4c      	subs	r4, r1, #1
 8002ea2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8002ea6:	b901      	cbnz	r1, 8002eaa <Ssd1306::PutString(char const*)+0xe>
 8002ea8:	bd38      	pop	{r3, r4, r5, pc}
 8002eaa:	4628      	mov	r0, r5
 8002eac:	f7ff ffe0 	bl	8002e70 <Ssd1306::PutChar(int)>
 8002eb0:	e7f7      	b.n	8002ea2 <Ssd1306::PutString(char const*)+0x6>

08002eb2 <Ssd1306::Text(char const*, unsigned int)>:
 8002eb2:	b570      	push	{r4, r5, r6, lr}
 8002eb4:	7903      	ldrb	r3, [r0, #4]
 8002eb6:	4605      	mov	r5, r0
 8002eb8:	460c      	mov	r4, r1
 8002eba:	4293      	cmp	r3, r2
 8002ebc:	bf94      	ite	ls
 8002ebe:	18ce      	addls	r6, r1, r3
 8002ec0:	188e      	addhi	r6, r1, r2
 8002ec2:	42b4      	cmp	r4, r6
 8002ec4:	d100      	bne.n	8002ec8 <Ssd1306::Text(char const*, unsigned int)+0x16>
 8002ec6:	bd70      	pop	{r4, r5, r6, pc}
 8002ec8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002ecc:	4628      	mov	r0, r5
 8002ece:	f7ff ffcf 	bl	8002e70 <Ssd1306::PutChar(int)>
 8002ed2:	e7f6      	b.n	8002ec2 <Ssd1306::Text(char const*, unsigned int)+0x10>

08002ed4 <Ssd1306::InitMembers()>:
 8002ed4:	7c03      	ldrb	r3, [r0, #16]
 8002ed6:	b14b      	cbz	r3, 8002eec <Ssd1306::InitMembers()+0x18>
 8002ed8:	3b01      	subs	r3, #1
 8002eda:	2b01      	cmp	r3, #1
 8002edc:	d909      	bls.n	8002ef2 <Ssd1306::InitMembers()+0x1e>
 8002ede:	2308      	movs	r3, #8
 8002ee0:	2204      	movs	r2, #4
 8002ee2:	2115      	movs	r1, #21
 8002ee4:	7101      	strb	r1, [r0, #4]
 8002ee6:	7143      	strb	r3, [r0, #5]
 8002ee8:	6142      	str	r2, [r0, #20]
 8002eea:	4770      	bx	lr
 8002eec:	2308      	movs	r3, #8
 8002eee:	461a      	mov	r2, r3
 8002ef0:	e7f7      	b.n	8002ee2 <Ssd1306::InitMembers()+0xe>
 8002ef2:	2304      	movs	r3, #4
 8002ef4:	e7fb      	b.n	8002eee <Ssd1306::InitMembers()+0x1a>
	...

08002ef8 <Ssd1306::Ssd1306(TOledPanel)>:
 8002ef8:	4a08      	ldr	r2, [pc, #32]	; (8002f1c <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8002efa:	6002      	str	r2, [r0, #0]
 8002efc:	227f      	movs	r2, #127	; 0x7f
 8002efe:	b508      	push	{r3, lr}
 8002f00:	80c2      	strh	r2, [r0, #6]
 8002f02:	223c      	movs	r2, #60	; 0x3c
 8002f04:	7202      	strb	r2, [r0, #8]
 8002f06:	4a06      	ldr	r2, [pc, #24]	; (8002f20 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8002f08:	60c2      	str	r2, [r0, #12]
 8002f0a:	2200      	movs	r2, #0
 8002f0c:	7442      	strb	r2, [r0, #17]
 8002f0e:	4a05      	ldr	r2, [pc, #20]	; (8002f24 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8002f10:	7401      	strb	r1, [r0, #16]
 8002f12:	6010      	str	r0, [r2, #0]
 8002f14:	f7ff ffde 	bl	8002ed4 <Ssd1306::InitMembers()>
 8002f18:	bd08      	pop	{r3, pc}
 8002f1a:	bf00      	nop
 8002f1c:	08005070 	stmdaeq	r0, {r4, r5, r6, ip, lr}
 8002f20:	00061a80 	andeq	r1, r6, r0, lsl #21
 8002f24:	20001800 	andcs	r1, r0, r0, lsl #16

08002f28 <Ssd1306::SendCommand(unsigned char)>:
 8002f28:	b507      	push	{r0, r1, r2, lr}
 8002f2a:	2300      	movs	r3, #0
 8002f2c:	3008      	adds	r0, #8
 8002f2e:	f88d 3004 	strb.w	r3, [sp, #4]
 8002f32:	f88d 1005 	strb.w	r1, [sp, #5]
 8002f36:	f7ff ff91 	bl	8002e5c <HAL_I2C::Setup()>
 8002f3a:	2102      	movs	r1, #2
 8002f3c:	a801      	add	r0, sp, #4
 8002f3e:	f001 f8db 	bl	80040f8 <gd32_i2c_write>
 8002f42:	b003      	add	sp, #12
 8002f44:	f85d fb04 	ldr.w	pc, [sp], #4

08002f48 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8002f48:	2914      	cmp	r1, #20
 8002f4a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002f4c:	4615      	mov	r5, r2
 8002f4e:	d81d      	bhi.n	8002f8c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8002f50:	7943      	ldrb	r3, [r0, #5]
 8002f52:	4293      	cmp	r3, r2
 8002f54:	d91a      	bls.n	8002f8c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8002f56:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8002f5a:	7c43      	ldrb	r3, [r0, #17]
 8002f5c:	004c      	lsls	r4, r1, #1
 8002f5e:	b2e4      	uxtb	r4, r4
 8002f60:	b10b      	cbz	r3, 8002f66 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x1e>
 8002f62:	3404      	adds	r4, #4
 8002f64:	b2e4      	uxtb	r4, r4
 8002f66:	f004 010e 	and.w	r1, r4, #14
 8002f6a:	9001      	str	r0, [sp, #4]
 8002f6c:	f7ff ffdc 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 8002f70:	0921      	lsrs	r1, r4, #4
 8002f72:	9801      	ldr	r0, [sp, #4]
 8002f74:	f041 0110 	orr.w	r1, r1, #16
 8002f78:	f7ff ffd6 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 8002f7c:	9801      	ldr	r0, [sp, #4]
 8002f7e:	f045 01b0 	orr.w	r1, r5, #176	; 0xb0
 8002f82:	b003      	add	sp, #12
 8002f84:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8002f88:	f7ff bfce 	b.w	8002f28 <Ssd1306::SendCommand(unsigned char)>
 8002f8c:	b003      	add	sp, #12
 8002f8e:	bd30      	pop	{r4, r5, pc}

08002f90 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8002f90:	b5e0      	push	{r5, r6, r7, lr}
 8002f92:	4605      	mov	r5, r0
 8002f94:	4616      	mov	r6, r2
 8002f96:	461f      	mov	r7, r3
 8002f98:	b171      	cbz	r1, 8002fb8 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8002f9a:	7943      	ldrb	r3, [r0, #5]
 8002f9c:	428b      	cmp	r3, r1
 8002f9e:	d30b      	bcc.n	8002fb8 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8002fa0:	1e4a      	subs	r2, r1, #1
 8002fa2:	b2d2      	uxtb	r2, r2
 8002fa4:	2100      	movs	r1, #0
 8002fa6:	f7ff ffcf 	bl	8002f48 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8002faa:	463a      	mov	r2, r7
 8002fac:	4631      	mov	r1, r6
 8002fae:	4628      	mov	r0, r5
 8002fb0:	e8bd 40e0 	ldmia.w	sp!, {r5, r6, r7, lr}
 8002fb4:	f7ff bf7d 	b.w	8002eb2 <Ssd1306::Text(char const*, unsigned int)>
 8002fb8:	bde0      	pop	{r5, r6, r7, pc}
	...

08002fbc <Ssd1306::ClearLine(unsigned char)>:
 8002fbc:	b513      	push	{r0, r1, r4, lr}
 8002fbe:	4604      	mov	r4, r0
 8002fc0:	b1c1      	cbz	r1, 8002ff4 <Ssd1306::ClearLine(unsigned char)+0x38>
 8002fc2:	7943      	ldrb	r3, [r0, #5]
 8002fc4:	428b      	cmp	r3, r1
 8002fc6:	d315      	bcc.n	8002ff4 <Ssd1306::ClearLine(unsigned char)+0x38>
 8002fc8:	3901      	subs	r1, #1
 8002fca:	b2ca      	uxtb	r2, r1
 8002fcc:	2100      	movs	r1, #0
 8002fce:	9201      	str	r2, [sp, #4]
 8002fd0:	f7ff ffba 	bl	8002f48 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8002fd4:	f104 0008 	add.w	r0, r4, #8
 8002fd8:	f7ff ff40 	bl	8002e5c <HAL_I2C::Setup()>
 8002fdc:	2181      	movs	r1, #129	; 0x81
 8002fde:	4806      	ldr	r0, [pc, #24]	; (8002ff8 <Ssd1306::ClearLine(unsigned char)+0x3c>)
 8002fe0:	f001 f88a 	bl	80040f8 <gd32_i2c_write>
 8002fe4:	9a01      	ldr	r2, [sp, #4]
 8002fe6:	2100      	movs	r1, #0
 8002fe8:	4620      	mov	r0, r4
 8002fea:	b002      	add	sp, #8
 8002fec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002ff0:	f7ff bfaa 	b.w	8002f48 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8002ff4:	b002      	add	sp, #8
 8002ff6:	bd10      	pop	{r4, pc}
 8002ff8:	20001778 	andcs	r1, r0, r8, ror r7

08002ffc <Ssd1306::SetSleep(bool)>:
 8002ffc:	b111      	cbz	r1, 8003004 <Ssd1306::SetSleep(bool)+0x8>
 8002ffe:	21ae      	movs	r1, #174	; 0xae
 8003000:	f7ff bf92 	b.w	8002f28 <Ssd1306::SendCommand(unsigned char)>
 8003004:	21af      	movs	r1, #175	; 0xaf
 8003006:	e7fb      	b.n	8003000 <Ssd1306::SetSleep(bool)+0x4>

08003008 <Ssd1306::SetContrast(unsigned char)>:
 8003008:	b538      	push	{r3, r4, r5, lr}
 800300a:	4604      	mov	r4, r0
 800300c:	460d      	mov	r5, r1
 800300e:	7181      	strb	r1, [r0, #6]
 8003010:	2181      	movs	r1, #129	; 0x81
 8003012:	f7ff ff89 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 8003016:	4629      	mov	r1, r5
 8003018:	4620      	mov	r0, r4
 800301a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800301e:	f7ff bf83 	b.w	8002f28 <Ssd1306::SendCommand(unsigned char)>

08003022 <Ssd1306::SetFlipVertically(bool)>:
 8003022:	b510      	push	{r4, lr}
 8003024:	4604      	mov	r4, r0
 8003026:	71c1      	strb	r1, [r0, #7]
 8003028:	b141      	cbz	r1, 800303c <Ssd1306::SetFlipVertically(bool)+0x1a>
 800302a:	21c0      	movs	r1, #192	; 0xc0
 800302c:	f7ff ff7c 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 8003030:	21a0      	movs	r1, #160	; 0xa0
 8003032:	4620      	mov	r0, r4
 8003034:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003038:	f7ff bf76 	b.w	8002f28 <Ssd1306::SendCommand(unsigned char)>
 800303c:	21c8      	movs	r1, #200	; 0xc8
 800303e:	f7ff ff73 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 8003042:	21a1      	movs	r1, #161	; 0xa1
 8003044:	e7f5      	b.n	8003032 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08003048 <Ssd1306::CheckSH1106()>:
 8003048:	b570      	push	{r4, r5, r6, lr}
 800304a:	2100      	movs	r1, #0
 800304c:	b086      	sub	sp, #24
 800304e:	4604      	mov	r4, r0
 8003050:	f7ff ff6a 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 8003054:	2190      	movs	r1, #144	; 0x90
 8003056:	4620      	mov	r0, r4
 8003058:	f7ff ff66 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 800305c:	21b0      	movs	r1, #176	; 0xb0
 800305e:	4620      	mov	r0, r4
 8003060:	f7ff ff62 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 8003064:	4b22      	ldr	r3, [pc, #136]	; (80030f0 <Ssd1306::CheckSH1106()+0xa8>)
 8003066:	f104 0608 	add.w	r6, r4, #8
 800306a:	6818      	ldr	r0, [r3, #0]
 800306c:	9002      	str	r0, [sp, #8]
 800306e:	ad02      	add	r5, sp, #8
 8003070:	791b      	ldrb	r3, [r3, #4]
 8003072:	712b      	strb	r3, [r5, #4]
 8003074:	4630      	mov	r0, r6
 8003076:	f7ff fef1 	bl	8002e5c <HAL_I2C::Setup()>
 800307a:	2105      	movs	r1, #5
 800307c:	4628      	mov	r0, r5
 800307e:	f001 f83b 	bl	80040f8 <gd32_i2c_write>
 8003082:	2100      	movs	r1, #0
 8003084:	4620      	mov	r0, r4
 8003086:	f7ff ff4f 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 800308a:	2190      	movs	r1, #144	; 0x90
 800308c:	4620      	mov	r0, r4
 800308e:	f7ff ff4b 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 8003092:	21b0      	movs	r1, #176	; 0xb0
 8003094:	4620      	mov	r0, r4
 8003096:	f7ff ff47 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 800309a:	2300      	movs	r3, #0
 800309c:	9304      	str	r3, [sp, #16]
 800309e:	f88d 3014 	strb.w	r3, [sp, #20]
 80030a2:	4630      	mov	r0, r6
 80030a4:	2340      	movs	r3, #64	; 0x40
 80030a6:	f88d 3007 	strb.w	r3, [sp, #7]
 80030aa:	f7ff fed7 	bl	8002e5c <HAL_I2C::Setup()>
 80030ae:	2101      	movs	r1, #1
 80030b0:	f10d 0007 	add.w	r0, sp, #7
 80030b4:	f001 f820 	bl	80040f8 <gd32_i2c_write>
 80030b8:	4630      	mov	r0, r6
 80030ba:	f7ff fecf 	bl	8002e5c <HAL_I2C::Setup()>
 80030be:	2105      	movs	r1, #5
 80030c0:	a804      	add	r0, sp, #16
 80030c2:	f001 f87f 	bl	80041c4 <gd32_i2c_read>
 80030c6:	2201      	movs	r2, #1
 80030c8:	5cab      	ldrb	r3, [r5, r2]
 80030ca:	a904      	add	r1, sp, #16
 80030cc:	3201      	adds	r2, #1
 80030ce:	4411      	add	r1, r2
 80030d0:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 80030d4:	428b      	cmp	r3, r1
 80030d6:	d006      	beq.n	80030e6 <Ssd1306::CheckSH1106()+0x9e>
 80030d8:	1a5b      	subs	r3, r3, r1
 80030da:	fab3 f383 	clz	r3, r3
 80030de:	095b      	lsrs	r3, r3, #5
 80030e0:	7463      	strb	r3, [r4, #17]
 80030e2:	b006      	add	sp, #24
 80030e4:	bd70      	pop	{r4, r5, r6, pc}
 80030e6:	2a05      	cmp	r2, #5
 80030e8:	d1ee      	bne.n	80030c8 <Ssd1306::CheckSH1106()+0x80>
 80030ea:	2300      	movs	r3, #0
 80030ec:	e7f5      	b.n	80030da <Ssd1306::CheckSH1106()+0x92>
 80030ee:	bf00      	nop
 80030f0:	08004d91 	stmdaeq	r0, {r0, r4, r7, r8, sl, fp, lr}

080030f4 <Ssd1306::Cls()>:
 80030f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80030f8:	7c45      	ldrb	r5, [r0, #17]
 80030fa:	00ad      	lsls	r5, r5, #2
 80030fc:	b2ed      	uxtb	r5, r5
 80030fe:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8003102:	4604      	mov	r4, r0
 8003104:	2600      	movs	r6, #0
 8003106:	f045 0810 	orr.w	r8, r5, #16
 800310a:	b2ff      	uxtb	r7, r7
 800310c:	6963      	ldr	r3, [r4, #20]
 800310e:	42b3      	cmp	r3, r6
 8003110:	4629      	mov	r1, r5
 8003112:	4620      	mov	r0, r4
 8003114:	d80b      	bhi.n	800312e <Ssd1306::Cls()+0x3a>
 8003116:	f7ff ff07 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 800311a:	4641      	mov	r1, r8
 800311c:	4620      	mov	r0, r4
 800311e:	f7ff ff03 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 8003122:	4620      	mov	r0, r4
 8003124:	21b0      	movs	r1, #176	; 0xb0
 8003126:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800312a:	f7ff befd 	b.w	8002f28 <Ssd1306::SendCommand(unsigned char)>
 800312e:	f7ff fefb 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 8003132:	4641      	mov	r1, r8
 8003134:	4620      	mov	r0, r4
 8003136:	f7ff fef7 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 800313a:	f066 014f 	orn	r1, r6, #79	; 0x4f
 800313e:	b2c9      	uxtb	r1, r1
 8003140:	4620      	mov	r0, r4
 8003142:	f7ff fef1 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 8003146:	7c23      	ldrb	r3, [r4, #16]
 8003148:	b123      	cbz	r3, 8003154 <Ssd1306::Cls()+0x60>
 800314a:	3b01      	subs	r3, #1
 800314c:	2b01      	cmp	r3, #1
 800314e:	d901      	bls.n	8003154 <Ssd1306::Cls()+0x60>
 8003150:	3601      	adds	r6, #1
 8003152:	e7db      	b.n	800310c <Ssd1306::Cls()+0x18>
 8003154:	f104 0008 	add.w	r0, r4, #8
 8003158:	f7ff fe80 	bl	8002e5c <HAL_I2C::Setup()>
 800315c:	4639      	mov	r1, r7
 800315e:	4802      	ldr	r0, [pc, #8]	; (8003168 <Ssd1306::Cls()+0x74>)
 8003160:	f000 ffca 	bl	80040f8 <gd32_i2c_write>
 8003164:	e7f4      	b.n	8003150 <Ssd1306::Cls()+0x5c>
 8003166:	bf00      	nop
 8003168:	20001778 	andcs	r1, r0, r8, ror r7

0800316c <Ssd1306::Start()>:
 800316c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800316e:	7a04      	ldrb	r4, [r0, #8]
 8003170:	68c6      	ldr	r6, [r0, #12]
 8003172:	4605      	mov	r5, r0
 8003174:	4620      	mov	r0, r4
 8003176:	f000 ffb9 	bl	80040ec <gd32_i2c_set_address>
 800317a:	4630      	mov	r0, r6
 800317c:	f000 ffae 	bl	80040dc <gd32_i2c_set_baudrate>
 8003180:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8003184:	2b07      	cmp	r3, #7
 8003186:	d902      	bls.n	800318e <Ssd1306::Start()+0x22>
 8003188:	3c50      	subs	r4, #80	; 0x50
 800318a:	2c0f      	cmp	r4, #15
 800318c:	d80f      	bhi.n	80031ae <Ssd1306::Start()+0x42>
 800318e:	2101      	movs	r1, #1
 8003190:	f10d 0007 	add.w	r0, sp, #7
 8003194:	f001 f816 	bl	80041c4 <gd32_i2c_read>
 8003198:	fab0 f480 	clz	r4, r0
 800319c:	0964      	lsrs	r4, r4, #5
 800319e:	b35c      	cbz	r4, 80031f8 <Ssd1306::Start()+0x8c>
 80031a0:	7c2e      	ldrb	r6, [r5, #16]
 80031a2:	b14e      	cbz	r6, 80031b8 <Ssd1306::Start()+0x4c>
 80031a4:	3e01      	subs	r6, #1
 80031a6:	2e01      	cmp	r6, #1
 80031a8:	d929      	bls.n	80031fe <Ssd1306::Start()+0x92>
 80031aa:	2400      	movs	r4, #0
 80031ac:	e024      	b.n	80031f8 <Ssd1306::Start()+0x8c>
 80031ae:	2100      	movs	r1, #0
 80031b0:	4608      	mov	r0, r1
 80031b2:	f000 ffa1 	bl	80040f8 <gd32_i2c_write>
 80031b6:	e7ef      	b.n	8003198 <Ssd1306::Start()+0x2c>
 80031b8:	4f16      	ldr	r7, [pc, #88]	; (8003214 <Ssd1306::Start()+0xa8>)
 80031ba:	f817 1b01 	ldrb.w	r1, [r7], #1
 80031be:	4628      	mov	r0, r5
 80031c0:	3601      	adds	r6, #1
 80031c2:	f7ff feb1 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 80031c6:	2e18      	cmp	r6, #24
 80031c8:	d1f7      	bne.n	80031ba <Ssd1306::Start()+0x4e>
 80031ca:	4a13      	ldr	r2, [pc, #76]	; (8003218 <Ssd1306::Start()+0xac>)
 80031cc:	2300      	movs	r3, #0
 80031ce:	4611      	mov	r1, r2
 80031d0:	4618      	mov	r0, r3
 80031d2:	3301      	adds	r3, #1
 80031d4:	2b86      	cmp	r3, #134	; 0x86
 80031d6:	f802 0b01 	strb.w	r0, [r2], #1
 80031da:	d1fa      	bne.n	80031d2 <Ssd1306::Start()+0x66>
 80031dc:	2340      	movs	r3, #64	; 0x40
 80031de:	700b      	strb	r3, [r1, #0]
 80031e0:	4628      	mov	r0, r5
 80031e2:	f7ff ff31 	bl	8003048 <Ssd1306::CheckSH1106()>
 80031e6:	4628      	mov	r0, r5
 80031e8:	f7ff ff84 	bl	80030f4 <Ssd1306::Cls()>
 80031ec:	21af      	movs	r1, #175	; 0xaf
 80031ee:	4628      	mov	r0, r5
 80031f0:	f7ff fe9a 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 80031f4:	2301      	movs	r3, #1
 80031f6:	71eb      	strb	r3, [r5, #7]
 80031f8:	4620      	mov	r0, r4
 80031fa:	b003      	add	sp, #12
 80031fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80031fe:	4f07      	ldr	r7, [pc, #28]	; (800321c <Ssd1306::Start()+0xb0>)
 8003200:	2600      	movs	r6, #0
 8003202:	f817 1b01 	ldrb.w	r1, [r7], #1
 8003206:	4628      	mov	r0, r5
 8003208:	3601      	adds	r6, #1
 800320a:	f7ff fe8d 	bl	8002f28 <Ssd1306::SendCommand(unsigned char)>
 800320e:	2e18      	cmp	r6, #24
 8003210:	d1f7      	bne.n	8003202 <Ssd1306::Start()+0x96>
 8003212:	e7da      	b.n	80031ca <Ssd1306::Start()+0x5e>
 8003214:	08005050 	stmdaeq	r0, {r4, r6, ip, lr}
 8003218:	20001778 	andcs	r1, r0, r8, ror r7
 800321c:	08005038 	stmdaeq	r0, {r3, r4, r5, ip, lr}

08003220 <console_putc>:
 8003220:	f000 b9b6 	b.w	8003590 <uart0_putc>

08003224 <console_puts>:
 8003224:	f000 b9d4 	b.w	80035d0 <uart0_puts>

08003228 <LedBlink::LedBlink()>:
 8003228:	b538      	push	{r3, r4, r5, lr}
 800322a:	2205      	movs	r2, #5
 800322c:	2300      	movs	r3, #0
 800322e:	e9c0 3200 	strd	r3, r2, [r0]
 8003232:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8003236:	e9c0 2303 	strd	r2, r3, [r0, #12]
 800323a:	6083      	str	r3, [r0, #8]
 800323c:	6143      	str	r3, [r0, #20]
 800323e:	4b09      	ldr	r3, [pc, #36]	; (8003264 <LedBlink::LedBlink()+0x3c>)
 8003240:	4d09      	ldr	r5, [pc, #36]	; (8003268 <LedBlink::LedBlink()+0x40>)
 8003242:	6018      	str	r0, [r3, #0]
 8003244:	4604      	mov	r4, r0
 8003246:	f240 6004 	movw	r0, #1540	; 0x604
 800324a:	f000 fc45 	bl	8003ad8 <rcu_periph_clock_enable>
 800324e:	4628      	mov	r0, r5
 8003250:	2301      	movs	r3, #1
 8003252:	2203      	movs	r2, #3
 8003254:	2110      	movs	r1, #16
 8003256:	f000 fba7 	bl	80039a8 <gpio_init>
 800325a:	2301      	movs	r3, #1
 800325c:	616b      	str	r3, [r5, #20]
 800325e:	4620      	mov	r0, r4
 8003260:	bd38      	pop	{r3, r4, r5, pc}
 8003262:	bf00      	nop
 8003264:	20001804 	andcs	r1, r0, r4, lsl #16
 8003268:	40011000 	andmi	r1, r1, r0

0800326c <Hardware::Hardware()>:
 800326c:	b530      	push	{r4, r5, lr}
 800326e:	4b25      	ldr	r3, [pc, #148]	; (8003304 <Hardware::Hardware()+0x98>)
 8003270:	2400      	movs	r4, #0
 8003272:	b091      	sub	sp, #68	; 0x44
 8003274:	6004      	str	r4, [r0, #0]
 8003276:	7104      	strb	r4, [r0, #4]
 8003278:	6018      	str	r0, [r3, #0]
 800327a:	4605      	mov	r5, r0
 800327c:	f7fc ff58 	bl	8000130 <console_init>
 8003280:	f000 f9c8 	bl	8003614 <systick_config>
 8003284:	f001 f91c 	bl	80044c0 <udelay_init()>
 8003288:	f001 f918 	bl	80044bc <micros_init()>
 800328c:	f240 701b 	movw	r0, #1819	; 0x71b
 8003290:	f000 fc22 	bl	8003ad8 <rcu_periph_clock_enable>
 8003294:	f240 701c 	movw	r0, #1820	; 0x71c
 8003298:	f000 fc1e 	bl	8003ad8 <rcu_periph_clock_enable>
 800329c:	f000 fc14 	bl	8003ac8 <pmu_backup_write_enable>
 80032a0:	4621      	mov	r1, r4
 80032a2:	2002      	movs	r0, #2
 80032a4:	f000 fa6a 	bl	800377c <bkp_write_data>
 80032a8:	f240 7004 	movw	r0, #1796	; 0x704
 80032ac:	f000 fc14 	bl	8003ad8 <rcu_periph_clock_enable>
 80032b0:	4815      	ldr	r0, [pc, #84]	; (8003308 <Hardware::Hardware()+0x9c>)
 80032b2:	f000 fcd5 	bl	8003c60 <timer_deinit>
 80032b6:	2377      	movs	r3, #119	; 0x77
 80032b8:	a903      	add	r1, sp, #12
 80032ba:	f8ad 300c 	strh.w	r3, [sp, #12]
 80032be:	4812      	ldr	r0, [pc, #72]	; (8003308 <Hardware::Hardware()+0x9c>)
 80032c0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80032c4:	9305      	str	r3, [sp, #20]
 80032c6:	f000 fd2d 	bl	8003d24 <timer_init>
 80032ca:	480f      	ldr	r0, [pc, #60]	; (8003308 <Hardware::Hardware()+0x9c>)
 80032cc:	f000 fd68 	bl	8003da0 <timer_enable>
 80032d0:	f000 fe76 	bl	8003fc0 <gd32_adc_init()>
 80032d4:	2206      	movs	r2, #6
 80032d6:	2303      	movs	r3, #3
 80032d8:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 80032dc:	a807      	add	r0, sp, #28
 80032de:	237a      	movs	r3, #122	; 0x7a
 80032e0:	930c      	str	r3, [sp, #48]	; 0x30
 80032e2:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80032e6:	9407      	str	r4, [sp, #28]
 80032e8:	940f      	str	r4, [sp, #60]	; 0x3c
 80032ea:	f000 f8dd 	bl	80034a8 <mktime>
 80032ee:	4621      	mov	r1, r4
 80032f0:	e9cd 0401 	strd	r0, r4, [sp, #4]
 80032f4:	a801      	add	r0, sp, #4
 80032f6:	f000 f923 	bl	8003540 <settimeofday>
 80032fa:	f000 febb 	bl	8004074 <gd32_i2c_begin>
 80032fe:	4628      	mov	r0, r5
 8003300:	b011      	add	sp, #68	; 0x44
 8003302:	bd30      	pop	{r4, r5, pc}
 8003304:	20001808 	andcs	r1, r0, r8, lsl #16
 8003308:	40001000 	andmi	r1, r0, r0

0800330c <operator delete(void*)>:
 800330c:	f000 b84c 	b.w	80033a8 <free>

08003310 <operator new(unsigned int)>:
 8003310:	f000 b800 	b.w	8003314 <malloc>

08003314 <malloc>:
 8003314:	b538      	push	{r3, r4, r5, lr}
 8003316:	4601      	mov	r1, r0
 8003318:	4604      	mov	r4, r0
 800331a:	481c      	ldr	r0, [pc, #112]	; (800338c <malloc+0x78>)
 800331c:	f7fd fa72 	bl	8000804 <printf>
 8003320:	b17c      	cbz	r4, 8003342 <malloc+0x2e>
 8003322:	4b1b      	ldr	r3, [pc, #108]	; (8003390 <malloc+0x7c>)
 8003324:	6818      	ldr	r0, [r3, #0]
 8003326:	b978      	cbnz	r0, 8003348 <malloc+0x34>
 8003328:	4a1a      	ldr	r2, [pc, #104]	; (8003394 <malloc+0x80>)
 800332a:	481b      	ldr	r0, [pc, #108]	; (8003398 <malloc+0x84>)
 800332c:	6811      	ldr	r1, [r2, #0]
 800332e:	f104 031b 	add.w	r3, r4, #27
 8003332:	f023 030f 	bic.w	r3, r3, #15
 8003336:	440b      	add	r3, r1
 8003338:	4283      	cmp	r3, r0
 800333a:	d921      	bls.n	8003380 <malloc+0x6c>
 800333c:	4817      	ldr	r0, [pc, #92]	; (800339c <malloc+0x88>)
 800333e:	f7fd fa61 	bl	8000804 <printf>
 8003342:	2500      	movs	r5, #0
 8003344:	4628      	mov	r0, r5
 8003346:	bd38      	pop	{r3, r4, r5, pc}
 8003348:	4284      	cmp	r4, r0
 800334a:	d80a      	bhi.n	8003362 <malloc+0x4e>
 800334c:	685a      	ldr	r2, [r3, #4]
 800334e:	6899      	ldr	r1, [r3, #8]
 8003350:	3201      	adds	r2, #1
 8003352:	428a      	cmp	r2, r1
 8003354:	605a      	str	r2, [r3, #4]
 8003356:	d900      	bls.n	800335a <malloc+0x46>
 8003358:	609a      	str	r2, [r3, #8]
 800335a:	68d9      	ldr	r1, [r3, #12]
 800335c:	b919      	cbnz	r1, 8003366 <malloc+0x52>
 800335e:	4604      	mov	r4, r0
 8003360:	e7e2      	b.n	8003328 <malloc+0x14>
 8003362:	3310      	adds	r3, #16
 8003364:	e7de      	b.n	8003324 <malloc+0x10>
 8003366:	688a      	ldr	r2, [r1, #8]
 8003368:	60da      	str	r2, [r3, #12]
 800336a:	4604      	mov	r4, r0
 800336c:	2300      	movs	r3, #0
 800336e:	f101 050c 	add.w	r5, r1, #12
 8003372:	608b      	str	r3, [r1, #8]
 8003374:	4622      	mov	r2, r4
 8003376:	462b      	mov	r3, r5
 8003378:	4809      	ldr	r0, [pc, #36]	; (80033a0 <malloc+0x8c>)
 800337a:	f7fd fa43 	bl	8000804 <printf>
 800337e:	e7e1      	b.n	8003344 <malloc+0x30>
 8003380:	6013      	str	r3, [r2, #0]
 8003382:	4b08      	ldr	r3, [pc, #32]	; (80033a4 <malloc+0x90>)
 8003384:	e9c1 3400 	strd	r3, r4, [r1]
 8003388:	e7f0      	b.n	800336c <malloc+0x58>
 800338a:	bf00      	nop
 800338c:	080050b4 	stmdaeq	r0, {r2, r4, r5, r7, ip, lr}
 8003390:	20000018 	andcs	r0, r0, r8, lsl r0
 8003394:	20000014 	andcs	r0, r0, r4, lsl r0
 8003398:	2000b000 	andcs	fp, r0, r0
 800339c:	080050c0 	stmdaeq	r0, {r6, r7, ip, lr}
 80033a0:	080050dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip, lr}
 80033a4:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

080033a8 <free>:
 80033a8:	b538      	push	{r3, r4, r5, lr}
 80033aa:	4604      	mov	r4, r0
 80033ac:	b1c8      	cbz	r0, 80033e2 <free+0x3a>
 80033ae:	f1a0 050c 	sub.w	r5, r0, #12
 80033b2:	4602      	mov	r2, r0
 80033b4:	4629      	mov	r1, r5
 80033b6:	480c      	ldr	r0, [pc, #48]	; (80033e8 <free+0x40>)
 80033b8:	f7fd fa24 	bl	8000804 <printf>
 80033bc:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 80033c0:	4b0a      	ldr	r3, [pc, #40]	; (80033ec <free+0x44>)
 80033c2:	429a      	cmp	r2, r3
 80033c4:	d10d      	bne.n	80033e2 <free+0x3a>
 80033c6:	4b0a      	ldr	r3, [pc, #40]	; (80033f0 <free+0x48>)
 80033c8:	681a      	ldr	r2, [r3, #0]
 80033ca:	b152      	cbz	r2, 80033e2 <free+0x3a>
 80033cc:	f854 1c08 	ldr.w	r1, [r4, #-8]
 80033d0:	4291      	cmp	r1, r2
 80033d2:	d107      	bne.n	80033e4 <free+0x3c>
 80033d4:	68da      	ldr	r2, [r3, #12]
 80033d6:	f844 2c04 	str.w	r2, [r4, #-4]
 80033da:	685a      	ldr	r2, [r3, #4]
 80033dc:	60dd      	str	r5, [r3, #12]
 80033de:	3a01      	subs	r2, #1
 80033e0:	605a      	str	r2, [r3, #4]
 80033e2:	bd38      	pop	{r3, r4, r5, pc}
 80033e4:	3310      	adds	r3, #16
 80033e6:	e7ef      	b.n	80033c8 <free+0x20>
 80033e8:	08005107 	stmdaeq	r0, {r0, r1, r2, r8, ip, lr}
 80033ec:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 80033f0:	20000018 	andcs	r0, r0, r8, lsl r0

080033f4 <memcpy>:
 80033f4:	b510      	push	{r4, lr}
 80033f6:	1e43      	subs	r3, r0, #1
 80033f8:	440a      	add	r2, r1
 80033fa:	4291      	cmp	r1, r2
 80033fc:	d100      	bne.n	8003400 <memcpy+0xc>
 80033fe:	bd10      	pop	{r4, pc}
 8003400:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003404:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003408:	e7f7      	b.n	80033fa <memcpy+0x6>

0800340a <memset>:
 800340a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800340c:	b1c2      	cbz	r2, 8003440 <memset+0x36>
 800340e:	b2c9      	uxtb	r1, r1
 8003410:	4603      	mov	r3, r0
 8003412:	075c      	lsls	r4, r3, #29
 8003414:	d110      	bne.n	8003438 <memset+0x2e>
 8003416:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 800341a:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 800341e:	f022 0407 	bic.w	r4, r2, #7
 8003422:	463d      	mov	r5, r7
 8003424:	441c      	add	r4, r3
 8003426:	461e      	mov	r6, r3
 8003428:	42a6      	cmp	r6, r4
 800342a:	d10a      	bne.n	8003442 <memset+0x38>
 800342c:	441a      	add	r2, r3
 800342e:	4294      	cmp	r4, r2
 8003430:	d006      	beq.n	8003440 <memset+0x36>
 8003432:	f804 1b01 	strb.w	r1, [r4], #1
 8003436:	e7fa      	b.n	800342e <memset+0x24>
 8003438:	3a01      	subs	r2, #1
 800343a:	f803 1b01 	strb.w	r1, [r3], #1
 800343e:	d1e8      	bne.n	8003412 <memset+0x8>
 8003440:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003442:	f846 7b08 	str.w	r7, [r6], #8
 8003446:	f846 5c04 	str.w	r5, [r6, #-4]
 800344a:	e7ed      	b.n	8003428 <memset+0x1e>

0800344c <puts>:
 800344c:	b508      	push	{r3, lr}
 800344e:	f7ff fee9 	bl	8003224 <console_puts>
 8003452:	200a      	movs	r0, #10
 8003454:	f7ff fee4 	bl	8003220 <console_putc>
 8003458:	2001      	movs	r0, #1
 800345a:	bd08      	pop	{r3, pc}

0800345c <isleapyear>:
 800345c:	2264      	movs	r2, #100	; 0x64
 800345e:	fb90 f3f2 	sdiv	r3, r0, r2
 8003462:	fb02 0313 	mls	r3, r2, r3, r0
 8003466:	b94b      	cbnz	r3, 800347c <isleapyear+0x20>
 8003468:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800346c:	fb90 f2f3 	sdiv	r2, r0, r3
 8003470:	fb03 0012 	mls	r0, r3, r2, r0
 8003474:	fab0 f080 	clz	r0, r0
 8003478:	0940      	lsrs	r0, r0, #5
 800347a:	4770      	bx	lr
 800347c:	f010 0f03 	tst.w	r0, #3
 8003480:	bf0c      	ite	eq
 8003482:	2001      	moveq	r0, #1
 8003484:	2000      	movne	r0, #0
 8003486:	4770      	bx	lr

08003488 <getdaysofmonth>:
 8003488:	b510      	push	{r4, lr}
 800348a:	4604      	mov	r4, r0
 800348c:	2c01      	cmp	r4, #1
 800348e:	4608      	mov	r0, r1
 8003490:	d102      	bne.n	8003498 <getdaysofmonth+0x10>
 8003492:	f7ff ffe3 	bl	800345c <isleapyear>
 8003496:	b918      	cbnz	r0, 80034a0 <getdaysofmonth+0x18>
 8003498:	4b02      	ldr	r3, [pc, #8]	; (80034a4 <getdaysofmonth+0x1c>)
 800349a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800349e:	bd10      	pop	{r4, pc}
 80034a0:	201d      	movs	r0, #29
 80034a2:	e7fc      	b.n	800349e <getdaysofmonth+0x16>
 80034a4:	08005130 	stmdaeq	r0, {r4, r5, r8, ip, lr}

080034a8 <mktime>:
 80034a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80034ac:	4604      	mov	r4, r0
 80034ae:	2800      	cmp	r0, #0
 80034b0:	d043      	beq.n	800353a <mktime+0x92>
 80034b2:	6941      	ldr	r1, [r0, #20]
 80034b4:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 80034b8:	2b45      	cmp	r3, #69	; 0x45
 80034ba:	d83e      	bhi.n	800353a <mktime+0x92>
 80034bc:	2600      	movs	r6, #0
 80034be:	f240 75b2 	movw	r5, #1970	; 0x7b2
 80034c2:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 80034c6:	f240 186d 	movw	r8, #365	; 0x16d
 80034ca:	42af      	cmp	r7, r5
 80034cc:	da24      	bge.n	8003518 <mktime+0x70>
 80034ce:	6927      	ldr	r7, [r4, #16]
 80034d0:	2f0b      	cmp	r7, #11
 80034d2:	d832      	bhi.n	800353a <mktime+0x92>
 80034d4:	2500      	movs	r5, #0
 80034d6:	42af      	cmp	r7, r5
 80034d8:	d129      	bne.n	800352e <mktime+0x86>
 80034da:	68e5      	ldr	r5, [r4, #12]
 80034dc:	2d00      	cmp	r5, #0
 80034de:	dd2c      	ble.n	800353a <mktime+0x92>
 80034e0:	4638      	mov	r0, r7
 80034e2:	f7ff ffd1 	bl	8003488 <getdaysofmonth>
 80034e6:	4285      	cmp	r5, r0
 80034e8:	dc27      	bgt.n	800353a <mktime+0x92>
 80034ea:	3d01      	subs	r5, #1
 80034ec:	2318      	movs	r3, #24
 80034ee:	4435      	add	r5, r6
 80034f0:	435d      	muls	r5, r3
 80034f2:	68a3      	ldr	r3, [r4, #8]
 80034f4:	2b17      	cmp	r3, #23
 80034f6:	d820      	bhi.n	800353a <mktime+0x92>
 80034f8:	442b      	add	r3, r5
 80034fa:	213c      	movs	r1, #60	; 0x3c
 80034fc:	fb01 f203 	mul.w	r2, r1, r3
 8003500:	6863      	ldr	r3, [r4, #4]
 8003502:	2b3b      	cmp	r3, #59	; 0x3b
 8003504:	d819      	bhi.n	800353a <mktime+0x92>
 8003506:	6820      	ldr	r0, [r4, #0]
 8003508:	4413      	add	r3, r2
 800350a:	283b      	cmp	r0, #59	; 0x3b
 800350c:	fb01 f303 	mul.w	r3, r1, r3
 8003510:	d813      	bhi.n	800353a <mktime+0x92>
 8003512:	4418      	add	r0, r3
 8003514:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003518:	4628      	mov	r0, r5
 800351a:	f7ff ff9f 	bl	800345c <isleapyear>
 800351e:	2800      	cmp	r0, #0
 8003520:	bf14      	ite	ne
 8003522:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8003526:	4643      	moveq	r3, r8
 8003528:	441e      	add	r6, r3
 800352a:	3501      	adds	r5, #1
 800352c:	e7cd      	b.n	80034ca <mktime+0x22>
 800352e:	4628      	mov	r0, r5
 8003530:	f7ff ffaa 	bl	8003488 <getdaysofmonth>
 8003534:	3501      	adds	r5, #1
 8003536:	4406      	add	r6, r0
 8003538:	e7cd      	b.n	80034d6 <mktime+0x2e>
 800353a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800353e:	e7e9      	b.n	8003514 <mktime+0x6c>

08003540 <settimeofday>:
 8003540:	4b07      	ldr	r3, [pc, #28]	; (8003560 <settimeofday+0x20>)
 8003542:	4908      	ldr	r1, [pc, #32]	; (8003564 <settimeofday+0x24>)
 8003544:	681a      	ldr	r2, [r3, #0]
 8003546:	4b08      	ldr	r3, [pc, #32]	; (8003568 <settimeofday+0x28>)
 8003548:	b510      	push	{r4, lr}
 800354a:	601a      	str	r2, [r3, #0]
 800354c:	6843      	ldr	r3, [r0, #4]
 800354e:	6804      	ldr	r4, [r0, #0]
 8003550:	4806      	ldr	r0, [pc, #24]	; (800356c <settimeofday+0x2c>)
 8003552:	17da      	asrs	r2, r3, #31
 8003554:	fbc4 3200 	smlal	r3, r2, r4, r0
 8003558:	e9c1 3200 	strd	r3, r2, [r1]
 800355c:	2000      	movs	r0, #0
 800355e:	bd10      	pop	{r4, pc}
 8003560:	2000181c 	andcs	r1, r0, ip, lsl r8
 8003564:	20001810 	andcs	r1, r0, r0, lsl r8
 8003568:	20001818 	andcs	r1, r0, r8, lsl r8
 800356c:	000f4240 	andeq	r4, pc, r0, asr #4

08003570 <uart0_init>:
 8003570:	b507      	push	{r0, r1, r2, lr}
 8003572:	2301      	movs	r3, #1
 8003574:	9300      	str	r3, [sp, #0]
 8003576:	4805      	ldr	r0, [pc, #20]	; (800358c <uart0_init+0x1c>)
 8003578:	2300      	movs	r3, #0
 800357a:	2208      	movs	r2, #8
 800357c:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8003580:	f000 fec4 	bl	800430c <gd32_uart_begin>
 8003584:	b003      	add	sp, #12
 8003586:	f85d fb04 	ldr.w	pc, [sp], #4
 800358a:	bf00      	nop
 800358c:	40013800 	andmi	r3, r1, r0, lsl #16

08003590 <uart0_putc>:
 8003590:	280a      	cmp	r0, #10
 8003592:	b538      	push	{r3, r4, r5, lr}
 8003594:	4604      	mov	r4, r0
 8003596:	d10a      	bne.n	80035ae <uart0_putc+0x1e>
 8003598:	4d0b      	ldr	r5, [pc, #44]	; (80035c8 <uart0_putc+0x38>)
 800359a:	2107      	movs	r1, #7
 800359c:	4628      	mov	r0, r5
 800359e:	f000 fce1 	bl	8003f64 <usart_flag_get>
 80035a2:	2800      	cmp	r0, #0
 80035a4:	d0f9      	beq.n	800359a <uart0_putc+0xa>
 80035a6:	4b09      	ldr	r3, [pc, #36]	; (80035cc <uart0_putc+0x3c>)
 80035a8:	220d      	movs	r2, #13
 80035aa:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 80035ae:	4d06      	ldr	r5, [pc, #24]	; (80035c8 <uart0_putc+0x38>)
 80035b0:	2107      	movs	r1, #7
 80035b2:	4628      	mov	r0, r5
 80035b4:	f000 fcd6 	bl	8003f64 <usart_flag_get>
 80035b8:	2800      	cmp	r0, #0
 80035ba:	d0f9      	beq.n	80035b0 <uart0_putc+0x20>
 80035bc:	4b03      	ldr	r3, [pc, #12]	; (80035cc <uart0_putc+0x3c>)
 80035be:	b2e4      	uxtb	r4, r4
 80035c0:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 80035c4:	bd38      	pop	{r3, r4, r5, pc}
 80035c6:	bf00      	nop
 80035c8:	40013800 	andmi	r3, r1, r0, lsl #16
 80035cc:	40013000 	andmi	r3, r1, r0

080035d0 <uart0_puts>:
 80035d0:	b510      	push	{r4, lr}
 80035d2:	1e44      	subs	r4, r0, #1
 80035d4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80035d8:	b903      	cbnz	r3, 80035dc <uart0_puts+0xc>
 80035da:	bd10      	pop	{r4, pc}
 80035dc:	2b0a      	cmp	r3, #10
 80035de:	d102      	bne.n	80035e6 <uart0_puts+0x16>
 80035e0:	200d      	movs	r0, #13
 80035e2:	f7ff ffd5 	bl	8003590 <uart0_putc>
 80035e6:	7820      	ldrb	r0, [r4, #0]
 80035e8:	f7ff ffd2 	bl	8003590 <uart0_putc>
 80035ec:	e7f2      	b.n	80035d4 <uart0_puts+0x4>
	...

080035f0 <mac_address_get>:
 80035f0:	4a07      	ldr	r2, [pc, #28]	; (8003610 <mac_address_get+0x20>)
 80035f2:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 80035f6:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 80035fa:	7042      	strb	r2, [r0, #1]
 80035fc:	0e1a      	lsrs	r2, r3, #24
 80035fe:	7082      	strb	r2, [r0, #2]
 8003600:	0c1a      	lsrs	r2, r3, #16
 8003602:	2102      	movs	r1, #2
 8003604:	70c2      	strb	r2, [r0, #3]
 8003606:	0a1a      	lsrs	r2, r3, #8
 8003608:	7001      	strb	r1, [r0, #0]
 800360a:	7102      	strb	r2, [r0, #4]
 800360c:	7143      	strb	r3, [r0, #5]
 800360e:	4770      	bx	lr
 8003610:	1ffff000 	svcne	0x00fff000

08003614 <systick_config>:
 8003614:	4b0c      	ldr	r3, [pc, #48]	; (8003648 <systick_config+0x34>)
 8003616:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800361a:	681b      	ldr	r3, [r3, #0]
 800361c:	fbb3 f3f2 	udiv	r3, r3, r2
 8003620:	3b01      	subs	r3, #1
 8003622:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003626:	d20d      	bcs.n	8003644 <systick_config+0x30>
 8003628:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800362c:	21f0      	movs	r1, #240	; 0xf0
 800362e:	6153      	str	r3, [r2, #20]
 8003630:	4b06      	ldr	r3, [pc, #24]	; (800364c <systick_config+0x38>)
 8003632:	2007      	movs	r0, #7
 8003634:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8003638:	2100      	movs	r1, #0
 800363a:	6191      	str	r1, [r2, #24]
 800363c:	6110      	str	r0, [r2, #16]
 800363e:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8003642:	4770      	bx	lr
 8003644:	e7fe      	b.n	8003644 <systick_config+0x30>
 8003646:	bf00      	nop
 8003648:	200000e8 	andcs	r0, r0, r8, ror #1
 800364c:	e000ed00 	and	lr, r0, r0, lsl #26

08003650 <SysTick_Handler>:
 8003650:	4a02      	ldr	r2, [pc, #8]	; (800365c <SysTick_Handler+0xc>)
 8003652:	6813      	ldr	r3, [r2, #0]
 8003654:	3301      	adds	r3, #1
 8003656:	6013      	str	r3, [r2, #0]
 8003658:	4770      	bx	lr
 800365a:	bf00      	nop
 800365c:	2000181c 	andcs	r1, r0, ip, lsl r8

08003660 <SystemInit>:
 8003660:	4a43      	ldr	r2, [pc, #268]	; (8003770 <SystemInit+0x110>)
 8003662:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8003666:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800366a:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 800366e:	4b41      	ldr	r3, [pc, #260]	; (8003774 <SystemInit+0x114>)
 8003670:	681a      	ldr	r2, [r3, #0]
 8003672:	f042 0201 	orr.w	r2, r2, #1
 8003676:	601a      	str	r2, [r3, #0]
 8003678:	685a      	ldr	r2, [r3, #4]
 800367a:	b082      	sub	sp, #8
 800367c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003680:	605a      	str	r2, [r3, #4]
 8003682:	2200      	movs	r2, #0
 8003684:	9201      	str	r2, [sp, #4]
 8003686:	f644 611f 	movw	r1, #19999	; 0x4e1f
 800368a:	9a01      	ldr	r2, [sp, #4]
 800368c:	428a      	cmp	r2, r1
 800368e:	d922      	bls.n	80036d6 <SystemInit+0x76>
 8003690:	685a      	ldr	r2, [r3, #4]
 8003692:	f022 0203 	bic.w	r2, r2, #3
 8003696:	605a      	str	r2, [r3, #4]
 8003698:	681a      	ldr	r2, [r3, #0]
 800369a:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 800369e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80036a2:	601a      	str	r2, [r3, #0]
 80036a4:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 80036a8:	609a      	str	r2, [r3, #8]
 80036aa:	681a      	ldr	r2, [r3, #0]
 80036ac:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80036b0:	601a      	str	r2, [r3, #0]
 80036b2:	2200      	movs	r2, #0
 80036b4:	605a      	str	r2, [r3, #4]
 80036b6:	62da      	str	r2, [r3, #44]	; 0x2c
 80036b8:	681a      	ldr	r2, [r3, #0]
 80036ba:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80036be:	601a      	str	r2, [r3, #0]
 80036c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80036c4:	6819      	ldr	r1, [r3, #0]
 80036c6:	0388      	lsls	r0, r1, #14
 80036c8:	d401      	bmi.n	80036ce <SystemInit+0x6e>
 80036ca:	3a01      	subs	r2, #1
 80036cc:	d1fa      	bne.n	80036c4 <SystemInit+0x64>
 80036ce:	681a      	ldr	r2, [r3, #0]
 80036d0:	0391      	lsls	r1, r2, #14
 80036d2:	d404      	bmi.n	80036de <SystemInit+0x7e>
 80036d4:	e7fe      	b.n	80036d4 <SystemInit+0x74>
 80036d6:	9a01      	ldr	r2, [sp, #4]
 80036d8:	3201      	adds	r2, #1
 80036da:	9201      	str	r2, [sp, #4]
 80036dc:	e7d5      	b.n	800368a <SystemInit+0x2a>
 80036de:	69da      	ldr	r2, [r3, #28]
 80036e0:	4925      	ldr	r1, [pc, #148]	; (8003778 <SystemInit+0x118>)
 80036e2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80036e6:	61da      	str	r2, [r3, #28]
 80036e8:	680a      	ldr	r2, [r1, #0]
 80036ea:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80036ee:	600a      	str	r2, [r1, #0]
 80036f0:	685a      	ldr	r2, [r3, #4]
 80036f2:	605a      	str	r2, [r3, #4]
 80036f4:	685a      	ldr	r2, [r3, #4]
 80036f6:	605a      	str	r2, [r3, #4]
 80036f8:	685a      	ldr	r2, [r3, #4]
 80036fa:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80036fe:	605a      	str	r2, [r3, #4]
 8003700:	685a      	ldr	r2, [r3, #4]
 8003702:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8003706:	605a      	str	r2, [r3, #4]
 8003708:	685a      	ldr	r2, [r3, #4]
 800370a:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 800370e:	605a      	str	r2, [r3, #4]
 8003710:	685a      	ldr	r2, [r3, #4]
 8003712:	f022 4290 	bic.w	r2, r2, #1207959552	; 0x48000000
 8003716:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 800371a:	605a      	str	r2, [r3, #4]
 800371c:	685a      	ldr	r2, [r3, #4]
 800371e:	f042 6203 	orr.w	r2, r2, #137363456	; 0x8300000
 8003722:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003726:	605a      	str	r2, [r3, #4]
 8003728:	681a      	ldr	r2, [r3, #0]
 800372a:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800372e:	601a      	str	r2, [r3, #0]
 8003730:	681a      	ldr	r2, [r3, #0]
 8003732:	0192      	lsls	r2, r2, #6
 8003734:	d5fc      	bpl.n	8003730 <SystemInit+0xd0>
 8003736:	680a      	ldr	r2, [r1, #0]
 8003738:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800373c:	600a      	str	r2, [r1, #0]
 800373e:	4a0e      	ldr	r2, [pc, #56]	; (8003778 <SystemInit+0x118>)
 8003740:	6851      	ldr	r1, [r2, #4]
 8003742:	03c8      	lsls	r0, r1, #15
 8003744:	d5fc      	bpl.n	8003740 <SystemInit+0xe0>
 8003746:	6811      	ldr	r1, [r2, #0]
 8003748:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
 800374c:	6011      	str	r1, [r2, #0]
 800374e:	6851      	ldr	r1, [r2, #4]
 8003750:	0389      	lsls	r1, r1, #14
 8003752:	d5fc      	bpl.n	800374e <SystemInit+0xee>
 8003754:	685a      	ldr	r2, [r3, #4]
 8003756:	f022 0203 	bic.w	r2, r2, #3
 800375a:	605a      	str	r2, [r3, #4]
 800375c:	685a      	ldr	r2, [r3, #4]
 800375e:	f042 0202 	orr.w	r2, r2, #2
 8003762:	605a      	str	r2, [r3, #4]
 8003764:	685a      	ldr	r2, [r3, #4]
 8003766:	0712      	lsls	r2, r2, #28
 8003768:	d5fc      	bpl.n	8003764 <SystemInit+0x104>
 800376a:	b002      	add	sp, #8
 800376c:	4770      	bx	lr
 800376e:	bf00      	nop
 8003770:	e000ed00 	and	lr, r0, r0, lsl #26
 8003774:	40021000 	andmi	r1, r2, r0
 8003778:	40007000 	andmi	r7, r0, r0

0800377c <bkp_write_data>:
 800377c:	f1a0 030b 	sub.w	r3, r0, #11
 8003780:	2b1f      	cmp	r3, #31
 8003782:	d804      	bhi.n	800378e <bkp_write_data+0x12>
 8003784:	4b07      	ldr	r3, [pc, #28]	; (80037a4 <bkp_write_data+0x28>)
 8003786:	4403      	add	r3, r0
 8003788:	009b      	lsls	r3, r3, #2
 800378a:	8019      	strh	r1, [r3, #0]
 800378c:	4770      	bx	lr
 800378e:	1e43      	subs	r3, r0, #1
 8003790:	2b09      	cmp	r3, #9
 8003792:	bf9f      	itttt	ls
 8003794:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8003798:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 800379c:	0080      	lslls	r0, r0, #2
 800379e:	8001      	strhls	r1, [r0, #0]
 80037a0:	4770      	bx	lr
 80037a2:	bf00      	nop
 80037a4:	10001b05 	andne	r1, r0, r5, lsl #22

080037a8 <dma_deinit>:
 80037a8:	4b0c      	ldr	r3, [pc, #48]	; (80037dc <dma_deinit+0x34>)
 80037aa:	4298      	cmp	r0, r3
 80037ac:	d102      	bne.n	80037b4 <dma_deinit+0xc>
 80037ae:	2904      	cmp	r1, #4
 80037b0:	d900      	bls.n	80037b4 <dma_deinit+0xc>
 80037b2:	e7fe      	b.n	80037b2 <dma_deinit+0xa>
 80037b4:	2314      	movs	r3, #20
 80037b6:	fb03 0301 	mla	r3, r3, r1, r0
 80037ba:	0089      	lsls	r1, r1, #2
 80037bc:	689a      	ldr	r2, [r3, #8]
 80037be:	f022 0201 	bic.w	r2, r2, #1
 80037c2:	609a      	str	r2, [r3, #8]
 80037c4:	2200      	movs	r2, #0
 80037c6:	609a      	str	r2, [r3, #8]
 80037c8:	60da      	str	r2, [r3, #12]
 80037ca:	611a      	str	r2, [r3, #16]
 80037cc:	615a      	str	r2, [r3, #20]
 80037ce:	6842      	ldr	r2, [r0, #4]
 80037d0:	230f      	movs	r3, #15
 80037d2:	408b      	lsls	r3, r1
 80037d4:	4313      	orrs	r3, r2
 80037d6:	6043      	str	r3, [r0, #4]
 80037d8:	4770      	bx	lr
 80037da:	bf00      	nop
 80037dc:	40020400 	andmi	r0, r2, r0, lsl #8

080037e0 <dma_init>:
 80037e0:	4b1b      	ldr	r3, [pc, #108]	; (8003850 <dma_init+0x70>)
 80037e2:	4298      	cmp	r0, r3
 80037e4:	b510      	push	{r4, lr}
 80037e6:	d102      	bne.n	80037ee <dma_init+0xe>
 80037e8:	2904      	cmp	r1, #4
 80037ea:	d900      	bls.n	80037ee <dma_init+0xe>
 80037ec:	e7fe      	b.n	80037ec <dma_init+0xc>
 80037ee:	2314      	movs	r3, #20
 80037f0:	fb03 0101 	mla	r1, r3, r1, r0
 80037f4:	6813      	ldr	r3, [r2, #0]
 80037f6:	610b      	str	r3, [r1, #16]
 80037f8:	6893      	ldr	r3, [r2, #8]
 80037fa:	614b      	str	r3, [r1, #20]
 80037fc:	8a13      	ldrh	r3, [r2, #16]
 80037fe:	60cb      	str	r3, [r1, #12]
 8003800:	68d4      	ldr	r4, [r2, #12]
 8003802:	6853      	ldr	r3, [r2, #4]
 8003804:	6888      	ldr	r0, [r1, #8]
 8003806:	4323      	orrs	r3, r4
 8003808:	6954      	ldr	r4, [r2, #20]
 800380a:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 800380e:	4323      	orrs	r3, r4
 8003810:	4303      	orrs	r3, r0
 8003812:	608b      	str	r3, [r1, #8]
 8003814:	7e13      	ldrb	r3, [r2, #24]
 8003816:	2b01      	cmp	r3, #1
 8003818:	688b      	ldr	r3, [r1, #8]
 800381a:	bf0c      	ite	eq
 800381c:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8003820:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8003824:	608b      	str	r3, [r1, #8]
 8003826:	7e53      	ldrb	r3, [r2, #25]
 8003828:	2b01      	cmp	r3, #1
 800382a:	688b      	ldr	r3, [r1, #8]
 800382c:	bf0c      	ite	eq
 800382e:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8003832:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8003836:	608b      	str	r3, [r1, #8]
 8003838:	7e93      	ldrb	r3, [r2, #26]
 800383a:	b923      	cbnz	r3, 8003846 <dma_init+0x66>
 800383c:	688b      	ldr	r3, [r1, #8]
 800383e:	f023 0310 	bic.w	r3, r3, #16
 8003842:	608b      	str	r3, [r1, #8]
 8003844:	bd10      	pop	{r4, pc}
 8003846:	688b      	ldr	r3, [r1, #8]
 8003848:	f043 0310 	orr.w	r3, r3, #16
 800384c:	e7f9      	b.n	8003842 <dma_init+0x62>
 800384e:	bf00      	nop
 8003850:	40020400 	andmi	r0, r2, r0, lsl #8

08003854 <dma_circulation_disable>:
 8003854:	4b06      	ldr	r3, [pc, #24]	; (8003870 <dma_circulation_disable+0x1c>)
 8003856:	4298      	cmp	r0, r3
 8003858:	d102      	bne.n	8003860 <dma_circulation_disable+0xc>
 800385a:	2904      	cmp	r1, #4
 800385c:	d900      	bls.n	8003860 <dma_circulation_disable+0xc>
 800385e:	e7fe      	b.n	800385e <dma_circulation_disable+0xa>
 8003860:	2314      	movs	r3, #20
 8003862:	4359      	muls	r1, r3
 8003864:	3008      	adds	r0, #8
 8003866:	580b      	ldr	r3, [r1, r0]
 8003868:	f023 0320 	bic.w	r3, r3, #32
 800386c:	500b      	str	r3, [r1, r0]
 800386e:	4770      	bx	lr
 8003870:	40020400 	andmi	r0, r2, r0, lsl #8

08003874 <dma_memory_to_memory_disable>:
 8003874:	4b06      	ldr	r3, [pc, #24]	; (8003890 <dma_memory_to_memory_disable+0x1c>)
 8003876:	4298      	cmp	r0, r3
 8003878:	d102      	bne.n	8003880 <dma_memory_to_memory_disable+0xc>
 800387a:	2904      	cmp	r1, #4
 800387c:	d900      	bls.n	8003880 <dma_memory_to_memory_disable+0xc>
 800387e:	e7fe      	b.n	800387e <dma_memory_to_memory_disable+0xa>
 8003880:	2314      	movs	r3, #20
 8003882:	4359      	muls	r1, r3
 8003884:	3008      	adds	r0, #8
 8003886:	580b      	ldr	r3, [r1, r0]
 8003888:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800388c:	500b      	str	r3, [r1, r0]
 800388e:	4770      	bx	lr
 8003890:	40020400 	andmi	r0, r2, r0, lsl #8

08003894 <fmc_bank0_unlock>:
 8003894:	4b04      	ldr	r3, [pc, #16]	; (80038a8 <fmc_bank0_unlock+0x14>)
 8003896:	691a      	ldr	r2, [r3, #16]
 8003898:	0612      	lsls	r2, r2, #24
 800389a:	bf41      	itttt	mi
 800389c:	4a03      	ldrmi	r2, [pc, #12]	; (80038ac <fmc_bank0_unlock+0x18>)
 800389e:	605a      	strmi	r2, [r3, #4]
 80038a0:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80038a4:	605a      	strmi	r2, [r3, #4]
 80038a6:	4770      	bx	lr
 80038a8:	40022000 	andmi	r2, r2, r0
 80038ac:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080038b0 <fmc_bank1_unlock>:
 80038b0:	4b04      	ldr	r3, [pc, #16]	; (80038c4 <fmc_bank1_unlock+0x14>)
 80038b2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80038b4:	0612      	lsls	r2, r2, #24
 80038b6:	bf41      	itttt	mi
 80038b8:	4a03      	ldrmi	r2, [pc, #12]	; (80038c8 <fmc_bank1_unlock+0x18>)
 80038ba:	645a      	strmi	r2, [r3, #68]	; 0x44
 80038bc:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80038c0:	645a      	strmi	r2, [r3, #68]	; 0x44
 80038c2:	4770      	bx	lr
 80038c4:	40022000 	andmi	r2, r2, r0
 80038c8:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080038cc <fmc_bank0_lock>:
 80038cc:	4a02      	ldr	r2, [pc, #8]	; (80038d8 <fmc_bank0_lock+0xc>)
 80038ce:	6913      	ldr	r3, [r2, #16]
 80038d0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80038d4:	6113      	str	r3, [r2, #16]
 80038d6:	4770      	bx	lr
 80038d8:	40022000 	andmi	r2, r2, r0

080038dc <fmc_bank1_lock>:
 80038dc:	4a02      	ldr	r2, [pc, #8]	; (80038e8 <fmc_bank1_lock+0xc>)
 80038de:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80038e0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80038e4:	6513      	str	r3, [r2, #80]	; 0x50
 80038e6:	4770      	bx	lr
 80038e8:	40022000 	andmi	r2, r2, r0

080038ec <fmc_bank0_state_get>:
 80038ec:	4b07      	ldr	r3, [pc, #28]	; (800390c <fmc_bank0_state_get+0x20>)
 80038ee:	68da      	ldr	r2, [r3, #12]
 80038f0:	07d1      	lsls	r1, r2, #31
 80038f2:	d407      	bmi.n	8003904 <fmc_bank0_state_get+0x18>
 80038f4:	68da      	ldr	r2, [r3, #12]
 80038f6:	06d2      	lsls	r2, r2, #27
 80038f8:	d406      	bmi.n	8003908 <fmc_bank0_state_get+0x1c>
 80038fa:	68d8      	ldr	r0, [r3, #12]
 80038fc:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8003900:	0040      	lsls	r0, r0, #1
 8003902:	4770      	bx	lr
 8003904:	2001      	movs	r0, #1
 8003906:	4770      	bx	lr
 8003908:	2003      	movs	r0, #3
 800390a:	4770      	bx	lr
 800390c:	40022000 	andmi	r2, r2, r0

08003910 <fmc_bank1_state_get>:
 8003910:	4b07      	ldr	r3, [pc, #28]	; (8003930 <fmc_bank1_state_get+0x20>)
 8003912:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8003914:	07d1      	lsls	r1, r2, #31
 8003916:	d407      	bmi.n	8003928 <fmc_bank1_state_get+0x18>
 8003918:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800391a:	06d2      	lsls	r2, r2, #27
 800391c:	d406      	bmi.n	800392c <fmc_bank1_state_get+0x1c>
 800391e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003920:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8003924:	0040      	lsls	r0, r0, #1
 8003926:	4770      	bx	lr
 8003928:	2001      	movs	r0, #1
 800392a:	4770      	bx	lr
 800392c:	2003      	movs	r0, #3
 800392e:	4770      	bx	lr
 8003930:	40022000 	andmi	r2, r2, r0

08003934 <fwdgt_enable>:
 8003934:	4b02      	ldr	r3, [pc, #8]	; (8003940 <fwdgt_enable+0xc>)
 8003936:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 800393a:	601a      	str	r2, [r3, #0]
 800393c:	4770      	bx	lr
 800393e:	bf00      	nop
 8003940:	40003000 	andmi	r3, r0, r0

08003944 <fwdgt_counter_reload>:
 8003944:	4b02      	ldr	r3, [pc, #8]	; (8003950 <fwdgt_counter_reload+0xc>)
 8003946:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 800394a:	601a      	str	r2, [r3, #0]
 800394c:	4770      	bx	lr
 800394e:	bf00      	nop
 8003950:	40003000 	andmi	r3, r0, r0

08003954 <fwdgt_config>:
 8003954:	4a12      	ldr	r2, [pc, #72]	; (80039a0 <fwdgt_config+0x4c>)
 8003956:	b510      	push	{r4, lr}
 8003958:	f245 5355 	movw	r3, #21845	; 0x5555
 800395c:	4c11      	ldr	r4, [pc, #68]	; (80039a4 <fwdgt_config+0x50>)
 800395e:	6013      	str	r3, [r2, #0]
 8003960:	68d3      	ldr	r3, [r2, #12]
 8003962:	3c01      	subs	r4, #1
 8003964:	f003 0301 	and.w	r3, r3, #1
 8003968:	d013      	beq.n	8003992 <fwdgt_config+0x3e>
 800396a:	2b00      	cmp	r3, #0
 800396c:	d1f8      	bne.n	8003960 <fwdgt_config+0xc>
 800396e:	6051      	str	r1, [r2, #4]
 8003970:	490c      	ldr	r1, [pc, #48]	; (80039a4 <fwdgt_config+0x50>)
 8003972:	4a0b      	ldr	r2, [pc, #44]	; (80039a0 <fwdgt_config+0x4c>)
 8003974:	68d3      	ldr	r3, [r2, #12]
 8003976:	3901      	subs	r1, #1
 8003978:	f003 0302 	and.w	r3, r3, #2
 800397c:	d00d      	beq.n	800399a <fwdgt_config+0x46>
 800397e:	2b00      	cmp	r3, #0
 8003980:	d1f8      	bne.n	8003974 <fwdgt_config+0x20>
 8003982:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8003986:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 800398a:	6090      	str	r0, [r2, #8]
 800398c:	6013      	str	r3, [r2, #0]
 800398e:	2001      	movs	r0, #1
 8003990:	e002      	b.n	8003998 <fwdgt_config+0x44>
 8003992:	2b00      	cmp	r3, #0
 8003994:	d0eb      	beq.n	800396e <fwdgt_config+0x1a>
 8003996:	2000      	movs	r0, #0
 8003998:	bd10      	pop	{r4, pc}
 800399a:	2b00      	cmp	r3, #0
 800399c:	d1fb      	bne.n	8003996 <fwdgt_config+0x42>
 800399e:	e7f0      	b.n	8003982 <fwdgt_config+0x2e>
 80039a0:	40003000 	andmi	r3, r0, r0
 80039a4:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080039a8 <gpio_init>:
 80039a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80039ac:	06cf      	lsls	r7, r1, #27
 80039ae:	f001 040f 	and.w	r4, r1, #15
 80039b2:	d508      	bpl.n	80039c6 <gpio_init+0x1e>
 80039b4:	2a04      	cmp	r2, #4
 80039b6:	bf01      	itttt	eq
 80039b8:	6bc2      	ldreq	r2, [r0, #60]	; 0x3c
 80039ba:	431a      	orreq	r2, r3
 80039bc:	f044 0403 	orreq.w	r4, r4, #3
 80039c0:	63c2      	streq	r2, [r0, #60]	; 0x3c
 80039c2:	bf18      	it	ne
 80039c4:	4314      	orrne	r4, r2
 80039c6:	2500      	movs	r5, #0
 80039c8:	f04f 0c0f 	mov.w	ip, #15
 80039cc:	2701      	movs	r7, #1
 80039ce:	fa23 f205 	lsr.w	r2, r3, r5
 80039d2:	07d6      	lsls	r6, r2, #31
 80039d4:	d510      	bpl.n	80039f8 <gpio_init+0x50>
 80039d6:	00aa      	lsls	r2, r5, #2
 80039d8:	6806      	ldr	r6, [r0, #0]
 80039da:	fa0c fe02 	lsl.w	lr, ip, r2
 80039de:	ea26 060e 	bic.w	r6, r6, lr
 80039e2:	fa04 f202 	lsl.w	r2, r4, r2
 80039e6:	2928      	cmp	r1, #40	; 0x28
 80039e8:	ea42 0206 	orr.w	r2, r2, r6
 80039ec:	d128      	bne.n	8003a40 <gpio_init+0x98>
 80039ee:	fa07 f605 	lsl.w	r6, r7, r5
 80039f2:	401e      	ands	r6, r3
 80039f4:	6146      	str	r6, [r0, #20]
 80039f6:	6002      	str	r2, [r0, #0]
 80039f8:	3501      	adds	r5, #1
 80039fa:	2d08      	cmp	r5, #8
 80039fc:	d1e7      	bne.n	80039ce <gpio_init+0x26>
 80039fe:	2600      	movs	r6, #0
 8003a00:	f04f 0c0f 	mov.w	ip, #15
 8003a04:	2701      	movs	r7, #1
 8003a06:	f106 0208 	add.w	r2, r6, #8
 8003a0a:	fa23 f502 	lsr.w	r5, r3, r2
 8003a0e:	07ed      	lsls	r5, r5, #31
 8003a10:	d511      	bpl.n	8003a36 <gpio_init+0x8e>
 8003a12:	00b5      	lsls	r5, r6, #2
 8003a14:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8003a18:	fa0c f805 	lsl.w	r8, ip, r5
 8003a1c:	ea2e 0e08 	bic.w	lr, lr, r8
 8003a20:	fa04 f505 	lsl.w	r5, r4, r5
 8003a24:	2928      	cmp	r1, #40	; 0x28
 8003a26:	ea45 050e 	orr.w	r5, r5, lr
 8003a2a:	d110      	bne.n	8003a4e <gpio_init+0xa6>
 8003a2c:	fa07 f202 	lsl.w	r2, r7, r2
 8003a30:	401a      	ands	r2, r3
 8003a32:	6142      	str	r2, [r0, #20]
 8003a34:	6045      	str	r5, [r0, #4]
 8003a36:	3601      	adds	r6, #1
 8003a38:	2e08      	cmp	r6, #8
 8003a3a:	d1e4      	bne.n	8003a06 <gpio_init+0x5e>
 8003a3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003a40:	2948      	cmp	r1, #72	; 0x48
 8003a42:	bf02      	ittt	eq
 8003a44:	fa07 f605 	lsleq.w	r6, r7, r5
 8003a48:	401e      	andeq	r6, r3
 8003a4a:	6106      	streq	r6, [r0, #16]
 8003a4c:	e7d3      	b.n	80039f6 <gpio_init+0x4e>
 8003a4e:	2948      	cmp	r1, #72	; 0x48
 8003a50:	bf02      	ittt	eq
 8003a52:	fa07 f202 	lsleq.w	r2, r7, r2
 8003a56:	401a      	andeq	r2, r3
 8003a58:	6102      	streq	r2, [r0, #16]
 8003a5a:	e7eb      	b.n	8003a34 <gpio_init+0x8c>

08003a5c <gpio_input_bit_get>:
 8003a5c:	6883      	ldr	r3, [r0, #8]
 8003a5e:	420b      	tst	r3, r1
 8003a60:	bf14      	ite	ne
 8003a62:	2001      	movne	r0, #1
 8003a64:	2000      	moveq	r0, #0
 8003a66:	4770      	bx	lr

08003a68 <gpio_pin_remap_config>:
 8003a68:	2800      	cmp	r0, #0
 8003a6a:	4a16      	ldr	r2, [pc, #88]	; (8003ac4 <gpio_pin_remap_config+0x5c>)
 8003a6c:	b530      	push	{r4, r5, lr}
 8003a6e:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8003a72:	bfb4      	ite	lt
 8003a74:	69d3      	ldrlt	r3, [r2, #28]
 8003a76:	6853      	ldrge	r3, [r2, #4]
 8003a78:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8003a7c:	b284      	uxth	r4, r0
 8003a7e:	d110      	bne.n	8003aa2 <gpio_pin_remap_config+0x3a>
 8003a80:	6855      	ldr	r5, [r2, #4]
 8003a82:	f025 65e0 	bic.w	r5, r5, #117440512	; 0x7000000
 8003a86:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8003a8a:	6055      	str	r5, [r2, #4]
 8003a8c:	b119      	cbz	r1, 8003a96 <gpio_pin_remap_config+0x2e>
 8003a8e:	0d42      	lsrs	r2, r0, #21
 8003a90:	0112      	lsls	r2, r2, #4
 8003a92:	4094      	lsls	r4, r2
 8003a94:	4323      	orrs	r3, r4
 8003a96:	4a0b      	ldr	r2, [pc, #44]	; (8003ac4 <gpio_pin_remap_config+0x5c>)
 8003a98:	2800      	cmp	r0, #0
 8003a9a:	bfb4      	ite	lt
 8003a9c:	61d3      	strlt	r3, [r2, #28]
 8003a9e:	6053      	strge	r3, [r2, #4]
 8003aa0:	bd30      	pop	{r4, r5, pc}
 8003aa2:	02c2      	lsls	r2, r0, #11
 8003aa4:	bf55      	itete	pl
 8003aa6:	0d42      	lsrpl	r2, r0, #21
 8003aa8:	2203      	movmi	r2, #3
 8003aaa:	0112      	lslpl	r2, r2, #4
 8003aac:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8003ab0:	bf4c      	ite	mi
 8003ab2:	40aa      	lslmi	r2, r5
 8003ab4:	fa04 f202 	lslpl.w	r2, r4, r2
 8003ab8:	ea23 0302 	bic.w	r3, r3, r2
 8003abc:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8003ac0:	e7e4      	b.n	8003a8c <gpio_pin_remap_config+0x24>
 8003ac2:	bf00      	nop
 8003ac4:	40010000 	andmi	r0, r1, r0

08003ac8 <pmu_backup_write_enable>:
 8003ac8:	4a02      	ldr	r2, [pc, #8]	; (8003ad4 <pmu_backup_write_enable+0xc>)
 8003aca:	6813      	ldr	r3, [r2, #0]
 8003acc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003ad0:	6013      	str	r3, [r2, #0]
 8003ad2:	4770      	bx	lr
 8003ad4:	40007000 	andmi	r7, r0, r0

08003ad8 <rcu_periph_clock_enable>:
 8003ad8:	0983      	lsrs	r3, r0, #6
 8003ada:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8003ade:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8003ae2:	f000 001f 	and.w	r0, r0, #31
 8003ae6:	6819      	ldr	r1, [r3, #0]
 8003ae8:	2201      	movs	r2, #1
 8003aea:	4082      	lsls	r2, r0
 8003aec:	430a      	orrs	r2, r1
 8003aee:	601a      	str	r2, [r3, #0]
 8003af0:	4770      	bx	lr

08003af2 <rcu_periph_clock_disable>:
 8003af2:	0983      	lsrs	r3, r0, #6
 8003af4:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8003af8:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8003afc:	f000 001f 	and.w	r0, r0, #31
 8003b00:	681a      	ldr	r2, [r3, #0]
 8003b02:	2101      	movs	r1, #1
 8003b04:	4081      	lsls	r1, r0
 8003b06:	ea22 0201 	bic.w	r2, r2, r1
 8003b0a:	601a      	str	r2, [r3, #0]
 8003b0c:	4770      	bx	lr

08003b0e <rcu_periph_reset_enable>:
 8003b0e:	f7ff bfe3 	b.w	8003ad8 <rcu_periph_clock_enable>

08003b12 <rcu_periph_reset_disable>:
 8003b12:	f7ff bfee 	b.w	8003af2 <rcu_periph_clock_disable>
	...

08003b18 <rcu_adc_clock_config>:
 8003b18:	4913      	ldr	r1, [pc, #76]	; (8003b68 <rcu_adc_clock_config+0x50>)
 8003b1a:	684b      	ldr	r3, [r1, #4]
 8003b1c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8003b1e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003b22:	b510      	push	{r4, lr}
 8003b24:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8003b28:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8003b2c:	280b      	cmp	r0, #11
 8003b2e:	d809      	bhi.n	8003b44 <rcu_adc_clock_config+0x2c>
 8003b30:	e8df f000 	tbb	[pc, r0]
 8003b34:	06060606 	streq	r0, [r6], -r6, lsl #12
 8003b38:	0b080b08 	bleq	8206760 <__exidx_end+0x2015f8>
 8003b3c:	12121212 	andsne	r1, r2, #536870913	; 0x20000001
 8003b40:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8003b44:	604b      	str	r3, [r1, #4]
 8003b46:	62ca      	str	r2, [r1, #44]	; 0x2c
 8003b48:	bd10      	pop	{r4, pc}
 8003b4a:	4c08      	ldr	r4, [pc, #32]	; (8003b6c <rcu_adc_clock_config+0x54>)
 8003b4c:	ea04 3080 	and.w	r0, r4, r0, lsl #14
 8003b50:	4303      	orrs	r3, r0
 8003b52:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003b56:	e7f5      	b.n	8003b44 <rcu_adc_clock_config+0x2c>
 8003b58:	4c05      	ldr	r4, [pc, #20]	; (8003b70 <rcu_adc_clock_config+0x58>)
 8003b5a:	ea04 3080 	and.w	r0, r4, r0, lsl #14
 8003b5e:	4303      	orrs	r3, r0
 8003b60:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8003b64:	e7ee      	b.n	8003b44 <rcu_adc_clock_config+0x2c>
 8003b66:	bf00      	nop
 8003b68:	40021000 	andmi	r1, r2, r0
 8003b6c:	fffec000 			; <UNDEFINED> instruction: 0xfffec000
 8003b70:	fffcc000 			; <UNDEFINED> instruction: 0xfffcc000

08003b74 <rcu_clock_freq_get>:
 8003b74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003b76:	4b35      	ldr	r3, [pc, #212]	; (8003c4c <rcu_clock_freq_get+0xd8>)
 8003b78:	b089      	sub	sp, #36	; 0x24
 8003b7a:	4604      	mov	r4, r0
 8003b7c:	ad04      	add	r5, sp, #16
 8003b7e:	f103 0610 	add.w	r6, r3, #16
 8003b82:	461f      	mov	r7, r3
 8003b84:	6818      	ldr	r0, [r3, #0]
 8003b86:	6859      	ldr	r1, [r3, #4]
 8003b88:	462a      	mov	r2, r5
 8003b8a:	c203      	stmia	r2!, {r0, r1}
 8003b8c:	3308      	adds	r3, #8
 8003b8e:	42b3      	cmp	r3, r6
 8003b90:	4615      	mov	r5, r2
 8003b92:	d1f7      	bne.n	8003b84 <rcu_clock_freq_get+0x10>
 8003b94:	6938      	ldr	r0, [r7, #16]
 8003b96:	6871      	ldr	r1, [r6, #4]
 8003b98:	4a2d      	ldr	r2, [pc, #180]	; (8003c50 <rcu_clock_freq_get+0xdc>)
 8003b9a:	466b      	mov	r3, sp
 8003b9c:	c303      	stmia	r3!, {r0, r1}
 8003b9e:	c303      	stmia	r3!, {r0, r1}
 8003ba0:	6853      	ldr	r3, [r2, #4]
 8003ba2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8003ba6:	2b02      	cmp	r3, #2
 8003ba8:	d143      	bne.n	8003c32 <rcu_clock_freq_get+0xbe>
 8003baa:	6853      	ldr	r3, [r2, #4]
 8003bac:	03df      	lsls	r7, r3, #15
 8003bae:	d538      	bpl.n	8003c22 <rcu_clock_freq_get+0xae>
 8003bb0:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8003bb2:	4928      	ldr	r1, [pc, #160]	; (8003c54 <rcu_clock_freq_get+0xe0>)
 8003bb4:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8003bb8:	4b27      	ldr	r3, [pc, #156]	; (8003c58 <rcu_clock_freq_get+0xe4>)
 8003bba:	bf18      	it	ne
 8003bbc:	4619      	movne	r1, r3
 8003bbe:	6853      	ldr	r3, [r2, #4]
 8003bc0:	039e      	lsls	r6, r3, #14
 8003bc2:	d500      	bpl.n	8003bc6 <rcu_clock_freq_get+0x52>
 8003bc4:	0849      	lsrs	r1, r1, #1
 8003bc6:	6853      	ldr	r3, [r2, #4]
 8003bc8:	6850      	ldr	r0, [r2, #4]
 8003bca:	0105      	lsls	r5, r0, #4
 8003bcc:	6850      	ldr	r0, [r2, #4]
 8003bce:	f3c3 4383 	ubfx	r3, r3, #18, #4
 8003bd2:	bf48      	it	mi
 8003bd4:	f043 0310 	orrmi.w	r3, r3, #16
 8003bd8:	0040      	lsls	r0, r0, #1
 8003bda:	d524      	bpl.n	8003c26 <rcu_clock_freq_get+0xb2>
 8003bdc:	f043 0320 	orr.w	r3, r3, #32
 8003be0:	2b3f      	cmp	r3, #63	; 0x3f
 8003be2:	d124      	bne.n	8003c2e <rcu_clock_freq_get+0xba>
 8003be4:	fb01 f003 	mul.w	r0, r1, r3
 8003be8:	6853      	ldr	r3, [r2, #4]
 8003bea:	6851      	ldr	r1, [r2, #4]
 8003bec:	6852      	ldr	r2, [r2, #4]
 8003bee:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8003bf2:	3320      	adds	r3, #32
 8003bf4:	446b      	add	r3, sp
 8003bf6:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8003bfa:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8003bfe:	3120      	adds	r1, #32
 8003c00:	3220      	adds	r2, #32
 8003c02:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8003c06:	4469      	add	r1, sp
 8003c08:	446a      	add	r2, sp
 8003c0a:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8003c0e:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8003c12:	fa20 f303 	lsr.w	r3, r0, r3
 8003c16:	2c03      	cmp	r4, #3
 8003c18:	d816      	bhi.n	8003c48 <rcu_clock_freq_get+0xd4>
 8003c1a:	e8df f004 	tbb	[pc, r4]
 8003c1e:	120f0c0d 	andne	r0, pc, #3328	; 0xd00
 8003c22:	490e      	ldr	r1, [pc, #56]	; (8003c5c <rcu_clock_freq_get+0xe8>)
 8003c24:	e7cf      	b.n	8003bc6 <rcu_clock_freq_get+0x52>
 8003c26:	2b0e      	cmp	r3, #14
 8003c28:	d801      	bhi.n	8003c2e <rcu_clock_freq_get+0xba>
 8003c2a:	3302      	adds	r3, #2
 8003c2c:	e7da      	b.n	8003be4 <rcu_clock_freq_get+0x70>
 8003c2e:	3301      	adds	r3, #1
 8003c30:	e7d8      	b.n	8003be4 <rcu_clock_freq_get+0x70>
 8003c32:	4808      	ldr	r0, [pc, #32]	; (8003c54 <rcu_clock_freq_get+0xe0>)
 8003c34:	e7d8      	b.n	8003be8 <rcu_clock_freq_get+0x74>
 8003c36:	4618      	mov	r0, r3
 8003c38:	b009      	add	sp, #36	; 0x24
 8003c3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003c3c:	fa23 f001 	lsr.w	r0, r3, r1
 8003c40:	e7fa      	b.n	8003c38 <rcu_clock_freq_get+0xc4>
 8003c42:	fa23 f002 	lsr.w	r0, r3, r2
 8003c46:	e7f7      	b.n	8003c38 <rcu_clock_freq_get+0xc4>
 8003c48:	2000      	movs	r0, #0
 8003c4a:	e7f5      	b.n	8003c38 <rcu_clock_freq_get+0xc4>
 8003c4c:	0800488c 	stmdaeq	r0, {r2, r3, r7, fp, lr}
 8003c50:	40021000 	andmi	r1, r2, r0
 8003c54:	007a1200 	rsbseq	r1, sl, r0, lsl #4
 8003c58:	02dc6c00 	sbcseq	r6, ip, #0, 24
 8003c5c:	003d0900 	eorseq	r0, sp, r0, lsl #18

08003c60 <timer_deinit>:
 8003c60:	b508      	push	{r3, lr}
 8003c62:	4b2d      	ldr	r3, [pc, #180]	; (8003d18 <timer_deinit+0xb8>)
 8003c64:	4298      	cmp	r0, r3
 8003c66:	d048      	beq.n	8003cfa <timer_deinit+0x9a>
 8003c68:	d816      	bhi.n	8003c98 <timer_deinit+0x38>
 8003c6a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8003c6e:	4298      	cmp	r0, r3
 8003c70:	d03c      	beq.n	8003cec <timer_deinit+0x8c>
 8003c72:	d807      	bhi.n	8003c84 <timer_deinit+0x24>
 8003c74:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8003c78:	d02a      	beq.n	8003cd0 <timer_deinit+0x70>
 8003c7a:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8003c7e:	4298      	cmp	r0, r3
 8003c80:	d02d      	beq.n	8003cde <timer_deinit+0x7e>
 8003c82:	bd08      	pop	{r3, pc}
 8003c84:	4b25      	ldr	r3, [pc, #148]	; (8003d1c <timer_deinit+0xbc>)
 8003c86:	4298      	cmp	r0, r3
 8003c88:	d1fb      	bne.n	8003c82 <timer_deinit+0x22>
 8003c8a:	f240 4003 	movw	r0, #1027	; 0x403
 8003c8e:	f7ff ff3e 	bl	8003b0e <rcu_periph_reset_enable>
 8003c92:	f240 4003 	movw	r0, #1027	; 0x403
 8003c96:	e017      	b.n	8003cc8 <timer_deinit+0x68>
 8003c98:	4b21      	ldr	r3, [pc, #132]	; (8003d20 <timer_deinit+0xc0>)
 8003c9a:	4298      	cmp	r0, r3
 8003c9c:	d00e      	beq.n	8003cbc <timer_deinit+0x5c>
 8003c9e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8003ca2:	4298      	cmp	r0, r3
 8003ca4:	d030      	beq.n	8003d08 <timer_deinit+0xa8>
 8003ca6:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 8003caa:	4298      	cmp	r0, r3
 8003cac:	d1e9      	bne.n	8003c82 <timer_deinit+0x22>
 8003cae:	f240 4005 	movw	r0, #1029	; 0x405
 8003cb2:	f7ff ff2c 	bl	8003b0e <rcu_periph_reset_enable>
 8003cb6:	f240 4005 	movw	r0, #1029	; 0x405
 8003cba:	e005      	b.n	8003cc8 <timer_deinit+0x68>
 8003cbc:	f240 300b 	movw	r0, #779	; 0x30b
 8003cc0:	f7ff ff25 	bl	8003b0e <rcu_periph_reset_enable>
 8003cc4:	f240 300b 	movw	r0, #779	; 0x30b
 8003cc8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003ccc:	f7ff bf21 	b.w	8003b12 <rcu_periph_reset_disable>
 8003cd0:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8003cd4:	f7ff ff1b 	bl	8003b0e <rcu_periph_reset_enable>
 8003cd8:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8003cdc:	e7f4      	b.n	8003cc8 <timer_deinit+0x68>
 8003cde:	f240 4001 	movw	r0, #1025	; 0x401
 8003ce2:	f7ff ff14 	bl	8003b0e <rcu_periph_reset_enable>
 8003ce6:	f240 4001 	movw	r0, #1025	; 0x401
 8003cea:	e7ed      	b.n	8003cc8 <timer_deinit+0x68>
 8003cec:	f240 4002 	movw	r0, #1026	; 0x402
 8003cf0:	f7ff ff0d 	bl	8003b0e <rcu_periph_reset_enable>
 8003cf4:	f240 4002 	movw	r0, #1026	; 0x402
 8003cf8:	e7e6      	b.n	8003cc8 <timer_deinit+0x68>
 8003cfa:	f240 4004 	movw	r0, #1028	; 0x404
 8003cfe:	f7ff ff06 	bl	8003b0e <rcu_periph_reset_enable>
 8003d02:	f240 4004 	movw	r0, #1028	; 0x404
 8003d06:	e7df      	b.n	8003cc8 <timer_deinit+0x68>
 8003d08:	f240 300d 	movw	r0, #781	; 0x30d
 8003d0c:	f7ff feff 	bl	8003b0e <rcu_periph_reset_enable>
 8003d10:	f240 300d 	movw	r0, #781	; 0x30d
 8003d14:	e7d8      	b.n	8003cc8 <timer_deinit+0x68>
 8003d16:	bf00      	nop
 8003d18:	40001000 	andmi	r1, r0, r0
 8003d1c:	40000c00 	andmi	r0, r0, r0, lsl #24
 8003d20:	40012c00 	andmi	r2, r1, r0, lsl #24

08003d24 <timer_init>:
 8003d24:	880b      	ldrh	r3, [r1, #0]
 8003d26:	6283      	str	r3, [r0, #40]	; 0x28
 8003d28:	4b1a      	ldr	r3, [pc, #104]	; (8003d94 <timer_init+0x70>)
 8003d2a:	4298      	cmp	r0, r3
 8003d2c:	d007      	beq.n	8003d3e <timer_init+0x1a>
 8003d2e:	f420 6340 	bic.w	r3, r0, #3072	; 0xc00
 8003d32:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003d36:	d002      	beq.n	8003d3e <timer_init+0x1a>
 8003d38:	4b17      	ldr	r3, [pc, #92]	; (8003d98 <timer_init+0x74>)
 8003d3a:	4298      	cmp	r0, r3
 8003d3c:	d10b      	bne.n	8003d56 <timer_init+0x32>
 8003d3e:	6803      	ldr	r3, [r0, #0]
 8003d40:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003d44:	6003      	str	r3, [r0, #0]
 8003d46:	6802      	ldr	r2, [r0, #0]
 8003d48:	884b      	ldrh	r3, [r1, #2]
 8003d4a:	4313      	orrs	r3, r2
 8003d4c:	6003      	str	r3, [r0, #0]
 8003d4e:	6802      	ldr	r2, [r0, #0]
 8003d50:	888b      	ldrh	r3, [r1, #4]
 8003d52:	4313      	orrs	r3, r2
 8003d54:	6003      	str	r3, [r0, #0]
 8003d56:	688b      	ldr	r3, [r1, #8]
 8003d58:	62c3      	str	r3, [r0, #44]	; 0x2c
 8003d5a:	4b10      	ldr	r3, [pc, #64]	; (8003d9c <timer_init+0x78>)
 8003d5c:	4298      	cmp	r0, r3
 8003d5e:	d003      	beq.n	8003d68 <timer_init+0x44>
 8003d60:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003d64:	4298      	cmp	r0, r3
 8003d66:	d104      	bne.n	8003d72 <timer_init+0x4e>
 8003d68:	6943      	ldr	r3, [r0, #20]
 8003d6a:	f043 0301 	orr.w	r3, r3, #1
 8003d6e:	6143      	str	r3, [r0, #20]
 8003d70:	4770      	bx	lr
 8003d72:	6803      	ldr	r3, [r0, #0]
 8003d74:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003d78:	6003      	str	r3, [r0, #0]
 8003d7a:	6802      	ldr	r2, [r0, #0]
 8003d7c:	88cb      	ldrh	r3, [r1, #6]
 8003d7e:	4313      	orrs	r3, r2
 8003d80:	6003      	str	r3, [r0, #0]
 8003d82:	4b04      	ldr	r3, [pc, #16]	; (8003d94 <timer_init+0x70>)
 8003d84:	4298      	cmp	r0, r3
 8003d86:	d002      	beq.n	8003d8e <timer_init+0x6a>
 8003d88:	4b03      	ldr	r3, [pc, #12]	; (8003d98 <timer_init+0x74>)
 8003d8a:	4298      	cmp	r0, r3
 8003d8c:	d1ec      	bne.n	8003d68 <timer_init+0x44>
 8003d8e:	7b0b      	ldrb	r3, [r1, #12]
 8003d90:	6303      	str	r3, [r0, #48]	; 0x30
 8003d92:	e7e9      	b.n	8003d68 <timer_init+0x44>
 8003d94:	40012c00 	andmi	r2, r1, r0, lsl #24
 8003d98:	40013400 	andmi	r3, r1, r0, lsl #8
 8003d9c:	40001000 	andmi	r1, r0, r0

08003da0 <timer_enable>:
 8003da0:	6803      	ldr	r3, [r0, #0]
 8003da2:	f043 0301 	orr.w	r3, r3, #1
 8003da6:	6003      	str	r3, [r0, #0]
 8003da8:	4770      	bx	lr

08003daa <timer_interrupt_enable>:
 8003daa:	68c3      	ldr	r3, [r0, #12]
 8003dac:	4319      	orrs	r1, r3
 8003dae:	60c1      	str	r1, [r0, #12]
 8003db0:	4770      	bx	lr

08003db2 <timer_interrupt_flag_clear>:
 8003db2:	43c9      	mvns	r1, r1
 8003db4:	6101      	str	r1, [r0, #16]
 8003db6:	4770      	bx	lr

08003db8 <timer_flag_clear>:
 8003db8:	43c9      	mvns	r1, r1
 8003dba:	6101      	str	r1, [r0, #16]
 8003dbc:	4770      	bx	lr

08003dbe <timer_channel_output_mode_config>:
 8003dbe:	2903      	cmp	r1, #3
 8003dc0:	d81a      	bhi.n	8003df8 <timer_channel_output_mode_config+0x3a>
 8003dc2:	e8df f001 	tbb	[pc, r1]
 8003dc6:	1a120a02 	bne	84865d6 <__exidx_end+0x48146e>
 8003dca:	6983      	ldr	r3, [r0, #24]
 8003dcc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003dd0:	6183      	str	r3, [r0, #24]
 8003dd2:	6983      	ldr	r3, [r0, #24]
 8003dd4:	4313      	orrs	r3, r2
 8003dd6:	6183      	str	r3, [r0, #24]
 8003dd8:	4770      	bx	lr
 8003dda:	6983      	ldr	r3, [r0, #24]
 8003ddc:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003de0:	6183      	str	r3, [r0, #24]
 8003de2:	6983      	ldr	r3, [r0, #24]
 8003de4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8003de8:	e7f5      	b.n	8003dd6 <timer_channel_output_mode_config+0x18>
 8003dea:	69c3      	ldr	r3, [r0, #28]
 8003dec:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003df0:	61c3      	str	r3, [r0, #28]
 8003df2:	69c3      	ldr	r3, [r0, #28]
 8003df4:	4313      	orrs	r3, r2
 8003df6:	61c3      	str	r3, [r0, #28]
 8003df8:	4770      	bx	lr
 8003dfa:	69c3      	ldr	r3, [r0, #28]
 8003dfc:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003e00:	61c3      	str	r3, [r0, #28]
 8003e02:	69c3      	ldr	r3, [r0, #28]
 8003e04:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8003e08:	e7f5      	b.n	8003df6 <timer_channel_output_mode_config+0x38>

08003e0a <timer_channel_output_pulse_value_config>:
 8003e0a:	2903      	cmp	r1, #3
 8003e0c:	d80a      	bhi.n	8003e24 <timer_channel_output_pulse_value_config+0x1a>
 8003e0e:	e8df f001 	tbb	[pc, r1]
 8003e12:	08060402 	stmdaeq	r6, {r1, sl}
 8003e16:	6342      	str	r2, [r0, #52]	; 0x34
 8003e18:	4770      	bx	lr
 8003e1a:	6382      	str	r2, [r0, #56]	; 0x38
 8003e1c:	4770      	bx	lr
 8003e1e:	63c2      	str	r2, [r0, #60]	; 0x3c
 8003e20:	4770      	bx	lr
 8003e22:	6402      	str	r2, [r0, #64]	; 0x40
 8003e24:	4770      	bx	lr
	...

08003e28 <usart_deinit>:
 8003e28:	b508      	push	{r3, lr}
 8003e2a:	4b1d      	ldr	r3, [pc, #116]	; (8003ea0 <usart_deinit+0x78>)
 8003e2c:	4298      	cmp	r0, r3
 8003e2e:	d028      	beq.n	8003e82 <usart_deinit+0x5a>
 8003e30:	d808      	bhi.n	8003e44 <usart_deinit+0x1c>
 8003e32:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8003e36:	4298      	cmp	r0, r3
 8003e38:	d015      	beq.n	8003e66 <usart_deinit+0x3e>
 8003e3a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003e3e:	4298      	cmp	r0, r3
 8003e40:	d018      	beq.n	8003e74 <usart_deinit+0x4c>
 8003e42:	bd08      	pop	{r3, pc}
 8003e44:	4b17      	ldr	r3, [pc, #92]	; (8003ea4 <usart_deinit+0x7c>)
 8003e46:	4298      	cmp	r0, r3
 8003e48:	d022      	beq.n	8003e90 <usart_deinit+0x68>
 8003e4a:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8003e4e:	4298      	cmp	r0, r3
 8003e50:	d1f7      	bne.n	8003e42 <usart_deinit+0x1a>
 8003e52:	f240 300e 	movw	r0, #782	; 0x30e
 8003e56:	f7ff fe5a 	bl	8003b0e <rcu_periph_reset_enable>
 8003e5a:	f240 300e 	movw	r0, #782	; 0x30e
 8003e5e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003e62:	f7ff be56 	b.w	8003b12 <rcu_periph_reset_disable>
 8003e66:	f240 4011 	movw	r0, #1041	; 0x411
 8003e6a:	f7ff fe50 	bl	8003b0e <rcu_periph_reset_enable>
 8003e6e:	f240 4011 	movw	r0, #1041	; 0x411
 8003e72:	e7f4      	b.n	8003e5e <usart_deinit+0x36>
 8003e74:	f240 4012 	movw	r0, #1042	; 0x412
 8003e78:	f7ff fe49 	bl	8003b0e <rcu_periph_reset_enable>
 8003e7c:	f240 4012 	movw	r0, #1042	; 0x412
 8003e80:	e7ed      	b.n	8003e5e <usart_deinit+0x36>
 8003e82:	f240 4013 	movw	r0, #1043	; 0x413
 8003e86:	f7ff fe42 	bl	8003b0e <rcu_periph_reset_enable>
 8003e8a:	f240 4013 	movw	r0, #1043	; 0x413
 8003e8e:	e7e6      	b.n	8003e5e <usart_deinit+0x36>
 8003e90:	f240 4014 	movw	r0, #1044	; 0x414
 8003e94:	f7ff fe3b 	bl	8003b0e <rcu_periph_reset_enable>
 8003e98:	f240 4014 	movw	r0, #1044	; 0x414
 8003e9c:	e7df      	b.n	8003e5e <usart_deinit+0x36>
 8003e9e:	bf00      	nop
 8003ea0:	40004c00 	andmi	r4, r0, r0, lsl #24
 8003ea4:	40005000 	andmi	r5, r0, r0

08003ea8 <usart_baudrate_set>:
 8003ea8:	b538      	push	{r3, r4, r5, lr}
 8003eaa:	4b11      	ldr	r3, [pc, #68]	; (8003ef0 <usart_baudrate_set+0x48>)
 8003eac:	4298      	cmp	r0, r3
 8003eae:	4604      	mov	r4, r0
 8003eb0:	460d      	mov	r5, r1
 8003eb2:	d01b      	beq.n	8003eec <usart_baudrate_set+0x44>
 8003eb4:	d809      	bhi.n	8003eca <usart_baudrate_set+0x22>
 8003eb6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8003eba:	4298      	cmp	r0, r3
 8003ebc:	d016      	beq.n	8003eec <usart_baudrate_set+0x44>
 8003ebe:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003ec2:	4298      	cmp	r0, r3
 8003ec4:	d012      	beq.n	8003eec <usart_baudrate_set+0x44>
 8003ec6:	2000      	movs	r0, #0
 8003ec8:	e009      	b.n	8003ede <usart_baudrate_set+0x36>
 8003eca:	4b0a      	ldr	r3, [pc, #40]	; (8003ef4 <usart_baudrate_set+0x4c>)
 8003ecc:	4298      	cmp	r0, r3
 8003ece:	d00d      	beq.n	8003eec <usart_baudrate_set+0x44>
 8003ed0:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8003ed4:	4298      	cmp	r0, r3
 8003ed6:	d1f6      	bne.n	8003ec6 <usart_baudrate_set+0x1e>
 8003ed8:	2003      	movs	r0, #3
 8003eda:	f7ff fe4b 	bl	8003b74 <rcu_clock_freq_get>
 8003ede:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 8003ee2:	fbb3 f1f5 	udiv	r1, r3, r5
 8003ee6:	b289      	uxth	r1, r1
 8003ee8:	60a1      	str	r1, [r4, #8]
 8003eea:	bd38      	pop	{r3, r4, r5, pc}
 8003eec:	2002      	movs	r0, #2
 8003eee:	e7f4      	b.n	8003eda <usart_baudrate_set+0x32>
 8003ef0:	40004c00 	andmi	r4, r0, r0, lsl #24
 8003ef4:	40005000 	andmi	r5, r0, r0

08003ef8 <usart_parity_config>:
 8003ef8:	68c3      	ldr	r3, [r0, #12]
 8003efa:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8003efe:	60c3      	str	r3, [r0, #12]
 8003f00:	68c3      	ldr	r3, [r0, #12]
 8003f02:	4319      	orrs	r1, r3
 8003f04:	60c1      	str	r1, [r0, #12]
 8003f06:	4770      	bx	lr

08003f08 <usart_word_length_set>:
 8003f08:	68c3      	ldr	r3, [r0, #12]
 8003f0a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003f0e:	60c3      	str	r3, [r0, #12]
 8003f10:	68c3      	ldr	r3, [r0, #12]
 8003f12:	4319      	orrs	r1, r3
 8003f14:	60c1      	str	r1, [r0, #12]
 8003f16:	4770      	bx	lr

08003f18 <usart_stop_bit_set>:
 8003f18:	6903      	ldr	r3, [r0, #16]
 8003f1a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8003f1e:	6103      	str	r3, [r0, #16]
 8003f20:	6903      	ldr	r3, [r0, #16]
 8003f22:	4319      	orrs	r1, r3
 8003f24:	6101      	str	r1, [r0, #16]
 8003f26:	4770      	bx	lr

08003f28 <usart_transmit_config>:
 8003f28:	68c3      	ldr	r3, [r0, #12]
 8003f2a:	f023 0308 	bic.w	r3, r3, #8
 8003f2e:	4319      	orrs	r1, r3
 8003f30:	60c1      	str	r1, [r0, #12]
 8003f32:	4770      	bx	lr

08003f34 <usart_receive_config>:
 8003f34:	68c3      	ldr	r3, [r0, #12]
 8003f36:	f023 0304 	bic.w	r3, r3, #4
 8003f3a:	4319      	orrs	r1, r3
 8003f3c:	60c1      	str	r1, [r0, #12]
 8003f3e:	4770      	bx	lr

08003f40 <usart_hardware_flow_rts_config>:
 8003f40:	6943      	ldr	r3, [r0, #20]
 8003f42:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003f46:	4319      	orrs	r1, r3
 8003f48:	6141      	str	r1, [r0, #20]
 8003f4a:	4770      	bx	lr

08003f4c <usart_hardware_flow_cts_config>:
 8003f4c:	6943      	ldr	r3, [r0, #20]
 8003f4e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003f52:	4319      	orrs	r1, r3
 8003f54:	6141      	str	r1, [r0, #20]
 8003f56:	4770      	bx	lr

08003f58 <usart_dma_transmit_config>:
 8003f58:	6943      	ldr	r3, [r0, #20]
 8003f5a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003f5e:	4319      	orrs	r1, r3
 8003f60:	6141      	str	r1, [r0, #20]
 8003f62:	4770      	bx	lr

08003f64 <usart_flag_get>:
 8003f64:	098b      	lsrs	r3, r1, #6
 8003f66:	f001 011f 	and.w	r1, r1, #31
 8003f6a:	581a      	ldr	r2, [r3, r0]
 8003f6c:	2301      	movs	r3, #1
 8003f6e:	408b      	lsls	r3, r1
 8003f70:	4213      	tst	r3, r2
 8003f72:	bf14      	ite	ne
 8003f74:	2001      	movne	r0, #1
 8003f76:	2000      	moveq	r0, #0
 8003f78:	4770      	bx	lr

08003f7a <usart_flag_clear>:
 8003f7a:	b510      	push	{r4, lr}
 8003f7c:	098c      	lsrs	r4, r1, #6
 8003f7e:	2201      	movs	r2, #1
 8003f80:	5823      	ldr	r3, [r4, r0]
 8003f82:	f001 011f 	and.w	r1, r1, #31
 8003f86:	408a      	lsls	r2, r1
 8003f88:	ea23 0302 	bic.w	r3, r3, r2
 8003f8c:	5023      	str	r3, [r4, r0]
 8003f8e:	bd10      	pop	{r4, pc}

08003f90 <usart_interrupt_enable>:
 8003f90:	098a      	lsrs	r2, r1, #6
 8003f92:	b510      	push	{r4, lr}
 8003f94:	f001 011f 	and.w	r1, r1, #31
 8003f98:	5814      	ldr	r4, [r2, r0]
 8003f9a:	2301      	movs	r3, #1
 8003f9c:	408b      	lsls	r3, r1
 8003f9e:	4323      	orrs	r3, r4
 8003fa0:	5013      	str	r3, [r2, r0]
 8003fa2:	bd10      	pop	{r4, pc}

08003fa4 <usart_interrupt_disable>:
 8003fa4:	f7ff bfe9 	b.w	8003f7a <usart_flag_clear>

08003fa8 <usart_interrupt_flag_clear>:
 8003fa8:	b510      	push	{r4, lr}
 8003faa:	0d8c      	lsrs	r4, r1, #22
 8003fac:	2201      	movs	r2, #1
 8003fae:	5823      	ldr	r3, [r4, r0]
 8003fb0:	f3c1 4104 	ubfx	r1, r1, #16, #5
 8003fb4:	408a      	lsls	r2, r1
 8003fb6:	ea23 0302 	bic.w	r3, r3, r2
 8003fba:	5023      	str	r3, [r4, r0]
 8003fbc:	bd10      	pop	{r4, pc}
	...

08003fc0 <gd32_adc_init()>:
 8003fc0:	b510      	push	{r4, lr}
 8003fc2:	f240 6009 	movw	r0, #1545	; 0x609
 8003fc6:	4c21      	ldr	r4, [pc, #132]	; (800404c <gd32_adc_init()+0x8c>)
 8003fc8:	f7ff fd86 	bl	8003ad8 <rcu_periph_clock_enable>
 8003fcc:	2005      	movs	r0, #5
 8003fce:	f7ff fda3 	bl	8003b18 <rcu_adc_clock_config>
 8003fd2:	4620      	mov	r0, r4
 8003fd4:	2201      	movs	r2, #1
 8003fd6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003fda:	f000 fad1 	bl	8004580 <adc_special_function_config>
 8003fde:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8003fe2:	4620      	mov	r0, r4
 8003fe4:	2102      	movs	r1, #2
 8003fe6:	f000 fb62 	bl	80046ae <adc_external_trigger_source_config>
 8003fea:	2100      	movs	r1, #0
 8003fec:	4620      	mov	r0, r4
 8003fee:	f000 faef 	bl	80045d0 <adc_data_alignment_config>
 8003ff2:	2000      	movs	r0, #0
 8003ff4:	f000 fab4 	bl	8004560 <adc_mode_config>
 8003ff8:	2202      	movs	r2, #2
 8003ffa:	4611      	mov	r1, r2
 8003ffc:	4620      	mov	r0, r4
 8003ffe:	f000 faf0 	bl	80045e2 <adc_channel_length_config>
 8004002:	4620      	mov	r0, r4
 8004004:	2307      	movs	r3, #7
 8004006:	2210      	movs	r2, #16
 8004008:	2100      	movs	r1, #0
 800400a:	f000 fb07 	bl	800461c <adc_inserted_channel_config>
 800400e:	2307      	movs	r3, #7
 8004010:	4620      	mov	r0, r4
 8004012:	2211      	movs	r2, #17
 8004014:	2101      	movs	r1, #1
 8004016:	f000 fb01 	bl	800461c <adc_inserted_channel_config>
 800401a:	2201      	movs	r2, #1
 800401c:	2102      	movs	r1, #2
 800401e:	4620      	mov	r0, r4
 8004020:	f000 fb2a 	bl	8004678 <adc_external_trigger_config>
 8004024:	f000 fa92 	bl	800454c <adc_tempsensor_vrefint_enable>
 8004028:	4620      	mov	r0, r4
 800402a:	f000 fa75 	bl	8004518 <adc_enable>
 800402e:	2100      	movs	r1, #0
 8004030:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8004034:	f000 fa58 	bl	80044e8 <udelay(unsigned int, unsigned int)>
 8004038:	4620      	mov	r0, r4
 800403a:	f000 fa75 	bl	8004528 <adc_calibration_enable>
 800403e:	4620      	mov	r0, r4
 8004040:	2102      	movs	r1, #2
 8004042:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004046:	f000 bb43 	b.w	80046d0 <adc_software_trigger_enable>
 800404a:	bf00      	nop
 800404c:	40012400 	andmi	r2, r1, r0, lsl #8

08004050 <_stop() [clone .isra.0]>:
 8004050:	b508      	push	{r3, lr}
 8004052:	4806      	ldr	r0, [pc, #24]	; (800406c <_stop() [clone .isra.0]+0x1c>)
 8004054:	f000 fbf2 	bl	800483c <i2c_stop_on_bus>
 8004058:	4905      	ldr	r1, [pc, #20]	; (8004070 <_stop() [clone .isra.0]+0x20>)
 800405a:	f640 73ff 	movw	r3, #4095	; 0xfff
 800405e:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8004062:	0592      	lsls	r2, r2, #22
 8004064:	d501      	bpl.n	800406a <_stop() [clone .isra.0]+0x1a>
 8004066:	3b01      	subs	r3, #1
 8004068:	d1f9      	bne.n	800405e <_stop() [clone .isra.0]+0xe>
 800406a:	bd08      	pop	{r3, pc}
 800406c:	40005400 	andmi	r5, r0, r0, lsl #8
 8004070:	40005000 	andmi	r5, r0, r0

08004074 <gd32_i2c_begin>:
 8004074:	b508      	push	{r3, lr}
 8004076:	f240 7015 	movw	r0, #1813	; 0x715
 800407a:	f7ff fd2d 	bl	8003ad8 <rcu_periph_clock_enable>
 800407e:	f240 6003 	movw	r0, #1539	; 0x603
 8004082:	f7ff fd29 	bl	8003ad8 <rcu_periph_clock_enable>
 8004086:	f240 6003 	movw	r0, #1539	; 0x603
 800408a:	f7ff fd25 	bl	8003ad8 <rcu_periph_clock_enable>
 800408e:	4810      	ldr	r0, [pc, #64]	; (80040d0 <gd32_i2c_begin+0x5c>)
 8004090:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004094:	2203      	movs	r2, #3
 8004096:	211c      	movs	r1, #28
 8004098:	f7ff fc86 	bl	80039a8 <gpio_init>
 800409c:	f44f 7300 	mov.w	r3, #512	; 0x200
 80040a0:	2203      	movs	r2, #3
 80040a2:	480b      	ldr	r0, [pc, #44]	; (80040d0 <gd32_i2c_begin+0x5c>)
 80040a4:	211c      	movs	r1, #28
 80040a6:	f7ff fc7f 	bl	80039a8 <gpio_init>
 80040aa:	2101      	movs	r1, #1
 80040ac:	2002      	movs	r0, #2
 80040ae:	f7ff fcdb 	bl	8003a68 <gpio_pin_remap_config>
 80040b2:	4908      	ldr	r1, [pc, #32]	; (80040d4 <gd32_i2c_begin+0x60>)
 80040b4:	4808      	ldr	r0, [pc, #32]	; (80040d8 <gd32_i2c_begin+0x64>)
 80040b6:	2200      	movs	r2, #0
 80040b8:	f000 fb18 	bl	80046ec <i2c_clock_config>
 80040bc:	4806      	ldr	r0, [pc, #24]	; (80040d8 <gd32_i2c_begin+0x64>)
 80040be:	f000 fbb3 	bl	8004828 <i2c_enable>
 80040c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80040c6:	4804      	ldr	r0, [pc, #16]	; (80040d8 <gd32_i2c_begin+0x64>)
 80040c8:	2101      	movs	r1, #1
 80040ca:	f000 bb93 	b.w	80047f4 <i2c_ack_config>
 80040ce:	bf00      	nop
 80040d0:	40010c00 	andmi	r0, r1, r0, lsl #24
 80040d4:	00061a80 	andeq	r1, r6, r0, lsl #21
 80040d8:	40005400 	andmi	r5, r0, r0, lsl #8

080040dc <gd32_i2c_set_baudrate>:
 80040dc:	4601      	mov	r1, r0
 80040de:	2200      	movs	r2, #0
 80040e0:	4801      	ldr	r0, [pc, #4]	; (80040e8 <gd32_i2c_set_baudrate+0xc>)
 80040e2:	f000 bb03 	b.w	80046ec <i2c_clock_config>
 80040e6:	bf00      	nop
 80040e8:	40005400 	andmi	r5, r0, r0, lsl #8

080040ec <gd32_i2c_set_address>:
 80040ec:	4b01      	ldr	r3, [pc, #4]	; (80040f4 <gd32_i2c_set_address+0x8>)
 80040ee:	0040      	lsls	r0, r0, #1
 80040f0:	7018      	strb	r0, [r3, #0]
 80040f2:	4770      	bx	lr
 80040f4:	20001820 	andcs	r1, r0, r0, lsr #16

080040f8 <gd32_i2c_write>:
 80040f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80040fa:	4e30      	ldr	r6, [pc, #192]	; (80041bc <gd32_i2c_write+0xc4>)
 80040fc:	4604      	mov	r4, r0
 80040fe:	460f      	mov	r7, r1
 8004100:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004104:	f240 6101 	movw	r1, #1537	; 0x601
 8004108:	4630      	mov	r0, r6
 800410a:	f000 fba1 	bl	8004850 <i2c_flag_get>
 800410e:	b9b0      	cbnz	r0, 800413e <gd32_i2c_write+0x46>
 8004110:	482a      	ldr	r0, [pc, #168]	; (80041bc <gd32_i2c_write+0xc4>)
 8004112:	4e2a      	ldr	r6, [pc, #168]	; (80041bc <gd32_i2c_write+0xc4>)
 8004114:	f000 fb8d 	bl	8004832 <i2c_start_on_bus>
 8004118:	f640 75ff 	movw	r5, #4095	; 0xfff
 800411c:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8004120:	4630      	mov	r0, r6
 8004122:	f000 fb95 	bl	8004850 <i2c_flag_get>
 8004126:	b190      	cbz	r0, 800414e <gd32_i2c_write+0x56>
 8004128:	4b25      	ldr	r3, [pc, #148]	; (80041c0 <gd32_i2c_write+0xc8>)
 800412a:	4824      	ldr	r0, [pc, #144]	; (80041bc <gd32_i2c_write+0xc4>)
 800412c:	7819      	ldrb	r1, [r3, #0]
 800412e:	4e23      	ldr	r6, [pc, #140]	; (80041bc <gd32_i2c_write+0xc4>)
 8004130:	f06f 0201 	mvn.w	r2, #1
 8004134:	f000 fb70 	bl	8004818 <i2c_master_addressing>
 8004138:	f640 75ff 	movw	r5, #4095	; 0xfff
 800413c:	e00c      	b.n	8004158 <gd32_i2c_write+0x60>
 800413e:	3d01      	subs	r5, #1
 8004140:	d1e0      	bne.n	8004104 <gd32_i2c_write+0xc>
 8004142:	f7ff ff85 	bl	8004050 <_stop() [clone .isra.0]>
 8004146:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800414a:	4240      	negs	r0, r0
 800414c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800414e:	3d01      	subs	r5, #1
 8004150:	d1e4      	bne.n	800411c <gd32_i2c_write+0x24>
 8004152:	e7f6      	b.n	8004142 <gd32_i2c_write+0x4a>
 8004154:	3d01      	subs	r5, #1
 8004156:	d0f4      	beq.n	8004142 <gd32_i2c_write+0x4a>
 8004158:	f240 5101 	movw	r1, #1281	; 0x501
 800415c:	4630      	mov	r0, r6
 800415e:	f000 fb77 	bl	8004850 <i2c_flag_get>
 8004162:	2800      	cmp	r0, #0
 8004164:	d0f6      	beq.n	8004154 <gd32_i2c_write+0x5c>
 8004166:	4815      	ldr	r0, [pc, #84]	; (80041bc <gd32_i2c_write+0xc4>)
 8004168:	4e14      	ldr	r6, [pc, #80]	; (80041bc <gd32_i2c_write+0xc4>)
 800416a:	f240 5101 	movw	r1, #1281	; 0x501
 800416e:	f000 fb7a 	bl	8004866 <i2c_flag_clear>
 8004172:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004176:	f240 5107 	movw	r1, #1287	; 0x507
 800417a:	4630      	mov	r0, r6
 800417c:	f000 fb68 	bl	8004850 <i2c_flag_get>
 8004180:	2801      	cmp	r0, #1
 8004182:	d107      	bne.n	8004194 <gd32_i2c_write+0x9c>
 8004184:	4e0d      	ldr	r6, [pc, #52]	; (80041bc <gd32_i2c_write+0xc4>)
 8004186:	4427      	add	r7, r4
 8004188:	42a7      	cmp	r7, r4
 800418a:	d106      	bne.n	800419a <gd32_i2c_write+0xa2>
 800418c:	f7ff ff60 	bl	8004050 <_stop() [clone .isra.0]>
 8004190:	2000      	movs	r0, #0
 8004192:	e7da      	b.n	800414a <gd32_i2c_write+0x52>
 8004194:	3d01      	subs	r5, #1
 8004196:	d1ee      	bne.n	8004176 <gd32_i2c_write+0x7e>
 8004198:	e7d3      	b.n	8004142 <gd32_i2c_write+0x4a>
 800419a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800419e:	4630      	mov	r0, r6
 80041a0:	f000 fb51 	bl	8004846 <i2c_data_transmit>
 80041a4:	f640 75ff 	movw	r5, #4095	; 0xfff
 80041a8:	f240 5102 	movw	r1, #1282	; 0x502
 80041ac:	4630      	mov	r0, r6
 80041ae:	f000 fb4f 	bl	8004850 <i2c_flag_get>
 80041b2:	2800      	cmp	r0, #0
 80041b4:	d1e8      	bne.n	8004188 <gd32_i2c_write+0x90>
 80041b6:	3d01      	subs	r5, #1
 80041b8:	d1f6      	bne.n	80041a8 <gd32_i2c_write+0xb0>
 80041ba:	e7c2      	b.n	8004142 <gd32_i2c_write+0x4a>
 80041bc:	40005400 	andmi	r5, r0, r0, lsl #8
 80041c0:	20001820 	andcs	r1, r0, r0, lsr #16

080041c4 <gd32_i2c_read>:
 80041c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80041c8:	4f4d      	ldr	r7, [pc, #308]	; (8004300 <gd32_i2c_read+0x13c>)
 80041ca:	4680      	mov	r8, r0
 80041cc:	460c      	mov	r4, r1
 80041ce:	f640 76ff 	movw	r6, #4095	; 0xfff
 80041d2:	f240 6101 	movw	r1, #1537	; 0x601
 80041d6:	4638      	mov	r0, r7
 80041d8:	f000 fb3a 	bl	8004850 <i2c_flag_get>
 80041dc:	4605      	mov	r5, r0
 80041de:	bb08      	cbnz	r0, 8004224 <gd32_i2c_read+0x60>
 80041e0:	2c02      	cmp	r4, #2
 80041e2:	d103      	bne.n	80041ec <gd32_i2c_read+0x28>
 80041e4:	4601      	mov	r1, r0
 80041e6:	4846      	ldr	r0, [pc, #280]	; (8004300 <gd32_i2c_read+0x13c>)
 80041e8:	f000 fb0d 	bl	8004806 <i2c_ackpos_config>
 80041ec:	4844      	ldr	r0, [pc, #272]	; (8004300 <gd32_i2c_read+0x13c>)
 80041ee:	4f44      	ldr	r7, [pc, #272]	; (8004300 <gd32_i2c_read+0x13c>)
 80041f0:	f000 fb1f 	bl	8004832 <i2c_start_on_bus>
 80041f4:	f640 76ff 	movw	r6, #4095	; 0xfff
 80041f8:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80041fc:	4638      	mov	r0, r7
 80041fe:	f000 fb27 	bl	8004850 <i2c_flag_get>
 8004202:	b1a8      	cbz	r0, 8004230 <gd32_i2c_read+0x6c>
 8004204:	4b3f      	ldr	r3, [pc, #252]	; (8004304 <gd32_i2c_read+0x140>)
 8004206:	483e      	ldr	r0, [pc, #248]	; (8004300 <gd32_i2c_read+0x13c>)
 8004208:	7819      	ldrb	r1, [r3, #0]
 800420a:	2201      	movs	r2, #1
 800420c:	f000 fb04 	bl	8004818 <i2c_master_addressing>
 8004210:	2c02      	cmp	r4, #2
 8004212:	d803      	bhi.n	800421c <gd32_i2c_read+0x58>
 8004214:	483a      	ldr	r0, [pc, #232]	; (8004300 <gd32_i2c_read+0x13c>)
 8004216:	2100      	movs	r1, #0
 8004218:	f000 faec 	bl	80047f4 <i2c_ack_config>
 800421c:	4f38      	ldr	r7, [pc, #224]	; (8004300 <gd32_i2c_read+0x13c>)
 800421e:	f640 76ff 	movw	r6, #4095	; 0xfff
 8004222:	e00a      	b.n	800423a <gd32_i2c_read+0x76>
 8004224:	3e01      	subs	r6, #1
 8004226:	d1d4      	bne.n	80041d2 <gd32_i2c_read+0xe>
 8004228:	f7ff ff12 	bl	8004050 <_stop() [clone .isra.0]>
 800422c:	2504      	movs	r5, #4
 800422e:	e04d      	b.n	80042cc <gd32_i2c_read+0x108>
 8004230:	3e01      	subs	r6, #1
 8004232:	d1e1      	bne.n	80041f8 <gd32_i2c_read+0x34>
 8004234:	e7f8      	b.n	8004228 <gd32_i2c_read+0x64>
 8004236:	3e01      	subs	r6, #1
 8004238:	d0f6      	beq.n	8004228 <gd32_i2c_read+0x64>
 800423a:	f240 5101 	movw	r1, #1281	; 0x501
 800423e:	4638      	mov	r0, r7
 8004240:	f000 fb06 	bl	8004850 <i2c_flag_get>
 8004244:	2800      	cmp	r0, #0
 8004246:	d0f6      	beq.n	8004236 <gd32_i2c_read+0x72>
 8004248:	482d      	ldr	r0, [pc, #180]	; (8004300 <gd32_i2c_read+0x13c>)
 800424a:	f240 5101 	movw	r1, #1281	; 0x501
 800424e:	f000 fb0a 	bl	8004866 <i2c_flag_clear>
 8004252:	2c01      	cmp	r4, #1
 8004254:	d102      	bne.n	800425c <gd32_i2c_read+0x98>
 8004256:	482a      	ldr	r0, [pc, #168]	; (8004300 <gd32_i2c_read+0x13c>)
 8004258:	f000 faf0 	bl	800483c <i2c_stop_on_bus>
 800425c:	4e28      	ldr	r6, [pc, #160]	; (8004300 <gd32_i2c_read+0x13c>)
 800425e:	f640 77ff 	movw	r7, #4095	; 0xfff
 8004262:	e022      	b.n	80042aa <gd32_i2c_read+0xe6>
 8004264:	2c03      	cmp	r4, #3
 8004266:	d134      	bne.n	80042d2 <gd32_i2c_read+0x10e>
 8004268:	f640 79ff 	movw	r9, #4095	; 0xfff
 800426c:	e002      	b.n	8004274 <gd32_i2c_read+0xb0>
 800426e:	f1b9 0901 	subs.w	r9, r9, #1
 8004272:	d0d9      	beq.n	8004228 <gd32_i2c_read+0x64>
 8004274:	f240 5102 	movw	r1, #1282	; 0x502
 8004278:	4630      	mov	r0, r6
 800427a:	f000 fae9 	bl	8004850 <i2c_flag_get>
 800427e:	2800      	cmp	r0, #0
 8004280:	d0f5      	beq.n	800426e <gd32_i2c_read+0xaa>
 8004282:	2100      	movs	r1, #0
 8004284:	4630      	mov	r0, r6
 8004286:	f000 fab5 	bl	80047f4 <i2c_ack_config>
 800428a:	f240 5106 	movw	r1, #1286	; 0x506
 800428e:	4630      	mov	r0, r6
 8004290:	f000 fade 	bl	8004850 <i2c_flag_get>
 8004294:	b138      	cbz	r0, 80042a6 <gd32_i2c_read+0xe2>
 8004296:	4630      	mov	r0, r6
 8004298:	f000 fad7 	bl	800484a <i2c_data_receive>
 800429c:	f808 0b01 	strb.w	r0, [r8], #1
 80042a0:	3c01      	subs	r4, #1
 80042a2:	f640 77ff 	movw	r7, #4095	; 0xfff
 80042a6:	3f01      	subs	r7, #1
 80042a8:	d0be      	beq.n	8004228 <gd32_i2c_read+0x64>
 80042aa:	2c00      	cmp	r4, #0
 80042ac:	d1da      	bne.n	8004264 <gd32_i2c_read+0xa0>
 80042ae:	4916      	ldr	r1, [pc, #88]	; (8004308 <gd32_i2c_read+0x144>)
 80042b0:	f640 73ff 	movw	r3, #4095	; 0xfff
 80042b4:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 80042b8:	0592      	lsls	r2, r2, #22
 80042ba:	d41d      	bmi.n	80042f8 <gd32_i2c_read+0x134>
 80042bc:	4810      	ldr	r0, [pc, #64]	; (8004300 <gd32_i2c_read+0x13c>)
 80042be:	2101      	movs	r1, #1
 80042c0:	f000 fa98 	bl	80047f4 <i2c_ack_config>
 80042c4:	480e      	ldr	r0, [pc, #56]	; (8004300 <gd32_i2c_read+0x13c>)
 80042c6:	2101      	movs	r1, #1
 80042c8:	f000 fa9d 	bl	8004806 <i2c_ackpos_config>
 80042cc:	4628      	mov	r0, r5
 80042ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80042d2:	2c02      	cmp	r4, #2
 80042d4:	d1d9      	bne.n	800428a <gd32_i2c_read+0xc6>
 80042d6:	f640 79ff 	movw	r9, #4095	; 0xfff
 80042da:	e002      	b.n	80042e2 <gd32_i2c_read+0x11e>
 80042dc:	f1b9 0901 	subs.w	r9, r9, #1
 80042e0:	d0a2      	beq.n	8004228 <gd32_i2c_read+0x64>
 80042e2:	f240 5102 	movw	r1, #1282	; 0x502
 80042e6:	4630      	mov	r0, r6
 80042e8:	f000 fab2 	bl	8004850 <i2c_flag_get>
 80042ec:	2800      	cmp	r0, #0
 80042ee:	d0f5      	beq.n	80042dc <gd32_i2c_read+0x118>
 80042f0:	4630      	mov	r0, r6
 80042f2:	f000 faa3 	bl	800483c <i2c_stop_on_bus>
 80042f6:	e7c8      	b.n	800428a <gd32_i2c_read+0xc6>
 80042f8:	3b01      	subs	r3, #1
 80042fa:	d1db      	bne.n	80042b4 <gd32_i2c_read+0xf0>
 80042fc:	e796      	b.n	800422c <gd32_i2c_read+0x68>
 80042fe:	bf00      	nop
 8004300:	40005400 	andmi	r5, r0, r0, lsl #8
 8004304:	20001820 	andcs	r1, r0, r0, lsr #16
 8004308:	40005000 	andmi	r5, r0, r0

0800430c <gd32_uart_begin>:
 800430c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800430e:	461e      	mov	r6, r3
 8004310:	4b63      	ldr	r3, [pc, #396]	; (80044a0 <gd32_uart_begin+0x194>)
 8004312:	4298      	cmp	r0, r3
 8004314:	4604      	mov	r4, r0
 8004316:	460f      	mov	r7, r1
 8004318:	4615      	mov	r5, r2
 800431a:	d03b      	beq.n	8004394 <gd32_uart_begin+0x88>
 800431c:	d80a      	bhi.n	8004334 <gd32_uart_begin+0x28>
 800431e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004322:	4298      	cmp	r0, r3
 8004324:	d02f      	beq.n	8004386 <gd32_uart_begin+0x7a>
 8004326:	f240 7012 	movw	r0, #1810	; 0x712
 800432a:	f7ff fbd5 	bl	8003ad8 <rcu_periph_clock_enable>
 800432e:	f240 6004 	movw	r0, #1540	; 0x604
 8004332:	e008      	b.n	8004346 <gd32_uart_begin+0x3a>
 8004334:	4b5b      	ldr	r3, [pc, #364]	; (80044a4 <gd32_uart_begin+0x198>)
 8004336:	4298      	cmp	r0, r3
 8004338:	d02f      	beq.n	800439a <gd32_uart_begin+0x8e>
 800433a:	f240 600e 	movw	r0, #1550	; 0x60e
 800433e:	f7ff fbcb 	bl	8003ad8 <rcu_periph_clock_enable>
 8004342:	f240 6003 	movw	r0, #1539	; 0x603
 8004346:	f7ff fbc7 	bl	8003ad8 <rcu_periph_clock_enable>
 800434a:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 800434e:	f7ff fbc3 	bl	8003ad8 <rcu_periph_clock_enable>
 8004352:	4b53      	ldr	r3, [pc, #332]	; (80044a0 <gd32_uart_begin+0x194>)
 8004354:	429c      	cmp	r4, r3
 8004356:	f000 8084 	beq.w	8004462 <gd32_uart_begin+0x156>
 800435a:	d829      	bhi.n	80043b0 <gd32_uart_begin+0xa4>
 800435c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004360:	429c      	cmp	r4, r3
 8004362:	d071      	beq.n	8004448 <gd32_uart_begin+0x13c>
 8004364:	4850      	ldr	r0, [pc, #320]	; (80044a8 <gd32_uart_begin+0x19c>)
 8004366:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800436a:	2203      	movs	r2, #3
 800436c:	2118      	movs	r1, #24
 800436e:	f7ff fb1b 	bl	80039a8 <gpio_init>
 8004372:	484d      	ldr	r0, [pc, #308]	; (80044a8 <gd32_uart_begin+0x19c>)
 8004374:	2104      	movs	r1, #4
 8004376:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800437a:	2203      	movs	r2, #3
 800437c:	f7ff fb14 	bl	80039a8 <gpio_init>
 8004380:	484a      	ldr	r0, [pc, #296]	; (80044ac <gd32_uart_begin+0x1a0>)
 8004382:	2101      	movs	r1, #1
 8004384:	e025      	b.n	80043d2 <gd32_uart_begin+0xc6>
 8004386:	f240 7011 	movw	r0, #1809	; 0x711
 800438a:	f7ff fba5 	bl	8003ad8 <rcu_periph_clock_enable>
 800438e:	f240 6002 	movw	r0, #1538	; 0x602
 8004392:	e7d8      	b.n	8004346 <gd32_uart_begin+0x3a>
 8004394:	f240 7013 	movw	r0, #1811	; 0x713
 8004398:	e7c7      	b.n	800432a <gd32_uart_begin+0x1e>
 800439a:	f240 7014 	movw	r0, #1812	; 0x714
 800439e:	f7ff fb9b 	bl	8003ad8 <rcu_periph_clock_enable>
 80043a2:	f240 6004 	movw	r0, #1540	; 0x604
 80043a6:	f7ff fb97 	bl	8003ad8 <rcu_periph_clock_enable>
 80043aa:	f240 6005 	movw	r0, #1541	; 0x605
 80043ae:	e7ca      	b.n	8004346 <gd32_uart_begin+0x3a>
 80043b0:	4b3c      	ldr	r3, [pc, #240]	; (80044a4 <gd32_uart_begin+0x198>)
 80043b2:	429c      	cmp	r4, r3
 80043b4:	d062      	beq.n	800447c <gd32_uart_begin+0x170>
 80043b6:	483e      	ldr	r0, [pc, #248]	; (80044b0 <gd32_uart_begin+0x1a4>)
 80043b8:	2340      	movs	r3, #64	; 0x40
 80043ba:	2203      	movs	r2, #3
 80043bc:	2118      	movs	r1, #24
 80043be:	f7ff faf3 	bl	80039a8 <gpio_init>
 80043c2:	483b      	ldr	r0, [pc, #236]	; (80044b0 <gd32_uart_begin+0x1a4>)
 80043c4:	2104      	movs	r1, #4
 80043c6:	2380      	movs	r3, #128	; 0x80
 80043c8:	2203      	movs	r2, #3
 80043ca:	f7ff faed 	bl	80039a8 <gpio_init>
 80043ce:	2101      	movs	r1, #1
 80043d0:	2004      	movs	r0, #4
 80043d2:	f7ff fb49 	bl	8003a68 <gpio_pin_remap_config>
 80043d6:	4620      	mov	r0, r4
 80043d8:	f7ff fd26 	bl	8003e28 <usart_deinit>
 80043dc:	68e3      	ldr	r3, [r4, #12]
 80043de:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80043e2:	60e3      	str	r3, [r4, #12]
 80043e4:	4639      	mov	r1, r7
 80043e6:	4620      	mov	r0, r4
 80043e8:	f7ff fd5e 	bl	8003ea8 <usart_baudrate_set>
 80043ec:	f1a5 0309 	sub.w	r3, r5, #9
 80043f0:	4259      	negs	r1, r3
 80043f2:	4159      	adcs	r1, r3
 80043f4:	0309      	lsls	r1, r1, #12
 80043f6:	4620      	mov	r0, r4
 80043f8:	f7ff fd86 	bl	8003f08 <usart_word_length_set>
 80043fc:	9906      	ldr	r1, [sp, #24]
 80043fe:	1e8a      	subs	r2, r1, #2
 8004400:	4251      	negs	r1, r2
 8004402:	4151      	adcs	r1, r2
 8004404:	0349      	lsls	r1, r1, #13
 8004406:	4620      	mov	r0, r4
 8004408:	f7ff fd86 	bl	8003f18 <usart_stop_bit_set>
 800440c:	2e01      	cmp	r6, #1
 800440e:	d041      	beq.n	8004494 <gd32_uart_begin+0x188>
 8004410:	2e02      	cmp	r6, #2
 8004412:	d142      	bne.n	800449a <gd32_uart_begin+0x18e>
 8004414:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8004418:	4620      	mov	r0, r4
 800441a:	f7ff fd6d 	bl	8003ef8 <usart_parity_config>
 800441e:	2100      	movs	r1, #0
 8004420:	4620      	mov	r0, r4
 8004422:	f7ff fd8d 	bl	8003f40 <usart_hardware_flow_rts_config>
 8004426:	2100      	movs	r1, #0
 8004428:	4620      	mov	r0, r4
 800442a:	f7ff fd8f 	bl	8003f4c <usart_hardware_flow_cts_config>
 800442e:	2104      	movs	r1, #4
 8004430:	4620      	mov	r0, r4
 8004432:	f7ff fd7f 	bl	8003f34 <usart_receive_config>
 8004436:	2108      	movs	r1, #8
 8004438:	4620      	mov	r0, r4
 800443a:	f7ff fd75 	bl	8003f28 <usart_transmit_config>
 800443e:	68e3      	ldr	r3, [r4, #12]
 8004440:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8004444:	60e3      	str	r3, [r4, #12]
 8004446:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004448:	481a      	ldr	r0, [pc, #104]	; (80044b4 <gd32_uart_begin+0x1a8>)
 800444a:	2304      	movs	r3, #4
 800444c:	2203      	movs	r2, #3
 800444e:	2118      	movs	r1, #24
 8004450:	f7ff faaa 	bl	80039a8 <gpio_init>
 8004454:	4817      	ldr	r0, [pc, #92]	; (80044b4 <gd32_uart_begin+0x1a8>)
 8004456:	2308      	movs	r3, #8
 8004458:	2203      	movs	r2, #3
 800445a:	2104      	movs	r1, #4
 800445c:	f7ff faa4 	bl	80039a8 <gpio_init>
 8004460:	e7b9      	b.n	80043d6 <gd32_uart_begin+0xca>
 8004462:	4811      	ldr	r0, [pc, #68]	; (80044a8 <gd32_uart_begin+0x19c>)
 8004464:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004468:	2203      	movs	r2, #3
 800446a:	2118      	movs	r1, #24
 800446c:	f7ff fa9c 	bl	80039a8 <gpio_init>
 8004470:	480d      	ldr	r0, [pc, #52]	; (80044a8 <gd32_uart_begin+0x19c>)
 8004472:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8004476:	2203      	movs	r2, #3
 8004478:	2104      	movs	r1, #4
 800447a:	e7ef      	b.n	800445c <gd32_uart_begin+0x150>
 800447c:	480a      	ldr	r0, [pc, #40]	; (80044a8 <gd32_uart_begin+0x19c>)
 800447e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004482:	2203      	movs	r2, #3
 8004484:	2118      	movs	r1, #24
 8004486:	f7ff fa8f 	bl	80039a8 <gpio_init>
 800448a:	2304      	movs	r3, #4
 800448c:	480a      	ldr	r0, [pc, #40]	; (80044b8 <gd32_uart_begin+0x1ac>)
 800448e:	2203      	movs	r2, #3
 8004490:	4619      	mov	r1, r3
 8004492:	e7e3      	b.n	800445c <gd32_uart_begin+0x150>
 8004494:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8004498:	e7be      	b.n	8004418 <gd32_uart_begin+0x10c>
 800449a:	2100      	movs	r1, #0
 800449c:	e7bc      	b.n	8004418 <gd32_uart_begin+0x10c>
 800449e:	bf00      	nop
 80044a0:	40004c00 	andmi	r4, r0, r0, lsl #24
 80044a4:	40005000 	andmi	r5, r0, r0
 80044a8:	40011000 	andmi	r1, r1, r0
 80044ac:	00140010 	andseq	r0, r4, r0, lsl r0
 80044b0:	40010c00 	andmi	r0, r1, r0, lsl #24
 80044b4:	40010800 	andmi	r0, r1, r0, lsl #16
 80044b8:	40011400 	andmi	r1, r1, r0, lsl #8

080044bc <micros_init()>:
 80044bc:	4770      	bx	lr
	...

080044c0 <udelay_init()>:
 80044c0:	4a07      	ldr	r2, [pc, #28]	; (80044e0 <udelay_init()+0x20>)
 80044c2:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 80044c6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80044ca:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 80044ce:	4b05      	ldr	r3, [pc, #20]	; (80044e4 <udelay_init()+0x24>)
 80044d0:	2200      	movs	r2, #0
 80044d2:	605a      	str	r2, [r3, #4]
 80044d4:	681a      	ldr	r2, [r3, #0]
 80044d6:	f042 0201 	orr.w	r2, r2, #1
 80044da:	601a      	str	r2, [r3, #0]
 80044dc:	4770      	bx	lr
 80044de:	bf00      	nop
 80044e0:	e000ed00 	and	lr, r0, r0, lsl #26
 80044e4:	e0001000 	and	r1, r0, r0

080044e8 <udelay(unsigned int, unsigned int)>:
 80044e8:	2378      	movs	r3, #120	; 0x78
 80044ea:	b530      	push	{r4, r5, lr}
 80044ec:	4358      	muls	r0, r3
 80044ee:	b909      	cbnz	r1, 80044f4 <udelay(unsigned int, unsigned int)+0xc>
 80044f0:	4b08      	ldr	r3, [pc, #32]	; (8004514 <udelay(unsigned int, unsigned int)+0x2c>)
 80044f2:	6859      	ldr	r1, [r3, #4]
 80044f4:	4c07      	ldr	r4, [pc, #28]	; (8004514 <udelay(unsigned int, unsigned int)+0x2c>)
 80044f6:	2300      	movs	r3, #0
 80044f8:	6862      	ldr	r2, [r4, #4]
 80044fa:	4291      	cmp	r1, r2
 80044fc:	d0fc      	beq.n	80044f8 <udelay(unsigned int, unsigned int)+0x10>
 80044fe:	bf2a      	itet	cs
 8004500:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8004504:	189b      	addcc	r3, r3, r2
 8004506:	195b      	addcs	r3, r3, r5
 8004508:	1a5b      	subs	r3, r3, r1
 800450a:	4283      	cmp	r3, r0
 800450c:	d300      	bcc.n	8004510 <udelay(unsigned int, unsigned int)+0x28>
 800450e:	bd30      	pop	{r4, r5, pc}
 8004510:	4611      	mov	r1, r2
 8004512:	e7f1      	b.n	80044f8 <udelay(unsigned int, unsigned int)+0x10>
 8004514:	e0001000 	and	r1, r0, r0

08004518 <adc_enable>:
 8004518:	6883      	ldr	r3, [r0, #8]
 800451a:	07db      	lsls	r3, r3, #31
 800451c:	bf5e      	ittt	pl
 800451e:	6883      	ldrpl	r3, [r0, #8]
 8004520:	f043 0301 	orrpl.w	r3, r3, #1
 8004524:	6083      	strpl	r3, [r0, #8]
 8004526:	4770      	bx	lr

08004528 <adc_calibration_enable>:
 8004528:	6883      	ldr	r3, [r0, #8]
 800452a:	f043 0308 	orr.w	r3, r3, #8
 800452e:	f100 0208 	add.w	r2, r0, #8
 8004532:	6083      	str	r3, [r0, #8]
 8004534:	6813      	ldr	r3, [r2, #0]
 8004536:	0719      	lsls	r1, r3, #28
 8004538:	d4fc      	bmi.n	8004534 <adc_calibration_enable+0xc>
 800453a:	6883      	ldr	r3, [r0, #8]
 800453c:	f043 0304 	orr.w	r3, r3, #4
 8004540:	6083      	str	r3, [r0, #8]
 8004542:	6813      	ldr	r3, [r2, #0]
 8004544:	075b      	lsls	r3, r3, #29
 8004546:	d4fc      	bmi.n	8004542 <adc_calibration_enable+0x1a>
 8004548:	4770      	bx	lr
	...

0800454c <adc_tempsensor_vrefint_enable>:
 800454c:	4a03      	ldr	r2, [pc, #12]	; (800455c <adc_tempsensor_vrefint_enable+0x10>)
 800454e:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8004552:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8004556:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 800455a:	4770      	bx	lr
 800455c:	40012000 	andmi	r2, r1, r0

08004560 <adc_mode_config>:
 8004560:	4b06      	ldr	r3, [pc, #24]	; (800457c <adc_mode_config+0x1c>)
 8004562:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8004566:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 800456a:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 800456e:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8004572:	4310      	orrs	r0, r2
 8004574:	f8c3 0404 	str.w	r0, [r3, #1028]	; 0x404
 8004578:	4770      	bx	lr
 800457a:	bf00      	nop
 800457c:	40012000 	andmi	r2, r1, r0

08004580 <adc_special_function_config>:
 8004580:	b510      	push	{r4, lr}
 8004582:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8004586:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 800458a:	f001 0102 	and.w	r1, r1, #2
 800458e:	b17a      	cbz	r2, 80045b0 <adc_special_function_config+0x30>
 8004590:	b11b      	cbz	r3, 800459a <adc_special_function_config+0x1a>
 8004592:	6843      	ldr	r3, [r0, #4]
 8004594:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004598:	6043      	str	r3, [r0, #4]
 800459a:	b11c      	cbz	r4, 80045a4 <adc_special_function_config+0x24>
 800459c:	6843      	ldr	r3, [r0, #4]
 800459e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80045a2:	6043      	str	r3, [r0, #4]
 80045a4:	b119      	cbz	r1, 80045ae <adc_special_function_config+0x2e>
 80045a6:	6883      	ldr	r3, [r0, #8]
 80045a8:	f043 0302 	orr.w	r3, r3, #2
 80045ac:	6083      	str	r3, [r0, #8]
 80045ae:	bd10      	pop	{r4, pc}
 80045b0:	b11b      	cbz	r3, 80045ba <adc_special_function_config+0x3a>
 80045b2:	6843      	ldr	r3, [r0, #4]
 80045b4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80045b8:	6043      	str	r3, [r0, #4]
 80045ba:	b11c      	cbz	r4, 80045c4 <adc_special_function_config+0x44>
 80045bc:	6843      	ldr	r3, [r0, #4]
 80045be:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80045c2:	6043      	str	r3, [r0, #4]
 80045c4:	2900      	cmp	r1, #0
 80045c6:	d0f2      	beq.n	80045ae <adc_special_function_config+0x2e>
 80045c8:	6883      	ldr	r3, [r0, #8]
 80045ca:	f023 0302 	bic.w	r3, r3, #2
 80045ce:	e7ed      	b.n	80045ac <adc_special_function_config+0x2c>

080045d0 <adc_data_alignment_config>:
 80045d0:	6883      	ldr	r3, [r0, #8]
 80045d2:	b119      	cbz	r1, 80045dc <adc_data_alignment_config+0xc>
 80045d4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80045d8:	6083      	str	r3, [r0, #8]
 80045da:	4770      	bx	lr
 80045dc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80045e0:	e7fa      	b.n	80045d8 <adc_data_alignment_config+0x8>

080045e2 <adc_channel_length_config>:
 80045e2:	2901      	cmp	r1, #1
 80045e4:	d002      	beq.n	80045ec <adc_channel_length_config+0xa>
 80045e6:	2902      	cmp	r1, #2
 80045e8:	d00c      	beq.n	8004604 <adc_channel_length_config+0x22>
 80045ea:	4770      	bx	lr
 80045ec:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80045ee:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80045f2:	62c3      	str	r3, [r0, #44]	; 0x2c
 80045f4:	3a01      	subs	r2, #1
 80045f6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80045f8:	0512      	lsls	r2, r2, #20
 80045fa:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 80045fe:	431a      	orrs	r2, r3
 8004600:	62c2      	str	r2, [r0, #44]	; 0x2c
 8004602:	4770      	bx	lr
 8004604:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8004606:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 800460a:	6383      	str	r3, [r0, #56]	; 0x38
 800460c:	3a01      	subs	r2, #1
 800460e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8004610:	0512      	lsls	r2, r2, #20
 8004612:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8004616:	431a      	orrs	r2, r3
 8004618:	6382      	str	r2, [r0, #56]	; 0x38
 800461a:	4770      	bx	lr

0800461c <adc_inserted_channel_config>:
 800461c:	b530      	push	{r4, r5, lr}
 800461e:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8004620:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8004622:	f3c5 5501 	ubfx	r5, r5, #20, #2
 8004626:	3103      	adds	r1, #3
 8004628:	1b49      	subs	r1, r1, r5
 800462a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800462e:	251f      	movs	r5, #31
 8004630:	408d      	lsls	r5, r1
 8004632:	ea24 0405 	bic.w	r4, r4, r5
 8004636:	fa02 f101 	lsl.w	r1, r2, r1
 800463a:	4321      	orrs	r1, r4
 800463c:	2a09      	cmp	r2, #9
 800463e:	6381      	str	r1, [r0, #56]	; 0x38
 8004640:	d80a      	bhi.n	8004658 <adc_inserted_channel_config+0x3c>
 8004642:	6901      	ldr	r1, [r0, #16]
 8004644:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8004648:	2407      	movs	r4, #7
 800464a:	4094      	lsls	r4, r2
 800464c:	ea21 0104 	bic.w	r1, r1, r4
 8004650:	4093      	lsls	r3, r2
 8004652:	430b      	orrs	r3, r1
 8004654:	6103      	str	r3, [r0, #16]
 8004656:	bd30      	pop	{r4, r5, pc}
 8004658:	2a11      	cmp	r2, #17
 800465a:	d8fc      	bhi.n	8004656 <adc_inserted_channel_config+0x3a>
 800465c:	2103      	movs	r1, #3
 800465e:	f06f 051d 	mvn.w	r5, #29
 8004662:	fb11 5202 	smlabb	r2, r1, r2, r5
 8004666:	68c4      	ldr	r4, [r0, #12]
 8004668:	2107      	movs	r1, #7
 800466a:	4091      	lsls	r1, r2
 800466c:	ea24 0101 	bic.w	r1, r4, r1
 8004670:	4093      	lsls	r3, r2
 8004672:	430b      	orrs	r3, r1
 8004674:	60c3      	str	r3, [r0, #12]
 8004676:	e7ee      	b.n	8004656 <adc_inserted_channel_config+0x3a>

08004678 <adc_external_trigger_config>:
 8004678:	f001 0301 	and.w	r3, r1, #1
 800467c:	f001 0102 	and.w	r1, r1, #2
 8004680:	b152      	cbz	r2, 8004698 <adc_external_trigger_config+0x20>
 8004682:	b11b      	cbz	r3, 800468c <adc_external_trigger_config+0x14>
 8004684:	6883      	ldr	r3, [r0, #8]
 8004686:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800468a:	6083      	str	r3, [r0, #8]
 800468c:	b119      	cbz	r1, 8004696 <adc_external_trigger_config+0x1e>
 800468e:	6883      	ldr	r3, [r0, #8]
 8004690:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004694:	6083      	str	r3, [r0, #8]
 8004696:	4770      	bx	lr
 8004698:	b11b      	cbz	r3, 80046a2 <adc_external_trigger_config+0x2a>
 800469a:	6883      	ldr	r3, [r0, #8]
 800469c:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80046a0:	6083      	str	r3, [r0, #8]
 80046a2:	2900      	cmp	r1, #0
 80046a4:	d0f7      	beq.n	8004696 <adc_external_trigger_config+0x1e>
 80046a6:	6883      	ldr	r3, [r0, #8]
 80046a8:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80046ac:	e7f2      	b.n	8004694 <adc_external_trigger_config+0x1c>

080046ae <adc_external_trigger_source_config>:
 80046ae:	2901      	cmp	r1, #1
 80046b0:	d002      	beq.n	80046b8 <adc_external_trigger_source_config+0xa>
 80046b2:	2902      	cmp	r1, #2
 80046b4:	d008      	beq.n	80046c8 <adc_external_trigger_source_config+0x1a>
 80046b6:	4770      	bx	lr
 80046b8:	6883      	ldr	r3, [r0, #8]
 80046ba:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 80046be:	6083      	str	r3, [r0, #8]
 80046c0:	6883      	ldr	r3, [r0, #8]
 80046c2:	4313      	orrs	r3, r2
 80046c4:	6083      	str	r3, [r0, #8]
 80046c6:	4770      	bx	lr
 80046c8:	6883      	ldr	r3, [r0, #8]
 80046ca:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80046ce:	e7f6      	b.n	80046be <adc_external_trigger_source_config+0x10>

080046d0 <adc_software_trigger_enable>:
 80046d0:	07ca      	lsls	r2, r1, #31
 80046d2:	bf42      	ittt	mi
 80046d4:	6883      	ldrmi	r3, [r0, #8]
 80046d6:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 80046da:	6083      	strmi	r3, [r0, #8]
 80046dc:	078b      	lsls	r3, r1, #30
 80046de:	bf42      	ittt	mi
 80046e0:	6883      	ldrmi	r3, [r0, #8]
 80046e2:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 80046e6:	6083      	strmi	r3, [r0, #8]
 80046e8:	4770      	bx	lr
	...

080046ec <i2c_clock_config>:
 80046ec:	b570      	push	{r4, r5, r6, lr}
 80046ee:	4604      	mov	r4, r0
 80046f0:	4616      	mov	r6, r2
 80046f2:	460d      	mov	r5, r1
 80046f4:	b901      	cbnz	r1, 80046f8 <i2c_clock_config+0xc>
 80046f6:	e7fe      	b.n	80046f6 <i2c_clock_config+0xa>
 80046f8:	2002      	movs	r0, #2
 80046fa:	f7ff fa3b 	bl	8003b74 <rcu_clock_freq_get>
 80046fe:	4a39      	ldr	r2, [pc, #228]	; (80047e4 <i2c_clock_config+0xf8>)
 8004700:	4939      	ldr	r1, [pc, #228]	; (80047e8 <i2c_clock_config+0xfc>)
 8004702:	fbb0 f1f1 	udiv	r1, r0, r1
 8004706:	4290      	cmp	r0, r2
 8004708:	bf34      	ite	cc
 800470a:	460b      	movcc	r3, r1
 800470c:	233c      	movcs	r3, #60	; 0x3c
 800470e:	6862      	ldr	r2, [r4, #4]
 8004710:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8004714:	431a      	orrs	r2, r3
 8004716:	6062      	str	r2, [r4, #4]
 8004718:	4a34      	ldr	r2, [pc, #208]	; (80047ec <i2c_clock_config+0x100>)
 800471a:	4295      	cmp	r5, r2
 800471c:	d816      	bhi.n	800474c <i2c_clock_config+0x60>
 800471e:	3101      	adds	r1, #1
 8004720:	293b      	cmp	r1, #59	; 0x3b
 8004722:	d90d      	bls.n	8004740 <i2c_clock_config+0x54>
 8004724:	233c      	movs	r3, #60	; 0x3c
 8004726:	6223      	str	r3, [r4, #32]
 8004728:	006d      	lsls	r5, r5, #1
 800472a:	fbb0 f0f5 	udiv	r0, r0, r5
 800472e:	2804      	cmp	r0, #4
 8004730:	69e3      	ldr	r3, [r4, #28]
 8004732:	bf38      	it	cc
 8004734:	2004      	movcc	r0, #4
 8004736:	f3c0 000b 	ubfx	r0, r0, #0, #12
 800473a:	4318      	orrs	r0, r3
 800473c:	61e0      	str	r0, [r4, #28]
 800473e:	bd70      	pop	{r4, r5, r6, pc}
 8004740:	2902      	cmp	r1, #2
 8004742:	d801      	bhi.n	8004748 <i2c_clock_config+0x5c>
 8004744:	2302      	movs	r3, #2
 8004746:	e7ee      	b.n	8004726 <i2c_clock_config+0x3a>
 8004748:	6221      	str	r1, [r4, #32]
 800474a:	e7ed      	b.n	8004728 <i2c_clock_config+0x3c>
 800474c:	4a28      	ldr	r2, [pc, #160]	; (80047f0 <i2c_clock_config+0x104>)
 800474e:	4295      	cmp	r5, r2
 8004750:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004754:	d824      	bhi.n	80047a0 <i2c_clock_config+0xb4>
 8004756:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800475a:	4353      	muls	r3, r2
 800475c:	fbb3 f3f1 	udiv	r3, r3, r1
 8004760:	3301      	adds	r3, #1
 8004762:	6223      	str	r3, [r4, #32]
 8004764:	b9a6      	cbnz	r6, 8004790 <i2c_clock_config+0xa4>
 8004766:	eb05 0345 	add.w	r3, r5, r5, lsl #1
 800476a:	fbb0 f0f3 	udiv	r0, r0, r3
 800476e:	69e3      	ldr	r3, [r4, #28]
 8004770:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8004774:	61e3      	str	r3, [r4, #28]
 8004776:	f3c0 030b 	ubfx	r3, r0, #0, #12
 800477a:	b90b      	cbnz	r3, 8004780 <i2c_clock_config+0x94>
 800477c:	f040 0001 	orr.w	r0, r0, #1
 8004780:	69e3      	ldr	r3, [r4, #28]
 8004782:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004786:	61e3      	str	r3, [r4, #28]
 8004788:	69e3      	ldr	r3, [r4, #28]
 800478a:	4303      	orrs	r3, r0
 800478c:	61e3      	str	r3, [r4, #28]
 800478e:	e7d6      	b.n	800473e <i2c_clock_config+0x52>
 8004790:	2319      	movs	r3, #25
 8004792:	436b      	muls	r3, r5
 8004794:	fbb0 f0f3 	udiv	r0, r0, r3
 8004798:	69e3      	ldr	r3, [r4, #28]
 800479a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800479e:	e7e9      	b.n	8004774 <i2c_clock_config+0x88>
 80047a0:	2278      	movs	r2, #120	; 0x78
 80047a2:	4353      	muls	r3, r2
 80047a4:	fbb3 f3f1 	udiv	r3, r3, r1
 80047a8:	3301      	adds	r3, #1
 80047aa:	6223      	str	r3, [r4, #32]
 80047ac:	b996      	cbnz	r6, 80047d4 <i2c_clock_config+0xe8>
 80047ae:	69e3      	ldr	r3, [r4, #28]
 80047b0:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80047b4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80047b8:	fbb0 f0f5 	udiv	r0, r0, r5
 80047bc:	61e3      	str	r3, [r4, #28]
 80047be:	69e3      	ldr	r3, [r4, #28]
 80047c0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80047c4:	61e3      	str	r3, [r4, #28]
 80047c6:	69e3      	ldr	r3, [r4, #28]
 80047c8:	4303      	orrs	r3, r0
 80047ca:	61e3      	str	r3, [r4, #28]
 80047cc:	2301      	movs	r3, #1
 80047ce:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 80047d2:	e7b4      	b.n	800473e <i2c_clock_config+0x52>
 80047d4:	2319      	movs	r3, #25
 80047d6:	435d      	muls	r5, r3
 80047d8:	69e3      	ldr	r3, [r4, #28]
 80047da:	fbb0 f0f5 	udiv	r0, r0, r5
 80047de:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80047e2:	e7eb      	b.n	80047bc <i2c_clock_config+0xd0>
 80047e4:	03938700 	orrseq	r8, r3, #0, 14
 80047e8:	000f4240 	andeq	r4, pc, r0, asr #4
 80047ec:	000186a0 	andeq	r8, r1, r0, lsr #13
 80047f0:	00061a80 	andeq	r1, r6, r0, lsl #21

080047f4 <i2c_ack_config>:
 80047f4:	6803      	ldr	r3, [r0, #0]
 80047f6:	2901      	cmp	r1, #1
 80047f8:	bf0c      	ite	eq
 80047fa:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80047fe:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8004802:	6003      	str	r3, [r0, #0]
 8004804:	4770      	bx	lr

08004806 <i2c_ackpos_config>:
 8004806:	6803      	ldr	r3, [r0, #0]
 8004808:	b919      	cbnz	r1, 8004812 <i2c_ackpos_config+0xc>
 800480a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800480e:	6003      	str	r3, [r0, #0]
 8004810:	4770      	bx	lr
 8004812:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004816:	e7fa      	b.n	800480e <i2c_ackpos_config+0x8>

08004818 <i2c_master_addressing>:
 8004818:	3202      	adds	r2, #2
 800481a:	bf0c      	ite	eq
 800481c:	f021 0101 	biceq.w	r1, r1, #1
 8004820:	f041 0101 	orrne.w	r1, r1, #1
 8004824:	6101      	str	r1, [r0, #16]
 8004826:	4770      	bx	lr

08004828 <i2c_enable>:
 8004828:	6803      	ldr	r3, [r0, #0]
 800482a:	f043 0301 	orr.w	r3, r3, #1
 800482e:	6003      	str	r3, [r0, #0]
 8004830:	4770      	bx	lr

08004832 <i2c_start_on_bus>:
 8004832:	6803      	ldr	r3, [r0, #0]
 8004834:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004838:	6003      	str	r3, [r0, #0]
 800483a:	4770      	bx	lr

0800483c <i2c_stop_on_bus>:
 800483c:	6803      	ldr	r3, [r0, #0]
 800483e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004842:	6003      	str	r3, [r0, #0]
 8004844:	4770      	bx	lr

08004846 <i2c_data_transmit>:
 8004846:	6101      	str	r1, [r0, #16]
 8004848:	4770      	bx	lr

0800484a <i2c_data_receive>:
 800484a:	6900      	ldr	r0, [r0, #16]
 800484c:	b2c0      	uxtb	r0, r0
 800484e:	4770      	bx	lr

08004850 <i2c_flag_get>:
 8004850:	098b      	lsrs	r3, r1, #6
 8004852:	f001 011f 	and.w	r1, r1, #31
 8004856:	581a      	ldr	r2, [r3, r0]
 8004858:	2301      	movs	r3, #1
 800485a:	408b      	lsls	r3, r1
 800485c:	4213      	tst	r3, r2
 800485e:	bf14      	ite	ne
 8004860:	2001      	movne	r0, #1
 8004862:	2000      	moveq	r0, #0
 8004864:	4770      	bx	lr

08004866 <i2c_flag_clear>:
 8004866:	f240 5301 	movw	r3, #1281	; 0x501
 800486a:	4299      	cmp	r1, r3
 800486c:	b510      	push	{r4, lr}
 800486e:	d102      	bne.n	8004876 <i2c_flag_clear+0x10>
 8004870:	6943      	ldr	r3, [r0, #20]
 8004872:	6983      	ldr	r3, [r0, #24]
 8004874:	bd10      	pop	{r4, pc}
 8004876:	098c      	lsrs	r4, r1, #6
 8004878:	2201      	movs	r2, #1
 800487a:	5823      	ldr	r3, [r4, r0]
 800487c:	f001 011f 	and.w	r1, r1, #31
 8004880:	408a      	lsls	r2, r1
 8004882:	ea23 0302 	bic.w	r3, r3, r2
 8004886:	5023      	str	r3, [r4, r0]
 8004888:	e7f4      	b.n	8004874 <i2c_flag_clear+0xe>
	...

Disassembly of section .rodata:

0800488c <deviceLabel-0x100>:
	...
 8004894:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8004898:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 800489c:	00000000 	andeq	r0, r0, r0
 80048a0:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 80048a4:	20727041 	rsbscs	r7, r2, r1, asr #32
 80048a8:	32203620 	eorcc	r3, r0, #32, 12	; 0x2000000
 80048ac:	00323230 	eorseq	r3, r2, r0, lsr r2
 80048b0:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 80048b4:	33303346 	teqcc	r0, #402653185	; 0x18000001
 80048b8:	565b0052 			; <UNDEFINED> instruction: 0x565b0052
 80048bc:	205d7325 	subscs	r7, sp, r5, lsr #6
 80048c0:	43207325 			; <UNDEFINED> instruction: 0x43207325
 80048c4:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 80048c8:	2064656c 	rsbcs	r6, r4, ip, ror #10
 80048cc:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 80048d0:	74612073 	strbtvc	r2, [r1], #-115	; 0xffffff8d
 80048d4:	0a732520 	beq	9ccdd5c <__exidx_end+0x1cc8bf4>
 80048d8:	3a353100 	bcc	8d50ce0 <__exidx_end+0xd4bb78>
 80048dc:	333a3535 	teqcc	sl, #222298112	; 0xd400000
 80048e0:	44520031 	ldrbmi	r0, [r2], #-49	; 0xffffffcf
 80048e4:	6f43204d 	svcvs	0x0043204d
 80048e8:	6f72746e 	svcvs	0x0072746e
 80048ec:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
 80048f0:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 80048f4:	53552068 	cmppl	r5, #104	; 0x68
 80048f8:	435b2042 	cmpmi	fp, #66	; 0x42
 80048fc:	61706d6f 	cmnvs	r0, pc, ror #26
 8004900:	6c626974 			; <UNDEFINED> instruction: 0x6c626974
 8004904:	69772065 	ldmdbvs	r7!, {r0, r2, r5, r6, sp}^
 8004908:	45206874 	strmi	r6, [r0, #-2164]!	; 0xfffff78c
 800490c:	6574746e 	ldrbvs	r7, [r4, #-1134]!	; 0xfffffb92
 8004910:	53552063 	cmppl	r5, #99	; 0x63
 8004914:	72502042 	subsvc	r2, r0, #66	; 0x42
 8004918:	7270206f 	rsbsvc	r2, r0, #111	; 0x6f
 800491c:	636f746f 	cmnvs	pc, #1862270976	; 0x6f000000
 8004920:	2c5d6c6f 	mrrccs	12, 6, r6, sp, cr15
 8004924:	64695720 	strbtvs	r5, [r9], #-1824	; 0xfffff8e0
 8004928:	20746567 	rsbscs	r6, r4, r7, ror #10
 800492c:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8004930:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8004934:	25282064 	strcs	r2, [r8, #-100]!	; 0xffffff9c
 8004938:	000a2973 	andeq	r2, sl, r3, ror r9
 800493c:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8004940:	55206563 	strpl	r6, [r0, #-1379]!	; 0xfffffa9d
 8004944:	20444955 	subcs	r4, r4, r5, asr r9
 8004948:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 800494c:	2e257832 	mcrcs	8, 1, r7, cr5, cr2, {1}
 8004950:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8004954:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 8004958:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 800495c:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 8004960:	2c78322e 	lfmcs	f3, 2, [r8], #-184	; 0xffffff48
 8004964:	614c0020 	cmpvs	ip, r0, lsr #32
 8004968:	206c6562 	rsbcs	r6, ip, r2, ror #10
 800496c:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8004970:	000a732a 	andeq	r7, sl, sl, lsr #6
 8004974:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8004978:	33303146 	teqcc	r0, #-2147483631	; 0x80000011
 800497c:	44204352 	strtmi	r4, [r0], #-850	; 0xfffffcae
 8004980:	5520584d 	strpl	r5, [r0, #-2125]!	; 0xfffff7b3
 8004984:	50204253 	eorpl	r4, r0, r3, asr r2
 8004988:	00006f72 	andeq	r6, r0, r2, ror pc

0800498c <deviceLabel>:
 800498c:	08004974 	stmdaeq	r0, {r2, r4, r5, r6, r8, fp, lr}
 8004990:	00000016 	andeq	r0, r0, r6, lsl r0

08004994 <SOFTWARE_VERSION>:
 8004994:	00302e31 	eorseq	r2, r0, r1, lsr lr

08004998 <widget_mode_names>:
 8004998:	5f584d44 	svcpl	0x00584d44
 800499c:	004d4452 	subeq	r4, sp, r2, asr r4
 80049a0:	00000000 	andeq	r0, r0, r0
 80049a4:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 80049b0:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 80049bc:	5f4d4452 	svcpl	0x004d4452
 80049c0:	46494e53 			; <UNDEFINED> instruction: 0x46494e53
 80049c4:	00524546 	subseq	r4, r2, r6, asr #10
 80049c8:	5f544547 	svcpl	0x00544547
 80049cc:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 80049d0:	505f5445 	subspl	r5, pc, r5, asr #8
 80049d4:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 80049d8:	45525f53 	ldrbmi	r5, [r2, #-3923]	; 0xfffff0ad
 80049dc:	00594c50 	subseq	r4, r9, r0, asr ip
 80049e0:	5f544553 	svcpl	0x00544553
 80049e4:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 80049e8:	505f5445 	subspl	r5, pc, r5, asr #8
 80049ec:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 80049f0:	45520053 	ldrbmi	r0, [r2, #-83]	; 0xffffffad
 80049f4:	56494543 	strbpl	r4, [r9], -r3, asr #10
 80049f8:	445f4445 	ldrbmi	r4, [pc], #-1093	; 8004a00 <widget_mode_names+0x68>
 80049fc:	505f584d 	subspl	r5, pc, sp, asr #16
 8004a00:	454b4341 	strbmi	r4, [fp, #-833]	; 0xfffffcbf
 8004a04:	65530054 	ldrbvs	r0, [r3, #-84]	; 0xffffffac
 8004a08:	4420646e 	strtmi	r6, [r0], #-1134	; 0xfffffb92
 8004a0c:	6420584d 	strtvs	r5, [r0], #-2125	; 0xfffff7b3
 8004a10:	20617461 	rsbcs	r7, r1, r1, ror #8
 8004a14:	48206f74 	stmdami	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}
 8004a18:	2c54534f 	mrrccs	3, 4, r5, r4, cr15
 8004a1c:	00642520 	rsbeq	r2, r4, r0, lsr #10
 8004a20:	5054554f 	subspl	r5, r4, pc, asr #10
 8004a24:	4f5f5455 	svcmi	0x005f5455
 8004a28:	5f594c4e 	svcpl	0x00594c4e
 8004a2c:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 8004a30:	584d445f 	stmdapl	sp, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8004a34:	4341505f 	movtmi	r5, #4191	; 0x105f
 8004a38:	5f54454b 	svcpl	0x0054454b
 8004a3c:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 8004a40:	00545345 	subseq	r5, r4, r5, asr #6
 8004a44:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 8004a48:	4d44525f 	sfmmi	f5, 2, [r4, #-380]	; 0xfffffe84
 8004a4c:	4341505f 	movtmi	r5, #4191	; 0x105f
 8004a50:	5f54454b 	svcpl	0x0054454b
 8004a54:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 8004a58:	00545345 	subseq	r5, r4, r5, asr #6
 8004a5c:	45434552 	strbmi	r4, [r3, #-1362]	; 0xfffffaae
 8004a60:	5f455649 	svcpl	0x00455649
 8004a64:	5f584d44 	svcpl	0x00584d44
 8004a68:	435f4e4f 	cmpmi	pc, #1264	; 0x4f0
 8004a6c:	474e4148 	strbmi	r4, [lr, -r8, asr #2]
 8004a70:	45520045 	ldrbmi	r0, [r2, #-69]	; 0xffffffbb
 8004a74:	56494543 	strbpl	r4, [r9], -r3, asr #10
 8004a78:	445f4445 	ldrbmi	r4, [pc], #-1093	; 8004a80 <widget_mode_names+0xe8>
 8004a7c:	435f584d 	cmpmi	pc, #5046272	; 0x4d0000
 8004a80:	545f534f 	ldrbpl	r5, [pc], #-847	; 8004a88 <widget_mode_names+0xf0>
 8004a84:	00455059 	subeq	r5, r5, r9, asr r0
 8004a88:	746e6553 	strbtvc	r6, [lr], #-1363	; 0xfffffaad
 8004a8c:	61686320 	cmnvs	r8, r0, lsr #6
 8004a90:	6465676e 	strbtvs	r6, [r5], #-1902	; 0xfffff892
 8004a94:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8004a98:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 8004a9c:	6f742061 	svcvs	0x00742061
 8004aa0:	534f4820 	movtpl	r4, #63520	; 0xf820
 8004aa4:	45530054 	ldrbmi	r0, [r3, #-84]	; 0xffffffac
 8004aa8:	525f444e 	subspl	r4, pc, #1308622848	; 0x4e000000
 8004aac:	445f4d44 	ldrbmi	r4, [pc], #-3396	; 8004ab4 <widget_mode_names+0x11c>
 8004ab0:	4f435349 	svcmi	0x00435349
 8004ab4:	59524556 	ldmdbpl	r2, {r1, r2, r4, r6, r8, sl, lr}^
 8004ab8:	5145525f 	cmppl	r5, pc, asr r2
 8004abc:	54534555 	ldrbpl	r4, [r3], #-1365	; 0xfffffaab
 8004ac0:	6e655300 	cdpvs	3, 6, cr5, cr5, cr0, {0}
 8004ac4:	44522064 	ldrbmi	r2, [r2], #-100	; 0xffffff9c
 8004ac8:	6164204d 	cmnvs	r4, sp, asr #32
 8004acc:	74206174 	strtvc	r6, [r0], #-372	; 0xfffffe8c
 8004ad0:	4f48206f 	svcmi	0x0048206f
 8004ad4:	202c5453 	eorcs	r5, ip, r3, asr r4
 8004ad8:	64253a6c 	strtvs	r3, [r5], #-2668	; 0xfffff594
 8004adc:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 8004ae0:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
 8004ae4:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
 8004ae8:	43455200 	movtmi	r5, #20992	; 0x5200
 8004aec:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 8004af0:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 8004af4:	41505f4d 	cmpmi	r0, sp, asr #30
 8004af8:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 8004afc:	3a435320 	bcc	90d9784 <__exidx_end+0x10d461c>
 8004b00:	43437830 	movtmi	r7, #14384	; 0x3830
 8004b04:	43455200 	movtmi	r5, #20992	; 0x5200
 8004b08:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 8004b0c:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 8004b10:	41505f4d 	cmpmi	r0, sp, asr #30
 8004b14:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 8004b18:	3a435320 	bcc	90d97a0 <__exidx_end+0x10d4638>
 8004b1c:	45467830 	strbmi	r7, [r6, #-2096]	; 0xfffff7d0
 8004b20:	4e414d00 	cdpmi	13, 4, cr4, cr1, cr0, {0}
 8004b24:	43414655 	movtmi	r4, #5717	; 0x1655
 8004b28:	45525554 	ldrbmi	r5, [r2, #-1364]	; 0xfffffaac
 8004b2c:	414c5f52 	cmpmi	ip, r2, asr pc
 8004b30:	004c4542 	subeq	r4, ip, r2, asr #10
 8004b34:	5f544547 	svcpl	0x00544547
 8004b38:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 8004b3c:	4e5f5445 	cdpmi	4, 5, cr5, cr15, cr5, {2}
 8004b40:	5f454d41 	svcpl	0x00454d41
 8004b44:	4542414c 	strbmi	r4, [r2, #-332]	; 0xfffffeb4
 8004b48:	3a4c004c 	bcc	9304c80 <__exidx_end+0x12ffb18>
 8004b4c:	253a6425 	ldrcs	r6, [sl, #-1061]!	; 0xfffffbdb
 8004b50:	64252864 	strtvs	r2, [r5], #-2148	; 0xfffff79c
 8004b54:	 	ldmdbvs	r7!, {r0, r3, r5}^

08004b56 <WidgetParamsConst::WIDGET_MODE>:
 8004b56:	67646977 			; <UNDEFINED> instruction: 0x67646977
 8004b5a:	6d5f7465 	cfldrdvs	mvd7, [pc, #-404]	; 80049cc <widget_mode_names+0x34>
 8004b5e:	0065646f 	rsbeq	r6, r5, pc, ror #8

08004b62 <WidgetParamsConst::DMXUSBPRO_MAB_TIME>:
 8004b62:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 8004b66:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8004b6a:	616d5f6f 	cmnvs	sp, pc, ror #30
 8004b6e:	69745f62 	ldmdbvs	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 8004b72:	 	strvs	r6, [r0], #-1389	; 0xfffffa93

08004b75 <WidgetParamsConst::DMXUSBPRO_BREAK_TIME>:
 8004b75:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 8004b79:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8004b7d:	72625f6f 	rsbvc	r5, r2, #444	; 0x1bc
 8004b81:	5f6b6165 	svcpl	0x006b6165
 8004b85:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

08004b8a <WidgetParamsConst::DMXUSBPRO_REFRESH_RATE>:
 8004b8a:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 8004b8e:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8004b92:	65725f6f 	ldrbvs	r5, [r2, #-3951]!	; 0xfffff091
 8004b96:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 8004b9a:	61725f68 	cmnvs	r2, r8, ror #30
 8004b9e:	 	strvs	r6, [r0], #-1396	; 0xfffffa8c

08004ba1 <WidgetParamsConst::DMX_SEND_TO_HOST_THROTTLE>:
 8004ba1:	5f786d64 	svcpl	0x00786d64
 8004ba5:	646e6573 	strbtvs	r6, [lr], #-1395	; 0xfffffa8d
 8004ba9:	5f6f745f 	svcpl	0x006f745f
 8004bad:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8004bb1:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
 8004bb5:	6c74746f 	cfldrdvs	mvd7, [r4], #-444	; 0xfffffe44
 8004bb9:	46210065 	strtmi	r0, [r1], -r5, rrx
 8004bbd:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8004bc1:	43202164 			; <UNDEFINED> instruction: 0x43202164
 8004bc5:	6f6e6e61 	svcvs	0x006e6e61
 8004bc9:	65732074 	ldrbvs	r2, [r3, #-116]!	; 0xffffff8c
 8004bcd:	7420646e 	strtvc	r6, [r0], #-1134	; 0xfffffb92
 8004bd1:	6f68206f 	svcvs	0x0068206f
 8004bd5:	53007473 	movwpl	r7, #1139	; 0x473
 8004bd9:	20646e65 	rsbcs	r6, r4, r5, ror #28
 8004bdd:	20584d44 	subscs	r4, r8, r4, asr #26
 8004be1:	61746164 	cmnvs	r4, r4, ror #2
 8004be5:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 8004be9:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
 8004bed:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8004bf1:	53006425 	movwpl	r6, #1061	; 0x425
 8004bf5:	20646e65 	rsbcs	r6, r4, r5, ror #28
 8004bf9:	204d4452 	subcs	r4, sp, r2, asr r4
 8004bfd:	61746164 	cmnvs	r4, r4, ror #2
 8004c01:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 8004c05:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
	...

08004c0a <RDMConst::MANUFACTURER_ID>:
 8004c0a:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

08004c0c <RDMConst::MANUFACTURER_NAME>:
 8004c0c:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8004c10:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 8004c14:	6f2e7777 	svcvs	0x002e7777
 8004c18:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 8004c1c:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 8004c20:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8004c24:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8004c28:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8004c2c:	672f2f3a 			; <UNDEFINED> instruction: 0x672f2f3a
 8004c30:	2d323364 	ldccs	3, cr3, [r2, #-400]!	; 0xfffffe70
 8004c34:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8004c38:	0067726f 	rsbeq	r7, r7, pc, ror #4

08004c3c <DEVICE_LABEL>:
 8004c3c:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8004c40:	33303346 	teqcc	r0, #402653185	; 0x18000001
 8004c44:	44522052 	ldrbmi	r2, [r2], #-82	; 0xffffffae
 8004c48:	6544204d 	strbvs	r2, [r4, #-77]	; 0xffffffb3
 8004c4c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8004c50:	00000000 	andeq	r0, r0, r0

08004c54 <s_aStorSize>:
 8004c54:	00000060 	andeq	r0, r0, r0, rrx
 8004c58:	00000090 	muleq	r0, r0, r0
 8004c5c:	00000020 	andeq	r0, r0, r0, lsr #32
 8004c60:	00000040 	andeq	r0, r0, r0, asr #32
 8004c64:	00000060 	andeq	r0, r0, r0, rrx
 8004c68:	00000040 	andeq	r0, r0, r0, asr #32
 8004c6c:	00000020 	andeq	r0, r0, r0, lsr #32
 8004c70:	00000020 	andeq	r0, r0, r0, lsr #32
 8004c74:	000001e0 	andeq	r0, r0, r0, ror #3
 8004c78:	00000040 	andeq	r0, r0, r0, asr #32
 8004c7c:	00000020 	andeq	r0, r0, r0, lsr #32
 8004c80:	00000060 	andeq	r0, r0, r0, rrx
 8004c84:	00000030 	andeq	r0, r0, r0, lsr r0
 8004c88:	00000020 	andeq	r0, r0, r0, lsr #32
 8004c8c:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8004c90:	00000030 	andeq	r0, r0, r0, lsr r0
 8004c94:	00000040 	andeq	r0, r0, r0, asr #32
 8004c98:	00000020 	andeq	r0, r0, r0, lsr #32
 8004c9c:	00000060 	andeq	r0, r0, r0, rrx
 8004ca0:	00000020 	andeq	r0, r0, r0, lsr #32
 8004ca4:	00000400 	andeq	r0, r0, r0, lsl #8
 8004ca8:	00000020 	andeq	r0, r0, r0, lsr #32
 8004cac:	00000020 	andeq	r0, r0, r0, lsr #32
 8004cb0:	00000040 	andeq	r0, r0, r0, asr #32
 8004cb4:	00000060 	andeq	r0, r0, r0, rrx
 8004cb8:	00000020 	andeq	r0, r0, r0, lsr #32
 8004cbc:	00000020 	andeq	r0, r0, r0, lsr #32
 8004cc0:	00000020 	andeq	r0, r0, r0, lsr #32

08004cc4 <vtable for StoreRDMDevice>:
	...
 8004ccc:	08002811 	stmdaeq	r0, {r0, r4, fp, sp}
 8004cd0:	08002881 	stmdaeq	r0, {r0, r7, fp, sp}
 8004cd4:	08002819 	stmdaeq	r0, {r0, r3, r4, fp, sp}
 8004cd8:	08002895 	stmdaeq	r0, {r0, r2, r4, r7, fp, sp}
 8004cdc:	0800283d 	stmdaeq	r0, {r0, r2, r3, r4, r5, fp, sp}
 8004ce0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8004ce4:	00000000 	andeq	r0, r0, r0
 8004ce8:	08002813 	stmdaeq	r0, {r0, r1, r4, fp, sp}
 8004cec:	0800288d 	stmdaeq	r0, {r0, r2, r3, r7, fp, sp}
 8004cf0:	08002879 	stmdaeq	r0, {r0, r3, r4, r5, r6, fp, sp}

08004cf4 <vtable for StoreWidget>:
	...
 8004cfc:	080028cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, fp, sp}
 8004d00:	080028f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, fp, sp}
 8004d04:	080028d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, fp, sp}
 8004d08:	0800290d 	stmdaeq	r0, {r0, r2, r3, r8, fp, sp}
 8004d0c:	080015f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, ip}
 8004d10:	08001625 	stmdaeq	r0, {r0, r2, r5, r9, sl, ip}
 8004d14:	08001659 	stmdaeq	r0, {r0, r3, r4, r6, r9, sl, ip}
 8004d18:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8004d1c:	00000000 	andeq	r0, r0, r0
 8004d20:	080028cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, fp, sp}
 8004d24:	08002905 	stmdaeq	r0, {r0, r2, r8, fp, sp}
 8004d28:	0800161d 	stmdaeq	r0, {r0, r2, r3, r4, r9, sl, ip}
 8004d2c:	08001651 	stmdaeq	r0, {r0, r4, r6, r9, sl, ip}
 8004d30:	08001685 	stmdaeq	r0, {r0, r2, r7, r9, sl, ip}
 8004d34:	3a434d46 	bcc	90d8254 <__exidx_end+0x10d30ec>
 8004d38:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8004d3c:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8004d40:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8004d44:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8004d48:	6f742068 	svcvs	0x00742068
 8004d4c:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8004d50:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8004d54:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8004d58:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8004d5c:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8004d60:	6f6c000a 	svcvs	0x006c000a
 8004d64:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
 8004d68:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8004d6c:	2079616c 	rsbscs	r6, r9, ip, ror #2
 8004d70:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
 8004d74:	48530064 	ldmdami	r3, {r2, r5, r6}^
 8004d78:	36303131 			; <UNDEFINED> instruction: 0x36303131
 8004d7c:	44535300 	ldrbmi	r5, [r3], #-768	; 0xfffffd00
 8004d80:	36303331 			; <UNDEFINED> instruction: 0x36303331
 8004d84:	20732500 	rsbscs	r2, r3, r0, lsl #10
 8004d88:	2c642528 	cfstr64cs	mvdx2, [r4], #-160	; 0xffffff60
 8004d8c:	0a296425 	beq	8a5de28 <__exidx_end+0xa58cc0>
 8004d90:	eeaa4000 	cdp	0, 10, cr4, cr10, cr0, {0}
 8004d94:	0000eeaa 	andeq	lr, r0, sl, lsr #29

08004d98 <_OledFont8x6>:
 8004d98:	00000040 	andeq	r0, r0, r0, asr #32
 8004d9c:	40000000 	andmi	r0, r0, r0
 8004da0:	005f0000 	subseq	r0, pc, r0
 8004da4:	00400000 	subeq	r0, r0, r0
 8004da8:	00070007 	andeq	r0, r7, r7
 8004dac:	7f144000 	svcvc	0x00144000
 8004db0:	00147f14 	andseq	r7, r4, r4, lsl pc
 8004db4:	7f2a2440 	svcvc	0x002a2440
 8004db8:	4000122a 	andmi	r1, r0, sl, lsr #4
 8004dbc:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8004dc0:	36400062 	strbcc	r0, [r0], -r2, rrx
 8004dc4:	50205649 	eorpl	r5, r0, r9, asr #12
 8004dc8:	08004000 	stmdaeq	r0, {lr}
 8004dcc:	00000307 	andeq	r0, r0, r7, lsl #6
 8004dd0:	221c0040 	andscs	r0, ip, #64	; 0x40
 8004dd4:	40000041 	andmi	r0, r0, r1, asr #32
 8004dd8:	1c224100 	stfnes	f4, [r2], #-0
 8004ddc:	2a400000 	bcs	9004de4 <__exidx_end+0xfffc7c>
 8004de0:	2a1c7f1c 	bcs	8724a58 <__exidx_end+0x71f8f0>
 8004de4:	08084000 	stmdaeq	r8, {lr}
 8004de8:	0008083e 	andeq	r0, r8, lr, lsr r8
 8004dec:	70800040 	addvc	r0, r0, r0, asr #32
 8004df0:	40000030 	andmi	r0, r0, r0, lsr r0
 8004df4:	08080808 	stmdaeq	r8, {r3, fp}
 8004df8:	00400008 	subeq	r0, r0, r8
 8004dfc:	00606000 	rsbeq	r6, r0, r0
 8004e00:	10204000 	eorne	r4, r0, r0
 8004e04:	00020408 	andeq	r0, r2, r8, lsl #8
 8004e08:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8004e0c:	40003e45 	andmi	r3, r0, r5, asr #28
 8004e10:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8004e14:	72400000 	subvc	r0, r0, #0
 8004e18:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8004e1c:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8004e20:	00334d49 	eorseq	r4, r3, r9, asr #26
 8004e24:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8004e28:	4000107f 	andmi	r1, r0, pc, ror r0
 8004e2c:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8004e30:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8004e34:	3149494a 	cmpcc	r9, sl, asr #18
 8004e38:	21414000 	mrscs	r4, (UNDEF: 65)
 8004e3c:	00070911 	andeq	r0, r7, r1, lsl r9
 8004e40:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8004e44:	40003649 	andmi	r3, r0, r9, asr #12
 8004e48:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8004e4c:	0040001e 	subeq	r0, r0, lr, lsl r0
 8004e50:	00001400 	andeq	r1, r0, r0, lsl #8
 8004e54:	40004000 	andmi	r4, r0, r0
 8004e58:	00000034 	andeq	r0, r0, r4, lsr r0
 8004e5c:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8004e60:	40004122 	andmi	r4, r0, r2, lsr #2
 8004e64:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8004e68:	00400014 	subeq	r0, r0, r4, lsl r0
 8004e6c:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8004e70:	01024000 	mrseq	r4, (UNDEF: 2)
 8004e74:	00060959 	andeq	r0, r6, r9, asr r9
 8004e78:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8004e7c:	40004e59 	andmi	r4, r0, r9, asr lr
 8004e80:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8004e84:	7f40007c 	svcvc	0x0040007c
 8004e88:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8004e8c:	413e4000 	teqmi	lr, r0
 8004e90:	00224141 	eoreq	r4, r2, r1, asr #2
 8004e94:	41417f40 	cmpmi	r1, r0, asr #30
 8004e98:	40003e41 	andmi	r3, r0, r1, asr #28
 8004e9c:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8004ea0:	7f400041 	svcvc	0x00400041
 8004ea4:	01090909 	tsteq	r9, r9, lsl #18
 8004ea8:	413e4000 	teqmi	lr, r0
 8004eac:	00735141 	rsbseq	r5, r3, r1, asr #2
 8004eb0:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8004eb4:	40007f08 	andmi	r7, r0, r8, lsl #30
 8004eb8:	417f4100 	cmnmi	pc, r0, lsl #2
 8004ebc:	20400000 	subcs	r0, r0, r0
 8004ec0:	013f4140 	teqeq	pc, r0, asr #2
 8004ec4:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8004ec8:	00412214 	subeq	r2, r1, r4, lsl r2
 8004ecc:	40407f40 	submi	r7, r0, r0, asr #30
 8004ed0:	40004040 	andmi	r4, r0, r0, asr #32
 8004ed4:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8004ed8:	7f40007f 	svcvc	0x0040007f
 8004edc:	7f100804 	svcvc	0x00100804
 8004ee0:	413e4000 	teqmi	lr, r0
 8004ee4:	003e4141 	eorseq	r4, lr, r1, asr #2
 8004ee8:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8004eec:	40000609 	andmi	r0, r0, r9, lsl #12
 8004ef0:	2151413e 	cmpcs	r1, lr, lsr r1
 8004ef4:	7f40005e 	svcvc	0x0040005e
 8004ef8:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8004efc:	49264000 	stmdbmi	r6!, {lr}
 8004f00:	00324949 	eorseq	r4, r2, r9, asr #18
 8004f04:	7f010340 	svcvc	0x00010340
 8004f08:	40000301 	andmi	r0, r0, r1, lsl #6
 8004f0c:	4040403f 	submi	r4, r0, pc, lsr r0
 8004f10:	1f40003f 	svcne	0x0040003f
 8004f14:	1f204020 	svcne	0x00204020
 8004f18:	403f4000 	eorsmi	r4, pc, r0
 8004f1c:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8004f20:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8004f24:	40006314 	andmi	r6, r0, r4, lsl r3
 8004f28:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8004f2c:	61400003 	cmpvs	r0, r3
 8004f30:	434d4959 	movtmi	r4, #55641	; 0xd959
 8004f34:	7f004000 	svcvc	0x00004000
 8004f38:	00414141 	subeq	r4, r1, r1, asr #2
 8004f3c:	08040240 	stmdaeq	r4, {r6, r9}
 8004f40:	40002010 	andmi	r2, r0, r0, lsl r0
 8004f44:	41414100 	mrsmi	r4, (UNDEF: 81)
 8004f48:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8004f4c:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8004f50:	40404000 	submi	r4, r0, r0
 8004f54:	00404040 	subeq	r4, r0, r0, asr #32
 8004f58:	07030040 	streq	r0, [r3, -r0, asr #32]
 8004f5c:	40000008 	andmi	r0, r0, r8
 8004f60:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8004f64:	7f400040 	svcvc	0x00400040
 8004f68:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8004f6c:	44384000 	ldrtmi	r4, [r8], #-0
 8004f70:	00284444 	eoreq	r4, r8, r4, asr #8
 8004f74:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8004f78:	40007f28 	andmi	r7, r0, r8, lsr #30
 8004f7c:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8004f80:	00400018 	subeq	r0, r0, r8, lsl r0
 8004f84:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8004f88:	a4184000 	ldrge	r4, [r8], #-0
 8004f8c:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8004f90:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8004f94:	40007804 	andmi	r7, r0, r4, lsl #16
 8004f98:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8004f9c:	20400000 	subcs	r0, r0, r0
 8004fa0:	003d4040 	eorseq	r4, sp, r0, asr #32
 8004fa4:	107f4000 	rsbsne	r4, pc, r0
 8004fa8:	00004428 	andeq	r4, r0, r8, lsr #8
 8004fac:	7f410040 	svcvc	0x00410040
 8004fb0:	40000040 	andmi	r0, r0, r0, asr #32
 8004fb4:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8004fb8:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8004fbc:	78040408 	stmdavc	r4, {r3, sl}
 8004fc0:	44384000 	ldrtmi	r4, [r8], #-0
 8004fc4:	00384444 	eorseq	r4, r8, r4, asr #8
 8004fc8:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8004fcc:	40001824 	andmi	r1, r0, r4, lsr #16
 8004fd0:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8004fd4:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8004fd8:	08040408 	stmdaeq	r4, {r3, sl}
 8004fdc:	54484000 	strbpl	r4, [r8], #-0
 8004fe0:	00245454 	eoreq	r5, r4, r4, asr r4
 8004fe4:	3f040440 	svccc	0x00040440
 8004fe8:	40002444 	andmi	r2, r0, r4, asr #8
 8004fec:	2040403c 	subcs	r4, r0, ip, lsr r0
 8004ff0:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8004ff4:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8004ff8:	403c4000 	eorsmi	r4, ip, r0
 8004ffc:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8005000:	10284440 	eorne	r4, r8, r0, asr #8
 8005004:	40004428 	andmi	r4, r0, r8, lsr #8
 8005008:	9090904c 	addsls	r9, r0, ip, asr #32
 800500c:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8005010:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8005014:	08004000 	stmdaeq	r0, {lr}
 8005018:	00004136 	andeq	r4, r0, r6, lsr r1
 800501c:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8005020:	40000000 	andmi	r0, r0, r0
 8005024:	08364100 	ldmdaeq	r6!, {r8, lr}
 8005028:	02400000 	subeq	r0, r0, #0
 800502c:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8005030:	263c4000 	ldrtcs	r4, [ip], -r0
 8005034:	003c2623 	eorseq	r2, ip, r3, lsr #12

08005038 <oled_128x32_init>:
 8005038:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 800503c:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8005040:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8005044:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8005048:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 800504c:	a6a440db 	ssatge	r4, #5, fp, asr #1

08005050 <oled_128x64_init>:
 8005050:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8005054:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8005058:	0020148d 	eoreq	r1, r0, sp, lsl #9
 800505c:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8005060:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8005064:	a6a440db 	ssatge	r4, #5, fp, asr #1

08005068 <vtable for Ssd1306>:
	...
 8005070:	08002e23 	stmdaeq	r0, {r0, r1, r5, r9, sl, fp, sp}
 8005074:	08002e51 	stmdaeq	r0, {r0, r4, r6, r9, sl, fp, sp}
 8005078:	0800316d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, ip, sp}
 800507c:	080030f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, ip, sp}
 8005080:	08002fbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, sl, fp, sp}
 8005084:	08002e71 	stmdaeq	r0, {r0, r4, r5, r6, r9, sl, fp, sp}
 8005088:	08002e9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, fp, sp}
 800508c:	08002f91 	stmdaeq	r0, {r0, r4, r7, r8, r9, sl, fp, sp}
 8005090:	08002f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp, sp}
 8005094:	08002e25 	stmdaeq	r0, {r0, r2, r5, r9, sl, fp, sp}
 8005098:	08002ffd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}
 800509c:	08003009 	stmdaeq	r0, {r0, r3, ip, sp}
 80050a0:	08003023 	stmdaeq	r0, {r0, r1, r5, ip, sp}
 80050a4:	08002e29 	stmdaeq	r0, {r0, r3, r5, r9, sl, fp, sp}
 80050a8:	37335b1b 			; <UNDEFINED> instruction: 0x37335b1b
 80050ac:	5b1b006d 	blpl	86c5268 <__exidx_end+0x6c0100>
 80050b0:	006d3034 	rsbeq	r3, sp, r4, lsr r0
 80050b4:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 80050b8:	203a636f 	eorscs	r6, sl, pc, ror #6
 80050bc:	000a7525 	andeq	r7, sl, r5, lsr #10
 80050c0:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 80050c4:	203a636f 	eorscs	r6, sl, pc, ror #6
 80050c8:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 80050cc:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 80050d0:	6b636f6c 	blvs	98e0e88 <__exidx_end+0x18dbd20>
 80050d4:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 80050d8:	000a7469 	andeq	r7, sl, r9, ror #8
 80050dc:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 80050e0:	203a636f 	eorscs	r6, sl, pc, ror #6
 80050e4:	6f6c4270 	svcvs	0x006c4270
 80050e8:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 80050ec:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 80050f0:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 80050f4:	7a697320 	bvc	9a61d7c <__exidx_end+0x1a5cc14>
 80050f8:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 80050fc:	6164202c 	cmnvs	r4, ip, lsr #32
 8005100:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8005104:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8005108:	3a656572 	bcc	995e6d8 <__exidx_end+0x1959570>
 800510c:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8005110:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8005114:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8005118:	203d2072 	eorscs	r2, sp, r2, ror r0
 800511c:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8005120:	6f6c4270 	svcvs	0x006c4270
 8005124:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8005128:	0a702520 	beq	9c0e5b0 <__exidx_end+0x1c09448>
 800512c:	00000000 	andeq	r0, r0, r0

08005130 <days_of_month>:
 8005130:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005134:	0000001c 	andeq	r0, r0, ip, lsl r0
 8005138:	0000001f 	andeq	r0, r0, pc, lsl r0
 800513c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005140:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005144:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005148:	0000001f 	andeq	r0, r0, pc, lsl r0
 800514c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005150:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005154:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005158:	0000001e 	andeq	r0, r0, lr, lsl r0
 800515c:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08005160 <__exidx_start>:
 8005160:	7fffb6c4 	svcvc	0x00ffb6c4
 8005164:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08005168 <.ARM.attributes>:
 8005168:	00003441 	andeq	r3, r0, r1, asr #8
 800516c:	61656100 	cmnvs	r5, r0, lsl #2
 8005170:	01006962 	tsteq	r0, r2, ror #18
 8005174:	0000002a 	andeq	r0, r0, sl, lsr #32
 8005178:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 800517c:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8005180:	0600344d 	streq	r3, [r0], -sp, asr #8
 8005184:	094d070d 	stmdbeq	sp, {r0, r2, r3, r8, r9, sl}^
 8005188:	12060a02 	andne	r0, r6, #8192	; 0x2000
 800518c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
 8005190:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
 8005194:	1b011a01 	blne	804b9a0 <__exidx_end+0x46838>
 8005198:	22011c01 	andcs	r1, r1, #256	; 0x100
 800519c:	Address 0x000000000800519c is out of bounds.


Disassembly of section .data:

20000000 <WidgetConfiguration::s_nMabTime>:
20000000:	 	andeq	r0, r4, #16384	; 0x4000

20000001 <WidgetConfiguration::s_nBreakTime>:
20000001:	 	stmdacs	r2, {r0, r3, sl}

20000002 <WidgetConfiguration::s_nFirmwareLsb>:
20000002:	 			; <UNDEFINED> instruction: 0x01280204

20000003 <WidgetConfiguration::s_nFirmwareMsb>:
20000003:	 	andeq	r2, r1, r2, lsl #16

20000004 <WidgetConfiguration::s_nRefreshRate>:
20000004:	 	andeq	r0, r0, r8, lsr #2

20000005 <WidgetConfiguration::s_aDeviceTypeId>:
20000005:	 	stmdage	r0, {r0}

20000008 <s_nDmxTransmitPeriod>:
20000008:	000061a8 	andeq	r6, r0, r8, lsr #3

2000000c <s_nDmxTransmitMabTime>:
2000000c:	0000000c 	andeq	r0, r0, ip

20000010 <s_nDmxTransmitBreakTime>:
20000010:	0000005c 	andeq	r0, r0, ip, asr r0

20000014 <next_block>:
20000014:	2000a000 	andcs	sl, r0, r0

20000018 <s_block_bucket>:
20000018:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000028:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000038:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000048:	00000060 	andeq	r0, r0, r0, rrx
	...
20000058:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000068:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000078:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000088:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000098:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a8:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b8:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c8:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e8 <SystemCoreClock>:
200000e8:	07270e00 	streq	r0, [r7, -r0, lsl #28]!

Disassembly of section .bss:

200000f0 <outptr>:
200000f0:	00000000 	andeq	r0, r0, r0

200000f4 <Widget::s_pThis>:
200000f4:	00000000 	andeq	r0, r0, r0

200000f8 <s_RxBuffer>:
	...

20000308 <s_TxBuffer>:
	...

2000050c <sv_PortState>:
2000050c:	00000000 	andeq	r0, r0, r0

20000510 <s_RxDmxPrevious>:
	...

20000714 <sv_nRxDmxPackets>:
	...

20000724 <sv_nUartsSending>:
20000724:	00000000 	andeq	r0, r0, r0

20000728 <Dmx::s_pThis>:
20000728:	00000000 	andeq	r0, r0, r0

2000072c <gv_RdmDataReceiveEnd>:
2000072c:	00000000 	andeq	r0, r0, r0

20000730 <SpiFlashStore::s_nWaitMillis>:
20000730:	00000000 	andeq	r0, r0, r0

20000734 <SpiFlashStore::s_SpiFlashData>:
	...

20001734 <SpiFlashStore::s_nStartAddress>:
20001734:	00000000 	andeq	r0, r0, r0

20001738 <SpiFlashStore::s_bHaveFlashChip>:
20001738:	00000000 	andeq	r0, r0, r0

2000173c <SpiFlashStore::s_nSpiFlashStoreSize>:
2000173c:	00000000 	andeq	r0, r0, r0

20001740 <SpiFlashStore::s_State>:
20001740:	00000000 	andeq	r0, r0, r0

20001744 <SpiFlashStore::s_pThis>:
20001744:	00000000 	andeq	r0, r0, r0

20001748 <SpiFlashStore::s_bIsNew>:
20001748:	00000000 	andeq	r0, r0, r0

2000174c <StoreRDMDevice::s_pThis>:
2000174c:	00000000 	andeq	r0, r0, r0

20001750 <StoreWidget::s_pThis>:
20001750:	00000000 	andeq	r0, r0, r0

20001754 <FlashRom::s_pThis>:
20001754:	00000000 	andeq	r0, r0, r0

20001758 <flashrom::s_nAddress>:
20001758:	00000000 	andeq	r0, r0, r0

2000175c <flashrom::s_State>:
2000175c:	00000000 	andeq	r0, r0, r0

20001760 <flashrom::s_nPage>:
20001760:	00000000 	andeq	r0, r0, r0

20001764 <flashrom::s_pData>:
20001764:	00000000 	andeq	r0, r0, r0

20001768 <flashrom::s_isBank0>:
20001768:	00000000 	andeq	r0, r0, r0

2000176c <flashrom::s_nLength>:
2000176c:	00000000 	andeq	r0, r0, r0

20001770 <Network::s_pThis>:
20001770:	00000000 	andeq	r0, r0, r0

20001774 <Display::s_pThis>:
20001774:	00000000 	andeq	r0, r0, r0

20001778 <_ClearBuffer>:
	...

20001800 <Ssd1306::s_pThis>:
20001800:	00000000 	andeq	r0, r0, r0

20001804 <LedBlink::s_pThis>:
20001804:	00000000 	andeq	r0, r0, r0

20001808 <Hardware::s_pThis>:
	...

20001810 <s_micros>:
	...

20001818 <set_timer>:
20001818:	00000000 	andeq	r0, r0, r0

2000181c <s_nSysTickMillis>:
2000181c:	00000000 	andeq	r0, r0, r0

20001820 <s_nAddress>:
20001820:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

2000a000 <heap_low>:
	...

Disassembly of section .stack:

2000b000 <_sp-0x1000>:
	...
