
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08000000 <__gVectors>:
 8000000:	20001000 	andcs	r1, r0, r0
 8000004:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000008:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 800000c:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000010:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000014:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000018:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
	...
 800002c:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000030:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 800003c:	08003b15 	stmdaeq	r0, {r0, r2, r4, r8, r9, fp, ip, sp}
 8000040:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000044:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000048:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 800004c:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000050:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000054:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000058:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 800005c:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000060:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000064:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000068:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 800006c:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000070:	08001db9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, sl, fp, ip}
 8000074:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000078:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 800007c:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000080:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000084:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000088:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 800008c:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000090:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000094:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000098:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 800009c:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000a0:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000a4:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000a8:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000ac:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000b0:	08001c5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, sl, fp, ip}
 80000b4:	08001d2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, sl, fp, ip}
 80000b8:	08001d81 	stmdaeq	r0, {r0, r7, r8, sl, fp, ip}
 80000bc:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000c0:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000c4:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000c8:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000cc:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000d0:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000d4:	00000000 	andeq	r0, r0, r0
 80000d8:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000dc:	08001a71 	stmdaeq	r0, {r0, r4, r5, r6, r9, fp, ip}
 80000e0:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000e4:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000e8:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000ec:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000f0:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000f4:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000f8:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 80000fc:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000100:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000104:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000108:	08001d29 	stmdaeq	r0, {r0, r3, r5, r8, sl, fp, ip}
 800010c:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000110:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000114:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000118:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 800011c:	08001d95 	stmdaeq	r0, {r0, r2, r4, r7, r8, sl, fp, ip}
 8000120:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000124:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 8000128:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 800012c:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}

Disassembly of section .text:

08000130 <console_init>:
 8000130:	b508      	push	{r3, lr}
 8000132:	f004 f9e1 	bl	80044f8 <uart0_init>
 8000136:	4804      	ldr	r0, [pc, #16]	; (8000148 <console_init+0x18>)
 8000138:	f003 fcbe 	bl	8003ab8 <uart0_puts>
 800013c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000140:	4802      	ldr	r0, [pc, #8]	; (800014c <console_init+0x1c>)
 8000142:	f003 bcb9 	b.w	8003ab8 <uart0_puts>
 8000146:	bf00      	nop
 8000148:	08005654 	stmdaeq	r0, {r2, r4, r6, r9, sl, ip, lr}
 800014c:	0800565a 	stmdaeq	r0, {r1, r3, r4, r6, r9, sl, ip, lr}

08000150 <__aeabi_d2f>:
 8000150:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000154:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000158:	bf24      	itt	cs
 800015a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800015e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000162:	d90d      	bls.n	8000180 <__aeabi_d2f+0x30>
 8000164:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000168:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 800016c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000170:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000174:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000178:	bf08      	it	eq
 800017a:	f020 0001 	biceq.w	r0, r0, #1
 800017e:	4770      	bx	lr
 8000180:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000184:	d121      	bne.n	80001ca <__aeabi_d2f+0x7a>
 8000186:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 800018a:	bfbc      	itt	lt
 800018c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000190:	4770      	bxlt	lr
 8000192:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000196:	ea4f 5252 	mov.w	r2, r2, lsr #21
 800019a:	f1c2 0218 	rsb	r2, r2, #24
 800019e:	f1c2 0c20 	rsb	ip, r2, #32
 80001a2:	fa10 f30c 	lsls.w	r3, r0, ip
 80001a6:	fa20 f002 	lsr.w	r0, r0, r2
 80001aa:	bf18      	it	ne
 80001ac:	f040 0001 	orrne.w	r0, r0, #1
 80001b0:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80001b4:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 80001b8:	fa03 fc0c 	lsl.w	ip, r3, ip
 80001bc:	ea40 000c 	orr.w	r0, r0, ip
 80001c0:	fa23 f302 	lsr.w	r3, r3, r2
 80001c4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80001c8:	e7cc      	b.n	8000164 <__aeabi_d2f+0x14>
 80001ca:	ea7f 5362 	mvns.w	r3, r2, asr #21
 80001ce:	d107      	bne.n	80001e0 <__aeabi_d2f+0x90>
 80001d0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80001d4:	bf1e      	ittt	ne
 80001d6:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80001da:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80001de:	4770      	bxne	lr
 80001e0:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80001e4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80001e8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80001ec:	4770      	bx	lr
 80001ee:	bf00      	nop

080001f0 <__aeabi_uldivmod>:
 80001f0:	b953      	cbnz	r3, 8000208 <__aeabi_uldivmod+0x18>
 80001f2:	b94a      	cbnz	r2, 8000208 <__aeabi_uldivmod+0x18>
 80001f4:	2900      	cmp	r1, #0
 80001f6:	bf08      	it	eq
 80001f8:	2800      	cmpeq	r0, #0
 80001fa:	bf1c      	itt	ne
 80001fc:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000200:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000204:	f000 b80c 	b.w	8000220 <__aeabi_idiv0>
 8000208:	f1ad 0c08 	sub.w	ip, sp, #8
 800020c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000210:	f000 fc42 	bl	8000a98 <__udivmoddi4>
 8000214:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000218:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800021c:	b004      	add	sp, #16
 800021e:	4770      	bx	lr

08000220 <__aeabi_idiv0>:
 8000220:	4770      	bx	lr
 8000222:	bf00      	nop

08000224 <Reset_Handler>:
 8000224:	2100      	movs	r1, #0
 8000226:	e003      	b.n	8000230 <DataInit>

08000228 <CopyData>:
 8000228:	4b0a      	ldr	r3, [pc, #40]	; (8000254 <Zerobss+0x10>)
 800022a:	585b      	ldr	r3, [r3, r1]
 800022c:	5043      	str	r3, [r0, r1]
 800022e:	3104      	adds	r1, #4

08000230 <DataInit>:
 8000230:	4809      	ldr	r0, [pc, #36]	; (8000258 <Zerobss+0x14>)
 8000232:	4b0a      	ldr	r3, [pc, #40]	; (800025c <Zerobss+0x18>)
 8000234:	1842      	adds	r2, r0, r1
 8000236:	429a      	cmp	r2, r3
 8000238:	d3f6      	bcc.n	8000228 <CopyData>
 800023a:	4a09      	ldr	r2, [pc, #36]	; (8000260 <Zerobss+0x1c>)
 800023c:	e002      	b.n	8000244 <Zerobss>

0800023e <FillZerobss>:
 800023e:	2300      	movs	r3, #0
 8000240:	f842 3b04 	str.w	r3, [r2], #4

08000244 <Zerobss>:
 8000244:	4b07      	ldr	r3, [pc, #28]	; (8000264 <Zerobss+0x20>)
 8000246:	429a      	cmp	r2, r3
 8000248:	d3f9      	bcc.n	800023e <FillZerobss>
 800024a:	f003 fc6b 	bl	8003b24 <SystemInit>
 800024e:	f000 f835 	bl	80002bc <main>
 8000252:	4770      	bx	lr
 8000254:	080056b0 	stmdaeq	r0, {r4, r5, r7, r9, sl, ip, lr}
 8000258:	20001000 	andcs	r1, r0, r0
 800025c:	20001084 	andcs	r1, r0, r4, lsl #1
 8000260:	20001088 	andcs	r1, r0, r8, lsl #1
 8000264:	200027bc 			; <UNDEFINED> instruction: 0x200027bc

08000268 <ADC0_1_IRQHandler>:
 8000268:	e7fe      	b.n	8000268 <ADC0_1_IRQHandler>

0800026a <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800026a:	b470      	push	{r4, r5, r6}
 800026c:	790a      	ldrb	r2, [r1, #4]
 800026e:	680b      	ldr	r3, [r1, #0]
 8000270:	f890 1056 	ldrb.w	r1, [r0, #86]	; 0x56
 8000274:	2a20      	cmp	r2, #32
 8000276:	bf28      	it	cs
 8000278:	2220      	movcs	r2, #32
 800027a:	189c      	adds	r4, r3, r2
 800027c:	b191      	cbz	r1, 80002a4 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3a>
 800027e:	f100 0120 	add.w	r1, r0, #32
 8000282:	f100 051f 	add.w	r5, r0, #31
 8000286:	42a3      	cmp	r3, r4
 8000288:	d107      	bne.n	800029a <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x30>
 800028a:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800028e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8000290:	b168      	cbz	r0, 80002ae <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x44>
 8000292:	6803      	ldr	r3, [r0, #0]
 8000294:	bc70      	pop	{r4, r5, r6}
 8000296:	689b      	ldr	r3, [r3, #8]
 8000298:	4718      	bx	r3
 800029a:	f813 6b01 	ldrb.w	r6, [r3], #1
 800029e:	f805 6f01 	strb.w	r6, [r5, #1]!
 80002a2:	e7f0      	b.n	8000286 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x1c>
 80002a4:	1e41      	subs	r1, r0, #1
 80002a6:	42a3      	cmp	r3, r4
 80002a8:	d103      	bne.n	80002b2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x48>
 80002aa:	f880 2055 	strb.w	r2, [r0, #85]	; 0x55
 80002ae:	bc70      	pop	{r4, r5, r6}
 80002b0:	4770      	bx	lr
 80002b2:	f813 5b01 	ldrb.w	r5, [r3], #1
 80002b6:	f801 5f01 	strb.w	r5, [r1, #1]!
 80002ba:	e7f4      	b.n	80002a6 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3c>

080002bc <main>:
 80002bc:	b570      	push	{r4, r5, r6, lr}
 80002be:	f5ad 7d6c 	sub.w	sp, sp, #944	; 0x3b0
 80002c2:	a814      	add	r0, sp, #80	; 0x50
 80002c4:	f003 fa58 	bl	8003778 <Hardware::Hardware()>
 80002c8:	a81a      	add	r0, sp, #104	; 0x68
 80002ca:	f003 f807 	bl	80032dc <Display::Display()>
 80002ce:	a805      	add	r0, sp, #20
 80002d0:	f002 fbf2 	bl	8002ab8 <ConfigStore::ConfigStore()>
 80002d4:	a80c      	add	r0, sp, #48	; 0x30
 80002d6:	f002 fbdb 	bl	8002a90 <Network::Network()>
 80002da:	a82e      	add	r0, sp, #184	; 0xb8
 80002dc:	f000 fd40 	bl	8000d60 <Widget::Widget()>
 80002e0:	2300      	movs	r3, #0
 80002e2:	4619      	mov	r1, r3
 80002e4:	2201      	movs	r2, #1
 80002e6:	a82e      	add	r0, sp, #184	; 0xb8
 80002e8:	f001 feee 	bl	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 80002ec:	a806      	add	r0, sp, #24
 80002ee:	f002 fdb3 	bl	8002e58 <StoreWidget::StoreWidget()>
 80002f2:	a906      	add	r1, sp, #24
 80002f4:	a810      	add	r0, sp, #64	; 0x40
 80002f6:	f001 f8fd 	bl	80014f4 <WidgetParams::WidgetParams(WidgetParamsStore*)>
 80002fa:	a810      	add	r0, sp, #64	; 0x40
 80002fc:	f001 f902 	bl	8001504 <WidgetParams::Load()>
 8000300:	b128      	cbz	r0, 800030e <main+0x52>
 8000302:	a810      	add	r0, sp, #64	; 0x40
 8000304:	f001 f99d 	bl	8001642 <WidgetParams::Dump()>
 8000308:	a810      	add	r0, sp, #64	; 0x40
 800030a:	f001 f977 	bl	80015fc <WidgetParams::Set()>
 800030e:	a808      	add	r0, sp, #32
 8000310:	f002 fd66 	bl	8002de0 <StoreRDMDevice::StoreRDMDevice()>
 8000314:	ac35      	add	r4, sp, #212	; 0xd4
 8000316:	a908      	add	r1, sp, #32
 8000318:	a822      	add	r0, sp, #136	; 0x88
 800031a:	f002 fb63 	bl	80029e4 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 800031e:	4620      	mov	r0, r4
 8000320:	494e      	ldr	r1, [pc, #312]	; (800045c <main+0x1a0>)
 8000322:	f7ff ffa2 	bl	800026a <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 8000326:	a822      	add	r0, sp, #136	; 0x88
 8000328:	f002 fb71 	bl	8002a0e <RDMDeviceParams::Load()>
 800032c:	b130      	cbz	r0, 800033c <main+0x80>
 800032e:	a822      	add	r0, sp, #136	; 0x88
 8000330:	f002 fbad 	bl	8002a8e <RDMDeviceParams::Dump()>
 8000334:	4621      	mov	r1, r4
 8000336:	a822      	add	r0, sp, #136	; 0x88
 8000338:	f002 fb74 	bl	8002a24 <RDMDeviceParams::Set(RDMDevice*)>
 800033c:	2301      	movs	r3, #1
 800033e:	f88d 312a 	strb.w	r3, [sp, #298]	; 0x12a
 8000342:	a90a      	add	r1, sp, #40	; 0x28
 8000344:	f89d 3129 	ldrb.w	r3, [sp, #297]	; 0x129
 8000348:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800034c:	4620      	mov	r0, r4
 800034e:	940a      	str	r4, [sp, #40]	; 0x28
 8000350:	f7ff ff8b 	bl	800026a <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 8000354:	f89d 3129 	ldrb.w	r3, [sp, #297]	; 0x129
 8000358:	f89d 5128 	ldrb.w	r5, [sp, #296]	; 0x128
 800035c:	f10d 01f3 	add.w	r1, sp, #243	; 0xf3
 8000360:	2200      	movs	r2, #0
 8000362:	42aa      	cmp	r2, r5
 8000364:	d374      	bcc.n	8000450 <main+0x194>
 8000366:	f8ad 311c 	strh.w	r3, [sp, #284]	; 0x11c
 800036a:	4b3d      	ldr	r3, [pc, #244]	; (8000460 <main+0x1a4>)
 800036c:	f89d 404b 	ldrb.w	r4, [sp, #75]	; 0x4b
 8000370:	4a3c      	ldr	r2, [pc, #240]	; (8000464 <main+0x1a8>)
 8000372:	493d      	ldr	r1, [pc, #244]	; (8000468 <main+0x1ac>)
 8000374:	9300      	str	r3, [sp, #0]
 8000376:	483d      	ldr	r0, [pc, #244]	; (800046c <main+0x1b0>)
 8000378:	4b3d      	ldr	r3, [pc, #244]	; (8000470 <main+0x1b4>)
 800037a:	f000 fb7d 	bl	8000a78 <printf>
 800037e:	4b3d      	ldr	r3, [pc, #244]	; (8000474 <main+0x1b8>)
 8000380:	483d      	ldr	r0, [pc, #244]	; (8000478 <main+0x1bc>)
 8000382:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8000386:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 800038a:	4621      	mov	r1, r4
 800038c:	f000 fb74 	bl	8000a78 <printf>
 8000390:	f89d 3123 	ldrb.w	r3, [sp, #291]	; 0x123
 8000394:	9302      	str	r3, [sp, #8]
 8000396:	f89d 3122 	ldrb.w	r3, [sp, #290]	; 0x122
 800039a:	9301      	str	r3, [sp, #4]
 800039c:	f89d 3121 	ldrb.w	r3, [sp, #289]	; 0x121
 80003a0:	f89d 211f 	ldrb.w	r2, [sp, #287]	; 0x11f
 80003a4:	f89d 111e 	ldrb.w	r1, [sp, #286]	; 0x11e
 80003a8:	9300      	str	r3, [sp, #0]
 80003aa:	4834      	ldr	r0, [pc, #208]	; (800047c <main+0x1c0>)
 80003ac:	f89d 3120 	ldrb.w	r3, [sp, #288]	; 0x120
 80003b0:	f000 fb62 	bl	8000a78 <printf>
 80003b4:	aa3d      	add	r2, sp, #244	; 0xf4
 80003b6:	4629      	mov	r1, r5
 80003b8:	4831      	ldr	r0, [pc, #196]	; (8000480 <main+0x1c4>)
 80003ba:	f000 fb5d 	bl	8000a78 <printf>
 80003be:	2102      	movs	r1, #2
 80003c0:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80003c4:	f003 fd70 	bl	8003ea8 <fwdgt_config>
 80003c8:	2801      	cmp	r0, #1
 80003ca:	bf0c      	ite	eq
 80003cc:	2301      	moveq	r3, #1
 80003ce:	2300      	movne	r3, #0
 80003d0:	f88d 3050 	strb.w	r3, [sp, #80]	; 0x50
 80003d4:	d101      	bne.n	80003da <main+0x11e>
 80003d6:	f003 fd57 	bl	8003e88 <fwdgt_enable>
 80003da:	2c03      	cmp	r4, #3
 80003dc:	d108      	bne.n	80003f0 <main+0x134>
 80003de:	2301      	movs	r3, #1
 80003e0:	a82e      	add	r0, sp, #184	; 0xb8
 80003e2:	461a      	mov	r2, r3
 80003e4:	2100      	movs	r1, #0
 80003e6:	f001 fe6f 	bl	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 80003ea:	a82e      	add	r0, sp, #184	; 0xb8
 80003ec:	f001 fa28 	bl	8001840 <Widget::SnifferFillTransmitBuffer()>
 80003f0:	4d24      	ldr	r5, [pc, #144]	; (8000484 <main+0x1c8>)
 80003f2:	4c25      	ldr	r4, [pc, #148]	; (8000488 <main+0x1cc>)
 80003f4:	2601      	movs	r6, #1
 80003f6:	f003 fd4f 	bl	8003e98 <fwdgt_counter_reload>
 80003fa:	a82e      	add	r0, sp, #184	; 0xb8
 80003fc:	f000 ff92 	bl	8001324 <Widget::ReceiveDataFromHost()>
 8000400:	a82e      	add	r0, sp, #184	; 0xb8
 8000402:	f000 fd35 	bl	8000e70 <Widget::ReceivedDmxPacket()>
 8000406:	a82e      	add	r0, sp, #184	; 0xb8
 8000408:	f000 fdfa 	bl	8001000 <Widget::ReceivedDmxChangeOfStatePacket()>
 800040c:	a82e      	add	r0, sp, #184	; 0xb8
 800040e:	f000 fe85 	bl	800111c <Widget::ReceivedRdmPacket()>
 8000412:	a82e      	add	r0, sp, #184	; 0xb8
 8000414:	f000 fef8 	bl	8001208 <Widget::RdmTimeout()>
 8000418:	a82e      	add	r0, sp, #184	; 0xb8
 800041a:	f001 f9bb 	bl	8001794 <Widget::SnifferRdm()>
 800041e:	a82e      	add	r0, sp, #184	; 0xb8
 8000420:	f001 f992 	bl	8001748 <Widget::SnifferDmx()>
 8000424:	a805      	add	r0, sp, #20
 8000426:	f002 fc0b 	bl	8002c40 <ConfigStore::Flash()>
 800042a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800042c:	2a00      	cmp	r2, #0
 800042e:	d0e2      	beq.n	80003f6 <main+0x13a>
 8000430:	682b      	ldr	r3, [r5, #0]
 8000432:	9919      	ldr	r1, [sp, #100]	; 0x64
 8000434:	1a5b      	subs	r3, r3, r1
 8000436:	429a      	cmp	r2, r3
 8000438:	d8dd      	bhi.n	80003f6 <main+0x13a>
 800043a:	682b      	ldr	r3, [r5, #0]
 800043c:	9319      	str	r3, [sp, #100]	; 0x64
 800043e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8000440:	2b01      	cmp	r3, #1
 8000442:	f083 0201 	eor.w	r2, r3, #1
 8000446:	9218      	str	r2, [sp, #96]	; 0x60
 8000448:	bf14      	ite	ne
 800044a:	6126      	strne	r6, [r4, #16]
 800044c:	6163      	streq	r3, [r4, #20]
 800044e:	e7d2      	b.n	80003f6 <main+0x13a>
 8000450:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8000454:	4403      	add	r3, r0
 8000456:	b29b      	uxth	r3, r3
 8000458:	3201      	adds	r2, #1
 800045a:	e782      	b.n	8000362 <main+0xa6>
 800045c:	08004f40 	stmdaeq	r0, {r6, r8, r9, sl, fp, lr}
 8000460:	08004e8e 	stmdaeq	r0, {r1, r2, r3, r7, r9, sl, fp, lr}
 8000464:	08004e64 	stmdaeq	r0, {r2, r5, r6, r9, sl, fp, lr}
 8000468:	08004f48 	stmdaeq	r0, {r3, r6, r8, r9, sl, fp, lr}
 800046c:	08004e6f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r9, sl, fp, lr}
 8000470:	08004e58 	stmdaeq	r0, {r3, r4, r6, r9, sl, fp, lr}
 8000474:	08004f4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, fp, lr}
 8000478:	08004e97 	stmdaeq	r0, {r0, r1, r2, r4, r7, r9, sl, fp, lr}
 800047c:	08004ef1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, sl, fp, lr}
 8000480:	08004f1b 	stmdaeq	r0, {r0, r1, r3, r4, r8, r9, sl, fp, lr}
 8000484:	200027b4 			; <UNDEFINED> instruction: 0x200027b4
 8000488:	40011000 	andmi	r1, r1, r0

0800048c <_itostr>:
 800048c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800048e:	0fc7      	lsrs	r7, r0, #31
 8000490:	b091      	sub	sp, #68	; 0x44
 8000492:	bf18      	it	ne
 8000494:	4240      	negne	r0, r0
 8000496:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 800049a:	b9c8      	cbnz	r0, 80004d0 <_itostr+0x44>
 800049c:	2330      	movs	r3, #48	; 0x30
 800049e:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80004a2:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 80004a6:	b132      	cbz	r2, 80004b6 <_itostr+0x2a>
 80004a8:	4668      	mov	r0, sp
 80004aa:	2530      	movs	r5, #48	; 0x30
 80004ac:	1ae6      	subs	r6, r4, r3
 80004ae:	4296      	cmp	r6, r2
 80004b0:	da01      	bge.n	80004b6 <_itostr+0x2a>
 80004b2:	4283      	cmp	r3, r0
 80004b4:	d81c      	bhi.n	80004f0 <_itostr+0x64>
 80004b6:	b117      	cbz	r7, 80004be <_itostr+0x32>
 80004b8:	222d      	movs	r2, #45	; 0x2d
 80004ba:	f803 2901 	strb.w	r2, [r3], #-1
 80004be:	3301      	adds	r3, #1
 80004c0:	1ae0      	subs	r0, r4, r3
 80004c2:	3901      	subs	r1, #1
 80004c4:	aa10      	add	r2, sp, #64	; 0x40
 80004c6:	4293      	cmp	r3, r2
 80004c8:	d315      	bcc.n	80004f6 <_itostr+0x6a>
 80004ca:	3001      	adds	r0, #1
 80004cc:	b011      	add	sp, #68	; 0x44
 80004ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80004d0:	4623      	mov	r3, r4
 80004d2:	250a      	movs	r5, #10
 80004d4:	46ec      	mov	ip, sp
 80004d6:	fb90 f6f5 	sdiv	r6, r0, r5
 80004da:	fb05 0016 	mls	r0, r5, r6, r0
 80004de:	3030      	adds	r0, #48	; 0x30
 80004e0:	f803 0901 	strb.w	r0, [r3], #-1
 80004e4:	4630      	mov	r0, r6
 80004e6:	2e00      	cmp	r6, #0
 80004e8:	d0dd      	beq.n	80004a6 <_itostr+0x1a>
 80004ea:	4563      	cmp	r3, ip
 80004ec:	d1f3      	bne.n	80004d6 <_itostr+0x4a>
 80004ee:	e7da      	b.n	80004a6 <_itostr+0x1a>
 80004f0:	f803 5901 	strb.w	r5, [r3], #-1
 80004f4:	e7da      	b.n	80004ac <_itostr+0x20>
 80004f6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80004fa:	f801 2f01 	strb.w	r2, [r1, #1]!
 80004fe:	e7e1      	b.n	80004c4 <_itostr+0x38>

08000500 <_xputch>:
 8000500:	4603      	mov	r3, r0
 8000502:	b410      	push	{r4}
 8000504:	4c09      	ldr	r4, [pc, #36]	; (800052c <_xputch+0x2c>)
 8000506:	68da      	ldr	r2, [r3, #12]
 8000508:	4608      	mov	r0, r1
 800050a:	6821      	ldr	r1, [r4, #0]
 800050c:	3201      	adds	r2, #1
 800050e:	60da      	str	r2, [r3, #12]
 8000510:	b141      	cbz	r1, 8000524 <_xputch+0x24>
 8000512:	691b      	ldr	r3, [r3, #16]
 8000514:	429a      	cmp	r2, r3
 8000516:	da02      	bge.n	800051e <_xputch+0x1e>
 8000518:	1c4b      	adds	r3, r1, #1
 800051a:	6023      	str	r3, [r4, #0]
 800051c:	7008      	strb	r0, [r1, #0]
 800051e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000522:	4770      	bx	lr
 8000524:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000528:	f003 b90f 	b.w	800374a <console_putc>
 800052c:	20001088 	andcs	r1, r0, r8, lsl #1

08000530 <_format_int>:
 8000530:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000534:	4698      	mov	r8, r3
 8000536:	b091      	sub	sp, #68	; 0x44
 8000538:	ea52 0308 	orrs.w	r3, r2, r8
 800053c:	4606      	mov	r6, r0
 800053e:	4617      	mov	r7, r2
 8000540:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8000544:	d133      	bne.n	80005ae <_format_int+0x7e>
 8000546:	2330      	movs	r3, #48	; 0x30
 8000548:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800054c:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8000550:	6833      	ldr	r3, [r6, #0]
 8000552:	07d8      	lsls	r0, r3, #31
 8000554:	d507      	bpl.n	8000566 <_format_int+0x36>
 8000556:	6871      	ldr	r1, [r6, #4]
 8000558:	466a      	mov	r2, sp
 800055a:	2030      	movs	r0, #48	; 0x30
 800055c:	1b2f      	subs	r7, r5, r4
 800055e:	428f      	cmp	r7, r1
 8000560:	da01      	bge.n	8000566 <_format_int+0x36>
 8000562:	4294      	cmp	r4, r2
 8000564:	d839      	bhi.n	80005da <_format_int+0xaa>
 8000566:	0699      	lsls	r1, r3, #26
 8000568:	d507      	bpl.n	800057a <_format_int+0x4a>
 800056a:	68b1      	ldr	r1, [r6, #8]
 800056c:	466a      	mov	r2, sp
 800056e:	2030      	movs	r0, #48	; 0x30
 8000570:	1b2f      	subs	r7, r5, r4
 8000572:	428f      	cmp	r7, r1
 8000574:	da01      	bge.n	800057a <_format_int+0x4a>
 8000576:	4294      	cmp	r4, r2
 8000578:	d832      	bhi.n	80005e0 <_format_int+0xb0>
 800057a:	071a      	lsls	r2, r3, #28
 800057c:	bf44      	itt	mi
 800057e:	222d      	movmi	r2, #45	; 0x2d
 8000580:	f804 2901 	strbmi.w	r2, [r4], #-1
 8000584:	065b      	lsls	r3, r3, #25
 8000586:	d407      	bmi.n	8000598 <_format_int+0x68>
 8000588:	68b2      	ldr	r2, [r6, #8]
 800058a:	466b      	mov	r3, sp
 800058c:	2120      	movs	r1, #32
 800058e:	1b28      	subs	r0, r5, r4
 8000590:	4290      	cmp	r0, r2
 8000592:	da01      	bge.n	8000598 <_format_int+0x68>
 8000594:	429c      	cmp	r4, r3
 8000596:	d826      	bhi.n	80005e6 <_format_int+0xb6>
 8000598:	1b2d      	subs	r5, r5, r4
 800059a:	3401      	adds	r4, #1
 800059c:	ab10      	add	r3, sp, #64	; 0x40
 800059e:	429c      	cmp	r4, r3
 80005a0:	d324      	bcc.n	80005ec <_format_int+0xbc>
 80005a2:	68b3      	ldr	r3, [r6, #8]
 80005a4:	42ab      	cmp	r3, r5
 80005a6:	dc27      	bgt.n	80005f8 <_format_int+0xc8>
 80005a8:	b011      	add	sp, #68	; 0x44
 80005aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80005ae:	462c      	mov	r4, r5
 80005b0:	46e9      	mov	r9, sp
 80005b2:	4638      	mov	r0, r7
 80005b4:	4641      	mov	r1, r8
 80005b6:	220a      	movs	r2, #10
 80005b8:	2300      	movs	r3, #0
 80005ba:	f7ff fe19 	bl	80001f0 <__aeabi_uldivmod>
 80005be:	3230      	adds	r2, #48	; 0x30
 80005c0:	f804 2901 	strb.w	r2, [r4], #-1
 80005c4:	463a      	mov	r2, r7
 80005c6:	4643      	mov	r3, r8
 80005c8:	2a0a      	cmp	r2, #10
 80005ca:	f173 0300 	sbcs.w	r3, r3, #0
 80005ce:	4607      	mov	r7, r0
 80005d0:	4688      	mov	r8, r1
 80005d2:	d3bd      	bcc.n	8000550 <_format_int+0x20>
 80005d4:	454c      	cmp	r4, r9
 80005d6:	d1ec      	bne.n	80005b2 <_format_int+0x82>
 80005d8:	e7ba      	b.n	8000550 <_format_int+0x20>
 80005da:	f804 0901 	strb.w	r0, [r4], #-1
 80005de:	e7bd      	b.n	800055c <_format_int+0x2c>
 80005e0:	f804 0901 	strb.w	r0, [r4], #-1
 80005e4:	e7c4      	b.n	8000570 <_format_int+0x40>
 80005e6:	f804 1901 	strb.w	r1, [r4], #-1
 80005ea:	e7d0      	b.n	800058e <_format_int+0x5e>
 80005ec:	f814 1b01 	ldrb.w	r1, [r4], #1
 80005f0:	4630      	mov	r0, r6
 80005f2:	f7ff ff85 	bl	8000500 <_xputch>
 80005f6:	e7d1      	b.n	800059c <_format_int+0x6c>
 80005f8:	2120      	movs	r1, #32
 80005fa:	4630      	mov	r0, r6
 80005fc:	f7ff ff80 	bl	8000500 <_xputch>
 8000600:	3501      	adds	r5, #1
 8000602:	e7ce      	b.n	80005a2 <_format_int+0x72>

08000604 <_format_hex>:
 8000604:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000606:	b091      	sub	sp, #68	; 0x44
 8000608:	6804      	ldr	r4, [r0, #0]
 800060a:	4606      	mov	r6, r0
 800060c:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8000610:	bb61      	cbnz	r1, 800066c <_format_hex+0x68>
 8000612:	2330      	movs	r3, #48	; 0x30
 8000614:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8000618:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 800061c:	07e5      	lsls	r5, r4, #31
 800061e:	d507      	bpl.n	8000630 <_format_hex+0x2c>
 8000620:	6870      	ldr	r0, [r6, #4]
 8000622:	4669      	mov	r1, sp
 8000624:	2530      	movs	r5, #48	; 0x30
 8000626:	1ad7      	subs	r7, r2, r3
 8000628:	4287      	cmp	r7, r0
 800062a:	da01      	bge.n	8000630 <_format_hex+0x2c>
 800062c:	428b      	cmp	r3, r1
 800062e:	d831      	bhi.n	8000694 <_format_hex+0x90>
 8000630:	06a0      	lsls	r0, r4, #26
 8000632:	d507      	bpl.n	8000644 <_format_hex+0x40>
 8000634:	68b0      	ldr	r0, [r6, #8]
 8000636:	4669      	mov	r1, sp
 8000638:	2530      	movs	r5, #48	; 0x30
 800063a:	1ad7      	subs	r7, r2, r3
 800063c:	4287      	cmp	r7, r0
 800063e:	da01      	bge.n	8000644 <_format_hex+0x40>
 8000640:	428b      	cmp	r3, r1
 8000642:	d82a      	bhi.n	800069a <_format_hex+0x96>
 8000644:	0661      	lsls	r1, r4, #25
 8000646:	d407      	bmi.n	8000658 <_format_hex+0x54>
 8000648:	68b0      	ldr	r0, [r6, #8]
 800064a:	4669      	mov	r1, sp
 800064c:	2420      	movs	r4, #32
 800064e:	1ad5      	subs	r5, r2, r3
 8000650:	4285      	cmp	r5, r0
 8000652:	da01      	bge.n	8000658 <_format_hex+0x54>
 8000654:	428b      	cmp	r3, r1
 8000656:	d823      	bhi.n	80006a0 <_format_hex+0x9c>
 8000658:	1ad5      	subs	r5, r2, r3
 800065a:	1c5c      	adds	r4, r3, #1
 800065c:	ab10      	add	r3, sp, #64	; 0x40
 800065e:	429c      	cmp	r4, r3
 8000660:	d321      	bcc.n	80006a6 <_format_hex+0xa2>
 8000662:	68b3      	ldr	r3, [r6, #8]
 8000664:	429d      	cmp	r5, r3
 8000666:	db24      	blt.n	80006b2 <_format_hex+0xae>
 8000668:	b011      	add	sp, #68	; 0x44
 800066a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800066c:	f014 0f02 	tst.w	r4, #2
 8000670:	bf0c      	ite	eq
 8000672:	2757      	moveq	r7, #87	; 0x57
 8000674:	2737      	movne	r7, #55	; 0x37
 8000676:	4613      	mov	r3, r2
 8000678:	466d      	mov	r5, sp
 800067a:	f001 000f 	and.w	r0, r1, #15
 800067e:	2809      	cmp	r0, #9
 8000680:	bf94      	ite	ls
 8000682:	3030      	addls	r0, #48	; 0x30
 8000684:	19c0      	addhi	r0, r0, r7
 8000686:	0909      	lsrs	r1, r1, #4
 8000688:	f803 0901 	strb.w	r0, [r3], #-1
 800068c:	d0c6      	beq.n	800061c <_format_hex+0x18>
 800068e:	42ab      	cmp	r3, r5
 8000690:	d1f3      	bne.n	800067a <_format_hex+0x76>
 8000692:	e7c3      	b.n	800061c <_format_hex+0x18>
 8000694:	f803 5901 	strb.w	r5, [r3], #-1
 8000698:	e7c5      	b.n	8000626 <_format_hex+0x22>
 800069a:	f803 5901 	strb.w	r5, [r3], #-1
 800069e:	e7cc      	b.n	800063a <_format_hex+0x36>
 80006a0:	f803 4901 	strb.w	r4, [r3], #-1
 80006a4:	e7d3      	b.n	800064e <_format_hex+0x4a>
 80006a6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006aa:	4630      	mov	r0, r6
 80006ac:	f7ff ff28 	bl	8000500 <_xputch>
 80006b0:	e7d4      	b.n	800065c <_format_hex+0x58>
 80006b2:	2120      	movs	r1, #32
 80006b4:	4630      	mov	r0, r6
 80006b6:	f7ff ff23 	bl	8000500 <_xputch>
 80006ba:	3501      	adds	r5, #1
 80006bc:	e7d1      	b.n	8000662 <_format_hex+0x5e>
	...

080006c0 <_vprintf>:
 80006c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80006c4:	f04f 0800 	mov.w	r8, #0
 80006c8:	b096      	sub	sp, #88	; 0x58
 80006ca:	e9cd 8004 	strd	r8, r0, [sp, #16]
 80006ce:	4614      	mov	r4, r2
 80006d0:	af06      	add	r7, sp, #24
 80006d2:	780b      	ldrb	r3, [r1, #0]
 80006d4:	b91b      	cbnz	r3, 80006de <_vprintf+0x1e>
 80006d6:	9804      	ldr	r0, [sp, #16]
 80006d8:	b016      	add	sp, #88	; 0x58
 80006da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80006de:	2b25      	cmp	r3, #37	; 0x25
 80006e0:	f101 0601 	add.w	r6, r1, #1
 80006e4:	d005      	beq.n	80006f2 <_vprintf+0x32>
 80006e6:	4619      	mov	r1, r3
 80006e8:	a801      	add	r0, sp, #4
 80006ea:	f7ff ff09 	bl	8000500 <_xputch>
 80006ee:	4631      	mov	r1, r6
 80006f0:	e7ef      	b.n	80006d2 <_vprintf+0x12>
 80006f2:	784b      	ldrb	r3, [r1, #1]
 80006f4:	f8cd 800c 	str.w	r8, [sp, #12]
 80006f8:	2b30      	cmp	r3, #48	; 0x30
 80006fa:	e9cd 8801 	strd	r8, r8, [sp, #4]
 80006fe:	d129      	bne.n	8000754 <_vprintf+0x94>
 8000700:	2320      	movs	r3, #32
 8000702:	9301      	str	r3, [sp, #4]
 8000704:	1c8e      	adds	r6, r1, #2
 8000706:	2200      	movs	r2, #0
 8000708:	4635      	mov	r5, r6
 800070a:	4613      	mov	r3, r2
 800070c:	f04f 0c0a 	mov.w	ip, #10
 8000710:	7829      	ldrb	r1, [r5, #0]
 8000712:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8000716:	2809      	cmp	r0, #9
 8000718:	462e      	mov	r6, r5
 800071a:	f105 0501 	add.w	r5, r5, #1
 800071e:	d91d      	bls.n	800075c <_vprintf+0x9c>
 8000720:	b12a      	cbz	r2, 800072e <_vprintf+0x6e>
 8000722:	9303      	str	r3, [sp, #12]
 8000724:	b11b      	cbz	r3, 800072e <_vprintf+0x6e>
 8000726:	9b01      	ldr	r3, [sp, #4]
 8000728:	f043 0310 	orr.w	r3, r3, #16
 800072c:	9301      	str	r3, [sp, #4]
 800072e:	292e      	cmp	r1, #46	; 0x2e
 8000730:	d123      	bne.n	800077a <_vprintf+0xba>
 8000732:	7873      	ldrb	r3, [r6, #1]
 8000734:	2b2a      	cmp	r3, #42	; 0x2a
 8000736:	d015      	beq.n	8000764 <_vprintf+0xa4>
 8000738:	2100      	movs	r1, #0
 800073a:	1c70      	adds	r0, r6, #1
 800073c:	460a      	mov	r2, r1
 800073e:	250a      	movs	r5, #10
 8000740:	7803      	ldrb	r3, [r0, #0]
 8000742:	3b30      	subs	r3, #48	; 0x30
 8000744:	2b09      	cmp	r3, #9
 8000746:	4606      	mov	r6, r0
 8000748:	f100 0001 	add.w	r0, r0, #1
 800074c:	d958      	bls.n	8000800 <_vprintf+0x140>
 800074e:	b181      	cbz	r1, 8000772 <_vprintf+0xb2>
 8000750:	9202      	str	r2, [sp, #8]
 8000752:	e00e      	b.n	8000772 <_vprintf+0xb2>
 8000754:	2b2d      	cmp	r3, #45	; 0x2d
 8000756:	d1d6      	bne.n	8000706 <_vprintf+0x46>
 8000758:	2340      	movs	r3, #64	; 0x40
 800075a:	e7d2      	b.n	8000702 <_vprintf+0x42>
 800075c:	fb0c 0303 	mla	r3, ip, r3, r0
 8000760:	2201      	movs	r2, #1
 8000762:	e7d5      	b.n	8000710 <_vprintf+0x50>
 8000764:	f854 3b04 	ldr.w	r3, [r4], #4
 8000768:	2b00      	cmp	r3, #0
 800076a:	bfb8      	it	lt
 800076c:	425b      	neglt	r3, r3
 800076e:	3602      	adds	r6, #2
 8000770:	9302      	str	r3, [sp, #8]
 8000772:	9b01      	ldr	r3, [sp, #4]
 8000774:	f043 0301 	orr.w	r3, r3, #1
 8000778:	9301      	str	r3, [sp, #4]
 800077a:	7833      	ldrb	r3, [r6, #0]
 800077c:	2b6c      	cmp	r3, #108	; 0x6c
 800077e:	bf04      	itt	eq
 8000780:	3601      	addeq	r6, #1
 8000782:	9b01      	ldreq	r3, [sp, #4]
 8000784:	7831      	ldrb	r1, [r6, #0]
 8000786:	bf04      	itt	eq
 8000788:	f043 0304 	orreq.w	r3, r3, #4
 800078c:	9301      	streq	r3, [sp, #4]
 800078e:	2958      	cmp	r1, #88	; 0x58
 8000790:	f000 8169 	beq.w	8000a66 <_vprintf+0x3a6>
 8000794:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8000798:	b2da      	uxtb	r2, r3
 800079a:	2a15      	cmp	r2, #21
 800079c:	d8a4      	bhi.n	80006e8 <_vprintf+0x28>
 800079e:	2b15      	cmp	r3, #21
 80007a0:	d8a2      	bhi.n	80006e8 <_vprintf+0x28>
 80007a2:	a201      	add	r2, pc, #4	; (adr r2, 80007a8 <_vprintf+0xe8>)
 80007a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80007a8:	08000809 	stmdaeq	r0, {r0, r3, fp}
 80007ac:	0800081b 	stmdaeq	r0, {r0, r1, r3, r4, fp}
 80007b0:	080006e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl}
 80007b4:	08000851 	stmdaeq	r0, {r0, r4, r6, fp}
 80007b8:	080006e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl}
 80007bc:	080006e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl}
 80007c0:	0800081b 	stmdaeq	r0, {r0, r1, r3, r4, fp}
 80007c4:	080006e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl}
 80007c8:	080006e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl}
 80007cc:	080006e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl}
 80007d0:	080006e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl}
 80007d4:	080006e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl}
 80007d8:	080006e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl}
 80007dc:	080009a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, fp}
 80007e0:	080006e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl}
 80007e4:	080006e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl}
 80007e8:	080009d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, fp}
 80007ec:	080006e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl}
 80007f0:	08000a47 	stmdaeq	r0, {r0, r1, r2, r6, r9, fp}
 80007f4:	080006e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl}
 80007f8:	080006e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl}
 80007fc:	08000a6f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r9, fp}
 8000800:	fb05 3202 	mla	r2, r5, r2, r3
 8000804:	2101      	movs	r1, #1
 8000806:	e79b      	b.n	8000740 <_vprintf+0x80>
 8000808:	4625      	mov	r5, r4
 800080a:	a801      	add	r0, sp, #4
 800080c:	f855 1b04 	ldr.w	r1, [r5], #4
 8000810:	f7ff fe76 	bl	8000500 <_xputch>
 8000814:	3601      	adds	r6, #1
 8000816:	462c      	mov	r4, r5
 8000818:	e769      	b.n	80006ee <_vprintf+0x2e>
 800081a:	9901      	ldr	r1, [sp, #4]
 800081c:	074d      	lsls	r5, r1, #29
 800081e:	bf4b      	itete	mi
 8000820:	3407      	addmi	r4, #7
 8000822:	4625      	movpl	r5, r4
 8000824:	f024 0407 	bicmi.w	r4, r4, #7
 8000828:	f855 2b04 	ldrpl.w	r2, [r5], #4
 800082c:	bf45      	ittet	mi
 800082e:	6863      	ldrmi	r3, [r4, #4]
 8000830:	4625      	movmi	r5, r4
 8000832:	17d3      	asrpl	r3, r2, #31
 8000834:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8000838:	2b00      	cmp	r3, #0
 800083a:	da05      	bge.n	8000848 <_vprintf+0x188>
 800083c:	f041 0108 	orr.w	r1, r1, #8
 8000840:	4252      	negs	r2, r2
 8000842:	9101      	str	r1, [sp, #4]
 8000844:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000848:	a801      	add	r0, sp, #4
 800084a:	f7ff fe71 	bl	8000530 <_format_int>
 800084e:	e7e1      	b.n	8000814 <_vprintf+0x154>
 8000850:	3407      	adds	r4, #7
 8000852:	f024 0507 	bic.w	r5, r4, #7
 8000856:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 800085a:	f7ff fc79 	bl	8000150 <__aeabi_d2f>
 800085e:	9b01      	ldr	r3, [sp, #4]
 8000860:	ee07 0a90 	vmov	s15, r0
 8000864:	07dc      	lsls	r4, r3, #31
 8000866:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800086a:	bf4c      	ite	mi
 800086c:	9c02      	ldrmi	r4, [sp, #8]
 800086e:	2406      	movpl	r4, #6
 8000870:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000874:	bf48      	it	mi
 8000876:	eef1 7a67 	vnegmi.f32	s15, s15
 800087a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800087e:	bf4a      	itet	mi
 8000880:	f10d 0a19 	addmi.w	sl, sp, #25
 8000884:	46ba      	movpl	sl, r7
 8000886:	232d      	movmi	r3, #45	; 0x2d
 8000888:	ee17 0a10 	vmov	r0, s14
 800088c:	f04f 0200 	mov.w	r2, #0
 8000890:	4651      	mov	r1, sl
 8000892:	bf48      	it	mi
 8000894:	f88d 3018 	strbmi.w	r3, [sp, #24]
 8000898:	f7ff fdf8 	bl	800048c <_itostr>
 800089c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80008a0:	232e      	movs	r3, #46	; 0x2e
 80008a2:	f80a 3000 	strb.w	r3, [sl, r0]
 80008a6:	eb0a 0900 	add.w	r9, sl, r0
 80008aa:	230a      	movs	r3, #10
 80008ac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80008b0:	1c62      	adds	r2, r4, #1
 80008b2:	f109 0901 	add.w	r9, r9, #1
 80008b6:	4619      	mov	r1, r3
 80008b8:	2c00      	cmp	r4, #0
 80008ba:	dc3d      	bgt.n	8000938 <_vprintf+0x278>
 80008bc:	ee07 3a10 	vmov	s14, r3
 80008c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80008c4:	4649      	mov	r1, r9
 80008c6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80008ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80008ce:	ee17 0a90 	vmov	r0, s15
 80008d2:	f7ff fddb 	bl	800048c <_itostr>
 80008d6:	4448      	add	r0, r9
 80008d8:	1bc0      	subs	r0, r0, r7
 80008da:	1e44      	subs	r4, r0, #1
 80008dc:	193a      	adds	r2, r7, r4
 80008de:	5d3b      	ldrb	r3, [r7, r4]
 80008e0:	2b34      	cmp	r3, #52	; 0x34
 80008e2:	d911      	bls.n	8000908 <_vprintf+0x248>
 80008e4:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 80008e8:	292e      	cmp	r1, #46	; 0x2e
 80008ea:	f102 33ff 	add.w	r3, r2, #4294967295	; 0xffffffff
 80008ee:	d029      	beq.n	8000944 <_vprintf+0x284>
 80008f0:	469c      	mov	ip, r3
 80008f2:	f04f 0e30 	mov.w	lr, #48	; 0x30
 80008f6:	4663      	mov	r3, ip
 80008f8:	f81c 1901 	ldrb.w	r1, [ip], #-1
 80008fc:	2939      	cmp	r1, #57	; 0x39
 80008fe:	d01e      	beq.n	800093e <_vprintf+0x27e>
 8000900:	292e      	cmp	r1, #46	; 0x2e
 8000902:	d01f      	beq.n	8000944 <_vprintf+0x284>
 8000904:	3101      	adds	r1, #1
 8000906:	7019      	strb	r1, [r3, #0]
 8000908:	f104 0358 	add.w	r3, r4, #88	; 0x58
 800090c:	446b      	add	r3, sp
 800090e:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8000912:	2b2e      	cmp	r3, #46	; 0x2e
 8000914:	bf08      	it	eq
 8000916:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800091a:	46a1      	mov	r9, r4
 800091c:	9b03      	ldr	r3, [sp, #12]
 800091e:	4599      	cmp	r9, r3
 8000920:	db3b      	blt.n	800099a <_vprintf+0x2da>
 8000922:	46b9      	mov	r9, r7
 8000924:	2c00      	cmp	r4, #0
 8000926:	f77f af75 	ble.w	8000814 <_vprintf+0x154>
 800092a:	f819 1b01 	ldrb.w	r1, [r9], #1
 800092e:	a801      	add	r0, sp, #4
 8000930:	f7ff fde6 	bl	8000500 <_xputch>
 8000934:	3c01      	subs	r4, #1
 8000936:	e7f5      	b.n	8000924 <_vprintf+0x264>
 8000938:	434b      	muls	r3, r1
 800093a:	3c01      	subs	r4, #1
 800093c:	e7bc      	b.n	80008b8 <_vprintf+0x1f8>
 800093e:	f88c e001 	strb.w	lr, [ip, #1]
 8000942:	e7d8      	b.n	80008f6 <_vprintf+0x236>
 8000944:	3b01      	subs	r3, #1
 8000946:	f04f 0c30 	mov.w	ip, #48	; 0x30
 800094a:	7819      	ldrb	r1, [r3, #0]
 800094c:	2939      	cmp	r1, #57	; 0x39
 800094e:	d112      	bne.n	8000976 <_vprintf+0x2b6>
 8000950:	42bb      	cmp	r3, r7
 8000952:	d20d      	bcs.n	8000970 <_vprintf+0x2b0>
 8000954:	1c5c      	adds	r4, r3, #1
 8000956:	1c99      	adds	r1, r3, #2
 8000958:	428c      	cmp	r4, r1
 800095a:	eba2 0203 	sub.w	r2, r2, r3
 800095e:	d913      	bls.n	8000988 <_vprintf+0x2c8>
 8000960:	4619      	mov	r1, r3
 8000962:	441a      	add	r2, r3
 8000964:	428a      	cmp	r2, r1
 8000966:	d10b      	bne.n	8000980 <_vprintf+0x2c0>
 8000968:	2231      	movs	r2, #49	; 0x31
 800096a:	705a      	strb	r2, [r3, #1]
 800096c:	4604      	mov	r4, r0
 800096e:	e7cb      	b.n	8000908 <_vprintf+0x248>
 8000970:	f803 c901 	strb.w	ip, [r3], #-1
 8000974:	e7e9      	b.n	800094a <_vprintf+0x28a>
 8000976:	42bb      	cmp	r3, r7
 8000978:	d3ec      	bcc.n	8000954 <_vprintf+0x294>
 800097a:	292d      	cmp	r1, #45	; 0x2d
 800097c:	d0ea      	beq.n	8000954 <_vprintf+0x294>
 800097e:	e7c1      	b.n	8000904 <_vprintf+0x244>
 8000980:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8000984:	704c      	strb	r4, [r1, #1]
 8000986:	e7ed      	b.n	8000964 <_vprintf+0x2a4>
 8000988:	4414      	add	r4, r2
 800098a:	440a      	add	r2, r1
 800098c:	428a      	cmp	r2, r1
 800098e:	d0eb      	beq.n	8000968 <_vprintf+0x2a8>
 8000990:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 8000994:	f802 cd01 	strb.w	ip, [r2, #-1]!
 8000998:	e7f8      	b.n	800098c <_vprintf+0x2cc>
 800099a:	2120      	movs	r1, #32
 800099c:	a801      	add	r0, sp, #4
 800099e:	f7ff fdaf 	bl	8000500 <_xputch>
 80009a2:	f109 0901 	add.w	r9, r9, #1
 80009a6:	e7b9      	b.n	800091c <_vprintf+0x25c>
 80009a8:	4625      	mov	r5, r4
 80009aa:	2308      	movs	r3, #8
 80009ac:	f855 4b04 	ldr.w	r4, [r5], #4
 80009b0:	9303      	str	r3, [sp, #12]
 80009b2:	2130      	movs	r1, #48	; 0x30
 80009b4:	2320      	movs	r3, #32
 80009b6:	a801      	add	r0, sp, #4
 80009b8:	9301      	str	r3, [sp, #4]
 80009ba:	f7ff fda1 	bl	8000500 <_xputch>
 80009be:	2178      	movs	r1, #120	; 0x78
 80009c0:	a801      	add	r0, sp, #4
 80009c2:	f7ff fd9d 	bl	8000500 <_xputch>
 80009c6:	4621      	mov	r1, r4
 80009c8:	a801      	add	r0, sp, #4
 80009ca:	f7ff fe1b 	bl	8000604 <_format_hex>
 80009ce:	e721      	b.n	8000814 <_vprintf+0x154>
 80009d0:	4625      	mov	r5, r4
 80009d2:	2400      	movs	r4, #0
 80009d4:	f855 9b04 	ldr.w	r9, [r5], #4
 80009d8:	f819 3004 	ldrb.w	r3, [r9, r4]
 80009dc:	b993      	cbnz	r3, 8000a04 <_vprintf+0x344>
 80009de:	9b01      	ldr	r3, [sp, #4]
 80009e0:	07d9      	lsls	r1, r3, #31
 80009e2:	d503      	bpl.n	80009ec <_vprintf+0x32c>
 80009e4:	9b02      	ldr	r3, [sp, #8]
 80009e6:	429c      	cmp	r4, r3
 80009e8:	bfa8      	it	ge
 80009ea:	461c      	movge	r4, r3
 80009ec:	9b01      	ldr	r3, [sp, #4]
 80009ee:	065a      	lsls	r2, r3, #25
 80009f0:	f104 0a01 	add.w	sl, r4, #1
 80009f4:	d403      	bmi.n	80009fe <_vprintf+0x33e>
 80009f6:	9b03      	ldr	r3, [sp, #12]
 80009f8:	429c      	cmp	r4, r3
 80009fa:	db05      	blt.n	8000a08 <_vprintf+0x348>
 80009fc:	4654      	mov	r4, sl
 80009fe:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8000a02:	e00d      	b.n	8000a20 <_vprintf+0x360>
 8000a04:	3401      	adds	r4, #1
 8000a06:	e7e7      	b.n	80009d8 <_vprintf+0x318>
 8000a08:	2120      	movs	r1, #32
 8000a0a:	a801      	add	r0, sp, #4
 8000a0c:	f7ff fd78 	bl	8000500 <_xputch>
 8000a10:	4654      	mov	r4, sl
 8000a12:	e7eb      	b.n	80009ec <_vprintf+0x32c>
 8000a14:	a801      	add	r0, sp, #4
 8000a16:	f7ff fd73 	bl	8000500 <_xputch>
 8000a1a:	9b02      	ldr	r3, [sp, #8]
 8000a1c:	3b01      	subs	r3, #1
 8000a1e:	9302      	str	r3, [sp, #8]
 8000a20:	9b01      	ldr	r3, [sp, #4]
 8000a22:	07db      	lsls	r3, r3, #31
 8000a24:	d501      	bpl.n	8000a2a <_vprintf+0x36a>
 8000a26:	9b02      	ldr	r3, [sp, #8]
 8000a28:	b11b      	cbz	r3, 8000a32 <_vprintf+0x372>
 8000a2a:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8000a2e:	2900      	cmp	r1, #0
 8000a30:	d1f0      	bne.n	8000a14 <_vprintf+0x354>
 8000a32:	9b03      	ldr	r3, [sp, #12]
 8000a34:	429c      	cmp	r4, r3
 8000a36:	f6bf aeed 	bge.w	8000814 <_vprintf+0x154>
 8000a3a:	2120      	movs	r1, #32
 8000a3c:	a801      	add	r0, sp, #4
 8000a3e:	f7ff fd5f 	bl	8000500 <_xputch>
 8000a42:	3401      	adds	r4, #1
 8000a44:	e7f5      	b.n	8000a32 <_vprintf+0x372>
 8000a46:	9b01      	ldr	r3, [sp, #4]
 8000a48:	f013 0304 	ands.w	r3, r3, #4
 8000a4c:	bf1d      	ittte	ne
 8000a4e:	3407      	addne	r4, #7
 8000a50:	f024 0407 	bicne.w	r4, r4, #7
 8000a54:	4625      	movne	r5, r4
 8000a56:	4625      	moveq	r5, r4
 8000a58:	bf1a      	itte	ne
 8000a5a:	f855 2b08 	ldrne.w	r2, [r5], #8
 8000a5e:	6863      	ldrne	r3, [r4, #4]
 8000a60:	f855 2b04 	ldreq.w	r2, [r5], #4
 8000a64:	e6f0      	b.n	8000848 <_vprintf+0x188>
 8000a66:	9b01      	ldr	r3, [sp, #4]
 8000a68:	f043 0302 	orr.w	r3, r3, #2
 8000a6c:	9301      	str	r3, [sp, #4]
 8000a6e:	4625      	mov	r5, r4
 8000a70:	f855 1b04 	ldr.w	r1, [r5], #4
 8000a74:	e7a8      	b.n	80009c8 <_vprintf+0x308>
 8000a76:	bf00      	nop

08000a78 <printf>:
 8000a78:	b40f      	push	{r0, r1, r2, r3}
 8000a7a:	b507      	push	{r0, r1, r2, lr}
 8000a7c:	aa04      	add	r2, sp, #16
 8000a7e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8000a82:	f852 1b04 	ldr.w	r1, [r2], #4
 8000a86:	9201      	str	r2, [sp, #4]
 8000a88:	f7ff fe1a 	bl	80006c0 <_vprintf>
 8000a8c:	b003      	add	sp, #12
 8000a8e:	f85d eb04 	ldr.w	lr, [sp], #4
 8000a92:	b004      	add	sp, #16
 8000a94:	4770      	bx	lr
	...

08000a98 <__udivmoddi4>:
 8000a98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000a9c:	9e08      	ldr	r6, [sp, #32]
 8000a9e:	460d      	mov	r5, r1
 8000aa0:	4604      	mov	r4, r0
 8000aa2:	460f      	mov	r7, r1
 8000aa4:	2b00      	cmp	r3, #0
 8000aa6:	d14a      	bne.n	8000b3e <__udivmoddi4+0xa6>
 8000aa8:	428a      	cmp	r2, r1
 8000aaa:	4694      	mov	ip, r2
 8000aac:	d965      	bls.n	8000b7a <__udivmoddi4+0xe2>
 8000aae:	fab2 f382 	clz	r3, r2
 8000ab2:	b143      	cbz	r3, 8000ac6 <__udivmoddi4+0x2e>
 8000ab4:	fa02 fc03 	lsl.w	ip, r2, r3
 8000ab8:	f1c3 0220 	rsb	r2, r3, #32
 8000abc:	409f      	lsls	r7, r3
 8000abe:	fa20 f202 	lsr.w	r2, r0, r2
 8000ac2:	4317      	orrs	r7, r2
 8000ac4:	409c      	lsls	r4, r3
 8000ac6:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000aca:	fa1f f58c 	uxth.w	r5, ip
 8000ace:	fbb7 f1fe 	udiv	r1, r7, lr
 8000ad2:	0c22      	lsrs	r2, r4, #16
 8000ad4:	fb0e 7711 	mls	r7, lr, r1, r7
 8000ad8:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000adc:	fb01 f005 	mul.w	r0, r1, r5
 8000ae0:	4290      	cmp	r0, r2
 8000ae2:	d90a      	bls.n	8000afa <__udivmoddi4+0x62>
 8000ae4:	eb1c 0202 	adds.w	r2, ip, r2
 8000ae8:	f101 37ff 	add.w	r7, r1, #4294967295	; 0xffffffff
 8000aec:	f080 811c 	bcs.w	8000d28 <__udivmoddi4+0x290>
 8000af0:	4290      	cmp	r0, r2
 8000af2:	f240 8119 	bls.w	8000d28 <__udivmoddi4+0x290>
 8000af6:	3902      	subs	r1, #2
 8000af8:	4462      	add	r2, ip
 8000afa:	1a12      	subs	r2, r2, r0
 8000afc:	b2a4      	uxth	r4, r4
 8000afe:	fbb2 f0fe 	udiv	r0, r2, lr
 8000b02:	fb0e 2210 	mls	r2, lr, r0, r2
 8000b06:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000b0a:	fb00 f505 	mul.w	r5, r0, r5
 8000b0e:	42a5      	cmp	r5, r4
 8000b10:	d90a      	bls.n	8000b28 <__udivmoddi4+0x90>
 8000b12:	eb1c 0404 	adds.w	r4, ip, r4
 8000b16:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8000b1a:	f080 8107 	bcs.w	8000d2c <__udivmoddi4+0x294>
 8000b1e:	42a5      	cmp	r5, r4
 8000b20:	f240 8104 	bls.w	8000d2c <__udivmoddi4+0x294>
 8000b24:	4464      	add	r4, ip
 8000b26:	3802      	subs	r0, #2
 8000b28:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000b2c:	1b64      	subs	r4, r4, r5
 8000b2e:	2100      	movs	r1, #0
 8000b30:	b11e      	cbz	r6, 8000b3a <__udivmoddi4+0xa2>
 8000b32:	40dc      	lsrs	r4, r3
 8000b34:	2300      	movs	r3, #0
 8000b36:	e9c6 4300 	strd	r4, r3, [r6]
 8000b3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b3e:	428b      	cmp	r3, r1
 8000b40:	d908      	bls.n	8000b54 <__udivmoddi4+0xbc>
 8000b42:	2e00      	cmp	r6, #0
 8000b44:	f000 80ed 	beq.w	8000d22 <__udivmoddi4+0x28a>
 8000b48:	2100      	movs	r1, #0
 8000b4a:	e9c6 0500 	strd	r0, r5, [r6]
 8000b4e:	4608      	mov	r0, r1
 8000b50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b54:	fab3 f183 	clz	r1, r3
 8000b58:	2900      	cmp	r1, #0
 8000b5a:	d149      	bne.n	8000bf0 <__udivmoddi4+0x158>
 8000b5c:	42ab      	cmp	r3, r5
 8000b5e:	d302      	bcc.n	8000b66 <__udivmoddi4+0xce>
 8000b60:	4282      	cmp	r2, r0
 8000b62:	f200 80f8 	bhi.w	8000d56 <__udivmoddi4+0x2be>
 8000b66:	1a84      	subs	r4, r0, r2
 8000b68:	eb65 0203 	sbc.w	r2, r5, r3
 8000b6c:	2001      	movs	r0, #1
 8000b6e:	4617      	mov	r7, r2
 8000b70:	2e00      	cmp	r6, #0
 8000b72:	d0e2      	beq.n	8000b3a <__udivmoddi4+0xa2>
 8000b74:	e9c6 4700 	strd	r4, r7, [r6]
 8000b78:	e7df      	b.n	8000b3a <__udivmoddi4+0xa2>
 8000b7a:	b902      	cbnz	r2, 8000b7e <__udivmoddi4+0xe6>
 8000b7c:	deff      	udf	#255	; 0xff
 8000b7e:	fab2 f382 	clz	r3, r2
 8000b82:	2b00      	cmp	r3, #0
 8000b84:	f040 8090 	bne.w	8000ca8 <__udivmoddi4+0x210>
 8000b88:	1a8a      	subs	r2, r1, r2
 8000b8a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000b8e:	fa1f fe8c 	uxth.w	lr, ip
 8000b92:	2101      	movs	r1, #1
 8000b94:	fbb2 f5f7 	udiv	r5, r2, r7
 8000b98:	fb07 2015 	mls	r0, r7, r5, r2
 8000b9c:	0c22      	lsrs	r2, r4, #16
 8000b9e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000ba2:	fb0e f005 	mul.w	r0, lr, r5
 8000ba6:	4290      	cmp	r0, r2
 8000ba8:	d908      	bls.n	8000bbc <__udivmoddi4+0x124>
 8000baa:	eb1c 0202 	adds.w	r2, ip, r2
 8000bae:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8000bb2:	d202      	bcs.n	8000bba <__udivmoddi4+0x122>
 8000bb4:	4290      	cmp	r0, r2
 8000bb6:	f200 80cb 	bhi.w	8000d50 <__udivmoddi4+0x2b8>
 8000bba:	4645      	mov	r5, r8
 8000bbc:	1a12      	subs	r2, r2, r0
 8000bbe:	b2a4      	uxth	r4, r4
 8000bc0:	fbb2 f0f7 	udiv	r0, r2, r7
 8000bc4:	fb07 2210 	mls	r2, r7, r0, r2
 8000bc8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000bcc:	fb0e fe00 	mul.w	lr, lr, r0
 8000bd0:	45a6      	cmp	lr, r4
 8000bd2:	d908      	bls.n	8000be6 <__udivmoddi4+0x14e>
 8000bd4:	eb1c 0404 	adds.w	r4, ip, r4
 8000bd8:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8000bdc:	d202      	bcs.n	8000be4 <__udivmoddi4+0x14c>
 8000bde:	45a6      	cmp	lr, r4
 8000be0:	f200 80bb 	bhi.w	8000d5a <__udivmoddi4+0x2c2>
 8000be4:	4610      	mov	r0, r2
 8000be6:	eba4 040e 	sub.w	r4, r4, lr
 8000bea:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000bee:	e79f      	b.n	8000b30 <__udivmoddi4+0x98>
 8000bf0:	f1c1 0720 	rsb	r7, r1, #32
 8000bf4:	408b      	lsls	r3, r1
 8000bf6:	fa22 fc07 	lsr.w	ip, r2, r7
 8000bfa:	ea4c 0c03 	orr.w	ip, ip, r3
 8000bfe:	fa05 f401 	lsl.w	r4, r5, r1
 8000c02:	fa20 f307 	lsr.w	r3, r0, r7
 8000c06:	40fd      	lsrs	r5, r7
 8000c08:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000c0c:	4323      	orrs	r3, r4
 8000c0e:	fbb5 f8f9 	udiv	r8, r5, r9
 8000c12:	fa1f fe8c 	uxth.w	lr, ip
 8000c16:	fb09 5518 	mls	r5, r9, r8, r5
 8000c1a:	0c1c      	lsrs	r4, r3, #16
 8000c1c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000c20:	fb08 f50e 	mul.w	r5, r8, lr
 8000c24:	42a5      	cmp	r5, r4
 8000c26:	fa02 f201 	lsl.w	r2, r2, r1
 8000c2a:	fa00 f001 	lsl.w	r0, r0, r1
 8000c2e:	d90b      	bls.n	8000c48 <__udivmoddi4+0x1b0>
 8000c30:	eb1c 0404 	adds.w	r4, ip, r4
 8000c34:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8000c38:	f080 8088 	bcs.w	8000d4c <__udivmoddi4+0x2b4>
 8000c3c:	42a5      	cmp	r5, r4
 8000c3e:	f240 8085 	bls.w	8000d4c <__udivmoddi4+0x2b4>
 8000c42:	f1a8 0802 	sub.w	r8, r8, #2
 8000c46:	4464      	add	r4, ip
 8000c48:	1b64      	subs	r4, r4, r5
 8000c4a:	b29d      	uxth	r5, r3
 8000c4c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000c50:	fb09 4413 	mls	r4, r9, r3, r4
 8000c54:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000c58:	fb03 fe0e 	mul.w	lr, r3, lr
 8000c5c:	45a6      	cmp	lr, r4
 8000c5e:	d908      	bls.n	8000c72 <__udivmoddi4+0x1da>
 8000c60:	eb1c 0404 	adds.w	r4, ip, r4
 8000c64:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
 8000c68:	d26c      	bcs.n	8000d44 <__udivmoddi4+0x2ac>
 8000c6a:	45a6      	cmp	lr, r4
 8000c6c:	d96a      	bls.n	8000d44 <__udivmoddi4+0x2ac>
 8000c6e:	3b02      	subs	r3, #2
 8000c70:	4464      	add	r4, ip
 8000c72:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000c76:	fba3 9502 	umull	r9, r5, r3, r2
 8000c7a:	eba4 040e 	sub.w	r4, r4, lr
 8000c7e:	42ac      	cmp	r4, r5
 8000c80:	46c8      	mov	r8, r9
 8000c82:	46ae      	mov	lr, r5
 8000c84:	d356      	bcc.n	8000d34 <__udivmoddi4+0x29c>
 8000c86:	d053      	beq.n	8000d30 <__udivmoddi4+0x298>
 8000c88:	b156      	cbz	r6, 8000ca0 <__udivmoddi4+0x208>
 8000c8a:	ebb0 0208 	subs.w	r2, r0, r8
 8000c8e:	eb64 040e 	sbc.w	r4, r4, lr
 8000c92:	fa04 f707 	lsl.w	r7, r4, r7
 8000c96:	40ca      	lsrs	r2, r1
 8000c98:	40cc      	lsrs	r4, r1
 8000c9a:	4317      	orrs	r7, r2
 8000c9c:	e9c6 7400 	strd	r7, r4, [r6]
 8000ca0:	4618      	mov	r0, r3
 8000ca2:	2100      	movs	r1, #0
 8000ca4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ca8:	f1c3 0120 	rsb	r1, r3, #32
 8000cac:	fa02 fc03 	lsl.w	ip, r2, r3
 8000cb0:	fa20 f201 	lsr.w	r2, r0, r1
 8000cb4:	fa25 f101 	lsr.w	r1, r5, r1
 8000cb8:	409d      	lsls	r5, r3
 8000cba:	432a      	orrs	r2, r5
 8000cbc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cc0:	fa1f fe8c 	uxth.w	lr, ip
 8000cc4:	fbb1 f0f7 	udiv	r0, r1, r7
 8000cc8:	fb07 1510 	mls	r5, r7, r0, r1
 8000ccc:	0c11      	lsrs	r1, r2, #16
 8000cce:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000cd2:	fb00 f50e 	mul.w	r5, r0, lr
 8000cd6:	428d      	cmp	r5, r1
 8000cd8:	fa04 f403 	lsl.w	r4, r4, r3
 8000cdc:	d908      	bls.n	8000cf0 <__udivmoddi4+0x258>
 8000cde:	eb1c 0101 	adds.w	r1, ip, r1
 8000ce2:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 8000ce6:	d22f      	bcs.n	8000d48 <__udivmoddi4+0x2b0>
 8000ce8:	428d      	cmp	r5, r1
 8000cea:	d92d      	bls.n	8000d48 <__udivmoddi4+0x2b0>
 8000cec:	3802      	subs	r0, #2
 8000cee:	4461      	add	r1, ip
 8000cf0:	1b49      	subs	r1, r1, r5
 8000cf2:	b292      	uxth	r2, r2
 8000cf4:	fbb1 f5f7 	udiv	r5, r1, r7
 8000cf8:	fb07 1115 	mls	r1, r7, r5, r1
 8000cfc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000d00:	fb05 f10e 	mul.w	r1, r5, lr
 8000d04:	4291      	cmp	r1, r2
 8000d06:	d908      	bls.n	8000d1a <__udivmoddi4+0x282>
 8000d08:	eb1c 0202 	adds.w	r2, ip, r2
 8000d0c:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8000d10:	d216      	bcs.n	8000d40 <__udivmoddi4+0x2a8>
 8000d12:	4291      	cmp	r1, r2
 8000d14:	d914      	bls.n	8000d40 <__udivmoddi4+0x2a8>
 8000d16:	3d02      	subs	r5, #2
 8000d18:	4462      	add	r2, ip
 8000d1a:	1a52      	subs	r2, r2, r1
 8000d1c:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000d20:	e738      	b.n	8000b94 <__udivmoddi4+0xfc>
 8000d22:	4631      	mov	r1, r6
 8000d24:	4630      	mov	r0, r6
 8000d26:	e708      	b.n	8000b3a <__udivmoddi4+0xa2>
 8000d28:	4639      	mov	r1, r7
 8000d2a:	e6e6      	b.n	8000afa <__udivmoddi4+0x62>
 8000d2c:	4610      	mov	r0, r2
 8000d2e:	e6fb      	b.n	8000b28 <__udivmoddi4+0x90>
 8000d30:	4548      	cmp	r0, r9
 8000d32:	d2a9      	bcs.n	8000c88 <__udivmoddi4+0x1f0>
 8000d34:	ebb9 0802 	subs.w	r8, r9, r2
 8000d38:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000d3c:	3b01      	subs	r3, #1
 8000d3e:	e7a3      	b.n	8000c88 <__udivmoddi4+0x1f0>
 8000d40:	4645      	mov	r5, r8
 8000d42:	e7ea      	b.n	8000d1a <__udivmoddi4+0x282>
 8000d44:	462b      	mov	r3, r5
 8000d46:	e794      	b.n	8000c72 <__udivmoddi4+0x1da>
 8000d48:	4640      	mov	r0, r8
 8000d4a:	e7d1      	b.n	8000cf0 <__udivmoddi4+0x258>
 8000d4c:	46d0      	mov	r8, sl
 8000d4e:	e77b      	b.n	8000c48 <__udivmoddi4+0x1b0>
 8000d50:	3d02      	subs	r5, #2
 8000d52:	4462      	add	r2, ip
 8000d54:	e732      	b.n	8000bbc <__udivmoddi4+0x124>
 8000d56:	4608      	mov	r0, r1
 8000d58:	e70a      	b.n	8000b70 <__udivmoddi4+0xd8>
 8000d5a:	4464      	add	r4, ip
 8000d5c:	3802      	subs	r0, #2
 8000d5e:	e742      	b.n	8000be6 <__udivmoddi4+0x14e>

08000d60 <Widget::Widget()>:
 8000d60:	b538      	push	{r3, r4, r5, lr}
 8000d62:	4604      	mov	r4, r0
 8000d64:	f001 f85a 	bl	8001e1c <Dmx::Dmx()>
 8000d68:	f104 001c 	add.w	r0, r4, #28
 8000d6c:	f001 fdf2 	bl	8002954 <RDMDevice::RDMDevice()>
 8000d70:	2500      	movs	r5, #0
 8000d72:	4b0d      	ldr	r3, [pc, #52]	; (8000da8 <Widget::Widget()+0x48>)
 8000d74:	f8c4 52dc 	str.w	r5, [r4, #732]	; 0x2dc
 8000d78:	e9c4 55b3 	strd	r5, r5, [r4, #716]	; 0x2cc
 8000d7c:	e9c4 55b5 	strd	r5, r5, [r4, #724]	; 0x2d4
 8000d80:	f884 52e0 	strb.w	r5, [r4, #736]	; 0x2e0
 8000d84:	f8c4 52e4 	str.w	r5, [r4, #740]	; 0x2e4
 8000d88:	601c      	str	r4, [r3, #0]
 8000d8a:	f001 fcf9 	bl	8002780 <FT245RL_init>
 8000d8e:	4629      	mov	r1, r5
 8000d90:	4620      	mov	r0, r4
 8000d92:	2201      	movs	r2, #1
 8000d94:	f001 fb4a 	bl	800242c <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	462b      	mov	r3, r5
 8000d9c:	2201      	movs	r2, #1
 8000d9e:	4629      	mov	r1, r5
 8000da0:	f001 f992 	bl	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 8000da4:	4620      	mov	r0, r4
 8000da6:	bd38      	pop	{r3, r4, r5, pc}
 8000da8:	2000108c 	andcs	r1, r0, ip, lsl #1

08000dac <Widget::GetParamsReply()>:
 8000dac:	b513      	push	{r0, r1, r4, lr}
 8000dae:	4604      	mov	r4, r0
 8000db0:	4911      	ldr	r1, [pc, #68]	; (8000df8 <Widget::GetParamsReply()+0x4c>)
 8000db2:	2007      	movs	r0, #7
 8000db4:	f000 fb9a 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8000db8:	2100      	movs	r1, #0
 8000dba:	201c      	movs	r0, #28
 8000dbc:	f000 fb96 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8000dc0:	4b0e      	ldr	r3, [pc, #56]	; (8000dfc <Widget::GetParamsReply()+0x50>)
 8000dc2:	781b      	ldrb	r3, [r3, #0]
 8000dc4:	f88d 3002 	strb.w	r3, [sp, #2]
 8000dc8:	4b0d      	ldr	r3, [pc, #52]	; (8000e00 <Widget::GetParamsReply()+0x54>)
 8000dca:	781b      	ldrb	r3, [r3, #0]
 8000dcc:	f88d 3000 	strb.w	r3, [sp]
 8000dd0:	4b0c      	ldr	r3, [pc, #48]	; (8000e04 <Widget::GetParamsReply()+0x58>)
 8000dd2:	781b      	ldrb	r3, [r3, #0]
 8000dd4:	f88d 3001 	strb.w	r3, [sp, #1]
 8000dd8:	4b0b      	ldr	r3, [pc, #44]	; (8000e08 <Widget::GetParamsReply()+0x5c>)
 8000dda:	781b      	ldrb	r3, [r3, #0]
 8000ddc:	f88d 3003 	strb.w	r3, [sp, #3]
 8000de0:	4b0a      	ldr	r3, [pc, #40]	; (8000e0c <Widget::GetParamsReply()+0x60>)
 8000de2:	781b      	ldrb	r3, [r3, #0]
 8000de4:	f88d 3004 	strb.w	r3, [sp, #4]
 8000de8:	466a      	mov	r2, sp
 8000dea:	2305      	movs	r3, #5
 8000dec:	2103      	movs	r1, #3
 8000dee:	4620      	mov	r0, r4
 8000df0:	f000 fd5a 	bl	80018a8 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned long)>
 8000df4:	b002      	add	sp, #8
 8000df6:	bd10      	pop	{r4, pc}
 8000df8:	08004f7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, sl, fp, lr}
 8000dfc:	20001001 	andcs	r1, r0, r1
 8000e00:	20001002 	andcs	r1, r0, r2
 8000e04:	20001003 	andcs	r1, r0, r3
 8000e08:	20001000 	andcs	r1, r0, r0
 8000e0c:	20001004 	andcs	r1, r0, r4

08000e10 <Widget::SetParams()>:
 8000e10:	b513      	push	{r0, r1, r4, lr}
 8000e12:	4604      	mov	r4, r0
 8000e14:	4914      	ldr	r1, [pc, #80]	; (8000e68 <Widget::SetParams()+0x58>)
 8000e16:	2007      	movs	r0, #7
 8000e18:	f000 fb68 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8000e1c:	2100      	movs	r1, #0
 8000e1e:	201c      	movs	r0, #28
 8000e20:	f000 fb64 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8000e24:	2300      	movs	r3, #0
 8000e26:	4619      	mov	r1, r3
 8000e28:	2201      	movs	r2, #1
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	f001 f94c 	bl	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 8000e30:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8000e34:	f88d 3002 	strb.w	r3, [sp, #2]
 8000e38:	f894 3076 	ldrb.w	r3, [r4, #118]	; 0x76
 8000e3c:	f88d 3003 	strb.w	r3, [sp, #3]
 8000e40:	4668      	mov	r0, sp
 8000e42:	f894 3077 	ldrb.w	r3, [r4, #119]	; 0x77
 8000e46:	f88d 3004 	strb.w	r3, [sp, #4]
 8000e4a:	f000 fd8d 	bl	8001968 <WidgetConfiguration::Store(TWidgetConfiguration const*)>
 8000e4e:	2301      	movs	r3, #1
 8000e50:	461a      	mov	r2, r3
 8000e52:	2100      	movs	r1, #0
 8000e54:	4620      	mov	r0, r4
 8000e56:	f001 f937 	bl	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 8000e5a:	4b04      	ldr	r3, [pc, #16]	; (8000e6c <Widget::SetParams()+0x5c>)
 8000e5c:	681b      	ldr	r3, [r3, #0]
 8000e5e:	f8c4 32d8 	str.w	r3, [r4, #728]	; 0x2d8
 8000e62:	b002      	add	sp, #8
 8000e64:	bd10      	pop	{r4, pc}
 8000e66:	bf00      	nop
 8000e68:	08004f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp, lr}
 8000e6c:	200027b4 			; <UNDEFINED> instruction: 0x200027b4

08000e70 <Widget::ReceivedDmxPacket()>:
 8000e70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e72:	f8d0 32cc 	ldr.w	r3, [r0, #716]	; 0x2cc
 8000e76:	2b03      	cmp	r3, #3
 8000e78:	4604      	mov	r4, r0
 8000e7a:	d042      	beq.n	8000f02 <Widget::ReceivedDmxPacket()+0x92>
 8000e7c:	f890 72e0 	ldrb.w	r7, [r0, #736]	; 0x2e0
 8000e80:	2f00      	cmp	r7, #0
 8000e82:	d13e      	bne.n	8000f02 <Widget::ReceivedDmxPacket()+0x92>
 8000e84:	6983      	ldr	r3, [r0, #24]
 8000e86:	2b01      	cmp	r3, #1
 8000e88:	d13b      	bne.n	8000f02 <Widget::ReceivedDmxPacket()+0x92>
 8000e8a:	f8d0 32d0 	ldr.w	r3, [r0, #720]	; 0x2d0
 8000e8e:	2b01      	cmp	r3, #1
 8000e90:	d037      	beq.n	8000f02 <Widget::ReceivedDmxPacket()+0x92>
 8000e92:	4639      	mov	r1, r7
 8000e94:	f001 fb9e 	bl	80025d4 <Dmx::GetDmxAvailable(unsigned long)>
 8000e98:	4605      	mov	r5, r0
 8000e9a:	b390      	cbz	r0, 8000f02 <Widget::ReceivedDmxPacket()+0x92>
 8000e9c:	4b19      	ldr	r3, [pc, #100]	; (8000f04 <Widget::ReceivedDmxPacket()+0x94>)
 8000e9e:	f8d4 12d4 	ldr.w	r1, [r4, #724]	; 0x2d4
 8000ea2:	681a      	ldr	r2, [r3, #0]
 8000ea4:	f8d4 32d8 	ldr.w	r3, [r4, #728]	; 0x2d8
 8000ea8:	1ad3      	subs	r3, r2, r3
 8000eaa:	428b      	cmp	r3, r1
 8000eac:	d329      	bcc.n	8000f02 <Widget::ReceivedDmxPacket()+0x92>
 8000eae:	f8d4 32e4 	ldr.w	r3, [r4, #740]	; 0x2e4
 8000eb2:	f8c4 22d8 	str.w	r2, [r4, #728]	; 0x2d8
 8000eb6:	3301      	adds	r3, #1
 8000eb8:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
 8000ebc:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 8000ec0:	4911      	ldr	r1, [pc, #68]	; (8000f08 <Widget::ReceivedDmxPacket()+0x98>)
 8000ec2:	3601      	adds	r6, #1
 8000ec4:	2006      	movs	r0, #6
 8000ec6:	f000 fb11 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8000eca:	4632      	mov	r2, r6
 8000ecc:	490f      	ldr	r1, [pc, #60]	; (8000f0c <Widget::ReceivedDmxPacket()+0x9c>)
 8000ece:	2007      	movs	r0, #7
 8000ed0:	f000 fb0c 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8000ed4:	4639      	mov	r1, r7
 8000ed6:	201c      	movs	r0, #28
 8000ed8:	f000 fb08 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8000edc:	1c72      	adds	r2, r6, #1
 8000ede:	b292      	uxth	r2, r2
 8000ee0:	2105      	movs	r1, #5
 8000ee2:	4620      	mov	r0, r4
 8000ee4:	f000 fcc0 	bl	8001868 <Widget::SendHeader(unsigned char, unsigned long)>
 8000ee8:	4638      	mov	r0, r7
 8000eea:	f001 fd28 	bl	800293e <usb_send_byte(unsigned char)>
 8000eee:	4620      	mov	r0, r4
 8000ef0:	b2b2      	uxth	r2, r6
 8000ef2:	4629      	mov	r1, r5
 8000ef4:	f000 fcca 	bl	800188c <Widget::SendData(unsigned char const*, unsigned long)>
 8000ef8:	4620      	mov	r0, r4
 8000efa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8000efe:	f000 bcd0 	b.w	80018a2 <Widget::SendFooter()>
 8000f02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f04:	200027b4 			; <UNDEFINED> instruction: 0x200027b4
 8000f08:	08004fa6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, sl, fp, lr}
 8000f0c:	08004fba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, r9, sl, fp, lr}

08000f10 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>:
 8000f10:	b570      	push	{r4, r5, r6, lr}
 8000f12:	f8d0 52dc 	ldr.w	r5, [r0, #732]	; 0x2dc
 8000f16:	4604      	mov	r4, r0
 8000f18:	460e      	mov	r6, r1
 8000f1a:	b9e5      	cbnz	r5, 8000f56 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x46>
 8000f1c:	490e      	ldr	r1, [pc, #56]	; (8000f58 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)+0x48>)
 8000f1e:	2007      	movs	r0, #7
 8000f20:	f000 fae4 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8000f24:	4629      	mov	r1, r5
 8000f26:	201c      	movs	r0, #28
 8000f28:	f000 fae0 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8000f2c:	462b      	mov	r3, r5
 8000f2e:	462a      	mov	r2, r5
 8000f30:	4629      	mov	r1, r5
 8000f32:	4620      	mov	r0, r4
 8000f34:	f001 f8c8 	bl	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 8000f38:	4633      	mov	r3, r6
 8000f3a:	f104 0273 	add.w	r2, r4, #115	; 0x73
 8000f3e:	4629      	mov	r1, r5
 8000f40:	4620      	mov	r0, r4
 8000f42:	f001 fa7d 	bl	8002440 <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)>
 8000f46:	462a      	mov	r2, r5
 8000f48:	4629      	mov	r1, r5
 8000f4a:	4620      	mov	r0, r4
 8000f4c:	2301      	movs	r3, #1
 8000f4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000f52:	f001 b8b9 	b.w	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 8000f56:	bd70      	pop	{r4, r5, r6, pc}
 8000f58:	08004fd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sl, fp, lr}

08000f5c <Widget::SendRdmPacketRequest(unsigned short)>:
 8000f5c:	b570      	push	{r4, r5, r6, lr}
 8000f5e:	4604      	mov	r4, r0
 8000f60:	460d      	mov	r5, r1
 8000f62:	2007      	movs	r0, #7
 8000f64:	4910      	ldr	r1, [pc, #64]	; (8000fa8 <Widget::SendRdmPacketRequest(unsigned short)+0x4c>)
 8000f66:	f000 fac1 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8000f6a:	2100      	movs	r1, #0
 8000f6c:	201c      	movs	r0, #28
 8000f6e:	f000 fabd 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8000f72:	f894 3087 	ldrb.w	r3, [r4, #135]	; 0x87
 8000f76:	f1a3 0210 	sub.w	r2, r3, #16
 8000f7a:	4253      	negs	r3, r2
 8000f7c:	4153      	adcs	r3, r2
 8000f7e:	f104 0673 	add.w	r6, r4, #115	; 0x73
 8000f82:	f884 32e0 	strb.w	r3, [r4, #736]	; 0x2e0
 8000f86:	462a      	mov	r2, r5
 8000f88:	4631      	mov	r1, r6
 8000f8a:	2000      	movs	r0, #0
 8000f8c:	f000 fd50 	bl	8001a30 <Rdm::SendRaw(unsigned long, unsigned char const*, unsigned long)>
 8000f90:	4b06      	ldr	r3, [pc, #24]	; (8000fac <Widget::SendRdmPacketRequest(unsigned short)+0x50>)
 8000f92:	681b      	ldr	r3, [r3, #0]
 8000f94:	f8c4 32dc 	str.w	r3, [r4, #732]	; 0x2dc
 8000f98:	4632      	mov	r2, r6
 8000f9a:	4629      	mov	r1, r5
 8000f9c:	2301      	movs	r3, #1
 8000f9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000fa2:	2011      	movs	r0, #17
 8000fa4:	f000 bd3a 	b.w	8001a1c <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 8000fa8:	08004ff8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000fac:	200027b4 			; <UNDEFINED> instruction: 0x200027b4

08000fb0 <Widget::ReceiveDmxOnChange()>:
 8000fb0:	b510      	push	{r4, lr}
 8000fb2:	4911      	ldr	r1, [pc, #68]	; (8000ff8 <Widget::ReceiveDmxOnChange()+0x48>)
 8000fb4:	4604      	mov	r4, r0
 8000fb6:	2007      	movs	r0, #7
 8000fb8:	f000 fa98 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8000fbc:	2100      	movs	r1, #0
 8000fbe:	201c      	movs	r0, #28
 8000fc0:	f000 fa94 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8000fc4:	f894 3073 	ldrb.w	r3, [r4, #115]	; 0x73
 8000fc8:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
 8000fcc:	2300      	movs	r3, #0
 8000fce:	4619      	mov	r1, r3
 8000fd0:	2201      	movs	r2, #1
 8000fd2:	4620      	mov	r0, r4
 8000fd4:	f001 f878 	bl	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 8000fd8:	2100      	movs	r1, #0
 8000fda:	4620      	mov	r0, r4
 8000fdc:	f001 f968 	bl	80022b0 <Dmx::ClearData(unsigned long)>
 8000fe0:	2301      	movs	r3, #1
 8000fe2:	461a      	mov	r2, r3
 8000fe4:	2100      	movs	r1, #0
 8000fe6:	4620      	mov	r0, r4
 8000fe8:	f001 f86e 	bl	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 8000fec:	4b03      	ldr	r3, [pc, #12]	; (8000ffc <Widget::ReceiveDmxOnChange()+0x4c>)
 8000fee:	681b      	ldr	r3, [r3, #0]
 8000ff0:	f8c4 32d8 	str.w	r3, [r4, #728]	; 0x2d8
 8000ff4:	bd10      	pop	{r4, pc}
 8000ff6:	bf00      	nop
 8000ff8:	08005010 	stmdaeq	r0, {r4, ip, lr}
 8000ffc:	200027b4 			; <UNDEFINED> instruction: 0x200027b4

08001000 <Widget::ReceivedDmxChangeOfStatePacket()>:
 8001000:	f8d0 22cc 	ldr.w	r2, [r0, #716]	; 0x2cc
 8001004:	2a03      	cmp	r2, #3
 8001006:	b510      	push	{r4, lr}
 8001008:	d01a      	beq.n	8001040 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 800100a:	f890 42e0 	ldrb.w	r4, [r0, #736]	; 0x2e0
 800100e:	b9bc      	cbnz	r4, 8001040 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001010:	6982      	ldr	r2, [r0, #24]
 8001012:	2a01      	cmp	r2, #1
 8001014:	d114      	bne.n	8001040 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001016:	f8d0 32d0 	ldr.w	r3, [r0, #720]	; 0x2d0
 800101a:	b18b      	cbz	r3, 8001040 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 800101c:	4621      	mov	r1, r4
 800101e:	f001 fa5d 	bl	80024dc <Dmx::GetDmxChanged(unsigned long)>
 8001022:	b168      	cbz	r0, 8001040 <Widget::ReceivedDmxChangeOfStatePacket()+0x40>
 8001024:	4907      	ldr	r1, [pc, #28]	; (8001044 <Widget::ReceivedDmxChangeOfStatePacket()+0x44>)
 8001026:	2007      	movs	r0, #7
 8001028:	f000 fa60 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 800102c:	4621      	mov	r1, r4
 800102e:	201c      	movs	r0, #28
 8001030:	f000 fa5c 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8001034:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001038:	4903      	ldr	r1, [pc, #12]	; (8001048 <Widget::ReceivedDmxChangeOfStatePacket()+0x48>)
 800103a:	2007      	movs	r0, #7
 800103c:	f000 ba56 	b.w	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8001040:	bd10      	pop	{r4, pc}
 8001042:	bf00      	nop
 8001044:	08005026 	stmdaeq	r0, {r1, r2, r5, ip, lr}
 8001048:	0800503c 	stmdaeq	r0, {r2, r3, r4, r5, ip, lr}

0800104c <Widget::GetSnReply()>:
 800104c:	b510      	push	{r4, lr}
 800104e:	4910      	ldr	r1, [pc, #64]	; (8001090 <Widget::GetSnReply()+0x44>)
 8001050:	4604      	mov	r4, r0
 8001052:	2007      	movs	r0, #7
 8001054:	f000 fa4a 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8001058:	2100      	movs	r1, #0
 800105a:	201c      	movs	r0, #28
 800105c:	f000 fa46 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8001060:	2300      	movs	r3, #0
 8001062:	4619      	mov	r1, r3
 8001064:	2201      	movs	r2, #1
 8001066:	4620      	mov	r0, r4
 8001068:	f001 f82e 	bl	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800106c:	2304      	movs	r3, #4
 800106e:	f104 026c 	add.w	r2, r4, #108	; 0x6c
 8001072:	210a      	movs	r1, #10
 8001074:	4620      	mov	r0, r4
 8001076:	f000 fc17 	bl	80018a8 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned long)>
 800107a:	2301      	movs	r3, #1
 800107c:	461a      	mov	r2, r3
 800107e:	2100      	movs	r1, #0
 8001080:	4620      	mov	r0, r4
 8001082:	f001 f821 	bl	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 8001086:	4b03      	ldr	r3, [pc, #12]	; (8001094 <Widget::GetSnReply()+0x48>)
 8001088:	681b      	ldr	r3, [r3, #0]
 800108a:	f8c4 32d8 	str.w	r3, [r4, #728]	; 0x2d8
 800108e:	bd10      	pop	{r4, pc}
 8001090:	08004f7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, sl, fp, lr}
 8001094:	200027b4 			; <UNDEFINED> instruction: 0x200027b4

08001098 <Widget::SendRdmDiscoveryRequest(unsigned short)>:
 8001098:	b570      	push	{r4, r5, r6, lr}
 800109a:	4604      	mov	r4, r0
 800109c:	460d      	mov	r5, r1
 800109e:	2007      	movs	r0, #7
 80010a0:	490d      	ldr	r1, [pc, #52]	; (80010d8 <Widget::SendRdmDiscoveryRequest(unsigned short)+0x40>)
 80010a2:	f000 fa23 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 80010a6:	f104 0673 	add.w	r6, r4, #115	; 0x73
 80010aa:	2100      	movs	r1, #0
 80010ac:	201c      	movs	r0, #28
 80010ae:	f000 fa1d 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 80010b2:	462a      	mov	r2, r5
 80010b4:	4631      	mov	r1, r6
 80010b6:	2000      	movs	r0, #0
 80010b8:	f000 fcba 	bl	8001a30 <Rdm::SendRaw(unsigned long, unsigned char const*, unsigned long)>
 80010bc:	4a07      	ldr	r2, [pc, #28]	; (80010dc <Widget::SendRdmDiscoveryRequest(unsigned short)+0x44>)
 80010be:	2301      	movs	r3, #1
 80010c0:	6812      	ldr	r2, [r2, #0]
 80010c2:	f8c4 22dc 	str.w	r2, [r4, #732]	; 0x2dc
 80010c6:	f884 32e0 	strb.w	r3, [r4, #736]	; 0x2e0
 80010ca:	4632      	mov	r2, r6
 80010cc:	4629      	mov	r1, r5
 80010ce:	2011      	movs	r0, #17
 80010d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80010d4:	f000 bca2 	b.w	8001a1c <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 80010d8:	0800505a 	stmdaeq	r0, {r1, r3, r4, r6, ip, lr}
 80010dc:	200027b4 			; <UNDEFINED> instruction: 0x200027b4

080010e0 <Widget::RdmTimeOutMessage()>:
 80010e0:	b510      	push	{r4, lr}
 80010e2:	2200      	movs	r2, #0
 80010e4:	4604      	mov	r4, r0
 80010e6:	490b      	ldr	r1, [pc, #44]	; (8001114 <Widget::RdmTimeOutMessage()+0x34>)
 80010e8:	2007      	movs	r0, #7
 80010ea:	f000 f9ff 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 80010ee:	490a      	ldr	r1, [pc, #40]	; (8001118 <Widget::RdmTimeOutMessage()+0x38>)
 80010f0:	201c      	movs	r0, #28
 80010f2:	f000 f9fb 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 80010f6:	2200      	movs	r2, #0
 80010f8:	210c      	movs	r1, #12
 80010fa:	4620      	mov	r0, r4
 80010fc:	f000 fbb4 	bl	8001868 <Widget::SendHeader(unsigned char, unsigned long)>
 8001100:	4620      	mov	r0, r4
 8001102:	f000 fbce 	bl	80018a2 <Widget::SendFooter()>
 8001106:	2300      	movs	r3, #0
 8001108:	f884 32e0 	strb.w	r3, [r4, #736]	; 0x2e0
 800110c:	f8c4 32dc 	str.w	r3, [r4, #732]	; 0x2dc
 8001110:	bd10      	pop	{r4, pc}
 8001112:	bf00      	nop
 8001114:	08005075 	stmdaeq	r0, {r0, r2, r4, r5, r6, ip, lr}
 8001118:	08005091 	stmdaeq	r0, {r0, r4, r7, ip, lr}

0800111c <Widget::ReceivedRdmPacket()>:
 800111c:	f8d0 32cc 	ldr.w	r3, [r0, #716]	; 0x2cc
 8001120:	f023 0302 	bic.w	r3, r3, #2
 8001124:	2b01      	cmp	r3, #1
 8001126:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800112a:	4604      	mov	r4, r0
 800112c:	d063      	beq.n	80011f6 <Widget::ReceivedRdmPacket()+0xda>
 800112e:	f8d0 32d0 	ldr.w	r3, [r0, #720]	; 0x2d0
 8001132:	2b01      	cmp	r3, #1
 8001134:	d05f      	beq.n	80011f6 <Widget::ReceivedRdmPacket()+0xda>
 8001136:	2000      	movs	r0, #0
 8001138:	f000 fc72 	bl	8001a20 <Rdm::Receive(unsigned long)>
 800113c:	4605      	mov	r5, r0
 800113e:	2800      	cmp	r0, #0
 8001140:	d059      	beq.n	80011f6 <Widget::ReceivedRdmPacket()+0xda>
 8001142:	7803      	ldrb	r3, [r0, #0]
 8001144:	2bcc      	cmp	r3, #204	; 0xcc
 8001146:	d134      	bne.n	80011b2 <Widget::ReceivedRdmPacket()+0x96>
 8001148:	7886      	ldrb	r6, [r0, #2]
 800114a:	7d07      	ldrb	r7, [r0, #20]
 800114c:	492b      	ldr	r1, [pc, #172]	; (80011fc <Widget::ReceivedRdmPacket()+0xe0>)
 800114e:	3602      	adds	r6, #2
 8001150:	b2f6      	uxtb	r6, r6
 8001152:	4632      	mov	r2, r6
 8001154:	2007      	movs	r0, #7
 8001156:	f000 f9c9 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 800115a:	4929      	ldr	r1, [pc, #164]	; (8001200 <Widget::ReceivedRdmPacket()+0xe4>)
 800115c:	201c      	movs	r0, #28
 800115e:	f000 f9c5 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8001162:	1c72      	adds	r2, r6, #1
 8001164:	2105      	movs	r1, #5
 8001166:	4620      	mov	r0, r4
 8001168:	f000 fb7e 	bl	8001868 <Widget::SendHeader(unsigned char, unsigned long)>
 800116c:	2000      	movs	r0, #0
 800116e:	f001 fbe6 	bl	800293e <usb_send_byte(unsigned char)>
 8001172:	4632      	mov	r2, r6
 8001174:	4629      	mov	r1, r5
 8001176:	4620      	mov	r0, r4
 8001178:	f000 fb88 	bl	800188c <Widget::SendData(unsigned char const*, unsigned long)>
 800117c:	4620      	mov	r0, r4
 800117e:	f000 fb90 	bl	80018a2 <Widget::SendFooter()>
 8001182:	2f11      	cmp	r7, #17
 8001184:	7d6a      	ldrb	r2, [r5, #21]
 8001186:	7dab      	ldrb	r3, [r5, #22]
 8001188:	d10f      	bne.n	80011aa <Widget::ReceivedRdmPacket()+0x8e>
 800118a:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800118e:	b29b      	uxth	r3, r3
 8001190:	2b02      	cmp	r3, #2
 8001192:	d00a      	beq.n	80011aa <Widget::ReceivedRdmPacket()+0x8e>
 8001194:	4620      	mov	r0, r4
 8001196:	f7ff ffa3 	bl	80010e0 <Widget::RdmTimeOutMessage()>
 800119a:	462a      	mov	r2, r5
 800119c:	4631      	mov	r1, r6
 800119e:	2300      	movs	r3, #0
 80011a0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80011a4:	2011      	movs	r0, #17
 80011a6:	f000 bc39 	b.w	8001a1c <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>
 80011aa:	2300      	movs	r3, #0
 80011ac:	f8c4 32dc 	str.w	r3, [r4, #732]	; 0x2dc
 80011b0:	e7f3      	b.n	800119a <Widget::ReceivedRdmPacket()+0x7e>
 80011b2:	2bfe      	cmp	r3, #254	; 0xfe
 80011b4:	d11d      	bne.n	80011f2 <Widget::ReceivedRdmPacket()+0xd6>
 80011b6:	2218      	movs	r2, #24
 80011b8:	4910      	ldr	r1, [pc, #64]	; (80011fc <Widget::ReceivedRdmPacket()+0xe0>)
 80011ba:	2007      	movs	r0, #7
 80011bc:	f000 f996 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 80011c0:	4910      	ldr	r1, [pc, #64]	; (8001204 <Widget::ReceivedRdmPacket()+0xe8>)
 80011c2:	201c      	movs	r0, #28
 80011c4:	f000 f992 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 80011c8:	2219      	movs	r2, #25
 80011ca:	2105      	movs	r1, #5
 80011cc:	4620      	mov	r0, r4
 80011ce:	f000 fb4b 	bl	8001868 <Widget::SendHeader(unsigned char, unsigned long)>
 80011d2:	2000      	movs	r0, #0
 80011d4:	f001 fbb3 	bl	800293e <usb_send_byte(unsigned char)>
 80011d8:	2218      	movs	r2, #24
 80011da:	4629      	mov	r1, r5
 80011dc:	4620      	mov	r0, r4
 80011de:	f000 fb55 	bl	800188c <Widget::SendData(unsigned char const*, unsigned long)>
 80011e2:	4620      	mov	r0, r4
 80011e4:	f000 fb5d 	bl	80018a2 <Widget::SendFooter()>
 80011e8:	4620      	mov	r0, r4
 80011ea:	f7ff ff79 	bl	80010e0 <Widget::RdmTimeOutMessage()>
 80011ee:	2618      	movs	r6, #24
 80011f0:	e7d3      	b.n	800119a <Widget::ReceivedRdmPacket()+0x7e>
 80011f2:	2600      	movs	r6, #0
 80011f4:	e7d1      	b.n	800119a <Widget::ReceivedRdmPacket()+0x7e>
 80011f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80011fa:	bf00      	nop
 80011fc:	08005075 	stmdaeq	r0, {r0, r2, r4, r5, r6, ip, lr}
 8001200:	0800509d 	stmdaeq	r0, {r0, r2, r3, r4, r7, ip, lr}
 8001204:	080050b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, ip, lr}

08001208 <Widget::RdmTimeout()>:
 8001208:	f8d0 32cc 	ldr.w	r3, [r0, #716]	; 0x2cc
 800120c:	2b03      	cmp	r3, #3
 800120e:	b510      	push	{r4, lr}
 8001210:	4604      	mov	r4, r0
 8001212:	d00d      	beq.n	8001230 <Widget::RdmTimeout()+0x28>
 8001214:	f8d0 22dc 	ldr.w	r2, [r0, #732]	; 0x2dc
 8001218:	b152      	cbz	r2, 8001230 <Widget::RdmTimeout()+0x28>
 800121a:	4b06      	ldr	r3, [pc, #24]	; (8001234 <Widget::RdmTimeout()+0x2c>)
 800121c:	681b      	ldr	r3, [r3, #0]
 800121e:	1a9b      	subs	r3, r3, r2
 8001220:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001224:	d304      	bcc.n	8001230 <Widget::RdmTimeout()+0x28>
 8001226:	f7ff ff5b 	bl	80010e0 <Widget::RdmTimeOutMessage()>
 800122a:	2300      	movs	r3, #0
 800122c:	f8c4 32dc 	str.w	r3, [r4, #732]	; 0x2dc
 8001230:	bd10      	pop	{r4, pc}
 8001232:	bf00      	nop
 8001234:	200027b4 			; <UNDEFINED> instruction: 0x200027b4

08001238 <Widget::GetManufacturerReply()>:
 8001238:	b570      	push	{r4, r5, r6, lr}
 800123a:	491b      	ldr	r1, [pc, #108]	; (80012a8 <Widget::GetManufacturerReply()+0x70>)
 800123c:	4604      	mov	r4, r0
 800123e:	2007      	movs	r0, #7
 8001240:	f000 f954 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8001244:	2100      	movs	r1, #0
 8001246:	201c      	movs	r0, #28
 8001248:	f000 f950 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 800124c:	4b17      	ldr	r3, [pc, #92]	; (80012ac <Widget::GetManufacturerReply()+0x74>)
 800124e:	461a      	mov	r2, r3
 8001250:	461d      	mov	r5, r3
 8001252:	3301      	adds	r3, #1
 8001254:	782e      	ldrb	r6, [r5, #0]
 8001256:	2e00      	cmp	r6, #0
 8001258:	d1fa      	bne.n	8001250 <Widget::GetManufacturerReply()+0x18>
 800125a:	1aad      	subs	r5, r5, r2
 800125c:	2d20      	cmp	r5, #32
 800125e:	bf28      	it	cs
 8001260:	2520      	movcs	r5, #32
 8001262:	4633      	mov	r3, r6
 8001264:	2201      	movs	r2, #1
 8001266:	4631      	mov	r1, r6
 8001268:	4620      	mov	r0, r4
 800126a:	f000 ff2d 	bl	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800126e:	1caa      	adds	r2, r5, #2
 8001270:	214d      	movs	r1, #77	; 0x4d
 8001272:	4620      	mov	r0, r4
 8001274:	f000 faf8 	bl	8001868 <Widget::SendHeader(unsigned char, unsigned long)>
 8001278:	490d      	ldr	r1, [pc, #52]	; (80012b0 <Widget::GetManufacturerReply()+0x78>)
 800127a:	2202      	movs	r2, #2
 800127c:	4620      	mov	r0, r4
 800127e:	f000 fb05 	bl	800188c <Widget::SendData(unsigned char const*, unsigned long)>
 8001282:	490a      	ldr	r1, [pc, #40]	; (80012ac <Widget::GetManufacturerReply()+0x74>)
 8001284:	462a      	mov	r2, r5
 8001286:	4620      	mov	r0, r4
 8001288:	f000 fb00 	bl	800188c <Widget::SendData(unsigned char const*, unsigned long)>
 800128c:	4620      	mov	r0, r4
 800128e:	f000 fb08 	bl	80018a2 <Widget::SendFooter()>
 8001292:	2301      	movs	r3, #1
 8001294:	461a      	mov	r2, r3
 8001296:	4631      	mov	r1, r6
 8001298:	4620      	mov	r0, r4
 800129a:	f000 ff15 	bl	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800129e:	4b05      	ldr	r3, [pc, #20]	; (80012b4 <Widget::GetManufacturerReply()+0x7c>)
 80012a0:	681b      	ldr	r3, [r3, #0]
 80012a2:	f8c4 32d8 	str.w	r3, [r4, #728]	; 0x2d8
 80012a6:	bd70      	pop	{r4, r5, r6, pc}
 80012a8:	080050d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, ip, lr}
 80012ac:	080051d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, ip, lr}
 80012b0:	080051cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, lr}
 80012b4:	200027b4 			; <UNDEFINED> instruction: 0x200027b4

080012b8 <Widget::GetNameReply()>:
 80012b8:	b538      	push	{r3, r4, r5, lr}
 80012ba:	4917      	ldr	r1, [pc, #92]	; (8001318 <Widget::GetNameReply()+0x60>)
 80012bc:	4604      	mov	r4, r0
 80012be:	2007      	movs	r0, #7
 80012c0:	f000 f914 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 80012c4:	2100      	movs	r1, #0
 80012c6:	201c      	movs	r0, #28
 80012c8:	f000 f910 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 80012cc:	2300      	movs	r3, #0
 80012ce:	f894 5070 	ldrb.w	r5, [r4, #112]	; 0x70
 80012d2:	4619      	mov	r1, r3
 80012d4:	2201      	movs	r2, #1
 80012d6:	4620      	mov	r0, r4
 80012d8:	f000 fef6 	bl	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 80012dc:	1caa      	adds	r2, r5, #2
 80012de:	214e      	movs	r1, #78	; 0x4e
 80012e0:	4620      	mov	r0, r4
 80012e2:	f000 fac1 	bl	8001868 <Widget::SendHeader(unsigned char, unsigned long)>
 80012e6:	490d      	ldr	r1, [pc, #52]	; (800131c <Widget::GetNameReply()+0x64>)
 80012e8:	2202      	movs	r2, #2
 80012ea:	4620      	mov	r0, r4
 80012ec:	f000 face 	bl	800188c <Widget::SendData(unsigned char const*, unsigned long)>
 80012f0:	462a      	mov	r2, r5
 80012f2:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80012f6:	4620      	mov	r0, r4
 80012f8:	f000 fac8 	bl	800188c <Widget::SendData(unsigned char const*, unsigned long)>
 80012fc:	4620      	mov	r0, r4
 80012fe:	f000 fad0 	bl	80018a2 <Widget::SendFooter()>
 8001302:	2301      	movs	r3, #1
 8001304:	461a      	mov	r2, r3
 8001306:	2100      	movs	r1, #0
 8001308:	4620      	mov	r0, r4
 800130a:	f000 fedd 	bl	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 800130e:	4b04      	ldr	r3, [pc, #16]	; (8001320 <Widget::GetNameReply()+0x68>)
 8001310:	681b      	ldr	r3, [r3, #0]
 8001312:	f8c4 32d8 	str.w	r3, [r4, #728]	; 0x2d8
 8001316:	bd38      	pop	{r3, r4, r5, pc}
 8001318:	080050e8 	stmdaeq	r0, {r3, r5, r6, r7, ip, lr}
 800131c:	20001005 	andcs	r1, r0, r5
 8001320:	200027b4 			; <UNDEFINED> instruction: 0x200027b4

08001324 <Widget::ReceiveDataFromHost()>:
 8001324:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001328:	4604      	mov	r4, r0
 800132a:	f001 fae7 	bl	80028fc <FT245RL_data_available>
 800132e:	2800      	cmp	r0, #0
 8001330:	d040      	beq.n	80013b4 <Widget::ReceiveDataFromHost()+0x90>
 8001332:	f001 fafb 	bl	800292c <usb_read_byte()>
 8001336:	287e      	cmp	r0, #126	; 0x7e
 8001338:	d13c      	bne.n	80013b4 <Widget::ReceiveDataFromHost()+0x90>
 800133a:	f001 faf7 	bl	800292c <usb_read_byte()>
 800133e:	4607      	mov	r7, r0
 8001340:	f001 faf4 	bl	800292c <usb_read_byte()>
 8001344:	4605      	mov	r5, r0
 8001346:	f001 faf1 	bl	800292c <usb_read_byte()>
 800134a:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 800134e:	b2ad      	uxth	r5, r5
 8001350:	f06f 0971 	mvn.w	r9, #113	; 0x71
 8001354:	f104 0872 	add.w	r8, r4, #114	; 0x72
 8001358:	462e      	mov	r6, r5
 800135a:	eba9 0904 	sub.w	r9, r9, r4
 800135e:	eb09 0308 	add.w	r3, r9, r8
 8001362:	429d      	cmp	r5, r3
 8001364:	d81d      	bhi.n	80013a2 <Widget::ReceiveDataFromHost()+0x7e>
 8001366:	f001 fae1 	bl	800292c <usb_read_byte()>
 800136a:	28e7      	cmp	r0, #231	; 0xe7
 800136c:	d004      	beq.n	8001378 <Widget::ReceiveDataFromHost()+0x54>
 800136e:	1c73      	adds	r3, r6, #1
 8001370:	f5b6 7f16 	cmp.w	r6, #600	; 0x258
 8001374:	461e      	mov	r6, r3
 8001376:	d3f6      	bcc.n	8001366 <Widget::ReceiveDataFromHost()+0x42>
 8001378:	492c      	ldr	r1, [pc, #176]	; (800142c <Widget::ReceiveDataFromHost()+0x108>)
 800137a:	9600      	str	r6, [sp, #0]
 800137c:	462b      	mov	r3, r5
 800137e:	463a      	mov	r2, r7
 8001380:	2006      	movs	r0, #6
 8001382:	f000 f8b3 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 8001386:	2f0b      	cmp	r7, #11
 8001388:	d810      	bhi.n	80013ac <Widget::ReceiveDataFromHost()+0x88>
 800138a:	2f02      	cmp	r7, #2
 800138c:	d912      	bls.n	80013b4 <Widget::ReceiveDataFromHost()+0x90>
 800138e:	3f03      	subs	r7, #3
 8001390:	2f08      	cmp	r7, #8
 8001392:	d80f      	bhi.n	80013b4 <Widget::ReceiveDataFromHost()+0x90>
 8001394:	e8df f007 	tbb	[pc, r7]
 8001398:	2f0e1d11 	svccs	0x000e1d11
 800139c:	170e363c 	smladxne	lr, ip, r6, r3
 80013a0:	f0010043 			; <UNDEFINED> instruction: 0xf0010043
 80013a4:	fac3 f808 	ssub8	r8, r3, r8
 80013a8:	0f01      	lsrs	r1, r0, #28
 80013aa:	e7d8      	b.n	800135e <Widget::ReceiveDataFromHost()+0x3a>
 80013ac:	2f4d      	cmp	r7, #77	; 0x4d
 80013ae:	d01c      	beq.n	80013ea <Widget::ReceiveDataFromHost()+0xc6>
 80013b0:	2f4e      	cmp	r7, #78	; 0x4e
 80013b2:	d014      	beq.n	80013de <Widget::ReceiveDataFromHost()+0xba>
 80013b4:	b003      	add	sp, #12
 80013b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80013ba:	4620      	mov	r0, r4
 80013bc:	b003      	add	sp, #12
 80013be:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80013c2:	f7ff bcf3 	b.w	8000dac <Widget::GetParamsReply()>
 80013c6:	4620      	mov	r0, r4
 80013c8:	b003      	add	sp, #12
 80013ca:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80013ce:	f7ff be3d 	b.w	800104c <Widget::GetSnReply()>
 80013d2:	4620      	mov	r0, r4
 80013d4:	b003      	add	sp, #12
 80013d6:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80013da:	f7ff bd19 	b.w	8000e10 <Widget::SetParams()>
 80013de:	4620      	mov	r0, r4
 80013e0:	b003      	add	sp, #12
 80013e2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80013e6:	f7ff bf67 	b.w	80012b8 <Widget::GetNameReply()>
 80013ea:	4620      	mov	r0, r4
 80013ec:	b003      	add	sp, #12
 80013ee:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80013f2:	f7ff bf21 	b.w	8001238 <Widget::GetManufacturerReply()>
 80013f6:	4629      	mov	r1, r5
 80013f8:	4620      	mov	r0, r4
 80013fa:	b003      	add	sp, #12
 80013fc:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001400:	f7ff bd86 	b.w	8000f10 <Widget::SendDmxPacketRequestOutputOnly(unsigned short)>
 8001404:	4620      	mov	r0, r4
 8001406:	b003      	add	sp, #12
 8001408:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800140c:	f7ff bdd0 	b.w	8000fb0 <Widget::ReceiveDmxOnChange()>
 8001410:	4629      	mov	r1, r5
 8001412:	4620      	mov	r0, r4
 8001414:	b003      	add	sp, #12
 8001416:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800141a:	f7ff bd9f 	b.w	8000f5c <Widget::SendRdmPacketRequest(unsigned short)>
 800141e:	4629      	mov	r1, r5
 8001420:	4620      	mov	r0, r4
 8001422:	b003      	add	sp, #12
 8001424:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001428:	f7ff be36 	b.w	8001098 <Widget::SendRdmDiscoveryRequest(unsigned short)>
 800142c:	080050fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, ip, lr}

08001430 <WidgetConfiguration::SetRefreshRate(unsigned char)>:
 8001430:	4b05      	ldr	r3, [pc, #20]	; (8001448 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x18>)
 8001432:	4601      	mov	r1, r0
 8001434:	7018      	strb	r0, [r3, #0]
 8001436:	b110      	cbz	r0, 800143e <WidgetConfiguration::SetRefreshRate(unsigned char)+0xe>
 8001438:	4b04      	ldr	r3, [pc, #16]	; (800144c <WidgetConfiguration::SetRefreshRate(unsigned char)+0x1c>)
 800143a:	fbb3 f1f0 	udiv	r1, r3, r0
 800143e:	4b04      	ldr	r3, [pc, #16]	; (8001450 <WidgetConfiguration::SetRefreshRate(unsigned char)+0x20>)
 8001440:	6818      	ldr	r0, [r3, #0]
 8001442:	f000 bfc1 	b.w	80023c8 <Dmx::SetDmxPeriodTime(unsigned long)>
 8001446:	bf00      	nop
 8001448:	20001004 	andcs	r1, r0, r4
 800144c:	000f4240 	andeq	r4, pc, r0, asr #4
 8001450:	200016cc 	andcs	r1, r0, ip, asr #13

08001454 <WidgetConfiguration::SetBreakTime(unsigned char)>:
 8001454:	ee07 0a90 	vmov	s15, r0
 8001458:	ed9f 7a07 	vldr	s14, [pc, #28]	; 8001478 <WidgetConfiguration::SetBreakTime(unsigned char)+0x24>
 800145c:	4b07      	ldr	r3, [pc, #28]	; (800147c <WidgetConfiguration::SetBreakTime(unsigned char)+0x28>)
 800145e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001462:	7018      	strb	r0, [r3, #0]
 8001464:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001468:	4b05      	ldr	r3, [pc, #20]	; (8001480 <WidgetConfiguration::SetBreakTime(unsigned char)+0x2c>)
 800146a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800146e:	6818      	ldr	r0, [r3, #0]
 8001470:	ee17 1a90 	vmov	r1, s15
 8001474:	f000 bf30 	b.w	80022d8 <Dmx::SetDmxBreakTime(unsigned long)>
 8001478:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 800147c:	20001001 	andcs	r1, r0, r1
 8001480:	200016cc 	andcs	r1, r0, ip, asr #13

08001484 <WidgetConfiguration::SetMabTime(unsigned char)>:
 8001484:	ee07 0a90 	vmov	s15, r0
 8001488:	ed9f 7a07 	vldr	s14, [pc, #28]	; 80014a8 <WidgetConfiguration::SetMabTime(unsigned char)+0x24>
 800148c:	4b07      	ldr	r3, [pc, #28]	; (80014ac <WidgetConfiguration::SetMabTime(unsigned char)+0x28>)
 800148e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001492:	7018      	strb	r0, [r3, #0]
 8001494:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001498:	4b05      	ldr	r3, [pc, #20]	; (80014b0 <WidgetConfiguration::SetMabTime(unsigned char)+0x2c>)
 800149a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800149e:	6818      	ldr	r0, [r3, #0]
 80014a0:	ee17 1a90 	vmov	r1, s15
 80014a4:	f000 bf5c 	b.w	8002360 <Dmx::SetDmxMabTime(unsigned long)>
 80014a8:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 80014ac:	20001000 	andcs	r1, r0, r0
 80014b0:	200016cc 	andcs	r1, r0, ip, asr #13

080014b4 <WidgetConfiguration::SetMode(widget::Mode)>:
 80014b4:	2800      	cmp	r0, #0
 80014b6:	4b05      	ldr	r3, [pc, #20]	; (80014cc <WidgetConfiguration::SetMode(widget::Mode)+0x18>)
 80014b8:	bf14      	ite	ne
 80014ba:	4602      	movne	r2, r0
 80014bc:	2202      	moveq	r2, #2
 80014be:	701a      	strb	r2, [r3, #0]
 80014c0:	4b03      	ldr	r3, [pc, #12]	; (80014d0 <WidgetConfiguration::SetMode(widget::Mode)+0x1c>)
 80014c2:	681b      	ldr	r3, [r3, #0]
 80014c4:	f8c3 02cc 	str.w	r0, [r3, #716]	; 0x2cc
 80014c8:	4770      	bx	lr
 80014ca:	bf00      	nop
 80014cc:	20001002 	andcs	r1, r0, r2
 80014d0:	2000108c 	andcs	r1, r0, ip, lsl #1

080014d4 <WidgetConfiguration::SetThrottle(unsigned char)>:
 80014d4:	b118      	cbz	r0, 80014de <WidgetConfiguration::SetThrottle(unsigned char)+0xa>
 80014d6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80014da:	fbb3 f0f0 	udiv	r0, r3, r0
 80014de:	4b02      	ldr	r3, [pc, #8]	; (80014e8 <WidgetConfiguration::SetThrottle(unsigned char)+0x14>)
 80014e0:	681b      	ldr	r3, [r3, #0]
 80014e2:	f8c3 02d4 	str.w	r0, [r3, #724]	; 0x2d4
 80014e6:	4770      	bx	lr
 80014e8:	2000108c 	andcs	r1, r0, ip, lsl #1

080014ec <WidgetMonitor::Line(int, char const*, ...)>:
 80014ec:	b40e      	push	{r1, r2, r3}
 80014ee:	b003      	add	sp, #12
 80014f0:	4770      	bx	lr
	...

080014f4 <WidgetParams::WidgetParams(WidgetParamsStore*)>:
 80014f4:	4a02      	ldr	r2, [pc, #8]	; (8001500 <WidgetParams::WidgetParams(WidgetParamsStore*)+0xc>)
 80014f6:	6082      	str	r2, [r0, #8]
 80014f8:	2200      	movs	r2, #0
 80014fa:	6001      	str	r1, [r0, #0]
 80014fc:	7302      	strb	r2, [r0, #12]
 80014fe:	4770      	bx	lr
 8001500:	00280109 	eoreq	r0, r8, r9, lsl #2

08001504 <WidgetParams::Load()>:
 8001504:	b513      	push	{r0, r1, r4, lr}
 8001506:	2300      	movs	r3, #0
 8001508:	4604      	mov	r4, r0
 800150a:	6043      	str	r3, [r0, #4]
 800150c:	4602      	mov	r2, r0
 800150e:	4909      	ldr	r1, [pc, #36]	; (8001534 <WidgetParams::Load()+0x30>)
 8001510:	4668      	mov	r0, sp
 8001512:	f001 fe29 	bl	8003168 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8001516:	6820      	ldr	r0, [r4, #0]
 8001518:	b150      	cbz	r0, 8001530 <WidgetParams::Load()+0x2c>
 800151a:	6803      	ldr	r3, [r0, #0]
 800151c:	1d21      	adds	r1, r4, #4
 800151e:	68db      	ldr	r3, [r3, #12]
 8001520:	4798      	blx	r3
 8001522:	2401      	movs	r4, #1
 8001524:	4668      	mov	r0, sp
 8001526:	f001 fe22 	bl	800316e <ReadConfigFile::~ReadConfigFile()>
 800152a:	4620      	mov	r0, r4
 800152c:	b002      	add	sp, #8
 800152e:	bd10      	pop	{r4, pc}
 8001530:	4604      	mov	r4, r0
 8001532:	e7f7      	b.n	8001524 <WidgetParams::Load()+0x20>
 8001534:	080015f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, ip}

08001538 <WidgetParams::callbackFunction(char const*)>:
 8001538:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800153a:	460d      	mov	r5, r1
 800153c:	4604      	mov	r4, r0
 800153e:	4929      	ldr	r1, [pc, #164]	; (80015e4 <WidgetParams::callbackFunction(char const*)+0xac>)
 8001540:	f10d 0207 	add.w	r2, sp, #7
 8001544:	4628      	mov	r0, r5
 8001546:	f001 fe13 	bl	8003170 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800154a:	b960      	cbnz	r0, 8001566 <WidgetParams::callbackFunction(char const*)+0x2e>
 800154c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001550:	f1a3 0209 	sub.w	r2, r3, #9
 8001554:	2a76      	cmp	r2, #118	; 0x76
 8001556:	d806      	bhi.n	8001566 <WidgetParams::callbackFunction(char const*)+0x2e>
 8001558:	7223      	strb	r3, [r4, #8]
 800155a:	6863      	ldr	r3, [r4, #4]
 800155c:	f043 0301 	orr.w	r3, r3, #1
 8001560:	6063      	str	r3, [r4, #4]
 8001562:	b003      	add	sp, #12
 8001564:	bd30      	pop	{r4, r5, pc}
 8001566:	4920      	ldr	r1, [pc, #128]	; (80015e8 <WidgetParams::callbackFunction(char const*)+0xb0>)
 8001568:	f10d 0207 	add.w	r2, sp, #7
 800156c:	4628      	mov	r0, r5
 800156e:	f001 fdff 	bl	8003170 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8001572:	b950      	cbnz	r0, 800158a <WidgetParams::callbackFunction(char const*)+0x52>
 8001574:	f99d 2007 	ldrsb.w	r2, [sp, #7]
 8001578:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800157c:	2a00      	cmp	r2, #0
 800157e:	dd04      	ble.n	800158a <WidgetParams::callbackFunction(char const*)+0x52>
 8001580:	7263      	strb	r3, [r4, #9]
 8001582:	6863      	ldr	r3, [r4, #4]
 8001584:	f043 0302 	orr.w	r3, r3, #2
 8001588:	e7ea      	b.n	8001560 <WidgetParams::callbackFunction(char const*)+0x28>
 800158a:	4918      	ldr	r1, [pc, #96]	; (80015ec <WidgetParams::callbackFunction(char const*)+0xb4>)
 800158c:	f10d 0207 	add.w	r2, sp, #7
 8001590:	4628      	mov	r0, r5
 8001592:	f001 fded 	bl	8003170 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8001596:	b930      	cbnz	r0, 80015a6 <WidgetParams::callbackFunction(char const*)+0x6e>
 8001598:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800159c:	72a3      	strb	r3, [r4, #10]
 800159e:	6863      	ldr	r3, [r4, #4]
 80015a0:	f043 0304 	orr.w	r3, r3, #4
 80015a4:	e7dc      	b.n	8001560 <WidgetParams::callbackFunction(char const*)+0x28>
 80015a6:	4912      	ldr	r1, [pc, #72]	; (80015f0 <WidgetParams::callbackFunction(char const*)+0xb8>)
 80015a8:	f10d 0207 	add.w	r2, sp, #7
 80015ac:	4628      	mov	r0, r5
 80015ae:	f001 fddf 	bl	8003170 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80015b2:	b940      	cbnz	r0, 80015c6 <WidgetParams::callbackFunction(char const*)+0x8e>
 80015b4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80015b8:	2b03      	cmp	r3, #3
 80015ba:	d804      	bhi.n	80015c6 <WidgetParams::callbackFunction(char const*)+0x8e>
 80015bc:	72e3      	strb	r3, [r4, #11]
 80015be:	6863      	ldr	r3, [r4, #4]
 80015c0:	f043 0308 	orr.w	r3, r3, #8
 80015c4:	e7cc      	b.n	8001560 <WidgetParams::callbackFunction(char const*)+0x28>
 80015c6:	490b      	ldr	r1, [pc, #44]	; (80015f4 <WidgetParams::callbackFunction(char const*)+0xbc>)
 80015c8:	f10d 0207 	add.w	r2, sp, #7
 80015cc:	4628      	mov	r0, r5
 80015ce:	f001 fdcf 	bl	8003170 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80015d2:	2800      	cmp	r0, #0
 80015d4:	d1c5      	bne.n	8001562 <WidgetParams::callbackFunction(char const*)+0x2a>
 80015d6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80015da:	7323      	strb	r3, [r4, #12]
 80015dc:	6863      	ldr	r3, [r4, #4]
 80015de:	f043 0310 	orr.w	r3, r3, #16
 80015e2:	e7bd      	b.n	8001560 <WidgetParams::callbackFunction(char const*)+0x28>
 80015e4:	08005129 	stmdaeq	r0, {r0, r3, r5, r8, ip, lr}
 80015e8:	08005116 	stmdaeq	r0, {r1, r2, r4, r8, ip, lr}
 80015ec:	0800513e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, ip, lr}
 80015f0:	0800510a 	stmdaeq	r0, {r1, r3, r8, ip, lr}
 80015f4:	08005155 	stmdaeq	r0, {r0, r2, r4, r6, r8, ip, lr}

080015f8 <WidgetParams::staticCallbackFunction(void*, char const*)>:
 80015f8:	f7ff bf9e 	b.w	8001538 <WidgetParams::callbackFunction(char const*)>

080015fc <WidgetParams::Set()>:
 80015fc:	6843      	ldr	r3, [r0, #4]
 80015fe:	075b      	lsls	r3, r3, #29
 8001600:	b510      	push	{r4, lr}
 8001602:	4604      	mov	r4, r0
 8001604:	d502      	bpl.n	800160c <WidgetParams::Set()+0x10>
 8001606:	7a80      	ldrb	r0, [r0, #10]
 8001608:	f7ff ff12 	bl	8001430 <WidgetConfiguration::SetRefreshRate(unsigned char)>
 800160c:	6863      	ldr	r3, [r4, #4]
 800160e:	07d8      	lsls	r0, r3, #31
 8001610:	d502      	bpl.n	8001618 <WidgetParams::Set()+0x1c>
 8001612:	7a20      	ldrb	r0, [r4, #8]
 8001614:	f7ff ff1e 	bl	8001454 <WidgetConfiguration::SetBreakTime(unsigned char)>
 8001618:	6863      	ldr	r3, [r4, #4]
 800161a:	0799      	lsls	r1, r3, #30
 800161c:	d502      	bpl.n	8001624 <WidgetParams::Set()+0x28>
 800161e:	7a60      	ldrb	r0, [r4, #9]
 8001620:	f7ff ff30 	bl	8001484 <WidgetConfiguration::SetMabTime(unsigned char)>
 8001624:	6863      	ldr	r3, [r4, #4]
 8001626:	06da      	lsls	r2, r3, #27
 8001628:	d502      	bpl.n	8001630 <WidgetParams::Set()+0x34>
 800162a:	7b20      	ldrb	r0, [r4, #12]
 800162c:	f7ff ff52 	bl	80014d4 <WidgetConfiguration::SetThrottle(unsigned char)>
 8001630:	6863      	ldr	r3, [r4, #4]
 8001632:	071b      	lsls	r3, r3, #28
 8001634:	d504      	bpl.n	8001640 <WidgetParams::Set()+0x44>
 8001636:	7ae0      	ldrb	r0, [r4, #11]
 8001638:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800163c:	f7ff bf3a 	b.w	80014b4 <WidgetConfiguration::SetMode(widget::Mode)>
 8001640:	bd10      	pop	{r4, pc}

08001642 <WidgetParams::Dump()>:
 8001642:	4770      	bx	lr

08001644 <micros()>:
 8001644:	490b      	ldr	r1, [pc, #44]	; (8001674 <micros()+0x30>)
 8001646:	4b0c      	ldr	r3, [pc, #48]	; (8001678 <micros()+0x34>)
 8001648:	2278      	movs	r2, #120	; 0x78
 800164a:	685b      	ldr	r3, [r3, #4]
 800164c:	fbb3 f3f2 	udiv	r3, r3, r2
 8001650:	680a      	ldr	r2, [r1, #0]
 8001652:	b530      	push	{r4, r5, lr}
 8001654:	4c09      	ldr	r4, [pc, #36]	; (800167c <micros()+0x38>)
 8001656:	600b      	str	r3, [r1, #0]
 8001658:	429a      	cmp	r2, r3
 800165a:	bf28      	it	cs
 800165c:	4808      	ldrcs	r0, [pc, #32]	; (8001680 <micros()+0x3c>)
 800165e:	6825      	ldr	r5, [r4, #0]
 8001660:	bf27      	ittee	cs
 8001662:	1940      	addcs	r0, r0, r5
 8001664:	18c0      	addcs	r0, r0, r3
 8001666:	1a9a      	subcc	r2, r3, r2
 8001668:	1950      	addcc	r0, r2, r5
 800166a:	bf28      	it	cs
 800166c:	1a80      	subcs	r0, r0, r2
 800166e:	6020      	str	r0, [r4, #0]
 8001670:	bd30      	pop	{r4, r5, pc}
 8001672:	bf00      	nop
 8001674:	20001090 	mulcs	r0, r0, r0
 8001678:	e0001000 	and	r1, r0, r0
 800167c:	20001094 	mulcs	r0, r4, r0
 8001680:	02222222 	eoreq	r2, r2, #536870914	; 0x20000002

08001684 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>:
 8001684:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001688:	4606      	mov	r6, r0
 800168a:	460f      	mov	r7, r1
 800168c:	461d      	mov	r5, r3
 800168e:	eb03 0802 	add.w	r8, r3, r2
 8001692:	eba8 0405 	sub.w	r4, r8, r5
 8001696:	2d63      	cmp	r5, #99	; 0x63
 8001698:	f04f 02c8 	mov.w	r2, #200	; 0xc8
 800169c:	f04f 0181 	mov.w	r1, #129	; 0x81
 80016a0:	4630      	mov	r0, r6
 80016a2:	fa17 f484 	uxtah	r4, r7, r4
 80016a6:	d81e      	bhi.n	80016e6 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x62>
 80016a8:	f000 f8de 	bl	8001868 <Widget::SendHeader(unsigned char, unsigned long)>
 80016ac:	f04f 0800 	mov.w	r8, #0
 80016b0:	4545      	cmp	r5, r8
 80016b2:	462f      	mov	r7, r5
 80016b4:	d80d      	bhi.n	80016d2 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x4e>
 80016b6:	2000      	movs	r0, #0
 80016b8:	f001 f941 	bl	800293e <usb_send_byte(unsigned char)>
 80016bc:	3701      	adds	r7, #1
 80016be:	2002      	movs	r0, #2
 80016c0:	f001 f93d 	bl	800293e <usb_send_byte(unsigned char)>
 80016c4:	2f64      	cmp	r7, #100	; 0x64
 80016c6:	d1f6      	bne.n	80016b6 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x32>
 80016c8:	4630      	mov	r0, r6
 80016ca:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80016ce:	f000 b8e8 	b.w	80018a2 <Widget::SendFooter()>
 80016d2:	2080      	movs	r0, #128	; 0x80
 80016d4:	f001 f933 	bl	800293e <usb_send_byte(unsigned char)>
 80016d8:	f814 0b01 	ldrb.w	r0, [r4], #1
 80016dc:	f001 f92f 	bl	800293e <usb_send_byte(unsigned char)>
 80016e0:	f108 0801 	add.w	r8, r8, #1
 80016e4:	e7e4      	b.n	80016b0 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x2c>
 80016e6:	f000 f8bf 	bl	8001868 <Widget::SendHeader(unsigned char, unsigned long)>
 80016ea:	f04f 0900 	mov.w	r9, #0
 80016ee:	2080      	movs	r0, #128	; 0x80
 80016f0:	f001 f925 	bl	800293e <usb_send_byte(unsigned char)>
 80016f4:	f109 0901 	add.w	r9, r9, #1
 80016f8:	f814 0b01 	ldrb.w	r0, [r4], #1
 80016fc:	f001 f91f 	bl	800293e <usb_send_byte(unsigned char)>
 8001700:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8001704:	d1f3      	bne.n	80016ee <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0x6a>
 8001706:	4630      	mov	r0, r6
 8001708:	3d64      	subs	r5, #100	; 0x64
 800170a:	f000 f8ca 	bl	80018a2 <Widget::SendFooter()>
 800170e:	b2ad      	uxth	r5, r5
 8001710:	e7bf      	b.n	8001692 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)+0xe>
	...

08001714 <Widget::UsbCanSend()>:
 8001714:	b510      	push	{r4, lr}
 8001716:	f7ff ff95 	bl	8001644 <micros()>
 800171a:	4604      	mov	r4, r0
 800171c:	f001 f8fa 	bl	8002914 <FT245RL_can_write>
 8001720:	b928      	cbnz	r0, 800172e <Widget::UsbCanSend()+0x1a>
 8001722:	f7ff ff8f 	bl	8001644 <micros()>
 8001726:	1b03      	subs	r3, r0, r4
 8001728:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800172c:	d3f6      	bcc.n	800171c <Widget::UsbCanSend()+0x8>
 800172e:	f001 f8f1 	bl	8002914 <FT245RL_can_write>
 8001732:	4604      	mov	r4, r0
 8001734:	b918      	cbnz	r0, 800173e <Widget::UsbCanSend()+0x2a>
 8001736:	4903      	ldr	r1, [pc, #12]	; (8001744 <Widget::UsbCanSend()+0x30>)
 8001738:	2007      	movs	r0, #7
 800173a:	f7ff fed7 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 800173e:	4620      	mov	r0, r4
 8001740:	bd10      	pop	{r4, pc}
 8001742:	bf00      	nop
 8001744:	0800516f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r8, ip, lr}

08001748 <Widget::SnifferDmx()>:
 8001748:	f8d0 32cc 	ldr.w	r3, [r0, #716]	; 0x2cc
 800174c:	2b03      	cmp	r3, #3
 800174e:	b570      	push	{r4, r5, r6, lr}
 8001750:	4604      	mov	r4, r0
 8001752:	d11c      	bne.n	800178e <Widget::SnifferDmx()+0x46>
 8001754:	f7ff ffde 	bl	8001714 <Widget::UsbCanSend()>
 8001758:	b1c8      	cbz	r0, 800178e <Widget::SnifferDmx()+0x46>
 800175a:	2100      	movs	r1, #0
 800175c:	4620      	mov	r0, r4
 800175e:	f000 febd 	bl	80024dc <Dmx::GetDmxChanged(unsigned long)>
 8001762:	4605      	mov	r5, r0
 8001764:	b198      	cbz	r0, 800178e <Widget::SnifferDmx()+0x46>
 8001766:	f8d0 6204 	ldr.w	r6, [r0, #516]	; 0x204
 800176a:	4620      	mov	r0, r4
 800176c:	f7ff ffd2 	bl	8001714 <Widget::UsbCanSend()>
 8001770:	b168      	cbz	r0, 800178e <Widget::SnifferDmx()+0x46>
 8001772:	3601      	adds	r6, #1
 8001774:	4632      	mov	r2, r6
 8001776:	4906      	ldr	r1, [pc, #24]	; (8001790 <Widget::SnifferDmx()+0x48>)
 8001778:	2007      	movs	r0, #7
 800177a:	f7ff feb7 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 800177e:	b2b3      	uxth	r3, r6
 8001780:	4629      	mov	r1, r5
 8001782:	4620      	mov	r0, r4
 8001784:	2200      	movs	r2, #0
 8001786:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800178a:	f7ff bf7b 	b.w	8001684 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 800178e:	bd70      	pop	{r4, r5, r6, pc}
 8001790:	0800518c 	stmdaeq	r0, {r2, r3, r7, r8, ip, lr}

08001794 <Widget::SnifferRdm()>:
 8001794:	f8d0 32cc 	ldr.w	r3, [r0, #716]	; 0x2cc
 8001798:	2b03      	cmp	r3, #3
 800179a:	b570      	push	{r4, r5, r6, lr}
 800179c:	4604      	mov	r4, r0
 800179e:	d14c      	bne.n	800183a <Widget::SnifferRdm()+0xa6>
 80017a0:	f7ff ffb8 	bl	8001714 <Widget::UsbCanSend()>
 80017a4:	2800      	cmp	r0, #0
 80017a6:	d048      	beq.n	800183a <Widget::SnifferRdm()+0xa6>
 80017a8:	2000      	movs	r0, #0
 80017aa:	f000 f939 	bl	8001a20 <Rdm::Receive(unsigned long)>
 80017ae:	4605      	mov	r5, r0
 80017b0:	2800      	cmp	r0, #0
 80017b2:	d042      	beq.n	800183a <Widget::SnifferRdm()+0xa6>
 80017b4:	7803      	ldrb	r3, [r0, #0]
 80017b6:	2bcc      	cmp	r3, #204	; 0xcc
 80017b8:	d134      	bne.n	8001824 <Widget::SnifferRdm()+0x90>
 80017ba:	7886      	ldrb	r6, [r0, #2]
 80017bc:	7d03      	ldrb	r3, [r0, #20]
 80017be:	3602      	adds	r6, #2
 80017c0:	2b20      	cmp	r3, #32
 80017c2:	b2f6      	uxtb	r6, r6
 80017c4:	d028      	beq.n	8001818 <Widget::SnifferRdm()+0x84>
 80017c6:	d813      	bhi.n	80017f0 <Widget::SnifferRdm()+0x5c>
 80017c8:	2b10      	cmp	r3, #16
 80017ca:	d019      	beq.n	8001800 <Widget::SnifferRdm()+0x6c>
 80017cc:	2b11      	cmp	r3, #17
 80017ce:	d01d      	beq.n	800180c <Widget::SnifferRdm()+0x78>
 80017d0:	4620      	mov	r0, r4
 80017d2:	f7ff ff9f 	bl	8001714 <Widget::UsbCanSend()>
 80017d6:	b380      	cbz	r0, 800183a <Widget::SnifferRdm()+0xa6>
 80017d8:	4918      	ldr	r1, [pc, #96]	; (800183c <Widget::SnifferRdm()+0xa8>)
 80017da:	2007      	movs	r0, #7
 80017dc:	f7ff fe86 	bl	80014ec <WidgetMonitor::Line(int, char const*, ...)>
 80017e0:	4633      	mov	r3, r6
 80017e2:	4629      	mov	r1, r5
 80017e4:	4620      	mov	r0, r4
 80017e6:	2200      	movs	r2, #0
 80017e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80017ec:	f7ff bf4a 	b.w	8001684 <Widget::UsbSendPackage(unsigned char const*, unsigned short, unsigned short)>
 80017f0:	2b30      	cmp	r3, #48	; 0x30
 80017f2:	d1ed      	bne.n	80017d0 <Widget::SnifferRdm()+0x3c>
 80017f4:	f8d4 32f4 	ldr.w	r3, [r4, #756]	; 0x2f4
 80017f8:	3301      	adds	r3, #1
 80017fa:	f8c4 32f4 	str.w	r3, [r4, #756]	; 0x2f4
 80017fe:	e7e7      	b.n	80017d0 <Widget::SnifferRdm()+0x3c>
 8001800:	f8d4 32e8 	ldr.w	r3, [r4, #744]	; 0x2e8
 8001804:	3301      	adds	r3, #1
 8001806:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
 800180a:	e7e1      	b.n	80017d0 <Widget::SnifferRdm()+0x3c>
 800180c:	f8d4 32ec 	ldr.w	r3, [r4, #748]	; 0x2ec
 8001810:	3301      	adds	r3, #1
 8001812:	f8c4 32ec 	str.w	r3, [r4, #748]	; 0x2ec
 8001816:	e7db      	b.n	80017d0 <Widget::SnifferRdm()+0x3c>
 8001818:	f8d4 32f0 	ldr.w	r3, [r4, #752]	; 0x2f0
 800181c:	3301      	adds	r3, #1
 800181e:	f8c4 32f0 	str.w	r3, [r4, #752]	; 0x2f0
 8001822:	e7d5      	b.n	80017d0 <Widget::SnifferRdm()+0x3c>
 8001824:	2bfe      	cmp	r3, #254	; 0xfe
 8001826:	bf01      	itttt	eq
 8001828:	f8d4 32ec 	ldreq.w	r3, [r4, #748]	; 0x2ec
 800182c:	3301      	addeq	r3, #1
 800182e:	f8c4 32ec 	streq.w	r3, [r4, #748]	; 0x2ec
 8001832:	2618      	moveq	r6, #24
 8001834:	bf18      	it	ne
 8001836:	2600      	movne	r6, #0
 8001838:	e7ca      	b.n	80017d0 <Widget::SnifferRdm()+0x3c>
 800183a:	bd70      	pop	{r4, r5, r6, pc}
 800183c:	080051a8 	stmdaeq	r0, {r3, r5, r7, r8, ip, lr}

08001840 <Widget::SnifferFillTransmitBuffer()>:
 8001840:	b538      	push	{r3, r4, r5, lr}
 8001842:	4605      	mov	r5, r0
 8001844:	f7ff ff66 	bl	8001714 <Widget::UsbCanSend()>
 8001848:	b958      	cbnz	r0, 8001862 <Widget::SnifferFillTransmitBuffer()+0x22>
 800184a:	bd38      	pop	{r3, r4, r5, pc}
 800184c:	4628      	mov	r0, r5
 800184e:	f7ff ff61 	bl	8001714 <Widget::UsbCanSend()>
 8001852:	2800      	cmp	r0, #0
 8001854:	d0f9      	beq.n	800184a <Widget::SnifferFillTransmitBuffer()+0xa>
 8001856:	2000      	movs	r0, #0
 8001858:	f001 f871 	bl	800293e <usb_send_byte(unsigned char)>
 800185c:	3c01      	subs	r4, #1
 800185e:	d1f5      	bne.n	800184c <Widget::SnifferFillTransmitBuffer()+0xc>
 8001860:	e7f3      	b.n	800184a <Widget::SnifferFillTransmitBuffer()+0xa>
 8001862:	f240 1401 	movw	r4, #257	; 0x101
 8001866:	e7f9      	b.n	800185c <Widget::SnifferFillTransmitBuffer()+0x1c>

08001868 <Widget::SendHeader(unsigned char, unsigned long)>:
 8001868:	b538      	push	{r3, r4, r5, lr}
 800186a:	207e      	movs	r0, #126	; 0x7e
 800186c:	460d      	mov	r5, r1
 800186e:	4614      	mov	r4, r2
 8001870:	f001 f865 	bl	800293e <usb_send_byte(unsigned char)>
 8001874:	4628      	mov	r0, r5
 8001876:	f001 f862 	bl	800293e <usb_send_byte(unsigned char)>
 800187a:	b2e0      	uxtb	r0, r4
 800187c:	f001 f85f 	bl	800293e <usb_send_byte(unsigned char)>
 8001880:	f3c4 2007 	ubfx	r0, r4, #8, #8
 8001884:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001888:	f001 b859 	b.w	800293e <usb_send_byte(unsigned char)>

0800188c <Widget::SendData(unsigned char const*, unsigned long)>:
 800188c:	b538      	push	{r3, r4, r5, lr}
 800188e:	460c      	mov	r4, r1
 8001890:	188d      	adds	r5, r1, r2
 8001892:	42ac      	cmp	r4, r5
 8001894:	d100      	bne.n	8001898 <Widget::SendData(unsigned char const*, unsigned long)+0xc>
 8001896:	bd38      	pop	{r3, r4, r5, pc}
 8001898:	f814 0b01 	ldrb.w	r0, [r4], #1
 800189c:	f001 f84f 	bl	800293e <usb_send_byte(unsigned char)>
 80018a0:	e7f7      	b.n	8001892 <Widget::SendData(unsigned char const*, unsigned long)+0x6>

080018a2 <Widget::SendFooter()>:
 80018a2:	20e7      	movs	r0, #231	; 0xe7
 80018a4:	f001 b84b 	b.w	800293e <usb_send_byte(unsigned char)>

080018a8 <Widget::SendMessage(unsigned char, unsigned char const*, unsigned long)>:
 80018a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80018aa:	4604      	mov	r4, r0
 80018ac:	4615      	mov	r5, r2
 80018ae:	461a      	mov	r2, r3
 80018b0:	9301      	str	r3, [sp, #4]
 80018b2:	f7ff ffd9 	bl	8001868 <Widget::SendHeader(unsigned char, unsigned long)>
 80018b6:	4620      	mov	r0, r4
 80018b8:	9a01      	ldr	r2, [sp, #4]
 80018ba:	4629      	mov	r1, r5
 80018bc:	f7ff ffe6 	bl	800188c <Widget::SendData(unsigned char const*, unsigned long)>
 80018c0:	20e7      	movs	r0, #231	; 0xe7
 80018c2:	b003      	add	sp, #12
 80018c4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80018c8:	f001 b839 	b.w	800293e <usb_send_byte(unsigned char)>

080018cc <StoreWidget::UpdateBreakTime(unsigned char)>:
 80018cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80018ce:	2301      	movs	r3, #1
 80018d0:	2200      	movs	r2, #0
 80018d2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80018d6:	4807      	ldr	r0, [pc, #28]	; (80018f4 <StoreWidget::UpdateBreakTime(unsigned char)+0x28>)
 80018d8:	9300      	str	r3, [sp, #0]
 80018da:	f88d 1017 	strb.w	r1, [sp, #23]
 80018de:	6800      	ldr	r0, [r0, #0]
 80018e0:	f10d 0317 	add.w	r3, sp, #23
 80018e4:	2204      	movs	r2, #4
 80018e6:	2108      	movs	r1, #8
 80018e8:	f001 f950 	bl	8002b8c <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 80018ec:	b007      	add	sp, #28
 80018ee:	f85d fb04 	ldr.w	pc, [sp], #4
 80018f2:	bf00      	nop
 80018f4:	200026ec 	andcs	r2, r0, ip, ror #13

080018f8 <non-virtual thunk to StoreWidget::UpdateBreakTime(unsigned char)>:
 80018f8:	f1a0 0004 	sub.w	r0, r0, #4
 80018fc:	e7e6      	b.n	80018cc <StoreWidget::UpdateBreakTime(unsigned char)>
 80018fe:	bf00      	nop

08001900 <StoreWidget::UpdateMabTime(unsigned char)>:
 8001900:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8001902:	2302      	movs	r3, #2
 8001904:	2200      	movs	r2, #0
 8001906:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800190a:	4807      	ldr	r0, [pc, #28]	; (8001928 <StoreWidget::UpdateMabTime(unsigned char)+0x28>)
 800190c:	f88d 1017 	strb.w	r1, [sp, #23]
 8001910:	2301      	movs	r3, #1
 8001912:	9300      	str	r3, [sp, #0]
 8001914:	6800      	ldr	r0, [r0, #0]
 8001916:	f10d 0317 	add.w	r3, sp, #23
 800191a:	2205      	movs	r2, #5
 800191c:	2108      	movs	r1, #8
 800191e:	f001 f935 	bl	8002b8c <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8001922:	b007      	add	sp, #28
 8001924:	f85d fb04 	ldr.w	pc, [sp], #4
 8001928:	200026ec 	andcs	r2, r0, ip, ror #13

0800192c <non-virtual thunk to StoreWidget::UpdateMabTime(unsigned char)>:
 800192c:	f1a0 0004 	sub.w	r0, r0, #4
 8001930:	e7e6      	b.n	8001900 <StoreWidget::UpdateMabTime(unsigned char)>
 8001932:	bf00      	nop

08001934 <StoreWidget::UpdateRefreshRate(unsigned char)>:
 8001934:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8001936:	2304      	movs	r3, #4
 8001938:	2200      	movs	r2, #0
 800193a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800193e:	4807      	ldr	r0, [pc, #28]	; (800195c <StoreWidget::UpdateRefreshRate(unsigned char)+0x28>)
 8001940:	f88d 1017 	strb.w	r1, [sp, #23]
 8001944:	2301      	movs	r3, #1
 8001946:	9300      	str	r3, [sp, #0]
 8001948:	6800      	ldr	r0, [r0, #0]
 800194a:	f10d 0317 	add.w	r3, sp, #23
 800194e:	2206      	movs	r2, #6
 8001950:	2108      	movs	r1, #8
 8001952:	f001 f91b 	bl	8002b8c <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8001956:	b007      	add	sp, #28
 8001958:	f85d fb04 	ldr.w	pc, [sp], #4
 800195c:	200026ec 	andcs	r2, r0, ip, ror #13

08001960 <non-virtual thunk to StoreWidget::UpdateRefreshRate(unsigned char)>:
 8001960:	f1a0 0004 	sub.w	r0, r0, #4
 8001964:	e7e6      	b.n	8001934 <StoreWidget::UpdateRefreshRate(unsigned char)>
 8001966:	bf00      	nop

08001968 <WidgetConfiguration::Store(TWidgetConfiguration const*)>:
 8001968:	b510      	push	{r4, lr}
 800196a:	4a25      	ldr	r2, [pc, #148]	; (8001a00 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x98>)
 800196c:	7883      	ldrb	r3, [r0, #2]
 800196e:	7811      	ldrb	r1, [r2, #0]
 8001970:	4299      	cmp	r1, r3
 8001972:	4604      	mov	r4, r0
 8001974:	d015      	beq.n	80019a2 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x3a>
 8001976:	ee07 3a90 	vmov	s15, r3
 800197a:	ed9f 7a22 	vldr	s14, [pc, #136]	; 8001a04 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>
 800197e:	7013      	strb	r3, [r2, #0]
 8001980:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001984:	4b20      	ldr	r3, [pc, #128]	; (8001a08 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 8001986:	ee67 7a87 	vmul.f32	s15, s15, s14
 800198a:	6818      	ldr	r0, [r3, #0]
 800198c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001990:	ee17 1a90 	vmov	r1, s15
 8001994:	f000 fca0 	bl	80022d8 <Dmx::SetDmxBreakTime(unsigned long)>
 8001998:	4b1c      	ldr	r3, [pc, #112]	; (8001a0c <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa4>)
 800199a:	78a1      	ldrb	r1, [r4, #2]
 800199c:	6818      	ldr	r0, [r3, #0]
 800199e:	f7ff ff95 	bl	80018cc <StoreWidget::UpdateBreakTime(unsigned char)>
 80019a2:	4a1b      	ldr	r2, [pc, #108]	; (8001a10 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa8>)
 80019a4:	78e3      	ldrb	r3, [r4, #3]
 80019a6:	7811      	ldrb	r1, [r2, #0]
 80019a8:	4299      	cmp	r1, r3
 80019aa:	d015      	beq.n	80019d8 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x70>
 80019ac:	ee07 3a90 	vmov	s15, r3
 80019b0:	ed9f 7a14 	vldr	s14, [pc, #80]	; 8001a04 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x9c>
 80019b4:	7013      	strb	r3, [r2, #0]
 80019b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80019ba:	4b13      	ldr	r3, [pc, #76]	; (8001a08 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 80019bc:	ee67 7a87 	vmul.f32	s15, s15, s14
 80019c0:	6818      	ldr	r0, [r3, #0]
 80019c2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80019c6:	ee17 1a90 	vmov	r1, s15
 80019ca:	f000 fcc9 	bl	8002360 <Dmx::SetDmxMabTime(unsigned long)>
 80019ce:	4b0f      	ldr	r3, [pc, #60]	; (8001a0c <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa4>)
 80019d0:	78e1      	ldrb	r1, [r4, #3]
 80019d2:	6818      	ldr	r0, [r3, #0]
 80019d4:	f7ff ff94 	bl	8001900 <StoreWidget::UpdateMabTime(unsigned char)>
 80019d8:	4b0e      	ldr	r3, [pc, #56]	; (8001a14 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xac>)
 80019da:	7921      	ldrb	r1, [r4, #4]
 80019dc:	781a      	ldrb	r2, [r3, #0]
 80019de:	428a      	cmp	r2, r1
 80019e0:	d00d      	beq.n	80019fe <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x96>
 80019e2:	7019      	strb	r1, [r3, #0]
 80019e4:	4b08      	ldr	r3, [pc, #32]	; (8001a08 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa0>)
 80019e6:	6818      	ldr	r0, [r3, #0]
 80019e8:	b111      	cbz	r1, 80019f0 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0x88>
 80019ea:	4b0b      	ldr	r3, [pc, #44]	; (8001a18 <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xb0>)
 80019ec:	fbb3 f1f1 	udiv	r1, r3, r1
 80019f0:	f000 fcea 	bl	80023c8 <Dmx::SetDmxPeriodTime(unsigned long)>
 80019f4:	4b05      	ldr	r3, [pc, #20]	; (8001a0c <WidgetConfiguration::Store(TWidgetConfiguration const*)+0xa4>)
 80019f6:	7921      	ldrb	r1, [r4, #4]
 80019f8:	6818      	ldr	r0, [r3, #0]
 80019fa:	f7ff ff9b 	bl	8001934 <StoreWidget::UpdateRefreshRate(unsigned char)>
 80019fe:	bd10      	pop	{r4, pc}
 8001a00:	20001001 	andcs	r1, r0, r1
 8001a04:	412ab852 			; <UNDEFINED> instruction: 0x412ab852
 8001a08:	200016cc 	andcs	r1, r0, ip, asr #13
 8001a0c:	200026f4 	strdcs	r2, [r0], -r4
 8001a10:	20001000 	andcs	r1, r0, r0
 8001a14:	20001004 	andcs	r1, r0, r4
 8001a18:	000f4240 	andeq	r4, pc, r0, asr #4

08001a1c <WidgetMonitor::RdmData(int, unsigned short, unsigned char const*, bool)>:
 8001a1c:	4770      	bx	lr
	...

08001a20 <Rdm::Receive(unsigned long)>:
 8001a20:	4b02      	ldr	r3, [pc, #8]	; (8001a2c <Rdm::Receive(unsigned long)+0xc>)
 8001a22:	4601      	mov	r1, r0
 8001a24:	6818      	ldr	r0, [r3, #0]
 8001a26:	f000 be37 	b.w	8002698 <Dmx::RdmReceive(unsigned long)>
 8001a2a:	bf00      	nop
 8001a2c:	200016cc 	andcs	r1, r0, ip, asr #13

08001a30 <Rdm::SendRaw(unsigned long, unsigned char const*, unsigned long)>:
 8001a30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001a34:	4d0d      	ldr	r5, [pc, #52]	; (8001a6c <Rdm::SendRaw(unsigned long, unsigned char const*, unsigned long)+0x3c>)
 8001a36:	2300      	movs	r3, #0
 8001a38:	4604      	mov	r4, r0
 8001a3a:	460e      	mov	r6, r1
 8001a3c:	4617      	mov	r7, r2
 8001a3e:	4601      	mov	r1, r0
 8001a40:	461a      	mov	r2, r3
 8001a42:	6828      	ldr	r0, [r5, #0]
 8001a44:	f000 fb40 	bl	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 8001a48:	463b      	mov	r3, r7
 8001a4a:	4632      	mov	r2, r6
 8001a4c:	6828      	ldr	r0, [r5, #0]
 8001a4e:	4621      	mov	r1, r4
 8001a50:	f000 fdda 	bl	8002608 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)>
 8001a54:	2100      	movs	r1, #0
 8001a56:	2004      	movs	r0, #4
 8001a58:	f003 f822 	bl	8004aa0 <udelay(unsigned long, unsigned long)>
 8001a5c:	2301      	movs	r3, #1
 8001a5e:	6828      	ldr	r0, [r5, #0]
 8001a60:	4621      	mov	r1, r4
 8001a62:	461a      	mov	r2, r3
 8001a64:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001a68:	f000 bb2e 	b.w	80020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>
 8001a6c:	200016cc 	andcs	r1, r0, ip, asr #13

08001a70 <USART2_IRQHandler>:
 8001a70:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
 8001a74:	f8d2 3800 	ldr.w	r3, [r2, #2048]	; 0x800
 8001a78:	079b      	lsls	r3, r3, #30
 8001a7a:	d40f      	bmi.n	8001a9c <USART2_IRQHandler+0x2c>
 8001a7c:	4b73      	ldr	r3, [pc, #460]	; (8001c4c <USART2_IRQHandler+0x1dc>)
 8001a7e:	f8d2 2804 	ldr.w	r2, [r2, #2052]	; 0x804
 8001a82:	f8d3 120c 	ldr.w	r1, [r3, #524]	; 0x20c
 8001a86:	b410      	push	{r4}
 8001a88:	b2d2      	uxtb	r2, r2
 8001a8a:	2908      	cmp	r1, #8
 8001a8c:	d819      	bhi.n	8001ac2 <USART2_IRQHandler+0x52>
 8001a8e:	e8df f001 	tbb	[pc, r1]
 8001a92:	37182f20 	ldrcc	r2, [r8, -r0, lsr #30]
 8001a96:	68a64e18 	stmiavs	r6!, {r3, r4, r9, sl, fp, lr}
 8001a9a:	f8d20089 			; <UNDEFINED> instruction: 0xf8d20089
 8001a9e:	3800      	subs	r0, #0
 8001aa0:	496a      	ldr	r1, [pc, #424]	; (8001c4c <USART2_IRQHandler+0x1dc>)
 8001aa2:	f023 0302 	bic.w	r3, r3, #2
 8001aa6:	f8c2 3800 	str.w	r3, [r2, #2048]	; 0x800
 8001aaa:	f8d2 3804 	ldr.w	r3, [r2, #2052]	; 0x804
 8001aae:	f8d1 320c 	ldr.w	r3, [r1, #524]	; 0x20c
 8001ab2:	b92b      	cbnz	r3, 8001ac0 <USART2_IRQHandler+0x50>
 8001ab4:	2201      	movs	r2, #1
 8001ab6:	f8c1 3204 	str.w	r3, [r1, #516]	; 0x204
 8001aba:	f8c1 220c 	str.w	r2, [r1, #524]	; 0x20c
 8001abe:	4770      	bx	lr
 8001ac0:	4770      	bx	lr
 8001ac2:	2200      	movs	r2, #0
 8001ac4:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001ac8:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001acc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001ad0:	4770      	bx	lr
 8001ad2:	2408      	movs	r4, #8
 8001ad4:	2001      	movs	r0, #1
 8001ad6:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8001ada:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 8001ade:	701a      	strb	r2, [r3, #0]
 8001ae0:	f8c3 0204 	str.w	r0, [r3, #516]	; 0x204
 8001ae4:	f8d1 3424 	ldr.w	r3, [r1, #1060]	; 0x424
 8001ae8:	4a59      	ldr	r2, [pc, #356]	; (8001c50 <USART2_IRQHandler+0x1e0>)
 8001aea:	b29b      	uxth	r3, r3
 8001aec:	8193      	strh	r3, [r2, #12]
 8001aee:	e7ed      	b.n	8001acc <USART2_IRQHandler+0x5c>
 8001af0:	2a00      	cmp	r2, #0
 8001af2:	f000 8099 	beq.w	8001c28 <USART2_IRQHandler+0x1b8>
 8001af6:	2acc      	cmp	r2, #204	; 0xcc
 8001af8:	f000 808e 	beq.w	8001c18 <USART2_IRQHandler+0x1a8>
 8001afc:	2200      	movs	r2, #0
 8001afe:	e7e3      	b.n	8001ac8 <USART2_IRQHandler+0x58>
 8001b00:	f8d3 0204 	ldr.w	r0, [r3, #516]	; 0x204
 8001b04:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 8001b08:	541a      	strb	r2, [r3, r0]
 8001b0a:	3101      	adds	r1, #1
 8001b0c:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204
 8001b10:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8001b14:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8001b18:	d94e      	bls.n	8001bb8 <USART2_IRQHandler+0x148>
 8001b1a:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8001b1e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001b22:	2100      	movs	r1, #0
 8001b24:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001b28:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 8001b2c:	e7ce      	b.n	8001acc <USART2_IRQHandler+0x5c>
 8001b2e:	f8d3 0204 	ldr.w	r0, [r3, #516]	; 0x204
 8001b32:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 8001b36:	541a      	strb	r2, [r3, r0]
 8001b38:	3101      	adds	r1, #1
 8001b3a:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204
 8001b3e:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 8001b42:	fa12 f281 	uxtah	r2, r2, r1
 8001b46:	b292      	uxth	r2, r2
 8001b48:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8001b4c:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8001b50:	f1a2 0118 	sub.w	r1, r2, #24
 8001b54:	29e9      	cmp	r1, #233	; 0xe9
 8001b56:	d85a      	bhi.n	8001c0e <USART2_IRQHandler+0x19e>
 8001b58:	7899      	ldrb	r1, [r3, #2]
 8001b5a:	428a      	cmp	r2, r1
 8001b5c:	d1b6      	bne.n	8001acc <USART2_IRQHandler+0x5c>
 8001b5e:	2206      	movs	r2, #6
 8001b60:	e7b2      	b.n	8001ac8 <USART2_IRQHandler+0x58>
 8001b62:	f8d3 0204 	ldr.w	r0, [r3, #516]	; 0x204
 8001b66:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 8001b6a:	541a      	strb	r2, [r3, r0]
 8001b6c:	3101      	adds	r1, #1
 8001b6e:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204
 8001b72:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 8001b76:	1a8a      	subs	r2, r1, r2
 8001b78:	b292      	uxth	r2, r2
 8001b7a:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8001b7e:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 8001b82:	b292      	uxth	r2, r2
 8001b84:	2a00      	cmp	r2, #0
 8001b86:	d13e      	bne.n	8001c06 <USART2_IRQHandler+0x196>
 8001b88:	785a      	ldrb	r2, [r3, #1]
 8001b8a:	2a01      	cmp	r2, #1
 8001b8c:	d13b      	bne.n	8001c06 <USART2_IRQHandler+0x196>
 8001b8e:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8001b92:	4930      	ldr	r1, [pc, #192]	; (8001c54 <USART2_IRQHandler+0x1e4>)
 8001b94:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001b98:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001b9c:	4a2e      	ldr	r2, [pc, #184]	; (8001c58 <USART2_IRQHandler+0x1e8>)
 8001b9e:	6849      	ldr	r1, [r1, #4]
 8001ba0:	6011      	str	r1, [r2, #0]
 8001ba2:	e7ab      	b.n	8001afc <USART2_IRQHandler+0x8c>
 8001ba4:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 8001ba8:	2917      	cmp	r1, #23
 8001baa:	bf9f      	itttt	ls
 8001bac:	f8d3 0204 	ldrls.w	r0, [r3, #516]	; 0x204
 8001bb0:	545a      	strbls	r2, [r3, r1]
 8001bb2:	3001      	addls	r0, #1
 8001bb4:	f8c3 0204 	strls.w	r0, [r3, #516]	; 0x204
 8001bb8:	4825      	ldr	r0, [pc, #148]	; (8001c50 <USART2_IRQHandler+0x1e0>)
 8001bba:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001bbe:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8001bc2:	f8d1 2424 	ldr.w	r2, [r1, #1060]	; 0x424
 8001bc6:	8983      	ldrh	r3, [r0, #12]
 8001bc8:	b29b      	uxth	r3, r3
 8001bca:	b292      	uxth	r2, r2
 8001bcc:	f1c3 0304 	rsb	r3, r3, #4
 8001bd0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8001bd4:	b29b      	uxth	r3, r3
 8001bd6:	8182      	strh	r2, [r0, #12]
 8001bd8:	f8c1 3434 	str.w	r3, [r1, #1076]	; 0x434
 8001bdc:	4770      	bx	lr
 8001bde:	f8d3 4204 	ldr.w	r4, [r3, #516]	; 0x204
 8001be2:	f8d3 1204 	ldr.w	r1, [r3, #516]	; 0x204
 8001be6:	551a      	strb	r2, [r3, r4]
 8001be8:	3101      	adds	r1, #1
 8001bea:	f8c3 1204 	str.w	r1, [r3, #516]	; 0x204
 8001bee:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 8001bf2:	b289      	uxth	r1, r1
 8001bf4:	eba1 2202 	sub.w	r2, r1, r2, lsl #8
 8001bf8:	2007      	movs	r0, #7
 8001bfa:	b292      	uxth	r2, r2
 8001bfc:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8001c00:	f8c3 020c 	str.w	r0, [r3, #524]	; 0x20c
 8001c04:	e762      	b.n	8001acc <USART2_IRQHandler+0x5c>
 8001c06:	2200      	movs	r2, #0
 8001c08:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001c0c:	e776      	b.n	8001afc <USART2_IRQHandler+0x8c>
 8001c0e:	f5b2 7f81 	cmp.w	r2, #258	; 0x102
 8001c12:	f4bf af73 	bcs.w	8001afc <USART2_IRQHandler+0x8c>
 8001c16:	e759      	b.n	8001acc <USART2_IRQHandler+0x5c>
 8001c18:	2001      	movs	r0, #1
 8001c1a:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 8001c1e:	2105      	movs	r1, #5
 8001c20:	701a      	strb	r2, [r3, #0]
 8001c22:	f8c3 0204 	str.w	r0, [r3, #516]	; 0x204
 8001c26:	e77f      	b.n	8001b28 <USART2_IRQHandler+0xb8>
 8001c28:	4909      	ldr	r1, [pc, #36]	; (8001c50 <USART2_IRQHandler+0x1e0>)
 8001c2a:	701a      	strb	r2, [r3, #0]
 8001c2c:	2001      	movs	r0, #1
 8001c2e:	f8c3 0204 	str.w	r0, [r3, #516]	; 0x204
 8001c32:	6848      	ldr	r0, [r1, #4]
 8001c34:	2403      	movs	r4, #3
 8001c36:	3001      	adds	r0, #1
 8001c38:	6048      	str	r0, [r1, #4]
 8001c3a:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 8001c3e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c42:	f8d3 3424 	ldr.w	r3, [r3, #1060]	; 0x424
 8001c46:	b29b      	uxth	r3, r3
 8001c48:	818b      	strh	r3, [r1, #12]
 8001c4a:	e73f      	b.n	8001acc <USART2_IRQHandler+0x5c>
 8001c4c:	20001098 	mulcs	r0, r8, r0
 8001c50:	200016bc 			; <UNDEFINED> instruction: 0x200016bc
 8001c54:	e0001000 	and	r1, r0, r0
 8001c58:	200016d0 	ldrdcs	r1, [r0], -r0

08001c5c <TIMER1_IRQHandler>:
 8001c5c:	b538      	push	{r3, r4, r5, lr}
 8001c5e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001c62:	691b      	ldr	r3, [r3, #16]
 8001c64:	071b      	lsls	r3, r3, #28
 8001c66:	d400      	bmi.n	8001c6a <TIMER1_IRQHandler+0xe>
 8001c68:	bd38      	pop	{r3, r4, r5, pc}
 8001c6a:	4c28      	ldr	r4, [pc, #160]	; (8001d0c <TIMER1_IRQHandler+0xb0>)
 8001c6c:	f8d4 3208 	ldr.w	r3, [r4, #520]	; 0x208
 8001c70:	3b01      	subs	r3, #1
 8001c72:	2b03      	cmp	r3, #3
 8001c74:	d81a      	bhi.n	8001cac <TIMER1_IRQHandler+0x50>
 8001c76:	e8df f003 	tbb	[pc, r3]
 8001c7a:	02202436 	eoreq	r2, r0, #905969664	; 0x36000000
 8001c7e:	4d24      	ldr	r5, [pc, #144]	; (8001d10 <TIMER1_IRQHandler+0xb4>)
 8001c80:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001c84:	2203      	movs	r2, #3
 8001c86:	2110      	movs	r1, #16
 8001c88:	4628      	mov	r0, r5
 8001c8a:	f002 f937 	bl	8003efc <gpio_init>
 8001c8e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001c92:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001c96:	4b1f      	ldr	r3, [pc, #124]	; (8001d14 <TIMER1_IRQHandler+0xb8>)
 8001c98:	616a      	str	r2, [r5, #20]
 8001c9a:	681b      	ldr	r3, [r3, #0]
 8001c9c:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8001c9e:	2102      	movs	r1, #2
 8001ca0:	441a      	add	r2, r3
 8001ca2:	f002 fb52 	bl	800434a <timer_channel_output_pulse_value_config>
 8001ca6:	2301      	movs	r3, #1
 8001ca8:	f8c4 3208 	str.w	r3, [r4, #520]	; 0x208
 8001cac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001cb0:	2108      	movs	r1, #8
 8001cb2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001cb6:	f002 bb1c 	b.w	80042f2 <timer_interrupt_flag_clear>
 8001cba:	4817      	ldr	r0, [pc, #92]	; (8001d18 <TIMER1_IRQHandler+0xbc>)
 8001cbc:	f001 fd4a 	bl	8003754 <console_error>
 8001cc0:	e7f4      	b.n	8001cac <TIMER1_IRQHandler+0x50>
 8001cc2:	4b16      	ldr	r3, [pc, #88]	; (8001d1c <TIMER1_IRQHandler+0xc0>)
 8001cc4:	f8b4 1202 	ldrh.w	r1, [r4, #514]	; 0x202
 8001cc8:	69da      	ldr	r2, [r3, #28]
 8001cca:	4815      	ldr	r0, [pc, #84]	; (8001d20 <TIMER1_IRQHandler+0xc4>)
 8001ccc:	f022 0201 	bic.w	r2, r2, #1
 8001cd0:	f042 0503 	orr.w	r5, r2, #3
 8001cd4:	61da      	str	r2, [r3, #28]
 8001cd6:	629c      	str	r4, [r3, #40]	; 0x28
 8001cd8:	6219      	str	r1, [r3, #32]
 8001cda:	61dd      	str	r5, [r3, #28]
 8001cdc:	2180      	movs	r1, #128	; 0x80
 8001cde:	f002 fbdb 	bl	8004498 <usart_dma_transmit_config>
 8001ce2:	2303      	movs	r3, #3
 8001ce4:	e7e0      	b.n	8001ca8 <TIMER1_IRQHandler+0x4c>
 8001ce6:	480a      	ldr	r0, [pc, #40]	; (8001d10 <TIMER1_IRQHandler+0xb4>)
 8001ce8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001cec:	2203      	movs	r2, #3
 8001cee:	2118      	movs	r1, #24
 8001cf0:	f002 f904 	bl	8003efc <gpio_init>
 8001cf4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001cf8:	4b0a      	ldr	r3, [pc, #40]	; (8001d24 <TIMER1_IRQHandler+0xc8>)
 8001cfa:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8001cfc:	681b      	ldr	r3, [r3, #0]
 8001cfe:	2102      	movs	r1, #2
 8001d00:	441a      	add	r2, r3
 8001d02:	f002 fb22 	bl	800434a <timer_channel_output_pulse_value_config>
 8001d06:	2302      	movs	r3, #2
 8001d08:	e7ce      	b.n	8001ca8 <TIMER1_IRQHandler+0x4c>
 8001d0a:	bf00      	nop
 8001d0c:	200012a8 	andcs	r1, r0, r8, lsr #5
 8001d10:	40011000 	andmi	r1, r1, r0
 8001d14:	2000100c 	andcs	r1, r0, ip
 8001d18:	080051c0 	stmdaeq	r0, {r6, r7, r8, ip, lr}
 8001d1c:	40020000 	andmi	r0, r2, r0
 8001d20:	40004800 	andmi	r4, r0, r0, lsl #16
 8001d24:	20001008 	andcs	r1, r0, r8

08001d28 <TIMER4_IRQHandler>:
 8001d28:	4770      	bx	lr
 8001d2a:	bf00      	nop

08001d2c <TIMER2_IRQHandler>:
 8001d2c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001d30:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 8001d34:	078b      	lsls	r3, r1, #30
 8001d36:	d508      	bpl.n	8001d4a <TIMER2_IRQHandler+0x1e>
 8001d38:	4b0f      	ldr	r3, [pc, #60]	; (8001d78 <TIMER2_IRQHandler+0x4c>)
 8001d3a:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8001d3e:	2a03      	cmp	r2, #3
 8001d40:	d006      	beq.n	8001d50 <TIMER2_IRQHandler+0x24>
 8001d42:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8001d46:	2a08      	cmp	r2, #8
 8001d48:	d00e      	beq.n	8001d68 <TIMER2_IRQHandler+0x3c>
 8001d4a:	480c      	ldr	r0, [pc, #48]	; (8001d7c <TIMER2_IRQHandler+0x50>)
 8001d4c:	f002 bad1 	b.w	80042f2 <timer_interrupt_flag_clear>
 8001d50:	2200      	movs	r2, #0
 8001d52:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001d56:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8001d5a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001d5e:	4807      	ldr	r0, [pc, #28]	; (8001d7c <TIMER2_IRQHandler+0x50>)
 8001d60:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8001d64:	f002 bac5 	b.w	80042f2 <timer_interrupt_flag_clear>
 8001d68:	2200      	movs	r2, #0
 8001d6a:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8001d6e:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8001d72:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001d76:	e7f2      	b.n	8001d5e <TIMER2_IRQHandler+0x32>
 8001d78:	20001098 	mulcs	r0, r8, r0
 8001d7c:	40000400 	andmi	r0, r0, r0, lsl #8

08001d80 <TIMER3_IRQHandler>:
 8001d80:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001d84:	4802      	ldr	r0, [pc, #8]	; (8001d90 <TIMER3_IRQHandler+0x10>)
 8001d86:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 8001d8a:	f002 bab2 	b.w	80042f2 <timer_interrupt_flag_clear>
 8001d8e:	bf00      	nop
 8001d90:	40000800 	andmi	r0, r0, r0, lsl #16

08001d94 <TIMER6_IRQHandler>:
 8001d94:	4b06      	ldr	r3, [pc, #24]	; (8001db0 <TIMER6_IRQHandler+0x1c>)
 8001d96:	4807      	ldr	r0, [pc, #28]	; (8001db4 <TIMER6_IRQHandler+0x20>)
 8001d98:	685a      	ldr	r2, [r3, #4]
 8001d9a:	b410      	push	{r4}
 8001d9c:	689c      	ldr	r4, [r3, #8]
 8001d9e:	1b12      	subs	r2, r2, r4
 8001da0:	601a      	str	r2, [r3, #0]
 8001da2:	685a      	ldr	r2, [r3, #4]
 8001da4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001da8:	609a      	str	r2, [r3, #8]
 8001daa:	2101      	movs	r1, #1
 8001dac:	f002 baa1 	b.w	80042f2 <timer_interrupt_flag_clear>
 8001db0:	200016bc 			; <UNDEFINED> instruction: 0x200016bc
 8001db4:	40001400 	andmi	r1, r0, r0, lsl #8

08001db8 <DMA0_Channel1_IRQHandler>:
 8001db8:	b510      	push	{r4, lr}
 8001dba:	4814      	ldr	r0, [pc, #80]	; (8001e0c <DMA0_Channel1_IRQHandler+0x54>)
 8001dbc:	2202      	movs	r2, #2
 8001dbe:	2101      	movs	r1, #1
 8001dc0:	f001 ffd0 	bl	8003d64 <dma_interrupt_flag_get>
 8001dc4:	2801      	cmp	r0, #1
 8001dc6:	d006      	beq.n	8001dd6 <DMA0_Channel1_IRQHandler+0x1e>
 8001dc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001dcc:	480f      	ldr	r0, [pc, #60]	; (8001e0c <DMA0_Channel1_IRQHandler+0x54>)
 8001dce:	2203      	movs	r2, #3
 8001dd0:	2101      	movs	r1, #1
 8001dd2:	f001 bff6 	b.w	8003dc2 <dma_interrupt_flag_clear>
 8001dd6:	4601      	mov	r1, r0
 8001dd8:	220e      	movs	r2, #14
 8001dda:	480c      	ldr	r0, [pc, #48]	; (8001e0c <DMA0_Channel1_IRQHandler+0x54>)
 8001ddc:	4c0c      	ldr	r4, [pc, #48]	; (8001e10 <DMA0_Channel1_IRQHandler+0x58>)
 8001dde:	f001 fff3 	bl	8003dc8 <dma_interrupt_disable>
 8001de2:	480c      	ldr	r0, [pc, #48]	; (8001e14 <DMA0_Channel1_IRQHandler+0x5c>)
 8001de4:	2106      	movs	r1, #6
 8001de6:	f002 fb65 	bl	80044b4 <usart_flag_clear>
 8001dea:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
 8001dee:	b913      	cbnz	r3, 8001df6 <DMA0_Channel1_IRQHandler+0x3e>
 8001df0:	f8c4 3208 	str.w	r3, [r4, #520]	; 0x208
 8001df4:	e7e8      	b.n	8001dc8 <DMA0_Channel1_IRQHandler+0x10>
 8001df6:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001dfa:	4b07      	ldr	r3, [pc, #28]	; (8001e18 <DMA0_Channel1_IRQHandler+0x60>)
 8001dfc:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8001dfe:	681b      	ldr	r3, [r3, #0]
 8001e00:	2102      	movs	r1, #2
 8001e02:	441a      	add	r2, r3
 8001e04:	f002 faa1 	bl	800434a <timer_channel_output_pulse_value_config>
 8001e08:	2304      	movs	r3, #4
 8001e0a:	e7f1      	b.n	8001df0 <DMA0_Channel1_IRQHandler+0x38>
 8001e0c:	40020000 	andmi	r0, r2, r0
 8001e10:	200012a8 	andcs	r1, r0, r8, lsr #5
 8001e14:	40004800 	andmi	r4, r0, r0, lsl #16
 8001e18:	20001010 	andcs	r1, r0, r0, lsl r0

08001e1c <Dmx::Dmx()>:
 8001e1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001e20:	499c      	ldr	r1, [pc, #624]	; (8002094 <Dmx::Dmx()+0x278>)
 8001e22:	4605      	mov	r5, r0
 8001e24:	f44f 7400 	mov.w	r4, #512	; 0x200
 8001e28:	f246 13a8 	movw	r3, #25000	; 0x61a8
 8001e2c:	220c      	movs	r2, #12
 8001e2e:	265c      	movs	r6, #92	; 0x5c
 8001e30:	e9c0 6200 	strd	r6, r2, [r0]
 8001e34:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8001e38:	8284      	strh	r4, [r0, #20]
 8001e3a:	6008      	str	r0, [r1, #0]
 8001e3c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001e40:	4895      	ldr	r0, [pc, #596]	; (8002098 <Dmx::Dmx()+0x27c>)
 8001e42:	b08a      	sub	sp, #40	; 0x28
 8001e44:	2203      	movs	r2, #3
 8001e46:	2110      	movs	r1, #16
 8001e48:	f002 f858 	bl	8003efc <gpio_init>
 8001e4c:	69ab      	ldr	r3, [r5, #24]
 8001e4e:	612c      	str	r4, [r5, #16]
 8001e50:	2b01      	cmp	r3, #1
 8001e52:	4c92      	ldr	r4, [pc, #584]	; (800209c <Dmx::Dmx()+0x280>)
 8001e54:	f000 8106 	beq.w	8002064 <Dmx::Dmx()+0x248>
 8001e58:	6823      	ldr	r3, [r4, #0]
 8001e5a:	2201      	movs	r2, #1
 8001e5c:	61aa      	str	r2, [r5, #24]
 8001e5e:	2b00      	cmp	r3, #0
 8001e60:	f000 80fe 	beq.w	8002060 <Dmx::Dmx()+0x244>
 8001e64:	488e      	ldr	r0, [pc, #568]	; (80020a0 <Dmx::Dmx()+0x284>)
 8001e66:	f240 3105 	movw	r1, #773	; 0x305
 8001e6a:	f002 fb38 	bl	80044de <usart_interrupt_disable>
 8001e6e:	498d      	ldr	r1, [pc, #564]	; (80020a4 <Dmx::Dmx()+0x288>)
 8001e70:	2200      	movs	r2, #0
 8001e72:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001e76:	f8c1 220c 	str.w	r2, [r1, #524]	; 0x20c
 8001e7a:	f8d0 340c 	ldr.w	r3, [r0, #1036]	; 0x40c
 8001e7e:	f023 0302 	bic.w	r3, r3, #2
 8001e82:	f8c0 340c 	str.w	r3, [r0, #1036]	; 0x40c
 8001e86:	6022      	str	r2, [r4, #0]
 8001e88:	4b87      	ldr	r3, [pc, #540]	; (80020a8 <Dmx::Dmx()+0x28c>)
 8001e8a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001e8e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8001e92:	4b86      	ldr	r3, [pc, #536]	; (80020ac <Dmx::Dmx()+0x290>)
 8001e94:	4e86      	ldr	r6, [pc, #536]	; (80020b0 <Dmx::Dmx()+0x294>)
 8001e96:	2400      	movs	r4, #0
 8001e98:	f8c1 420c 	str.w	r4, [r1, #524]	; 0x20c
 8001e9c:	f8c3 4204 	str.w	r4, [r3, #516]	; 0x204
 8001ea0:	4621      	mov	r1, r4
 8001ea2:	f8c3 4208 	str.w	r4, [r3, #520]	; 0x208
 8001ea6:	f240 2202 	movw	r2, #514	; 0x202
 8001eaa:	4618      	mov	r0, r3
 8001eac:	f001 fd51 	bl	8003952 <memset>
 8001eb0:	4603      	mov	r3, r0
 8001eb2:	f240 2201 	movw	r2, #513	; 0x201
 8001eb6:	f8a3 2202 	strh.w	r2, [r3, #514]	; 0x202
 8001eba:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 8001ebe:	f04f 0801 	mov.w	r8, #1
 8001ec2:	f002 f8a9 	bl	8004018 <rcu_periph_clock_enable>
 8001ec6:	f240 5001 	movw	r0, #1281	; 0x501
 8001eca:	f002 f8a5 	bl	8004018 <rcu_periph_clock_enable>
 8001ece:	4641      	mov	r1, r8
 8001ed0:	4878      	ldr	r0, [pc, #480]	; (80020b4 <Dmx::Dmx()+0x298>)
 8001ed2:	f001 fecb 	bl	8003c6c <dma_deinit>
 8001ed6:	4b78      	ldr	r3, [pc, #480]	; (80020b8 <Dmx::Dmx()+0x29c>)
 8001ed8:	9303      	str	r3, [sp, #12]
 8001eda:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001ede:	aa03      	add	r2, sp, #12
 8001ee0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8001ee4:	4641      	mov	r1, r8
 8001ee6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001eea:	4872      	ldr	r0, [pc, #456]	; (80020b4 <Dmx::Dmx()+0x298>)
 8001eec:	9308      	str	r3, [sp, #32]
 8001eee:	f88d 8026 	strb.w	r8, [sp, #38]	; 0x26
 8001ef2:	9406      	str	r4, [sp, #24]
 8001ef4:	9404      	str	r4, [sp, #16]
 8001ef6:	f001 fed5 	bl	8003ca4 <dma_init>
 8001efa:	4641      	mov	r1, r8
 8001efc:	486d      	ldr	r0, [pc, #436]	; (80020b4 <Dmx::Dmx()+0x298>)
 8001efe:	f001 ff0b 	bl	8003d18 <dma_circulation_disable>
 8001f02:	4641      	mov	r1, r8
 8001f04:	486b      	ldr	r0, [pc, #428]	; (80020b4 <Dmx::Dmx()+0x298>)
 8001f06:	f001 ff17 	bl	8003d38 <dma_memory_to_memory_disable>
 8001f0a:	220e      	movs	r2, #14
 8001f0c:	4641      	mov	r1, r8
 8001f0e:	4869      	ldr	r0, [pc, #420]	; (80020b4 <Dmx::Dmx()+0x298>)
 8001f10:	f001 ff5a 	bl	8003dc8 <dma_interrupt_disable>
 8001f14:	f04f 0910 	mov.w	r9, #16
 8001f18:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001f1c:	f886 930c 	strb.w	r9, [r6, #780]	; 0x30c
 8001f20:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 8001f24:	6033      	str	r3, [r6, #0]
 8001f26:	f002 f877 	bl	8004018 <rcu_periph_clock_enable>
 8001f2a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001f2e:	f002 f937 	bl	80041a0 <timer_deinit>
 8001f32:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8001f36:	f04f 0a77 	mov.w	sl, #119	; 0x77
 8001f3a:	a903      	add	r1, sp, #12
 8001f3c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001f40:	9404      	str	r4, [sp, #16]
 8001f42:	f88d 4018 	strb.w	r4, [sp, #24]
 8001f46:	9705      	str	r7, [sp, #20]
 8001f48:	f8cd a00c 	str.w	sl, [sp, #12]
 8001f4c:	f002 f98a 	bl	8004264 <timer_init>
 8001f50:	4639      	mov	r1, r7
 8001f52:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001f56:	f002 f9cf 	bl	80042f8 <timer_flag_clear>
 8001f5a:	4639      	mov	r1, r7
 8001f5c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001f60:	f002 f9c7 	bl	80042f2 <timer_interrupt_flag_clear>
 8001f64:	464a      	mov	r2, r9
 8001f66:	2102      	movs	r1, #2
 8001f68:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001f6c:	f002 f9c7 	bl	80042fe <timer_channel_output_mode_config>
 8001f70:	463a      	mov	r2, r7
 8001f72:	2102      	movs	r1, #2
 8001f74:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001f78:	f002 f9e7 	bl	800434a <timer_channel_output_pulse_value_config>
 8001f7c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8001f80:	f886 431c 	strb.w	r4, [r6, #796]	; 0x31c
 8001f84:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8001f88:	6033      	str	r3, [r6, #0]
 8001f8a:	f002 f9a9 	bl	80042e0 <timer_enable>
 8001f8e:	f240 7001 	movw	r0, #1793	; 0x701
 8001f92:	f002 f841 	bl	8004018 <rcu_periph_clock_enable>
 8001f96:	4849      	ldr	r0, [pc, #292]	; (80020bc <Dmx::Dmx()+0x2a0>)
 8001f98:	f002 f902 	bl	80041a0 <timer_deinit>
 8001f9c:	a903      	add	r1, sp, #12
 8001f9e:	4847      	ldr	r0, [pc, #284]	; (80020bc <Dmx::Dmx()+0x2a0>)
 8001fa0:	f8cd a00c 	str.w	sl, [sp, #12]
 8001fa4:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8001fa8:	f88d 4018 	strb.w	r4, [sp, #24]
 8001fac:	f002 f95a 	bl	8004264 <timer_init>
 8001fb0:	4639      	mov	r1, r7
 8001fb2:	4842      	ldr	r0, [pc, #264]	; (80020bc <Dmx::Dmx()+0x2a0>)
 8001fb4:	f002 f9a0 	bl	80042f8 <timer_flag_clear>
 8001fb8:	4639      	mov	r1, r7
 8001fba:	4840      	ldr	r0, [pc, #256]	; (80020bc <Dmx::Dmx()+0x2a0>)
 8001fbc:	f002 f999 	bl	80042f2 <timer_interrupt_flag_clear>
 8001fc0:	464a      	mov	r2, r9
 8001fc2:	4621      	mov	r1, r4
 8001fc4:	483d      	ldr	r0, [pc, #244]	; (80020bc <Dmx::Dmx()+0x2a0>)
 8001fc6:	f002 f99a 	bl	80042fe <timer_channel_output_mode_config>
 8001fca:	464a      	mov	r2, r9
 8001fcc:	4641      	mov	r1, r8
 8001fce:	483b      	ldr	r0, [pc, #236]	; (80020bc <Dmx::Dmx()+0x2a0>)
 8001fd0:	f002 f995 	bl	80042fe <timer_channel_output_mode_config>
 8001fd4:	464a      	mov	r2, r9
 8001fd6:	4839      	ldr	r0, [pc, #228]	; (80020bc <Dmx::Dmx()+0x2a0>)
 8001fd8:	2102      	movs	r1, #2
 8001fda:	f002 f990 	bl	80042fe <timer_channel_output_mode_config>
 8001fde:	464a      	mov	r2, r9
 8001fe0:	2103      	movs	r1, #3
 8001fe2:	4836      	ldr	r0, [pc, #216]	; (80020bc <Dmx::Dmx()+0x2a0>)
 8001fe4:	f002 f98b 	bl	80042fe <timer_channel_output_mode_config>
 8001fe8:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8001fec:	f886 931d 	strb.w	r9, [r6, #797]	; 0x31d
 8001ff0:	4832      	ldr	r0, [pc, #200]	; (80020bc <Dmx::Dmx()+0x2a0>)
 8001ff2:	6033      	str	r3, [r6, #0]
 8001ff4:	f002 f974 	bl	80042e0 <timer_enable>
 8001ff8:	f240 7005 	movw	r0, #1797	; 0x705
 8001ffc:	f002 f80c 	bl	8004018 <rcu_periph_clock_enable>
 8002000:	482f      	ldr	r0, [pc, #188]	; (80020c0 <Dmx::Dmx()+0x2a4>)
 8002002:	f002 f8cd 	bl	80041a0 <timer_deinit>
 8002006:	f642 63df 	movw	r3, #11999	; 0x2edf
 800200a:	a903      	add	r1, sp, #12
 800200c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002010:	482b      	ldr	r0, [pc, #172]	; (80020c0 <Dmx::Dmx()+0x2a4>)
 8002012:	f242 7310 	movw	r3, #10000	; 0x2710
 8002016:	9305      	str	r3, [sp, #20]
 8002018:	f002 f924 	bl	8004264 <timer_init>
 800201c:	4639      	mov	r1, r7
 800201e:	4828      	ldr	r0, [pc, #160]	; (80020c0 <Dmx::Dmx()+0x2a4>)
 8002020:	f002 f96a 	bl	80042f8 <timer_flag_clear>
 8002024:	4639      	mov	r1, r7
 8002026:	4826      	ldr	r0, [pc, #152]	; (80020c0 <Dmx::Dmx()+0x2a4>)
 8002028:	f002 f963 	bl	80042f2 <timer_interrupt_flag_clear>
 800202c:	4641      	mov	r1, r8
 800202e:	4824      	ldr	r0, [pc, #144]	; (80020c0 <Dmx::Dmx()+0x2a4>)
 8002030:	f002 f95b 	bl	80042ea <timer_interrupt_enable>
 8002034:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8002038:	f886 4337 	strb.w	r4, [r6, #823]	; 0x337
 800203c:	4820      	ldr	r0, [pc, #128]	; (80020c0 <Dmx::Dmx()+0x2a4>)
 800203e:	6073      	str	r3, [r6, #4]
 8002040:	f002 f94e 	bl	80042e0 <timer_enable>
 8002044:	2302      	movs	r3, #2
 8002046:	9300      	str	r3, [sp, #0]
 8002048:	491e      	ldr	r1, [pc, #120]	; (80020c4 <Dmx::Dmx()+0x2a8>)
 800204a:	4815      	ldr	r0, [pc, #84]	; (80020a0 <Dmx::Dmx()+0x284>)
 800204c:	4623      	mov	r3, r4
 800204e:	2208      	movs	r2, #8
 8002050:	f002 fc28 	bl	80048a4 <gd32_uart_begin>
 8002054:	2380      	movs	r3, #128	; 0x80
 8002056:	4628      	mov	r0, r5
 8002058:	6073      	str	r3, [r6, #4]
 800205a:	b00a      	add	sp, #40	; 0x28
 800205c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002060:	4910      	ldr	r1, [pc, #64]	; (80020a4 <Dmx::Dmx()+0x288>)
 8002062:	e711      	b.n	8001e88 <Dmx::Dmx()+0x6c>
 8002064:	6823      	ldr	r3, [r4, #0]
 8002066:	b193      	cbz	r3, 800208e <Dmx::Dmx()+0x272>
 8002068:	480d      	ldr	r0, [pc, #52]	; (80020a0 <Dmx::Dmx()+0x284>)
 800206a:	f240 3105 	movw	r1, #773	; 0x305
 800206e:	f002 fa36 	bl	80044de <usart_interrupt_disable>
 8002072:	490c      	ldr	r1, [pc, #48]	; (80020a4 <Dmx::Dmx()+0x288>)
 8002074:	2200      	movs	r2, #0
 8002076:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800207a:	f8c1 220c 	str.w	r2, [r1, #524]	; 0x20c
 800207e:	f8d0 340c 	ldr.w	r3, [r0, #1036]	; 0x40c
 8002082:	f023 0302 	bic.w	r3, r3, #2
 8002086:	f8c0 340c 	str.w	r3, [r0, #1036]	; 0x40c
 800208a:	6022      	str	r2, [r4, #0]
 800208c:	e701      	b.n	8001e92 <Dmx::Dmx()+0x76>
 800208e:	4905      	ldr	r1, [pc, #20]	; (80020a4 <Dmx::Dmx()+0x288>)
 8002090:	e6ff      	b.n	8001e92 <Dmx::Dmx()+0x76>
 8002092:	bf00      	nop
 8002094:	200016cc 	andcs	r1, r0, ip, asr #13
 8002098:	40010c00 	andmi	r0, r1, r0, lsl #24
 800209c:	200014b4 			; <UNDEFINED> instruction: 0x200014b4
 80020a0:	40004800 	andmi	r4, r0, r0, lsl #16
 80020a4:	20001098 	mulcs	r0, r8, r0
 80020a8:	40010000 	andmi	r0, r1, r0
 80020ac:	200012a8 	andcs	r1, r0, r8, lsr #5
 80020b0:	e000e100 	and	lr, r0, r0, lsl #2
 80020b4:	40020000 	andmi	r0, r2, r0
 80020b8:	40004804 	andmi	r4, r0, r4, lsl #16
 80020bc:	40000400 	andmi	r0, r0, r0, lsl #8
 80020c0:	40001400 	andmi	r1, r0, r0, lsl #8
 80020c4:	0003d090 	muleq	r3, r0, r0

080020c8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)>:
 80020c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80020cc:	f8d0 9018 	ldr.w	r9, [r0, #24]
 80020d0:	4591      	cmp	r9, r2
 80020d2:	4614      	mov	r4, r2
 80020d4:	461f      	mov	r7, r3
 80020d6:	d04e      	beq.n	8002176 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xae>
 80020d8:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 80022ac <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1e4>
 80020dc:	6182      	str	r2, [r0, #24]
 80020de:	f8d8 3000 	ldr.w	r3, [r8]
 80020e2:	4606      	mov	r6, r0
 80020e4:	b18b      	cbz	r3, 800210a <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x42>
 80020e6:	2a00      	cmp	r2, #0
 80020e8:	d15f      	bne.n	80021aa <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xe2>
 80020ea:	4d69      	ldr	r5, [pc, #420]	; (8002290 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1c8>)
 80020ec:	f8df 91ac 	ldr.w	r9, [pc, #428]	; 800229c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1d4>
 80020f0:	4692      	mov	sl, r2
 80020f2:	f8d5 3208 	ldr.w	r3, [r5, #520]	; 0x208
 80020f6:	2b04      	cmp	r3, #4
 80020f8:	f000 809f 	beq.w	800223a <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x172>
 80020fc:	f8d5 3208 	ldr.w	r3, [r5, #520]	; 0x208
 8002100:	2b00      	cmp	r3, #0
 8002102:	d1f6      	bne.n	80020f2 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x2a>
 8002104:	2300      	movs	r3, #0
 8002106:	f8c8 3000 	str.w	r3, [r8]
 800210a:	b93c      	cbnz	r4, 800211c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x54>
 800210c:	4b61      	ldr	r3, [pc, #388]	; (8002294 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1cc>)
 800210e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002112:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8002116:	b957      	cbnz	r7, 800212e <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x66>
 8002118:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800211c:	2c01      	cmp	r4, #1
 800211e:	d1fa      	bne.n	8002116 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x4e>
 8002120:	4b5c      	ldr	r3, [pc, #368]	; (8002294 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1cc>)
 8002122:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002126:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800212a:	2f00      	cmp	r7, #0
 800212c:	d0f4      	beq.n	8002118 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x50>
 800212e:	69b4      	ldr	r4, [r6, #24]
 8002130:	2c00      	cmp	r4, #0
 8002132:	d04f      	beq.n	80021d4 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x10c>
 8002134:	4b58      	ldr	r3, [pc, #352]	; (8002298 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1d0>)
 8002136:	4c59      	ldr	r4, [pc, #356]	; (800229c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1d4>)
 8002138:	2200      	movs	r2, #0
 800213a:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800213e:	2107      	movs	r1, #7
 8002140:	4620      	mov	r0, r4
 8002142:	f002 f9af 	bl	80044a4 <usart_flag_get>
 8002146:	2800      	cmp	r0, #0
 8002148:	d0f9      	beq.n	800213e <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x76>
 800214a:	4955      	ldr	r1, [pc, #340]	; (80022a0 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1d8>)
 800214c:	4853      	ldr	r0, [pc, #332]	; (800229c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1d4>)
 800214e:	f002 f9c8 	bl	80044e2 <usart_interrupt_flag_clear>
 8002152:	4852      	ldr	r0, [pc, #328]	; (800229c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1d4>)
 8002154:	f240 3105 	movw	r1, #773	; 0x305
 8002158:	f002 f9b7 	bl	80044ca <usart_interrupt_enable>
 800215c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002160:	2302      	movs	r3, #2
 8002162:	f8c8 3000 	str.w	r3, [r8]
 8002166:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800216a:	f043 0302 	orr.w	r3, r3, #2
 800216e:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8002172:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002176:	f8df 8134 	ldr.w	r8, [pc, #308]	; 80022ac <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1e4>
 800217a:	2b00      	cmp	r3, #0
 800217c:	d1d8      	bne.n	8002130 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x68>
 800217e:	f8d8 3000 	ldr.w	r3, [r8]
 8002182:	2b00      	cmp	r3, #0
 8002184:	d0c8      	beq.n	8002118 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x50>
 8002186:	f1b9 0f00 	cmp.w	r9, #0
 800218a:	d163      	bne.n	8002254 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x18c>
 800218c:	4d40      	ldr	r5, [pc, #256]	; (8002290 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1c8>)
 800218e:	4c43      	ldr	r4, [pc, #268]	; (800229c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1d4>)
 8002190:	f8d5 3208 	ldr.w	r3, [r5, #520]	; 0x208
 8002194:	2b04      	cmp	r3, #4
 8002196:	d06e      	beq.n	8002276 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1ae>
 8002198:	f8d5 3208 	ldr.w	r3, [r5, #520]	; 0x208
 800219c:	2b00      	cmp	r3, #0
 800219e:	d1f7      	bne.n	8002190 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xc8>
 80021a0:	2300      	movs	r3, #0
 80021a2:	f8c8 3000 	str.w	r3, [r8]
 80021a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80021aa:	f240 3105 	movw	r1, #773	; 0x305
 80021ae:	483b      	ldr	r0, [pc, #236]	; (800229c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1d4>)
 80021b0:	f002 f995 	bl	80044de <usart_interrupt_disable>
 80021b4:	4b38      	ldr	r3, [pc, #224]	; (8002298 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1d0>)
 80021b6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80021ba:	2100      	movs	r1, #0
 80021bc:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 80021c0:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 80021c4:	f023 0302 	bic.w	r3, r3, #2
 80021c8:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 80021cc:	2300      	movs	r3, #0
 80021ce:	f8c8 3000 	str.w	r3, [r8]
 80021d2:	e79a      	b.n	800210a <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x42>
 80021d4:	4d2e      	ldr	r5, [pc, #184]	; (8002290 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1c8>)
 80021d6:	f8d5 3204 	ldr.w	r3, [r5, #516]	; 0x204
 80021da:	2201      	movs	r2, #1
 80021dc:	4293      	cmp	r3, r2
 80021de:	f8c8 2000 	str.w	r2, [r8]
 80021e2:	d199      	bne.n	8002118 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x50>
 80021e4:	4b2f      	ldr	r3, [pc, #188]	; (80022a4 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1dc>)
 80021e6:	4e2d      	ldr	r6, [pc, #180]	; (800229c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1d4>)
 80021e8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80021ec:	611a      	str	r2, [r3, #16]
 80021ee:	2106      	movs	r1, #6
 80021f0:	4630      	mov	r0, r6
 80021f2:	f002 f957 	bl	80044a4 <usart_flag_get>
 80021f6:	2801      	cmp	r0, #1
 80021f8:	4604      	mov	r4, r0
 80021fa:	d1f8      	bne.n	80021ee <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x126>
 80021fc:	4e29      	ldr	r6, [pc, #164]	; (80022a4 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1dc>)
 80021fe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002202:	2203      	movs	r2, #3
 8002204:	2110      	movs	r1, #16
 8002206:	4630      	mov	r0, r6
 8002208:	f001 fe78 	bl	8003efc <gpio_init>
 800220c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002210:	6173      	str	r3, [r6, #20]
 8002212:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8002216:	4b24      	ldr	r3, [pc, #144]	; (80022a8 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1e0>)
 8002218:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800221a:	681b      	ldr	r3, [r3, #0]
 800221c:	2102      	movs	r1, #2
 800221e:	441a      	add	r2, r3
 8002220:	f002 f893 	bl	800434a <timer_channel_output_pulse_value_config>
 8002224:	2108      	movs	r1, #8
 8002226:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800222a:	f002 f85e 	bl	80042ea <timer_interrupt_enable>
 800222e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002232:	f8c5 4208 	str.w	r4, [r5, #520]	; 0x208
 8002236:	6173      	str	r3, [r6, #20]
 8002238:	e76e      	b.n	8002118 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x50>
 800223a:	2106      	movs	r1, #6
 800223c:	4648      	mov	r0, r9
 800223e:	f002 f939 	bl	80044b4 <usart_flag_clear>
 8002242:	2106      	movs	r1, #6
 8002244:	4648      	mov	r0, r9
 8002246:	f002 f92d 	bl	80044a4 <usart_flag_get>
 800224a:	2801      	cmp	r0, #1
 800224c:	d1f9      	bne.n	8002242 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x17a>
 800224e:	f8c5 a208 	str.w	sl, [r5, #520]	; 0x208
 8002252:	e753      	b.n	80020fc <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x34>
 8002254:	4811      	ldr	r0, [pc, #68]	; (800229c <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1d4>)
 8002256:	f240 3105 	movw	r1, #773	; 0x305
 800225a:	f002 f940 	bl	80044de <usart_interrupt_disable>
 800225e:	4b0e      	ldr	r3, [pc, #56]	; (8002298 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1d0>)
 8002260:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002264:	f8c3 720c 	str.w	r7, [r3, #524]	; 0x20c
 8002268:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800226c:	f023 0302 	bic.w	r3, r3, #2
 8002270:	f8c2 340c 	str.w	r3, [r2, #1036]	; 0x40c
 8002274:	e794      	b.n	80021a0 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xd8>
 8002276:	2106      	movs	r1, #6
 8002278:	4620      	mov	r0, r4
 800227a:	f002 f91b 	bl	80044b4 <usart_flag_clear>
 800227e:	2106      	movs	r1, #6
 8002280:	4620      	mov	r0, r4
 8002282:	f002 f90f 	bl	80044a4 <usart_flag_get>
 8002286:	2801      	cmp	r0, #1
 8002288:	d1f9      	bne.n	800227e <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0x1b6>
 800228a:	f8c5 9208 	str.w	r9, [r5, #520]	; 0x208
 800228e:	e783      	b.n	8002198 <Dmx::SetPortDirection(unsigned long, dmx::PortDirection, bool)+0xd0>
 8002290:	200012a8 	andcs	r1, r0, r8, lsr #5
 8002294:	40010000 	andmi	r0, r1, r0
 8002298:	20001098 	mulcs	r0, r8, r0
 800229c:	40004800 	andmi	r4, r0, r0, lsl #16
 80022a0:	00050305 	andeq	r0, r5, r5, lsl #6
 80022a4:	40011000 	andmi	r1, r1, r0
 80022a8:	2000100c 	andcs	r1, r0, ip
 80022ac:	200014b4 			; <UNDEFINED> instruction: 0x200014b4

080022b0 <Dmx::ClearData(unsigned long)>:
 80022b0:	b508      	push	{r3, lr}
 80022b2:	4b08      	ldr	r3, [pc, #32]	; (80022d4 <Dmx::ClearData(unsigned long)+0x24>)
 80022b4:	f44f 7203 	mov.w	r2, #524	; 0x20c
 80022b8:	fb02 3301 	mla	r3, r2, r1, r3
 80022bc:	4618      	mov	r0, r3
 80022be:	f240 2202 	movw	r2, #514	; 0x202
 80022c2:	2100      	movs	r1, #0
 80022c4:	f001 fb45 	bl	8003952 <memset>
 80022c8:	f240 2201 	movw	r2, #513	; 0x201
 80022cc:	f8a0 2202 	strh.w	r2, [r0, #514]	; 0x202
 80022d0:	bd08      	pop	{r3, pc}
 80022d2:	bf00      	nop
 80022d4:	200012a8 	andcs	r1, r0, r8, lsr #5

080022d8 <Dmx::SetDmxBreakTime(unsigned long)>:
 80022d8:	4b1d      	ldr	r3, [pc, #116]	; (8002350 <Dmx::SetDmxBreakTime(unsigned long)+0x78>)
 80022da:	b430      	push	{r4, r5}
 80022dc:	4d1d      	ldr	r5, [pc, #116]	; (8002354 <Dmx::SetDmxBreakTime(unsigned long)+0x7c>)
 80022de:	f8b3 c202 	ldrh.w	ip, [r3, #514]	; 0x202
 80022e2:	682b      	ldr	r3, [r5, #0]
 80022e4:	295b      	cmp	r1, #91	; 0x5b
 80022e6:	f04f 022c 	mov.w	r2, #44	; 0x2c
 80022ea:	d919      	bls.n	8002320 <Dmx::SetDmxBreakTime(unsigned long)+0x48>
 80022ec:	fb02 fc0c 	mul.w	ip, r2, ip
 80022f0:	4463      	add	r3, ip
 80022f2:	4c19      	ldr	r4, [pc, #100]	; (8002358 <Dmx::SetDmxBreakTime(unsigned long)+0x80>)
 80022f4:	68c2      	ldr	r2, [r0, #12]
 80022f6:	6021      	str	r1, [r4, #0]
 80022f8:	440b      	add	r3, r1
 80022fa:	f64f 70d3 	movw	r0, #65491	; 0xffd3
 80022fe:	4283      	cmp	r3, r0
 8002300:	d821      	bhi.n	8002346 <Dmx::SetDmxBreakTime(unsigned long)+0x6e>
 8002302:	b10a      	cbz	r2, 8002308 <Dmx::SetDmxBreakTime(unsigned long)+0x30>
 8002304:	4293      	cmp	r3, r2
 8002306:	d906      	bls.n	8002316 <Dmx::SetDmxBreakTime(unsigned long)+0x3e>
 8002308:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 800230c:	f240 41b4 	movw	r1, #1204	; 0x4b4
 8002310:	428a      	cmp	r2, r1
 8002312:	bf38      	it	cc
 8002314:	460a      	movcc	r2, r1
 8002316:	4911      	ldr	r1, [pc, #68]	; (800235c <Dmx::SetDmxBreakTime(unsigned long)+0x84>)
 8002318:	1ad3      	subs	r3, r2, r3
 800231a:	bc30      	pop	{r4, r5}
 800231c:	600b      	str	r3, [r1, #0]
 800231e:	4770      	bx	lr
 8002320:	fb02 fc0c 	mul.w	ip, r2, ip
 8002324:	335c      	adds	r3, #92	; 0x5c
 8002326:	4c0c      	ldr	r4, [pc, #48]	; (8002358 <Dmx::SetDmxBreakTime(unsigned long)+0x80>)
 8002328:	68c2      	ldr	r2, [r0, #12]
 800232a:	4463      	add	r3, ip
 800232c:	f64f 70d3 	movw	r0, #65491	; 0xffd3
 8002330:	215c      	movs	r1, #92	; 0x5c
 8002332:	4283      	cmp	r3, r0
 8002334:	6021      	str	r1, [r4, #0]
 8002336:	d9e4      	bls.n	8002302 <Dmx::SetDmxBreakTime(unsigned long)+0x2a>
 8002338:	eb01 030c 	add.w	r3, r1, ip
 800233c:	6021      	str	r1, [r4, #0]
 800233e:	210c      	movs	r1, #12
 8002340:	6029      	str	r1, [r5, #0]
 8002342:	440b      	add	r3, r1
 8002344:	e7dd      	b.n	8002302 <Dmx::SetDmxBreakTime(unsigned long)+0x2a>
 8002346:	29b0      	cmp	r1, #176	; 0xb0
 8002348:	bf28      	it	cs
 800234a:	21b0      	movcs	r1, #176	; 0xb0
 800234c:	e7f4      	b.n	8002338 <Dmx::SetDmxBreakTime(unsigned long)+0x60>
 800234e:	bf00      	nop
 8002350:	200012a8 	andcs	r1, r0, r8, lsr #5
 8002354:	20001008 	andcs	r1, r0, r8
 8002358:	2000100c 	andcs	r1, r0, ip
 800235c:	20001010 	andcs	r1, r0, r0, lsl r0

08002360 <Dmx::SetDmxMabTime(unsigned long)>:
 8002360:	4b15      	ldr	r3, [pc, #84]	; (80023b8 <Dmx::SetDmxMabTime(unsigned long)+0x58>)
 8002362:	b470      	push	{r4, r5, r6}
 8002364:	4e15      	ldr	r6, [pc, #84]	; (80023bc <Dmx::SetDmxMabTime(unsigned long)+0x5c>)
 8002366:	f8b3 2202 	ldrh.w	r2, [r3, #514]	; 0x202
 800236a:	6834      	ldr	r4, [r6, #0]
 800236c:	68c3      	ldr	r3, [r0, #12]
 800236e:	4d14      	ldr	r5, [pc, #80]	; (80023c0 <Dmx::SetDmxMabTime(unsigned long)+0x60>)
 8002370:	202c      	movs	r0, #44	; 0x2c
 8002372:	290c      	cmp	r1, #12
 8002374:	fb02 f000 	mul.w	r0, r2, r0
 8002378:	bf38      	it	cc
 800237a:	210c      	movcc	r1, #12
 800237c:	1822      	adds	r2, r4, r0
 800237e:	6029      	str	r1, [r5, #0]
 8002380:	4411      	add	r1, r2
 8002382:	f64f 72d3 	movw	r2, #65491	; 0xffd3
 8002386:	4291      	cmp	r1, r2
 8002388:	d907      	bls.n	800239a <Dmx::SetDmxMabTime(unsigned long)+0x3a>
 800238a:	2cb0      	cmp	r4, #176	; 0xb0
 800238c:	bf28      	it	cs
 800238e:	24b0      	movcs	r4, #176	; 0xb0
 8002390:	220c      	movs	r2, #12
 8002392:	6034      	str	r4, [r6, #0]
 8002394:	4414      	add	r4, r2
 8002396:	602a      	str	r2, [r5, #0]
 8002398:	1821      	adds	r1, r4, r0
 800239a:	b10b      	cbz	r3, 80023a0 <Dmx::SetDmxMabTime(unsigned long)+0x40>
 800239c:	428b      	cmp	r3, r1
 800239e:	d206      	bcs.n	80023ae <Dmx::SetDmxMabTime(unsigned long)+0x4e>
 80023a0:	f101 032c 	add.w	r3, r1, #44	; 0x2c
 80023a4:	f240 42b4 	movw	r2, #1204	; 0x4b4
 80023a8:	4293      	cmp	r3, r2
 80023aa:	bf38      	it	cc
 80023ac:	4613      	movcc	r3, r2
 80023ae:	4a05      	ldr	r2, [pc, #20]	; (80023c4 <Dmx::SetDmxMabTime(unsigned long)+0x64>)
 80023b0:	1a5b      	subs	r3, r3, r1
 80023b2:	bc70      	pop	{r4, r5, r6}
 80023b4:	6013      	str	r3, [r2, #0]
 80023b6:	4770      	bx	lr
 80023b8:	200012a8 	andcs	r1, r0, r8, lsr #5
 80023bc:	2000100c 	andcs	r1, r0, ip
 80023c0:	20001008 	andcs	r1, r0, r8
 80023c4:	20001010 	andcs	r1, r0, r0, lsl r0

080023c8 <Dmx::SetDmxPeriodTime(unsigned long)>:
 80023c8:	4b14      	ldr	r3, [pc, #80]	; (800241c <Dmx::SetDmxPeriodTime(unsigned long)+0x54>)
 80023ca:	b430      	push	{r4, r5}
 80023cc:	f8b3 3202 	ldrh.w	r3, [r3, #514]	; 0x202
 80023d0:	4d13      	ldr	r5, [pc, #76]	; (8002420 <Dmx::SetDmxPeriodTime(unsigned long)+0x58>)
 80023d2:	4c14      	ldr	r4, [pc, #80]	; (8002424 <Dmx::SetDmxPeriodTime(unsigned long)+0x5c>)
 80023d4:	60c1      	str	r1, [r0, #12]
 80023d6:	202c      	movs	r0, #44	; 0x2c
 80023d8:	fb03 f000 	mul.w	r0, r3, r0
 80023dc:	682a      	ldr	r2, [r5, #0]
 80023de:	6823      	ldr	r3, [r4, #0]
 80023e0:	4413      	add	r3, r2
 80023e2:	4403      	add	r3, r0
 80023e4:	f64f 7cd3 	movw	ip, #65491	; 0xffd3
 80023e8:	4563      	cmp	r3, ip
 80023ea:	d908      	bls.n	80023fe <Dmx::SetDmxPeriodTime(unsigned long)+0x36>
 80023ec:	2ab0      	cmp	r2, #176	; 0xb0
 80023ee:	f04f 030c 	mov.w	r3, #12
 80023f2:	bf28      	it	cs
 80023f4:	22b0      	movcs	r2, #176	; 0xb0
 80023f6:	602a      	str	r2, [r5, #0]
 80023f8:	441a      	add	r2, r3
 80023fa:	6023      	str	r3, [r4, #0]
 80023fc:	1813      	adds	r3, r2, r0
 80023fe:	b109      	cbz	r1, 8002404 <Dmx::SetDmxPeriodTime(unsigned long)+0x3c>
 8002400:	428b      	cmp	r3, r1
 8002402:	d906      	bls.n	8002412 <Dmx::SetDmxPeriodTime(unsigned long)+0x4a>
 8002404:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 8002408:	f240 42b4 	movw	r2, #1204	; 0x4b4
 800240c:	4291      	cmp	r1, r2
 800240e:	bf38      	it	cc
 8002410:	4611      	movcc	r1, r2
 8002412:	4a05      	ldr	r2, [pc, #20]	; (8002428 <Dmx::SetDmxPeriodTime(unsigned long)+0x60>)
 8002414:	1ac9      	subs	r1, r1, r3
 8002416:	bc30      	pop	{r4, r5}
 8002418:	6011      	str	r1, [r2, #0]
 800241a:	4770      	bx	lr
 800241c:	200012a8 	andcs	r1, r0, r8, lsr #5
 8002420:	2000100c 	andcs	r1, r0, ip
 8002424:	20001008 	andcs	r1, r0, r8
 8002428:	20001010 	andcs	r1, r0, r0, lsl r0

0800242c <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)>:
 800242c:	4b03      	ldr	r3, [pc, #12]	; (800243c <Dmx::SetOutputStyle(unsigned long, dmx::OutputStyle)+0x10>)
 800242e:	f44f 7003 	mov.w	r0, #524	; 0x20c
 8002432:	fb00 3101 	mla	r1, r0, r1, r3
 8002436:	f8c1 2204 	str.w	r2, [r1, #516]	; 0x204
 800243a:	4770      	bx	lr
 800243c:	200012a8 	andcs	r1, r0, r8, lsr #5

08002440 <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)>:
 8002440:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002442:	8a85      	ldrh	r5, [r0, #20]
 8002444:	4f21      	ldr	r7, [pc, #132]	; (80024cc <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)+0x8c>)
 8002446:	429d      	cmp	r5, r3
 8002448:	4606      	mov	r6, r0
 800244a:	f44f 7003 	mov.w	r0, #524	; 0x20c
 800244e:	bf28      	it	cs
 8002450:	461d      	movcs	r5, r3
 8002452:	fb00 7001 	mla	r0, r0, r1, r7
 8002456:	1c6b      	adds	r3, r5, #1
 8002458:	460c      	mov	r4, r1
 800245a:	f8a0 3202 	strh.w	r3, [r0, #514]	; 0x202
 800245e:	b11d      	cbz	r5, 8002468 <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)+0x28>
 8002460:	4611      	mov	r1, r2
 8002462:	462a      	mov	r2, r5
 8002464:	f001 fa5e 	bl	8003924 <memmove>
 8002468:	eb06 0484 	add.w	r4, r6, r4, lsl #2
 800246c:	6923      	ldr	r3, [r4, #16]
 800246e:	42ab      	cmp	r3, r5
 8002470:	d100      	bne.n	8002474 <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)+0x34>
 8002472:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002474:	6125      	str	r5, [r4, #16]
 8002476:	f8df c060 	ldr.w	ip, [pc, #96]	; 80024d8 <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)+0x98>
 800247a:	f8b7 0202 	ldrh.w	r0, [r7, #514]	; 0x202
 800247e:	4c14      	ldr	r4, [pc, #80]	; (80024d0 <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)+0x90>)
 8002480:	f8dc 1000 	ldr.w	r1, [ip]
 8002484:	68f2      	ldr	r2, [r6, #12]
 8002486:	232c      	movs	r3, #44	; 0x2c
 8002488:	fb03 f000 	mul.w	r0, r3, r0
 800248c:	6823      	ldr	r3, [r4, #0]
 800248e:	440b      	add	r3, r1
 8002490:	4403      	add	r3, r0
 8002492:	f64f 75d3 	movw	r5, #65491	; 0xffd3
 8002496:	42ab      	cmp	r3, r5
 8002498:	d909      	bls.n	80024ae <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)+0x6e>
 800249a:	29b0      	cmp	r1, #176	; 0xb0
 800249c:	f04f 030c 	mov.w	r3, #12
 80024a0:	bf28      	it	cs
 80024a2:	21b0      	movcs	r1, #176	; 0xb0
 80024a4:	f8cc 1000 	str.w	r1, [ip]
 80024a8:	4419      	add	r1, r3
 80024aa:	6023      	str	r3, [r4, #0]
 80024ac:	180b      	adds	r3, r1, r0
 80024ae:	b10a      	cbz	r2, 80024b4 <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)+0x74>
 80024b0:	429a      	cmp	r2, r3
 80024b2:	d206      	bcs.n	80024c2 <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)+0x82>
 80024b4:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 80024b8:	f240 41b4 	movw	r1, #1204	; 0x4b4
 80024bc:	428a      	cmp	r2, r1
 80024be:	bf38      	it	cc
 80024c0:	460a      	movcc	r2, r1
 80024c2:	4904      	ldr	r1, [pc, #16]	; (80024d4 <Dmx::SetSendData(unsigned long, unsigned char const*, unsigned long)+0x94>)
 80024c4:	1ad2      	subs	r2, r2, r3
 80024c6:	600a      	str	r2, [r1, #0]
 80024c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80024ca:	bf00      	nop
 80024cc:	200012a8 	andcs	r1, r0, r8, lsr #5
 80024d0:	20001008 	andcs	r1, r0, r8
 80024d4:	20001010 	andcs	r1, r0, r0, lsl r0
 80024d8:	2000100c 	andcs	r1, r0, ip

080024dc <Dmx::GetDmxChanged(unsigned long)>:
 80024dc:	4a3b      	ldr	r2, [pc, #236]	; (80025cc <Dmx::GetDmxChanged(unsigned long)+0xf0>)
 80024de:	eb01 1341 	add.w	r3, r1, r1, lsl #5
 80024e2:	eb02 1203 	add.w	r2, r2, r3, lsl #4
 80024e6:	f8d2 3204 	ldr.w	r3, [r2, #516]	; 0x204
 80024ea:	041b      	lsls	r3, r3, #16
 80024ec:	d56c      	bpl.n	80025c8 <Dmx::GetDmxChanged(unsigned long)+0xec>
 80024ee:	f8d2 0204 	ldr.w	r0, [r2, #516]	; 0x204
 80024f2:	4b37      	ldr	r3, [pc, #220]	; (80025d0 <Dmx::GetDmxChanged(unsigned long)+0xf4>)
 80024f4:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
 80024f8:	b530      	push	{r4, r5, lr}
 80024fa:	f8c2 0204 	str.w	r0, [r2, #516]	; 0x204
 80024fe:	f8d2 4204 	ldr.w	r4, [r2, #516]	; 0x204
 8002502:	eb01 2101 	add.w	r1, r1, r1, lsl #8
 8002506:	eb03 0e41 	add.w	lr, r3, r1, lsl #1
 800250a:	3c01      	subs	r4, #1
 800250c:	8813      	ldrh	r3, [r2, #0]
 800250e:	f8c2 4204 	str.w	r4, [r2, #516]	; 0x204
 8002512:	4610      	mov	r0, r2
 8002514:	f8be 2000 	ldrh.w	r2, [lr]
 8002518:	429a      	cmp	r2, r3
 800251a:	f50e 7500 	add.w	r5, lr, #512	; 0x200
 800251e:	f04f 0400 	mov.w	r4, #0
 8002522:	4684      	mov	ip, r0
 8002524:	d002      	beq.n	800252c <Dmx::GetDmxChanged(unsigned long)+0x50>
 8002526:	f8ae 3000 	strh.w	r3, [lr]
 800252a:	2401      	movs	r4, #1
 800252c:	f8bc 3002 	ldrh.w	r3, [ip, #2]
 8002530:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8002534:	f10e 0102 	add.w	r1, lr, #2
 8002538:	429a      	cmp	r2, r3
 800253a:	f10c 0c02 	add.w	ip, ip, #2
 800253e:	bf18      	it	ne
 8002540:	f8ae 3002 	strhne.w	r3, [lr, #2]
 8002544:	884a      	ldrh	r2, [r1, #2]
 8002546:	f8bc 3002 	ldrh.w	r3, [ip, #2]
 800254a:	bf18      	it	ne
 800254c:	2401      	movne	r4, #1
 800254e:	429a      	cmp	r2, r3
 8002550:	d001      	beq.n	8002556 <Dmx::GetDmxChanged(unsigned long)+0x7a>
 8002552:	804b      	strh	r3, [r1, #2]
 8002554:	2401      	movs	r4, #1
 8002556:	f8bc 3004 	ldrh.w	r3, [ip, #4]
 800255a:	888a      	ldrh	r2, [r1, #4]
 800255c:	429a      	cmp	r2, r3
 800255e:	bf18      	it	ne
 8002560:	808b      	strhne	r3, [r1, #4]
 8002562:	88ca      	ldrh	r2, [r1, #6]
 8002564:	f8bc 3006 	ldrh.w	r3, [ip, #6]
 8002568:	bf18      	it	ne
 800256a:	2401      	movne	r4, #1
 800256c:	429a      	cmp	r2, r3
 800256e:	bf18      	it	ne
 8002570:	80cb      	strhne	r3, [r1, #6]
 8002572:	890a      	ldrh	r2, [r1, #8]
 8002574:	f8bc 3008 	ldrh.w	r3, [ip, #8]
 8002578:	bf18      	it	ne
 800257a:	2401      	movne	r4, #1
 800257c:	429a      	cmp	r2, r3
 800257e:	bf18      	it	ne
 8002580:	810b      	strhne	r3, [r1, #8]
 8002582:	894a      	ldrh	r2, [r1, #10]
 8002584:	f8bc 300a 	ldrh.w	r3, [ip, #10]
 8002588:	bf18      	it	ne
 800258a:	2401      	movne	r4, #1
 800258c:	429a      	cmp	r2, r3
 800258e:	bf18      	it	ne
 8002590:	814b      	strhne	r3, [r1, #10]
 8002592:	898a      	ldrh	r2, [r1, #12]
 8002594:	f8bc 300c 	ldrh.w	r3, [ip, #12]
 8002598:	bf18      	it	ne
 800259a:	2401      	movne	r4, #1
 800259c:	429a      	cmp	r2, r3
 800259e:	bf18      	it	ne
 80025a0:	818b      	strhne	r3, [r1, #12]
 80025a2:	89ca      	ldrh	r2, [r1, #14]
 80025a4:	f8bc 300e 	ldrh.w	r3, [ip, #14]
 80025a8:	bf18      	it	ne
 80025aa:	2401      	movne	r4, #1
 80025ac:	f101 0e0e 	add.w	lr, r1, #14
 80025b0:	429a      	cmp	r2, r3
 80025b2:	bf1c      	itt	ne
 80025b4:	81cb      	strhne	r3, [r1, #14]
 80025b6:	2401      	movne	r4, #1
 80025b8:	45ae      	cmp	lr, r5
 80025ba:	f10c 0c0e 	add.w	ip, ip, #14
 80025be:	d1b5      	bne.n	800252c <Dmx::GetDmxChanged(unsigned long)+0x50>
 80025c0:	b104      	cbz	r4, 80025c4 <Dmx::GetDmxChanged(unsigned long)+0xe8>
 80025c2:	bd30      	pop	{r4, r5, pc}
 80025c4:	2000      	movs	r0, #0
 80025c6:	bd30      	pop	{r4, r5, pc}
 80025c8:	2000      	movs	r0, #0
 80025ca:	4770      	bx	lr
 80025cc:	20001098 	mulcs	r0, r8, r0
 80025d0:	200014b8 			; <UNDEFINED> instruction: 0x200014b8

080025d4 <Dmx::GetDmxAvailable(unsigned long)>:
 80025d4:	4b0b      	ldr	r3, [pc, #44]	; (8002604 <Dmx::GetDmxAvailable(unsigned long)+0x30>)
 80025d6:	eb01 1141 	add.w	r1, r1, r1, lsl #5
 80025da:	eb03 1101 	add.w	r1, r3, r1, lsl #4
 80025de:	f8d1 0204 	ldr.w	r0, [r1, #516]	; 0x204
 80025e2:	f410 4000 	ands.w	r0, r0, #32768	; 0x8000
 80025e6:	d00b      	beq.n	8002600 <Dmx::GetDmxAvailable(unsigned long)+0x2c>
 80025e8:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 80025ec:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80025f0:	f8c1 3204 	str.w	r3, [r1, #516]	; 0x204
 80025f4:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 80025f8:	3b01      	subs	r3, #1
 80025fa:	4608      	mov	r0, r1
 80025fc:	f8c1 3204 	str.w	r3, [r1, #516]	; 0x204
 8002600:	4770      	bx	lr
 8002602:	bf00      	nop
 8002604:	20001098 	mulcs	r0, r8, r0

08002608 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)>:
 8002608:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800260a:	4e21      	ldr	r6, [pc, #132]	; (8002690 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x88>)
 800260c:	4615      	mov	r5, r2
 800260e:	461c      	mov	r4, r3
 8002610:	2106      	movs	r1, #6
 8002612:	4630      	mov	r0, r6
 8002614:	f001 ff46 	bl	80044a4 <usart_flag_get>
 8002618:	2801      	cmp	r0, #1
 800261a:	d1f9      	bne.n	8002610 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x8>
 800261c:	4e1d      	ldr	r6, [pc, #116]	; (8002694 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x8c>)
 800261e:	2203      	movs	r2, #3
 8002620:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002624:	2110      	movs	r1, #16
 8002626:	4630      	mov	r0, r6
 8002628:	f44f 6780 	mov.w	r7, #1024	; 0x400
 800262c:	f001 fc66 	bl	8003efc <gpio_init>
 8002630:	2100      	movs	r1, #0
 8002632:	20b0      	movs	r0, #176	; 0xb0
 8002634:	6177      	str	r7, [r6, #20]
 8002636:	f002 fa33 	bl	8004aa0 <udelay(unsigned long, unsigned long)>
 800263a:	4630      	mov	r0, r6
 800263c:	2118      	movs	r1, #24
 800263e:	463b      	mov	r3, r7
 8002640:	2203      	movs	r2, #3
 8002642:	f001 fc5b 	bl	8003efc <gpio_init>
 8002646:	2100      	movs	r1, #0
 8002648:	200c      	movs	r0, #12
 800264a:	f002 fa29 	bl	8004aa0 <udelay(unsigned long, unsigned long)>
 800264e:	b18c      	cbz	r4, 8002674 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x6c>
 8002650:	192e      	adds	r6, r5, r4
 8002652:	4c0f      	ldr	r4, [pc, #60]	; (8002690 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x88>)
 8002654:	3d01      	subs	r5, #1
 8002656:	3e01      	subs	r6, #1
 8002658:	f04f 2740 	mov.w	r7, #1073758208	; 0x40004000
 800265c:	2107      	movs	r1, #7
 800265e:	4620      	mov	r0, r4
 8002660:	f001 ff20 	bl	80044a4 <usart_flag_get>
 8002664:	2800      	cmp	r0, #0
 8002666:	d0f9      	beq.n	800265c <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x54>
 8002668:	f815 3f01 	ldrb.w	r3, [r5, #1]!
 800266c:	f8c7 3804 	str.w	r3, [r7, #2052]	; 0x804
 8002670:	42b5      	cmp	r5, r6
 8002672:	d1f3      	bne.n	800265c <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x54>
 8002674:	4c06      	ldr	r4, [pc, #24]	; (8002690 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x88>)
 8002676:	f04f 2540 	mov.w	r5, #1073758208	; 0x40004000
 800267a:	e001      	b.n	8002680 <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x78>
 800267c:	f8d5 3804 	ldr.w	r3, [r5, #2052]	; 0x804
 8002680:	2106      	movs	r1, #6
 8002682:	4620      	mov	r0, r4
 8002684:	f001 ff0e 	bl	80044a4 <usart_flag_get>
 8002688:	2801      	cmp	r0, #1
 800268a:	d1f7      	bne.n	800267c <Dmx::RdmSendRaw(unsigned long, unsigned char const*, unsigned long)+0x74>
 800268c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800268e:	bf00      	nop
 8002690:	40004800 	andmi	r4, r0, r0, lsl #16
 8002694:	40011000 	andmi	r1, r1, r0

08002698 <Dmx::RdmReceive(unsigned long)>:
 8002698:	4807      	ldr	r0, [pc, #28]	; (80026b8 <Dmx::RdmReceive(unsigned long)+0x20>)
 800269a:	eb01 1141 	add.w	r1, r1, r1, lsl #5
 800269e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
 80026a2:	f8d0 3204 	ldr.w	r3, [r0, #516]	; 0x204
 80026a6:	f413 4380 	ands.w	r3, r3, #16384	; 0x4000
 80026aa:	bf1a      	itte	ne
 80026ac:	2300      	movne	r3, #0
 80026ae:	f8c0 3204 	strne.w	r3, [r0, #516]	; 0x204
 80026b2:	4618      	moveq	r0, r3
 80026b4:	4770      	bx	lr
 80026b6:	bf00      	nop
 80026b8:	20001098 	mulcs	r0, r8, r0

080026bc <data_gpio_fsel_input>:
 80026bc:	b510      	push	{r4, lr}
 80026be:	4807      	ldr	r0, [pc, #28]	; (80026dc <data_gpio_fsel_input+0x20>)
 80026c0:	f24c 0340 	movw	r3, #49216	; 0xc040
 80026c4:	2203      	movs	r2, #3
 80026c6:	2104      	movs	r1, #4
 80026c8:	f001 fc18 	bl	8003efc <gpio_init>
 80026cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80026d0:	4803      	ldr	r0, [pc, #12]	; (80026e0 <data_gpio_fsel_input+0x24>)
 80026d2:	23f8      	movs	r3, #248	; 0xf8
 80026d4:	2203      	movs	r2, #3
 80026d6:	2104      	movs	r1, #4
 80026d8:	f001 bc10 	b.w	8003efc <gpio_init>
 80026dc:	40010800 	andmi	r0, r1, r0, lsl #16
 80026e0:	40010c00 	andmi	r0, r1, r0, lsl #24

080026e4 <gpio_fsel>:
 80026e4:	4b23      	ldr	r3, [pc, #140]	; (8002774 <gpio_fsel+0x90>)
 80026e6:	4298      	cmp	r0, r3
 80026e8:	b570      	push	{r4, r5, r6, lr}
 80026ea:	4604      	mov	r4, r0
 80026ec:	460d      	mov	r5, r1
 80026ee:	4616      	mov	r6, r2
 80026f0:	d036      	beq.n	8002760 <gpio_fsel+0x7c>
 80026f2:	d813      	bhi.n	800271c <gpio_fsel+0x38>
 80026f4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80026f8:	4298      	cmp	r0, r3
 80026fa:	d029      	beq.n	8002750 <gpio_fsel+0x6c>
 80026fc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8002700:	4298      	cmp	r0, r3
 8002702:	d02a      	beq.n	800275a <gpio_fsel+0x76>
 8002704:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8002708:	4298      	cmp	r0, r3
 800270a:	d011      	beq.n	8002730 <gpio_fsel+0x4c>
 800270c:	462b      	mov	r3, r5
 800270e:	4631      	mov	r1, r6
 8002710:	4620      	mov	r0, r4
 8002712:	2203      	movs	r2, #3
 8002714:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002718:	f001 bbf0 	b.w	8003efc <gpio_init>
 800271c:	4b16      	ldr	r3, [pc, #88]	; (8002778 <gpio_fsel+0x94>)
 800271e:	4298      	cmp	r0, r3
 8002720:	d021      	beq.n	8002766 <gpio_fsel+0x82>
 8002722:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8002726:	4298      	cmp	r0, r3
 8002728:	d1f0      	bne.n	800270c <gpio_fsel+0x28>
 800272a:	f240 6007 	movw	r0, #1543	; 0x607
 800272e:	e011      	b.n	8002754 <gpio_fsel+0x70>
 8002730:	f240 6002 	movw	r0, #1538	; 0x602
 8002734:	f001 fc70 	bl	8004018 <rcu_periph_clock_enable>
 8002738:	f5b5 5f00 	cmp.w	r5, #8192	; 0x2000
 800273c:	d116      	bne.n	800276c <gpio_fsel+0x88>
 800273e:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8002742:	f001 fc69 	bl	8004018 <rcu_periph_clock_enable>
 8002746:	480d      	ldr	r0, [pc, #52]	; (800277c <gpio_fsel+0x98>)
 8002748:	2101      	movs	r1, #1
 800274a:	f001 fc2d 	bl	8003fa8 <gpio_pin_remap_config>
 800274e:	e7dd      	b.n	800270c <gpio_fsel+0x28>
 8002750:	f240 6003 	movw	r0, #1539	; 0x603
 8002754:	f001 fc60 	bl	8004018 <rcu_periph_clock_enable>
 8002758:	e7d8      	b.n	800270c <gpio_fsel+0x28>
 800275a:	f240 6004 	movw	r0, #1540	; 0x604
 800275e:	e7f9      	b.n	8002754 <gpio_fsel+0x70>
 8002760:	f240 6005 	movw	r0, #1541	; 0x605
 8002764:	e7f6      	b.n	8002754 <gpio_fsel+0x70>
 8002766:	f240 6006 	movw	r0, #1542	; 0x606
 800276a:	e7f3      	b.n	8002754 <gpio_fsel+0x70>
 800276c:	f5b5 4f80 	cmp.w	r5, #16384	; 0x4000
 8002770:	d1cc      	bne.n	800270c <gpio_fsel+0x28>
 8002772:	e7e4      	b.n	800273e <gpio_fsel+0x5a>
 8002774:	40011400 	andmi	r1, r1, r0, lsl #8
 8002778:	40011800 	andmi	r1, r1, r0, lsl #16
 800277c:	00300400 	eorseq	r0, r0, r0, lsl #8

08002780 <FT245RL_init>:
 8002780:	b508      	push	{r3, lr}
 8002782:	f240 6002 	movw	r0, #1538	; 0x602
 8002786:	f001 fc47 	bl	8004018 <rcu_periph_clock_enable>
 800278a:	f240 6003 	movw	r0, #1539	; 0x603
 800278e:	f001 fc43 	bl	8004018 <rcu_periph_clock_enable>
 8002792:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8002796:	f001 fc3f 	bl	8004018 <rcu_periph_clock_enable>
 800279a:	4814      	ldr	r0, [pc, #80]	; (80027ec <FT245RL_init+0x6c>)
 800279c:	2101      	movs	r1, #1
 800279e:	f001 fc03 	bl	8003fa8 <gpio_pin_remap_config>
 80027a2:	f7ff ff8b 	bl	80026bc <data_gpio_fsel_input>
 80027a6:	4812      	ldr	r0, [pc, #72]	; (80027f0 <FT245RL_init+0x70>)
 80027a8:	2210      	movs	r2, #16
 80027aa:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80027ae:	f7ff ff99 	bl	80026e4 <gpio_fsel>
 80027b2:	480f      	ldr	r0, [pc, #60]	; (80027f0 <FT245RL_init+0x70>)
 80027b4:	2210      	movs	r2, #16
 80027b6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80027ba:	f7ff ff93 	bl	80026e4 <gpio_fsel>
 80027be:	480d      	ldr	r0, [pc, #52]	; (80027f4 <FT245RL_init+0x74>)
 80027c0:	2248      	movs	r2, #72	; 0x48
 80027c2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80027c6:	f7ff ff8d 	bl	80026e4 <gpio_fsel>
 80027ca:	2248      	movs	r2, #72	; 0x48
 80027cc:	4809      	ldr	r0, [pc, #36]	; (80027f4 <FT245RL_init+0x74>)
 80027ce:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80027d2:	f7ff ff87 	bl	80026e4 <gpio_fsel>
 80027d6:	4b08      	ldr	r3, [pc, #32]	; (80027f8 <FT245RL_init+0x78>)
 80027d8:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80027dc:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 80027e0:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80027e4:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80027e8:	bd08      	pop	{r3, pc}
 80027ea:	bf00      	nop
 80027ec:	00300400 	eorseq	r0, r0, r0, lsl #8
 80027f0:	40010c00 	andmi	r0, r1, r0, lsl #24
 80027f4:	40010800 	andmi	r0, r1, r0, lsl #16
 80027f8:	40010000 	andmi	r0, r1, r0

080027fc <FT245RL_write_data>:
 80027fc:	b510      	push	{r4, lr}
 80027fe:	f24c 0340 	movw	r3, #49216	; 0xc040
 8002802:	4604      	mov	r4, r0
 8002804:	2203      	movs	r2, #3
 8002806:	481d      	ldr	r0, [pc, #116]	; (800287c <FT245RL_write_data+0x80>)
 8002808:	2110      	movs	r1, #16
 800280a:	f001 fb77 	bl	8003efc <gpio_init>
 800280e:	481c      	ldr	r0, [pc, #112]	; (8002880 <FT245RL_write_data+0x84>)
 8002810:	23f8      	movs	r3, #248	; 0xf8
 8002812:	2203      	movs	r2, #3
 8002814:	2110      	movs	r1, #16
 8002816:	f001 fb71 	bl	8003efc <gpio_init>
 800281a:	4a1a      	ldr	r2, [pc, #104]	; (8002884 <FT245RL_write_data+0x88>)
 800281c:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8002820:	f8c2 1c10 	str.w	r1, [r2, #3088]	; 0xc10
 8002824:	bf00      	nop
 8002826:	bf00      	nop
 8002828:	02e3      	lsls	r3, r4, #11
 800282a:	0120      	lsls	r0, r4, #4
 800282c:	f000 0040 	and.w	r0, r0, #64	; 0x40
 8002830:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8002834:	4303      	orrs	r3, r0
 8002836:	f8c2 3810 	str.w	r3, [r2, #2064]	; 0x810
 800283a:	f483 4340 	eor.w	r3, r3, #49152	; 0xc000
 800283e:	f083 0340 	eor.w	r3, r3, #64	; 0x40
 8002842:	f8c2 3814 	str.w	r3, [r2, #2068]	; 0x814
 8002846:	01e0      	lsls	r0, r4, #7
 8002848:	0163      	lsls	r3, r4, #5
 800284a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800284e:	b2c0      	uxtb	r0, r0
 8002850:	4318      	orrs	r0, r3
 8002852:	1063      	asrs	r3, r4, #1
 8002854:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8002858:	f344 1403 	sbfx	r4, r4, #4, #4
 800285c:	4303      	orrs	r3, r0
 800285e:	f004 0408 	and.w	r4, r4, #8
 8002862:	431c      	orrs	r4, r3
 8002864:	f8c2 4c10 	str.w	r4, [r2, #3088]	; 0xc10
 8002868:	f084 04f8 	eor.w	r4, r4, #248	; 0xf8
 800286c:	f8c2 4c14 	str.w	r4, [r2, #3092]	; 0xc14
 8002870:	bf00      	nop
 8002872:	bf00      	nop
 8002874:	f8c2 1c14 	str.w	r1, [r2, #3092]	; 0xc14
 8002878:	bd10      	pop	{r4, pc}
 800287a:	bf00      	nop
 800287c:	40010800 	andmi	r0, r1, r0, lsl #16
 8002880:	40010c00 	andmi	r0, r1, r0, lsl #24
 8002884:	40010000 	andmi	r0, r1, r0

08002888 <FT245RL_read_data>:
 8002888:	b510      	push	{r4, lr}
 800288a:	4c1a      	ldr	r4, [pc, #104]	; (80028f4 <FT245RL_read_data+0x6c>)
 800288c:	f7ff ff16 	bl	80026bc <data_gpio_fsel_input>
 8002890:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002894:	f8c4 3c14 	str.w	r3, [r4, #3092]	; 0xc14
 8002898:	2318      	movs	r3, #24
 800289a:	bf00      	nop
 800289c:	3b01      	subs	r3, #1
 800289e:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 80028a2:	d1fa      	bne.n	800289a <FT245RL_read_data+0x12>
 80028a4:	f8d4 2808 	ldr.w	r2, [r4, #2056]	; 0x808
 80028a8:	f8d4 1c08 	ldr.w	r1, [r4, #3080]	; 0xc08
 80028ac:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80028b0:	f8c4 3c10 	str.w	r3, [r4, #3088]	; 0xc10
 80028b4:	f3c2 130b 	ubfx	r3, r2, #4, #12
 80028b8:	f3c2 24c4 	ubfx	r4, r2, #11, #5
 80028bc:	f004 0408 	and.w	r4, r4, #8
 80028c0:	f003 0304 	and.w	r3, r3, #4
 80028c4:	f342 22c4 	sbfx	r2, r2, #11, #5
 80028c8:	4323      	orrs	r3, r4
 80028ca:	f002 0210 	and.w	r2, r2, #16
 80028ce:	4313      	orrs	r3, r2
 80028d0:	f3c1 12c0 	ubfx	r2, r1, #7, #1
 80028d4:	4313      	orrs	r3, r2
 80028d6:	f3c1 124a 	ubfx	r2, r1, #5, #11
 80028da:	0048      	lsls	r0, r1, #1
 80028dc:	f002 0202 	and.w	r2, r2, #2
 80028e0:	4313      	orrs	r3, r2
 80028e2:	f000 0060 	and.w	r0, r0, #96	; 0x60
 80028e6:	4318      	orrs	r0, r3
 80028e8:	4b03      	ldr	r3, [pc, #12]	; (80028f8 <FT245RL_read_data+0x70>)
 80028ea:	0109      	lsls	r1, r1, #4
 80028ec:	400b      	ands	r3, r1
 80028ee:	4318      	orrs	r0, r3
 80028f0:	b2c0      	uxtb	r0, r0
 80028f2:	bd10      	pop	{r4, pc}
 80028f4:	40010000 	andmi	r0, r1, r0
 80028f8:	000fff80 	andeq	pc, pc, r0, lsl #31

080028fc <FT245RL_data_available>:
 80028fc:	b508      	push	{r3, lr}
 80028fe:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8002902:	4803      	ldr	r0, [pc, #12]	; (8002910 <FT245RL_data_available+0x14>)
 8002904:	f001 fb49 	bl	8003f9a <gpio_input_bit_get>
 8002908:	fab0 f080 	clz	r0, r0
 800290c:	0940      	lsrs	r0, r0, #5
 800290e:	bd08      	pop	{r3, pc}
 8002910:	40010800 	andmi	r0, r1, r0, lsl #16

08002914 <FT245RL_can_write>:
 8002914:	b508      	push	{r3, lr}
 8002916:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800291a:	4803      	ldr	r0, [pc, #12]	; (8002928 <FT245RL_can_write+0x14>)
 800291c:	f001 fb3d 	bl	8003f9a <gpio_input_bit_get>
 8002920:	fab0 f080 	clz	r0, r0
 8002924:	0940      	lsrs	r0, r0, #5
 8002926:	bd08      	pop	{r3, pc}
 8002928:	40010800 	andmi	r0, r1, r0, lsl #16

0800292c <usb_read_byte()>:
 800292c:	b508      	push	{r3, lr}
 800292e:	f7ff ffe5 	bl	80028fc <FT245RL_data_available>
 8002932:	2800      	cmp	r0, #0
 8002934:	d0fb      	beq.n	800292e <usb_read_byte()+0x2>
 8002936:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800293a:	f7ff bfa5 	b.w	8002888 <FT245RL_read_data>

0800293e <usb_send_byte(unsigned char)>:
 800293e:	b510      	push	{r4, lr}
 8002940:	4604      	mov	r4, r0
 8002942:	f7ff ffe7 	bl	8002914 <FT245RL_can_write>
 8002946:	2800      	cmp	r0, #0
 8002948:	d0fb      	beq.n	8002942 <usb_send_byte(unsigned char)+0x4>
 800294a:	4620      	mov	r0, r4
 800294c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002950:	f7ff bf54 	b.w	80027fc <FT245RL_write_data>

08002954 <RDMDevice::RDMDevice()>:
 8002954:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8002956:	2300      	movs	r3, #0
 8002958:	f06f 2280 	mvn.w	r2, #2147516416	; 0x80008000
 800295c:	e9c0 3210 	strd	r3, r2, [r0, #64]	; 0x40
 8002960:	f8a0 3048 	strh.w	r3, [r0, #72]	; 0x48
 8002964:	f8a0 3054 	strh.w	r3, [r0, #84]	; 0x54
 8002968:	f880 3056 	strb.w	r3, [r0, #86]	; 0x56
 800296c:	4b1a      	ldr	r3, [pc, #104]	; (80029d8 <RDMDevice::RDMDevice()+0x84>)
 800296e:	4d1b      	ldr	r5, [pc, #108]	; (80029dc <RDMDevice::RDMDevice()+0x88>)
 8002970:	4604      	mov	r4, r0
 8002972:	4669      	mov	r1, sp
 8002974:	6818      	ldr	r0, [r3, #0]
 8002976:	f000 f89b 	bl	8002ab0 <Network::MacAddressCopyTo(unsigned char*)>
 800297a:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800297e:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8002982:	f89d 1004 	ldrb.w	r1, [sp, #4]
 8002986:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800298a:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800298e:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 8002992:	f884 104e 	strb.w	r1, [r4, #78]	; 0x4e
 8002996:	f884 004f 	strb.w	r0, [r4, #79]	; 0x4f
 800299a:	782e      	ldrb	r6, [r5, #0]
 800299c:	f884 604a 	strb.w	r6, [r4, #74]	; 0x4a
 80029a0:	786d      	ldrb	r5, [r5, #1]
 80029a2:	f884 2052 	strb.w	r2, [r4, #82]	; 0x52
 80029a6:	f884 3053 	strb.w	r3, [r4, #83]	; 0x53
 80029aa:	4a0d      	ldr	r2, [pc, #52]	; (80029e0 <RDMDevice::RDMDevice()+0x8c>)
 80029ac:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
 80029b0:	2315      	movs	r3, #21
 80029b2:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80029b6:	f884 504b 	strb.w	r5, [r4, #75]	; 0x4b
 80029ba:	f884 0050 	strb.w	r0, [r4, #80]	; 0x50
 80029be:	1e63      	subs	r3, r4, #1
 80029c0:	f104 0114 	add.w	r1, r4, #20
 80029c4:	428b      	cmp	r3, r1
 80029c6:	d102      	bne.n	80029ce <RDMDevice::RDMDevice()+0x7a>
 80029c8:	4620      	mov	r0, r4
 80029ca:	b002      	add	sp, #8
 80029cc:	bd70      	pop	{r4, r5, r6, pc}
 80029ce:	f812 0b01 	ldrb.w	r0, [r2], #1
 80029d2:	f803 0f01 	strb.w	r0, [r3, #1]!
 80029d6:	e7f5      	b.n	80029c4 <RDMDevice::RDMDevice()+0x70>
 80029d8:	200016d4 	ldrdcs	r1, [r0], -r4
 80029dc:	080051cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, lr}
 80029e0:	080051ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, ip, lr}

080029e4 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 80029e4:	b510      	push	{r4, lr}
 80029e6:	2225      	movs	r2, #37	; 0x25
 80029e8:	4604      	mov	r4, r0
 80029ea:	f840 1b04 	str.w	r1, [r0], #4
 80029ee:	2100      	movs	r1, #0
 80029f0:	f000 ffaf 	bl	8003952 <memset>
 80029f4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80029f8:	237f      	movs	r3, #127	; 0x7f
 80029fa:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
 80029fe:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 8002a02:	f884 202b 	strb.w	r2, [r4, #43]	; 0x2b
 8002a06:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8002a0a:	4620      	mov	r0, r4
 8002a0c:	bd10      	pop	{r4, pc}

08002a0e <RDMDeviceParams::Load()>:
 8002a0e:	4601      	mov	r1, r0
 8002a10:	6800      	ldr	r0, [r0, #0]
 8002a12:	b130      	cbz	r0, 8002a22 <RDMDeviceParams::Load()+0x14>
 8002a14:	b508      	push	{r3, lr}
 8002a16:	6803      	ldr	r3, [r0, #0]
 8002a18:	3104      	adds	r1, #4
 8002a1a:	68db      	ldr	r3, [r3, #12]
 8002a1c:	4798      	blx	r3
 8002a1e:	2001      	movs	r0, #1
 8002a20:	bd08      	pop	{r3, pc}
 8002a22:	4770      	bx	lr

08002a24 <RDMDeviceParams::Set(RDMDevice*)>:
 8002a24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a26:	6843      	ldr	r3, [r0, #4]
 8002a28:	460c      	mov	r4, r1
 8002a2a:	07d9      	lsls	r1, r3, #31
 8002a2c:	4605      	mov	r5, r0
 8002a2e:	d519      	bpl.n	8002a64 <RDMDeviceParams::Set(RDMDevice*)+0x40>
 8002a30:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 8002a34:	f894 3056 	ldrb.w	r3, [r4, #86]	; 0x56
 8002a38:	2e20      	cmp	r6, #32
 8002a3a:	f100 0108 	add.w	r1, r0, #8
 8002a3e:	bf28      	it	cs
 8002a40:	2620      	movcs	r6, #32
 8002a42:	b1eb      	cbz	r3, 8002a80 <RDMDeviceParams::Set(RDMDevice*)+0x5c>
 8002a44:	f104 0320 	add.w	r3, r4, #32
 8002a48:	4618      	mov	r0, r3
 8002a4a:	4632      	mov	r2, r6
 8002a4c:	f000 ff6a 	bl	8003924 <memmove>
 8002a50:	4603      	mov	r3, r0
 8002a52:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8002a54:	f884 6054 	strb.w	r6, [r4, #84]	; 0x54
 8002a58:	b120      	cbz	r0, 8002a64 <RDMDeviceParams::Set(RDMDevice*)+0x40>
 8002a5a:	6802      	ldr	r2, [r0, #0]
 8002a5c:	4619      	mov	r1, r3
 8002a5e:	6897      	ldr	r7, [r2, #8]
 8002a60:	4632      	mov	r2, r6
 8002a62:	47b8      	blx	r7
 8002a64:	686b      	ldr	r3, [r5, #4]
 8002a66:	079a      	lsls	r2, r3, #30
 8002a68:	bf44      	itt	mi
 8002a6a:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 8002a6e:	f8a4 2044 	strhmi.w	r2, [r4, #68]	; 0x44
 8002a72:	075b      	lsls	r3, r3, #29
 8002a74:	bf44      	itt	mi
 8002a76:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 8002a7a:	f8a4 3046 	strhmi.w	r3, [r4, #70]	; 0x46
 8002a7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a80:	4632      	mov	r2, r6
 8002a82:	4620      	mov	r0, r4
 8002a84:	f000 ff4e 	bl	8003924 <memmove>
 8002a88:	f884 6055 	strb.w	r6, [r4, #85]	; 0x55
 8002a8c:	e7ea      	b.n	8002a64 <RDMDeviceParams::Set(RDMDevice*)+0x40>

08002a8e <RDMDeviceParams::Dump()>:
 8002a8e:	4770      	bx	lr

08002a90 <Network::Network()>:
 8002a90:	4b05      	ldr	r3, [pc, #20]	; (8002aa8 <Network::Network()+0x18>)
 8002a92:	4906      	ldr	r1, [pc, #24]	; (8002aac <Network::Network()+0x1c>)
 8002a94:	6018      	str	r0, [r3, #0]
 8002a96:	1e42      	subs	r2, r0, #1
 8002a98:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002a9c:	f802 3f01 	strb.w	r3, [r2, #1]!
 8002aa0:	2b00      	cmp	r3, #0
 8002aa2:	d1f9      	bne.n	8002a98 <Network::Network()+0x8>
 8002aa4:	4770      	bx	lr
 8002aa6:	bf00      	nop
 8002aa8:	200016d4 	ldrdcs	r1, [r0], -r4
 8002aac:	08005203 	stmdaeq	r0, {r0, r1, r9, ip, lr}

08002ab0 <Network::MacAddressCopyTo(unsigned char*)>:
 8002ab0:	4608      	mov	r0, r1
 8002ab2:	f001 bfcf 	b.w	8004a54 <mac_address_get(unsigned char*)>
	...

08002ab8 <ConfigStore::ConfigStore()>:
 8002ab8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002aba:	4604      	mov	r4, r0
 8002abc:	f000 f916 	bl	8002cec <StoreDevice::StoreDevice()>
 8002ac0:	4b22      	ldr	r3, [pc, #136]	; (8002b4c <ConfigStore::ConfigStore()+0x94>)
 8002ac2:	4e23      	ldr	r6, [pc, #140]	; (8002b50 <ConfigStore::ConfigStore()+0x98>)
 8002ac4:	601c      	str	r4, [r3, #0]
 8002ac6:	4620      	mov	r0, r4
 8002ac8:	7863      	ldrb	r3, [r4, #1]
 8002aca:	7033      	strb	r3, [r6, #0]
 8002acc:	f000 f918 	bl	8002d00 <StoreDevice::GetSectorSize() const>
 8002ad0:	4605      	mov	r5, r0
 8002ad2:	4620      	mov	r0, r4
 8002ad4:	f000 f912 	bl	8002cfc <StoreDevice::GetSize() const>
 8002ad8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002adc:	fbb2 f3f5 	udiv	r3, r2, r5
 8002ae0:	fb05 0113 	mls	r1, r5, r3, r0
 8002ae4:	4b1b      	ldr	r3, [pc, #108]	; (8002b54 <ConfigStore::ConfigStore()+0x9c>)
 8002ae6:	6019      	str	r1, [r3, #0]
 8002ae8:	7833      	ldrb	r3, [r6, #0]
 8002aea:	b12b      	cbz	r3, 8002af8 <ConfigStore::ConfigStore()+0x40>
 8002aec:	ab03      	add	r3, sp, #12
 8002aee:	9300      	str	r3, [sp, #0]
 8002af0:	4620      	mov	r0, r4
 8002af2:	4b19      	ldr	r3, [pc, #100]	; (8002b58 <ConfigStore::ConfigStore()+0xa0>)
 8002af4:	f000 f906 	bl	8002d04 <StoreDevice::Read(unsigned long, unsigned long, unsigned char*, storedevice::result&)>
 8002af8:	4818      	ldr	r0, [pc, #96]	; (8002b5c <ConfigStore::ConfigStore()+0xa4>)
 8002afa:	4a17      	ldr	r2, [pc, #92]	; (8002b58 <ConfigStore::ConfigStore()+0xa0>)
 8002afc:	2304      	movs	r3, #4
 8002afe:	2101      	movs	r1, #1
 8002b00:	f810 5b01 	ldrb.w	r5, [r0], #1
 8002b04:	f812 6b01 	ldrb.w	r6, [r2], #1
 8002b08:	42b5      	cmp	r5, r6
 8002b0a:	bf1c      	itt	ne
 8002b0c:	f802 5c01 	strbne.w	r5, [r2, #-1]
 8002b10:	2100      	movne	r1, #0
 8002b12:	3b01      	subs	r3, #1
 8002b14:	d1f4      	bne.n	8002b00 <ConfigStore::ConfigStore()+0x48>
 8002b16:	b941      	cbnz	r1, 8002b2a <ConfigStore::ConfigStore()+0x72>
 8002b18:	4911      	ldr	r1, [pc, #68]	; (8002b60 <ConfigStore::ConfigStore()+0xa8>)
 8002b1a:	f640 72e1 	movw	r2, #4065	; 0xfe1
 8002b1e:	4618      	mov	r0, r3
 8002b20:	3a01      	subs	r2, #1
 8002b22:	d10f      	bne.n	8002b44 <ConfigStore::ConfigStore()+0x8c>
 8002b24:	4a0f      	ldr	r2, [pc, #60]	; (8002b64 <ConfigStore::ConfigStore()+0xac>)
 8002b26:	2101      	movs	r1, #1
 8002b28:	6011      	str	r1, [r2, #0]
 8002b2a:	490f      	ldr	r1, [pc, #60]	; (8002b68 <ConfigStore::ConfigStore()+0xb0>)
 8002b2c:	2220      	movs	r2, #32
 8002b2e:	f851 0b04 	ldr.w	r0, [r1], #4
 8002b32:	3301      	adds	r3, #1
 8002b34:	2b1a      	cmp	r3, #26
 8002b36:	4402      	add	r2, r0
 8002b38:	d1f9      	bne.n	8002b2e <ConfigStore::ConfigStore()+0x76>
 8002b3a:	4b0c      	ldr	r3, [pc, #48]	; (8002b6c <ConfigStore::ConfigStore()+0xb4>)
 8002b3c:	4620      	mov	r0, r4
 8002b3e:	601a      	str	r2, [r3, #0]
 8002b40:	b004      	add	sp, #16
 8002b42:	bd70      	pop	{r4, r5, r6, pc}
 8002b44:	f801 0b01 	strb.w	r0, [r1], #1
 8002b48:	e7ea      	b.n	8002b20 <ConfigStore::ConfigStore()+0x68>
 8002b4a:	bf00      	nop
 8002b4c:	200026ec 	andcs	r2, r0, ip, ror #13
 8002b50:	200026e0 	andcs	r2, r0, r0, ror #13
 8002b54:	200026dc 	ldrdcs	r2, [r0], -ip
 8002b58:	200016dc 	ldrdcs	r1, [r0], -ip
 8002b5c:	08005270 	stmdaeq	r0, {r4, r5, r6, r9, ip, lr}
 8002b60:	200016fc 	strdcs	r1, [r0], -ip
 8002b64:	200026e8 	andcs	r2, r0, r8, ror #13
 8002b68:	08005208 	stmdaeq	r0, {r3, r9, ip, lr}
 8002b6c:	200026e4 	andcs	r2, r0, r4, ror #13

08002b70 <ConfigStore::GetStoreOffset(configstore::Store)>:
 8002b70:	b510      	push	{r4, lr}
 8002b72:	4a05      	ldr	r2, [pc, #20]	; (8002b88 <ConfigStore::GetStoreOffset(configstore::Store)+0x18>)
 8002b74:	2300      	movs	r3, #0
 8002b76:	2020      	movs	r0, #32
 8002b78:	428b      	cmp	r3, r1
 8002b7a:	d100      	bne.n	8002b7e <ConfigStore::GetStoreOffset(configstore::Store)+0xe>
 8002b7c:	bd10      	pop	{r4, pc}
 8002b7e:	f852 4b04 	ldr.w	r4, [r2], #4
 8002b82:	3301      	adds	r3, #1
 8002b84:	4420      	add	r0, r4
 8002b86:	e7f7      	b.n	8002b78 <ConfigStore::GetStoreOffset(configstore::Store)+0x8>
 8002b88:	08005208 	stmdaeq	r0, {r3, r9, ip, lr}

08002b8c <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>:
 8002b8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002b8e:	4616      	mov	r6, r2
 8002b90:	461c      	mov	r4, r3
 8002b92:	f7ff ffed 	bl	8002b70 <ConfigStore::GetStoreOffset(configstore::Store)>
 8002b96:	4f12      	ldr	r7, [pc, #72]	; (8002be0 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x54>)
 8002b98:	9a06      	ldr	r2, [sp, #24]
 8002b9a:	9d07      	ldr	r5, [sp, #28]
 8002b9c:	1981      	adds	r1, r0, r6
 8002b9e:	4439      	add	r1, r7
 8002ba0:	1e63      	subs	r3, r4, #1
 8002ba2:	188c      	adds	r4, r1, r2
 8002ba4:	2200      	movs	r2, #0
 8002ba6:	42a1      	cmp	r1, r4
 8002ba8:	d10b      	bne.n	8002bc2 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x36>
 8002baa:	b1ae      	cbz	r6, 8002bd8 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x4c>
 8002bac:	b1b2      	cbz	r2, 8002bdc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x50>
 8002bae:	b125      	cbz	r5, 8002bba <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x2e>
 8002bb0:	9b08      	ldr	r3, [sp, #32]
 8002bb2:	4418      	add	r0, r3
 8002bb4:	583b      	ldr	r3, [r7, r0]
 8002bb6:	432b      	orrs	r3, r5
 8002bb8:	503b      	str	r3, [r7, r0]
 8002bba:	4b0a      	ldr	r3, [pc, #40]	; (8002be4 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x58>)
 8002bbc:	2201      	movs	r2, #1
 8002bbe:	601a      	str	r2, [r3, #0]
 8002bc0:	e00c      	b.n	8002bdc <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x50>
 8002bc2:	f891 e000 	ldrb.w	lr, [r1]
 8002bc6:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 8002bca:	45e6      	cmp	lr, ip
 8002bcc:	bf1c      	itt	ne
 8002bce:	f881 c000 	strbne.w	ip, [r1]
 8002bd2:	2201      	movne	r2, #1
 8002bd4:	3101      	adds	r1, #1
 8002bd6:	e7e6      	b.n	8002ba6 <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x1a>
 8002bd8:	2a00      	cmp	r2, #0
 8002bda:	d1ee      	bne.n	8002bba <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)+0x2e>
 8002bdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002bde:	bf00      	nop
 8002be0:	200016dc 	ldrdcs	r1, [r0], -ip
 8002be4:	200026e8 	andcs	r2, r0, r8, ror #13

08002be8 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long)>:
 8002be8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8002bec:	461e      	mov	r6, r3
 8002bee:	4615      	mov	r5, r2
 8002bf0:	4607      	mov	r7, r0
 8002bf2:	f7ff ffbd 	bl	8002b70 <ConfigStore::GetStoreOffset(configstore::Store)>
 8002bf6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002bf8:	18c4      	adds	r4, r0, r3
 8002bfa:	4b10      	ldr	r3, [pc, #64]	; (8002c3c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long)+0x54>)
 8002bfc:	441c      	add	r4, r3
 8002bfe:	4688      	mov	r8, r1
 8002c00:	4623      	mov	r3, r4
 8002c02:	1932      	adds	r2, r6, r4
 8002c04:	4293      	cmp	r3, r2
 8002c06:	d109      	bne.n	8002c1c <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long)+0x34>
 8002c08:	2200      	movs	r2, #0
 8002c0a:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8002c0e:	9600      	str	r6, [sp, #0]
 8002c10:	462b      	mov	r3, r5
 8002c12:	4641      	mov	r1, r8
 8002c14:	4638      	mov	r0, r7
 8002c16:	f7ff ffb9 	bl	8002b8c <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8002c1a:	e006      	b.n	8002c2a <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long)+0x42>
 8002c1c:	f813 1b01 	ldrb.w	r1, [r3], #1
 8002c20:	2900      	cmp	r1, #0
 8002c22:	d0ef      	beq.n	8002c04 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long)+0x1c>
 8002c24:	3d01      	subs	r5, #1
 8002c26:	4294      	cmp	r4, r2
 8002c28:	d102      	bne.n	8002c30 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long)+0x48>
 8002c2a:	b004      	add	sp, #16
 8002c2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002c30:	f814 3b01 	ldrb.w	r3, [r4], #1
 8002c34:	f805 3f01 	strb.w	r3, [r5, #1]!
 8002c38:	e7f5      	b.n	8002c26 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long)+0x3e>
 8002c3a:	bf00      	nop
 8002c3c:	200016dc 	ldrdcs	r1, [r0], -ip

08002c40 <ConfigStore::Flash()>:
 8002c40:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002c42:	4c24      	ldr	r4, [pc, #144]	; (8002cd4 <ConfigStore::Flash()+0x94>)
 8002c44:	6823      	ldr	r3, [r4, #0]
 8002c46:	2b00      	cmp	r3, #0
 8002c48:	d041      	beq.n	8002cce <ConfigStore::Flash()+0x8e>
 8002c4a:	3b01      	subs	r3, #1
 8002c4c:	2b05      	cmp	r3, #5
 8002c4e:	d82f      	bhi.n	8002cb0 <ConfigStore::Flash()+0x70>
 8002c50:	e8df f003 	tbb	[pc, r3]
 8002c54:	2c140b03 			; <UNDEFINED> instruction: 0x2c140b03
 8002c58:	4b1f2e23 	blmi	87ce4ec <_sidata+0x7c8e3c>
 8002c5c:	681a      	ldr	r2, [r3, #0]
 8002c5e:	4b1f      	ldr	r3, [pc, #124]	; (8002cdc <ConfigStore::Flash()+0x9c>)
 8002c60:	601a      	str	r2, [r3, #0]
 8002c62:	2302      	movs	r3, #2
 8002c64:	6023      	str	r3, [r4, #0]
 8002c66:	2001      	movs	r0, #1
 8002c68:	e02f      	b.n	8002cca <ConfigStore::Flash()+0x8a>
 8002c6a:	4b1b      	ldr	r3, [pc, #108]	; (8002cd8 <ConfigStore::Flash()+0x98>)
 8002c6c:	4a1b      	ldr	r2, [pc, #108]	; (8002cdc <ConfigStore::Flash()+0x9c>)
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	6812      	ldr	r2, [r2, #0]
 8002c72:	1a9b      	subs	r3, r3, r2
 8002c74:	2b63      	cmp	r3, #99	; 0x63
 8002c76:	d9f6      	bls.n	8002c66 <ConfigStore::Flash()+0x26>
 8002c78:	2303      	movs	r3, #3
 8002c7a:	e7f3      	b.n	8002c64 <ConfigStore::Flash()+0x24>
 8002c7c:	4918      	ldr	r1, [pc, #96]	; (8002ce0 <ConfigStore::Flash()+0xa0>)
 8002c7e:	ab03      	add	r3, sp, #12
 8002c80:	6809      	ldr	r1, [r1, #0]
 8002c82:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002c86:	f000 f847 	bl	8002d18 <StoreDevice::Erase(unsigned long, unsigned long, storedevice::result&)>
 8002c8a:	2800      	cmp	r0, #0
 8002c8c:	d0eb      	beq.n	8002c66 <ConfigStore::Flash()+0x26>
 8002c8e:	4b12      	ldr	r3, [pc, #72]	; (8002cd8 <ConfigStore::Flash()+0x98>)
 8002c90:	681a      	ldr	r2, [r3, #0]
 8002c92:	4b12      	ldr	r3, [pc, #72]	; (8002cdc <ConfigStore::Flash()+0x9c>)
 8002c94:	601a      	str	r2, [r3, #0]
 8002c96:	2305      	movs	r3, #5
 8002c98:	e7e4      	b.n	8002c64 <ConfigStore::Flash()+0x24>
 8002c9a:	4b0f      	ldr	r3, [pc, #60]	; (8002cd8 <ConfigStore::Flash()+0x98>)
 8002c9c:	4a0f      	ldr	r2, [pc, #60]	; (8002cdc <ConfigStore::Flash()+0x9c>)
 8002c9e:	681b      	ldr	r3, [r3, #0]
 8002ca0:	6812      	ldr	r2, [r2, #0]
 8002ca2:	1a9b      	subs	r3, r3, r2
 8002ca4:	2b63      	cmp	r3, #99	; 0x63
 8002ca6:	d9de      	bls.n	8002c66 <ConfigStore::Flash()+0x26>
 8002ca8:	2304      	movs	r3, #4
 8002caa:	e7db      	b.n	8002c64 <ConfigStore::Flash()+0x24>
 8002cac:	2306      	movs	r3, #6
 8002cae:	e7d9      	b.n	8002c64 <ConfigStore::Flash()+0x24>
 8002cb0:	ab03      	add	r3, sp, #12
 8002cb2:	4a0c      	ldr	r2, [pc, #48]	; (8002ce4 <ConfigStore::Flash()+0xa4>)
 8002cb4:	490a      	ldr	r1, [pc, #40]	; (8002ce0 <ConfigStore::Flash()+0xa0>)
 8002cb6:	9300      	str	r3, [sp, #0]
 8002cb8:	6812      	ldr	r2, [r2, #0]
 8002cba:	4b0b      	ldr	r3, [pc, #44]	; (8002ce8 <ConfigStore::Flash()+0xa8>)
 8002cbc:	6809      	ldr	r1, [r1, #0]
 8002cbe:	f000 f834 	bl	8002d2a <StoreDevice::Write(unsigned long, unsigned long, unsigned char const*, storedevice::result&)>
 8002cc2:	2800      	cmp	r0, #0
 8002cc4:	d0cf      	beq.n	8002c66 <ConfigStore::Flash()+0x26>
 8002cc6:	2000      	movs	r0, #0
 8002cc8:	6020      	str	r0, [r4, #0]
 8002cca:	b004      	add	sp, #16
 8002ccc:	bd10      	pop	{r4, pc}
 8002cce:	4618      	mov	r0, r3
 8002cd0:	e7fb      	b.n	8002cca <ConfigStore::Flash()+0x8a>
 8002cd2:	bf00      	nop
 8002cd4:	200026e8 	andcs	r2, r0, r8, ror #13
 8002cd8:	200027b4 			; <UNDEFINED> instruction: 0x200027b4
 8002cdc:	200016d8 	ldrdcs	r1, [r0], -r8
 8002ce0:	200026dc 	ldrdcs	r2, [r0], -ip
 8002ce4:	200026e4 	andcs	r2, r0, r4, ror #13
 8002ce8:	200016dc 	ldrdcs	r1, [r0], -ip

08002cec <StoreDevice::StoreDevice()>:
 8002cec:	b510      	push	{r4, lr}
 8002cee:	4604      	mov	r4, r0
 8002cf0:	f000 f8be 	bl	8002e70 <FlashCode::FlashCode()>
 8002cf4:	7823      	ldrb	r3, [r4, #0]
 8002cf6:	7063      	strb	r3, [r4, #1]
 8002cf8:	4620      	mov	r0, r4
 8002cfa:	bd10      	pop	{r4, pc}

08002cfc <StoreDevice::GetSize() const>:
 8002cfc:	f000 b8d4 	b.w	8002ea8 <FlashCode::GetSize() const>

08002d00 <StoreDevice::GetSectorSize() const>:
 8002d00:	f000 b8da 	b.w	8002eb8 <FlashCode::GetSectorSize() const>

08002d04 <StoreDevice::Read(unsigned long, unsigned long, unsigned char*, storedevice::result&)>:
 8002d04:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002d06:	ac03      	add	r4, sp, #12
 8002d08:	9400      	str	r4, [sp, #0]
 8002d0a:	f000 f8d8 	bl	8002ebe <FlashCode::Read(unsigned long, unsigned long, unsigned char*, flashcode::result&)>
 8002d0e:	9b06      	ldr	r3, [sp, #24]
 8002d10:	9a03      	ldr	r2, [sp, #12]
 8002d12:	601a      	str	r2, [r3, #0]
 8002d14:	b004      	add	sp, #16
 8002d16:	bd10      	pop	{r4, pc}

08002d18 <StoreDevice::Erase(unsigned long, unsigned long, storedevice::result&)>:
 8002d18:	b513      	push	{r0, r1, r4, lr}
 8002d1a:	461c      	mov	r4, r3
 8002d1c:	ab01      	add	r3, sp, #4
 8002d1e:	f000 f8dd 	bl	8002edc <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)>
 8002d22:	9b01      	ldr	r3, [sp, #4]
 8002d24:	6023      	str	r3, [r4, #0]
 8002d26:	b002      	add	sp, #8
 8002d28:	bd10      	pop	{r4, pc}

08002d2a <StoreDevice::Write(unsigned long, unsigned long, unsigned char const*, storedevice::result&)>:
 8002d2a:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002d2c:	ac03      	add	r4, sp, #12
 8002d2e:	9400      	str	r4, [sp, #0]
 8002d30:	f000 f974 	bl	800301c <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)>
 8002d34:	9b06      	ldr	r3, [sp, #24]
 8002d36:	9a03      	ldr	r2, [sp, #12]
 8002d38:	601a      	str	r2, [r3, #0]
 8002d3a:	b004      	add	sp, #16
 8002d3c:	bd10      	pop	{r4, pc}

08002d3e <StoreRDMDevice::~StoreRDMDevice()>:
 8002d3e:	4770      	bx	lr

08002d40 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8002d40:	3804      	subs	r0, #4
 8002d42:	4770      	bx	lr

08002d44 <StoreRDMDevice::Update(rdm::deviceparams::Params const*)>:
 8002d44:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002d46:	2200      	movs	r2, #0
 8002d48:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8002d4c:	460b      	mov	r3, r1
 8002d4e:	4805      	ldr	r0, [pc, #20]	; (8002d64 <StoreRDMDevice::Update(rdm::deviceparams::Params const*)+0x20>)
 8002d50:	2129      	movs	r1, #41	; 0x29
 8002d52:	9100      	str	r1, [sp, #0]
 8002d54:	6800      	ldr	r0, [r0, #0]
 8002d56:	2109      	movs	r1, #9
 8002d58:	f7ff ff18 	bl	8002b8c <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8002d5c:	b005      	add	sp, #20
 8002d5e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002d62:	bf00      	nop
 8002d64:	200026ec 	andcs	r2, r0, ip, ror #13

08002d68 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8002d68:	b570      	push	{r4, r5, r6, lr}
 8002d6a:	4d0d      	ldr	r5, [pc, #52]	; (8002da0 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 8002d6c:	b086      	sub	sp, #24
 8002d6e:	2401      	movs	r4, #1
 8002d70:	2600      	movs	r6, #0
 8002d72:	6828      	ldr	r0, [r5, #0]
 8002d74:	f88d 2017 	strb.w	r2, [sp, #23]
 8002d78:	460b      	mov	r3, r1
 8002d7a:	9200      	str	r2, [sp, #0]
 8002d7c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002d80:	2204      	movs	r2, #4
 8002d82:	2109      	movs	r1, #9
 8002d84:	f7ff ff02 	bl	8002b8c <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8002d88:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8002d8c:	6828      	ldr	r0, [r5, #0]
 8002d8e:	9400      	str	r4, [sp, #0]
 8002d90:	f10d 0317 	add.w	r3, sp, #23
 8002d94:	2224      	movs	r2, #36	; 0x24
 8002d96:	2109      	movs	r1, #9
 8002d98:	f7ff fef8 	bl	8002b8c <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8002d9c:	b006      	add	sp, #24
 8002d9e:	bd70      	pop	{r4, r5, r6, pc}
 8002da0:	200026ec 	andcs	r2, r0, ip, ror #13

08002da4 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8002da4:	f1a0 0004 	sub.w	r0, r0, #4
 8002da8:	e7de      	b.n	8002d68 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 8002daa:	bf00      	nop

08002dac <StoreRDMDevice::~StoreRDMDevice()>:
 8002dac:	b510      	push	{r4, lr}
 8002dae:	4604      	mov	r4, r0
 8002db0:	f000 fd4a 	bl	8003848 <operator delete(void*)>
 8002db4:	4620      	mov	r0, r4
 8002db6:	bd10      	pop	{r4, pc}

08002db8 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8002db8:	f1a0 0004 	sub.w	r0, r0, #4
 8002dbc:	e7f6      	b.n	8002dac <StoreRDMDevice::~StoreRDMDevice()>
	...

08002dc0 <StoreRDMDevice::Copy(rdm::deviceparams::Params*)>:
 8002dc0:	b507      	push	{r0, r1, r2, lr}
 8002dc2:	2300      	movs	r3, #0
 8002dc4:	4805      	ldr	r0, [pc, #20]	; (8002ddc <StoreRDMDevice::Copy(rdm::deviceparams::Params*)+0x1c>)
 8002dc6:	9300      	str	r3, [sp, #0]
 8002dc8:	460a      	mov	r2, r1
 8002dca:	6800      	ldr	r0, [r0, #0]
 8002dcc:	2329      	movs	r3, #41	; 0x29
 8002dce:	2109      	movs	r1, #9
 8002dd0:	f7ff ff0a 	bl	8002be8 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long)>
 8002dd4:	b003      	add	sp, #12
 8002dd6:	f85d fb04 	ldr.w	pc, [sp], #4
 8002dda:	bf00      	nop
 8002ddc:	200026ec 	andcs	r2, r0, ip, ror #13

08002de0 <StoreRDMDevice::StoreRDMDevice()>:
 8002de0:	4a03      	ldr	r2, [pc, #12]	; (8002df0 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 8002de2:	6002      	str	r2, [r0, #0]
 8002de4:	321c      	adds	r2, #28
 8002de6:	6042      	str	r2, [r0, #4]
 8002de8:	4a02      	ldr	r2, [pc, #8]	; (8002df4 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 8002dea:	6010      	str	r0, [r2, #0]
 8002dec:	4770      	bx	lr
 8002dee:	bf00      	nop
 8002df0:	0800527c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, ip, lr}
 8002df4:	200026f0 	strdcs	r2, [r0], -r0

08002df8 <StoreWidget::~StoreWidget()>:
 8002df8:	4770      	bx	lr

08002dfa <non-virtual thunk to StoreWidget::~StoreWidget()>:
 8002dfa:	3804      	subs	r0, #4
 8002dfc:	4770      	bx	lr
	...

08002e00 <StoreWidget::Update(TWidgetParams const*)>:
 8002e00:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8002e02:	2200      	movs	r2, #0
 8002e04:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8002e08:	460b      	mov	r3, r1
 8002e0a:	4805      	ldr	r0, [pc, #20]	; (8002e20 <StoreWidget::Update(TWidgetParams const*)+0x20>)
 8002e0c:	210c      	movs	r1, #12
 8002e0e:	9100      	str	r1, [sp, #0]
 8002e10:	6800      	ldr	r0, [r0, #0]
 8002e12:	2108      	movs	r1, #8
 8002e14:	f7ff feba 	bl	8002b8c <ConfigStore::Update(configstore::Store, unsigned long, void const*, unsigned long, unsigned long, unsigned long)>
 8002e18:	b005      	add	sp, #20
 8002e1a:	f85d fb04 	ldr.w	pc, [sp], #4
 8002e1e:	bf00      	nop
 8002e20:	200026ec 	andcs	r2, r0, ip, ror #13

08002e24 <StoreWidget::~StoreWidget()>:
 8002e24:	b510      	push	{r4, lr}
 8002e26:	4604      	mov	r4, r0
 8002e28:	f000 fd0e 	bl	8003848 <operator delete(void*)>
 8002e2c:	4620      	mov	r0, r4
 8002e2e:	bd10      	pop	{r4, pc}

08002e30 <non-virtual thunk to StoreWidget::~StoreWidget()>:
 8002e30:	f1a0 0004 	sub.w	r0, r0, #4
 8002e34:	e7f6      	b.n	8002e24 <StoreWidget::~StoreWidget()>
	...

08002e38 <StoreWidget::Copy(TWidgetParams*)>:
 8002e38:	b507      	push	{r0, r1, r2, lr}
 8002e3a:	2300      	movs	r3, #0
 8002e3c:	4805      	ldr	r0, [pc, #20]	; (8002e54 <StoreWidget::Copy(TWidgetParams*)+0x1c>)
 8002e3e:	9300      	str	r3, [sp, #0]
 8002e40:	460a      	mov	r2, r1
 8002e42:	6800      	ldr	r0, [r0, #0]
 8002e44:	230c      	movs	r3, #12
 8002e46:	2108      	movs	r1, #8
 8002e48:	f7ff fece 	bl	8002be8 <ConfigStore::Copy(configstore::Store, void*, unsigned long, unsigned long)>
 8002e4c:	b003      	add	sp, #12
 8002e4e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002e52:	bf00      	nop
 8002e54:	200026ec 	andcs	r2, r0, ip, ror #13

08002e58 <StoreWidget::StoreWidget()>:
 8002e58:	4a03      	ldr	r2, [pc, #12]	; (8002e68 <StoreWidget::StoreWidget()+0x10>)
 8002e5a:	6002      	str	r2, [r0, #0]
 8002e5c:	3224      	adds	r2, #36	; 0x24
 8002e5e:	6042      	str	r2, [r0, #4]
 8002e60:	4a02      	ldr	r2, [pc, #8]	; (8002e6c <StoreWidget::StoreWidget()+0x14>)
 8002e62:	6010      	str	r0, [r2, #0]
 8002e64:	4770      	bx	lr
 8002e66:	bf00      	nop
 8002e68:	080052ac 	stmdaeq	r0, {r2, r3, r5, r7, r9, ip, lr}
 8002e6c:	200026f4 	strdcs	r2, [r0], -r4

08002e70 <FlashCode::FlashCode()>:
 8002e70:	4b0a      	ldr	r3, [pc, #40]	; (8002e9c <FlashCode::FlashCode()+0x2c>)
 8002e72:	b513      	push	{r0, r1, r4, lr}
 8002e74:	6018      	str	r0, [r3, #0]
 8002e76:	2301      	movs	r3, #1
 8002e78:	7003      	strb	r3, [r0, #0]
 8002e7a:	4604      	mov	r4, r0
 8002e7c:	f000 f814 	bl	8002ea8 <FlashCode::GetSize() const>
 8002e80:	9001      	str	r0, [sp, #4]
 8002e82:	4620      	mov	r0, r4
 8002e84:	f000 f810 	bl	8002ea8 <FlashCode::GetSize() const>
 8002e88:	9a01      	ldr	r2, [sp, #4]
 8002e8a:	4905      	ldr	r1, [pc, #20]	; (8002ea0 <FlashCode::FlashCode()+0x30>)
 8002e8c:	0a83      	lsrs	r3, r0, #10
 8002e8e:	4805      	ldr	r0, [pc, #20]	; (8002ea4 <FlashCode::FlashCode()+0x34>)
 8002e90:	f7fd fdf2 	bl	8000a78 <printf>
 8002e94:	4620      	mov	r0, r4
 8002e96:	b002      	add	sp, #8
 8002e98:	bd10      	pop	{r4, pc}
 8002e9a:	bf00      	nop
 8002e9c:	200026f8 	strdcs	r2, [r0], -r8
 8002ea0:	08004e64 	stmdaeq	r0, {r2, r5, r6, r9, sl, fp, lr}
 8002ea4:	080052e4 	stmdaeq	r0, {r2, r5, r6, r7, r9, ip, lr}

08002ea8 <FlashCode::GetSize() const>:
 8002ea8:	4b02      	ldr	r3, [pc, #8]	; (8002eb4 <FlashCode::GetSize() const+0xc>)
 8002eaa:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 8002eae:	0280      	lsls	r0, r0, #10
 8002eb0:	4770      	bx	lr
 8002eb2:	bf00      	nop
 8002eb4:	1ffff700 	svcne	0x00fff700

08002eb8 <FlashCode::GetSectorSize() const>:
 8002eb8:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8002ebc:	4770      	bx	lr

08002ebe <FlashCode::Read(unsigned long, unsigned long, unsigned char*, flashcode::result&)>:
 8002ebe:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8002ec2:	441a      	add	r2, r3
 8002ec4:	4293      	cmp	r3, r2
 8002ec6:	d104      	bne.n	8002ed2 <FlashCode::Read(unsigned long, unsigned long, unsigned char*, flashcode::result&)+0x14>
 8002ec8:	9b00      	ldr	r3, [sp, #0]
 8002eca:	2200      	movs	r2, #0
 8002ecc:	601a      	str	r2, [r3, #0]
 8002ece:	2001      	movs	r0, #1
 8002ed0:	4770      	bx	lr
 8002ed2:	f851 0b04 	ldr.w	r0, [r1], #4
 8002ed6:	f843 0b04 	str.w	r0, [r3], #4
 8002eda:	e7f3      	b.n	8002ec4 <FlashCode::Read(unsigned long, unsigned long, unsigned char*, flashcode::result&)+0x6>

08002edc <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)>:
 8002edc:	b538      	push	{r3, r4, r5, lr}
 8002ede:	4c48      	ldr	r4, [pc, #288]	; (8003000 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x124>)
 8002ee0:	2000      	movs	r0, #0
 8002ee2:	6018      	str	r0, [r3, #0]
 8002ee4:	6823      	ldr	r3, [r4, #0]
 8002ee6:	2b04      	cmp	r3, #4
 8002ee8:	f200 8082 	bhi.w	8002ff0 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x114>
 8002eec:	e8df f003 	tbb	[pc, r3]
 8002ef0:	78452003 	stmdavc	r5, {r0, r1, sp}^
 8002ef4:	4b430080 	blmi	90c30fc <_sidata+0x10bda4c>
 8002ef8:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8002efc:	6019      	str	r1, [r3, #0]
 8002efe:	4b42      	ldr	r3, [pc, #264]	; (8003008 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x12c>)
 8002f00:	601a      	str	r2, [r3, #0]
 8002f02:	4b42      	ldr	r3, [pc, #264]	; (800300c <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x130>)
 8002f04:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8002f08:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002f0c:	4b40      	ldr	r3, [pc, #256]	; (8003010 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x134>)
 8002f0e:	d807      	bhi.n	8002f20 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x44>
 8002f10:	2201      	movs	r2, #1
 8002f12:	701a      	strb	r2, [r3, #0]
 8002f14:	f000 ff68 	bl	8003de8 <fmc_bank0_unlock>
 8002f18:	2301      	movs	r3, #1
 8002f1a:	6023      	str	r3, [r4, #0]
 8002f1c:	2000      	movs	r0, #0
 8002f1e:	e026      	b.n	8002f6e <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x92>
 8002f20:	4a3c      	ldr	r2, [pc, #240]	; (8003014 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x138>)
 8002f22:	4291      	cmp	r1, r2
 8002f24:	d3f4      	bcc.n	8002f10 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x34>
 8002f26:	2200      	movs	r2, #0
 8002f28:	701a      	strb	r2, [r3, #0]
 8002f2a:	f000 ff6b 	bl	8003e04 <fmc_bank1_unlock>
 8002f2e:	e7f3      	b.n	8002f18 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x3c>
 8002f30:	4d37      	ldr	r5, [pc, #220]	; (8003010 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x134>)
 8002f32:	782b      	ldrb	r3, [r5, #0]
 8002f34:	b15b      	cbz	r3, 8002f4e <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x72>
 8002f36:	f000 ff83 	bl	8003e40 <fmc_bank0_state_get>
 8002f3a:	2801      	cmp	r0, #1
 8002f3c:	d0ee      	beq.n	8002f1c <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x40>
 8002f3e:	7829      	ldrb	r1, [r5, #0]
 8002f40:	4b35      	ldr	r3, [pc, #212]	; (8003018 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x13c>)
 8002f42:	b939      	cbnz	r1, 8002f54 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x78>
 8002f44:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002f46:	f022 0202 	bic.w	r2, r2, #2
 8002f4a:	651a      	str	r2, [r3, #80]	; 0x50
 8002f4c:	e006      	b.n	8002f5c <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x80>
 8002f4e:	f000 ff89 	bl	8003e64 <fmc_bank1_state_get>
 8002f52:	e7f2      	b.n	8002f3a <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x5e>
 8002f54:	691a      	ldr	r2, [r3, #16]
 8002f56:	f022 0202 	bic.w	r2, r2, #2
 8002f5a:	611a      	str	r2, [r3, #16]
 8002f5c:	4b2a      	ldr	r3, [pc, #168]	; (8003008 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x12c>)
 8002f5e:	681b      	ldr	r3, [r3, #0]
 8002f60:	b94b      	cbnz	r3, 8002f76 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x9a>
 8002f62:	b129      	cbz	r1, 8002f70 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x94>
 8002f64:	f000 ff5c 	bl	8003e20 <fmc_bank0_lock>
 8002f68:	2300      	movs	r3, #0
 8002f6a:	6023      	str	r3, [r4, #0]
 8002f6c:	2001      	movs	r0, #1
 8002f6e:	bd38      	pop	{r3, r4, r5, pc}
 8002f70:	f000 ff5e 	bl	8003e30 <fmc_bank1_lock>
 8002f74:	e7f8      	b.n	8002f68 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x8c>
 8002f76:	2302      	movs	r3, #2
 8002f78:	e7cf      	b.n	8002f1a <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x3e>
 8002f7a:	4923      	ldr	r1, [pc, #140]	; (8003008 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x12c>)
 8002f7c:	680b      	ldr	r3, [r1, #0]
 8002f7e:	2b00      	cmp	r3, #0
 8002f80:	d0ca      	beq.n	8002f18 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x3c>
 8002f82:	4b23      	ldr	r3, [pc, #140]	; (8003010 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x134>)
 8002f84:	4a1f      	ldr	r2, [pc, #124]	; (8003004 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x128>)
 8002f86:	7818      	ldrb	r0, [r3, #0]
 8002f88:	4b23      	ldr	r3, [pc, #140]	; (8003018 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x13c>)
 8002f8a:	b190      	cbz	r0, 8002fb2 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0xd6>
 8002f8c:	6918      	ldr	r0, [r3, #16]
 8002f8e:	f040 0002 	orr.w	r0, r0, #2
 8002f92:	6118      	str	r0, [r3, #16]
 8002f94:	6810      	ldr	r0, [r2, #0]
 8002f96:	6158      	str	r0, [r3, #20]
 8002f98:	6918      	ldr	r0, [r3, #16]
 8002f9a:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 8002f9e:	6118      	str	r0, [r3, #16]
 8002fa0:	680b      	ldr	r3, [r1, #0]
 8002fa2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8002fa6:	600b      	str	r3, [r1, #0]
 8002fa8:	6813      	ldr	r3, [r2, #0]
 8002faa:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8002fae:	6013      	str	r3, [r2, #0]
 8002fb0:	e7b2      	b.n	8002f18 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x3c>
 8002fb2:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8002fb4:	f040 0002 	orr.w	r0, r0, #2
 8002fb8:	6518      	str	r0, [r3, #80]	; 0x50
 8002fba:	6810      	ldr	r0, [r2, #0]
 8002fbc:	6558      	str	r0, [r3, #84]	; 0x54
 8002fbe:	69dd      	ldr	r5, [r3, #28]
 8002fc0:	07ad      	lsls	r5, r5, #30
 8002fc2:	bf48      	it	mi
 8002fc4:	6158      	strmi	r0, [r3, #20]
 8002fc6:	4814      	ldr	r0, [pc, #80]	; (8003018 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x13c>)
 8002fc8:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8002fca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002fce:	6503      	str	r3, [r0, #80]	; 0x50
 8002fd0:	680b      	ldr	r3, [r1, #0]
 8002fd2:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8002fd6:	600b      	str	r3, [r1, #0]
 8002fd8:	6813      	ldr	r3, [r2, #0]
 8002fda:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002fde:	e7e6      	b.n	8002fae <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0xd2>
 8002fe0:	4b0b      	ldr	r3, [pc, #44]	; (8003010 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x134>)
 8002fe2:	781a      	ldrb	r2, [r3, #0]
 8002fe4:	4b0c      	ldr	r3, [pc, #48]	; (8003018 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x13c>)
 8002fe6:	b132      	cbz	r2, 8002ff6 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x11a>
 8002fe8:	691a      	ldr	r2, [r3, #16]
 8002fea:	f022 0201 	bic.w	r2, r2, #1
 8002fee:	611a      	str	r2, [r3, #16]
 8002ff0:	2000      	movs	r0, #0
 8002ff2:	6020      	str	r0, [r4, #0]
 8002ff4:	e7bb      	b.n	8002f6e <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x92>
 8002ff6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002ff8:	f022 0201 	bic.w	r2, r2, #1
 8002ffc:	651a      	str	r2, [r3, #80]	; 0x50
 8002ffe:	e7f7      	b.n	8002ff0 <FlashCode::Erase(unsigned long, unsigned long, flashcode::result&)+0x114>
 8003000:	20002700 	andcs	r2, r0, r0, lsl #14
 8003004:	20002704 	andcs	r2, r0, r4, lsl #14
 8003008:	20002710 	andcs	r2, r0, r0, lsl r7
 800300c:	1ffff700 	svcne	0x00fff700
 8003010:	2000270c 	andcs	r2, r0, ip, lsl #14
 8003014:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8003018:	40022000 	andmi	r2, r2, r0

0800301c <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)>:
 800301c:	b570      	push	{r4, r5, r6, lr}
 800301e:	9804      	ldr	r0, [sp, #16]
 8003020:	2400      	movs	r4, #0
 8003022:	6004      	str	r4, [r0, #0]
 8003024:	4c48      	ldr	r4, [pc, #288]	; (8003148 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x12c>)
 8003026:	6820      	ldr	r0, [r4, #0]
 8003028:	2804      	cmp	r0, #4
 800302a:	d848      	bhi.n	80030be <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0xa2>
 800302c:	e8df f000 	tbb	[pc, r0]
 8003030:	22847c03 	addcs	r7, r4, #768	; 0x300
 8003034:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 8003038:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800303c:	6001      	str	r1, [r0, #0]
 800303e:	4844      	ldr	r0, [pc, #272]	; (8003150 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x134>)
 8003040:	6003      	str	r3, [r0, #0]
 8003042:	4b44      	ldr	r3, [pc, #272]	; (8003154 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x138>)
 8003044:	601a      	str	r2, [r3, #0]
 8003046:	4b44      	ldr	r3, [pc, #272]	; (8003158 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x13c>)
 8003048:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800304c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003050:	4b42      	ldr	r3, [pc, #264]	; (800315c <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x140>)
 8003052:	d807      	bhi.n	8003064 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x48>
 8003054:	2201      	movs	r2, #1
 8003056:	701a      	strb	r2, [r3, #0]
 8003058:	f000 fec6 	bl	8003de8 <fmc_bank0_unlock>
 800305c:	2303      	movs	r3, #3
 800305e:	6023      	str	r3, [r4, #0]
 8003060:	2000      	movs	r0, #0
 8003062:	e026      	b.n	80030b2 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x96>
 8003064:	4a3e      	ldr	r2, [pc, #248]	; (8003160 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x144>)
 8003066:	4291      	cmp	r1, r2
 8003068:	d3f4      	bcc.n	8003054 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x38>
 800306a:	2200      	movs	r2, #0
 800306c:	701a      	strb	r2, [r3, #0]
 800306e:	f000 fec9 	bl	8003e04 <fmc_bank1_unlock>
 8003072:	e7f3      	b.n	800305c <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x40>
 8003074:	4d39      	ldr	r5, [pc, #228]	; (800315c <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x140>)
 8003076:	782b      	ldrb	r3, [r5, #0]
 8003078:	b15b      	cbz	r3, 8003092 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x76>
 800307a:	f000 fee1 	bl	8003e40 <fmc_bank0_state_get>
 800307e:	2801      	cmp	r0, #1
 8003080:	d0ee      	beq.n	8003060 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x44>
 8003082:	7829      	ldrb	r1, [r5, #0]
 8003084:	4b37      	ldr	r3, [pc, #220]	; (8003164 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x148>)
 8003086:	b939      	cbnz	r1, 8003098 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x7c>
 8003088:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800308a:	f022 0201 	bic.w	r2, r2, #1
 800308e:	651a      	str	r2, [r3, #80]	; 0x50
 8003090:	e006      	b.n	80030a0 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x84>
 8003092:	f000 fee7 	bl	8003e64 <fmc_bank1_state_get>
 8003096:	e7f2      	b.n	800307e <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x62>
 8003098:	691a      	ldr	r2, [r3, #16]
 800309a:	f022 0201 	bic.w	r2, r2, #1
 800309e:	611a      	str	r2, [r3, #16]
 80030a0:	4b2c      	ldr	r3, [pc, #176]	; (8003154 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x138>)
 80030a2:	681b      	ldr	r3, [r3, #0]
 80030a4:	b94b      	cbnz	r3, 80030ba <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x9e>
 80030a6:	b129      	cbz	r1, 80030b4 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x98>
 80030a8:	f000 feba 	bl	8003e20 <fmc_bank0_lock>
 80030ac:	2300      	movs	r3, #0
 80030ae:	6023      	str	r3, [r4, #0]
 80030b0:	2001      	movs	r0, #1
 80030b2:	bd70      	pop	{r4, r5, r6, pc}
 80030b4:	f000 febc 	bl	8003e30 <fmc_bank1_lock>
 80030b8:	e7f8      	b.n	80030ac <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x90>
 80030ba:	2304      	movs	r3, #4
 80030bc:	e7cf      	b.n	800305e <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x42>
 80030be:	4a25      	ldr	r2, [pc, #148]	; (8003154 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x138>)
 80030c0:	6813      	ldr	r3, [r2, #0]
 80030c2:	2b03      	cmp	r3, #3
 80030c4:	d91a      	bls.n	80030fc <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0xe0>
 80030c6:	4b25      	ldr	r3, [pc, #148]	; (800315c <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x140>)
 80030c8:	7819      	ldrb	r1, [r3, #0]
 80030ca:	4b26      	ldr	r3, [pc, #152]	; (8003164 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x148>)
 80030cc:	b189      	cbz	r1, 80030f2 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0xd6>
 80030ce:	6919      	ldr	r1, [r3, #16]
 80030d0:	f041 0101 	orr.w	r1, r1, #1
 80030d4:	6119      	str	r1, [r3, #16]
 80030d6:	4d1e      	ldr	r5, [pc, #120]	; (8003150 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x134>)
 80030d8:	481c      	ldr	r0, [pc, #112]	; (800314c <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x130>)
 80030da:	6829      	ldr	r1, [r5, #0]
 80030dc:	6803      	ldr	r3, [r0, #0]
 80030de:	f851 6b04 	ldr.w	r6, [r1], #4
 80030e2:	f843 6b04 	str.w	r6, [r3], #4
 80030e6:	6003      	str	r3, [r0, #0]
 80030e8:	6813      	ldr	r3, [r2, #0]
 80030ea:	6029      	str	r1, [r5, #0]
 80030ec:	3b04      	subs	r3, #4
 80030ee:	6013      	str	r3, [r2, #0]
 80030f0:	e7b4      	b.n	800305c <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x40>
 80030f2:	6d19      	ldr	r1, [r3, #80]	; 0x50
 80030f4:	f041 0101 	orr.w	r1, r1, #1
 80030f8:	6519      	str	r1, [r3, #80]	; 0x50
 80030fa:	e7ec      	b.n	80030d6 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0xba>
 80030fc:	2b00      	cmp	r3, #0
 80030fe:	d0ad      	beq.n	800305c <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x40>
 8003100:	4b16      	ldr	r3, [pc, #88]	; (800315c <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x140>)
 8003102:	781a      	ldrb	r2, [r3, #0]
 8003104:	4b17      	ldr	r3, [pc, #92]	; (8003164 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x148>)
 8003106:	b152      	cbz	r2, 800311e <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x102>
 8003108:	691a      	ldr	r2, [r3, #16]
 800310a:	f042 0201 	orr.w	r2, r2, #1
 800310e:	611a      	str	r2, [r3, #16]
 8003110:	4a0f      	ldr	r2, [pc, #60]	; (8003150 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x134>)
 8003112:	4b0e      	ldr	r3, [pc, #56]	; (800314c <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x130>)
 8003114:	6812      	ldr	r2, [r2, #0]
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	6812      	ldr	r2, [r2, #0]
 800311a:	601a      	str	r2, [r3, #0]
 800311c:	e79e      	b.n	800305c <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x40>
 800311e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003120:	f042 0201 	orr.w	r2, r2, #1
 8003124:	651a      	str	r2, [r3, #80]	; 0x50
 8003126:	e7f3      	b.n	8003110 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0xf4>
 8003128:	4b0c      	ldr	r3, [pc, #48]	; (800315c <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x140>)
 800312a:	781a      	ldrb	r2, [r3, #0]
 800312c:	4b0d      	ldr	r3, [pc, #52]	; (8003164 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x148>)
 800312e:	b132      	cbz	r2, 800313e <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x122>
 8003130:	691a      	ldr	r2, [r3, #16]
 8003132:	f022 0202 	bic.w	r2, r2, #2
 8003136:	611a      	str	r2, [r3, #16]
 8003138:	2000      	movs	r0, #0
 800313a:	6020      	str	r0, [r4, #0]
 800313c:	e7b9      	b.n	80030b2 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x96>
 800313e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003140:	f022 0202 	bic.w	r2, r2, #2
 8003144:	651a      	str	r2, [r3, #80]	; 0x50
 8003146:	e7f7      	b.n	8003138 <FlashCode::Write(unsigned long, unsigned long, unsigned char const*, flashcode::result&)+0x11c>
 8003148:	20002700 	andcs	r2, r0, r0, lsl #14
 800314c:	200026fc 	strdcs	r2, [r0], -ip
 8003150:	20002708 	andcs	r2, r0, r8, lsl #14
 8003154:	20002710 	andcs	r2, r0, r0, lsl r7
 8003158:	1ffff700 	svcne	0x00fff700
 800315c:	2000270c 	andcs	r2, r0, ip, lsl #14
 8003160:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8003164:	40022000 	andmi	r2, r2, r0

08003168 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8003168:	e9c0 1200 	strd	r1, r2, [r0]
 800316c:	4770      	bx	lr

0800316e <ReadConfigFile::~ReadConfigFile()>:
 800316e:	4770      	bx	lr

08003170 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8003170:	b538      	push	{r3, r4, r5, lr}
 8003172:	4614      	mov	r4, r2
 8003174:	f000 f81a 	bl	80031ac <Sscan::checkName(char const*, char const*)>
 8003178:	b1a0      	cbz	r0, 80031a4 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x34>
 800317a:	2100      	movs	r1, #0
 800317c:	220a      	movs	r2, #10
 800317e:	7803      	ldrb	r3, [r0, #0]
 8003180:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
 8003184:	2d09      	cmp	r5, #9
 8003186:	d80f      	bhi.n	80031a8 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 8003188:	fb02 3101 	mla	r1, r2, r1, r3
 800318c:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8003190:	f013 03df 	ands.w	r3, r3, #223	; 0xdf
 8003194:	f1a1 0130 	sub.w	r1, r1, #48	; 0x30
 8003198:	d1f1      	bne.n	800317e <Sscan::Uint8(char const*, char const*, unsigned char&)+0xe>
 800319a:	29ff      	cmp	r1, #255	; 0xff
 800319c:	d804      	bhi.n	80031a8 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x38>
 800319e:	7021      	strb	r1, [r4, #0]
 80031a0:	4618      	mov	r0, r3
 80031a2:	bd38      	pop	{r3, r4, r5, pc}
 80031a4:	2301      	movs	r3, #1
 80031a6:	e7fb      	b.n	80031a0 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 80031a8:	2302      	movs	r3, #2
 80031aa:	e7f9      	b.n	80031a0 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

080031ac <Sscan::checkName(char const*, char const*)>:
 80031ac:	b510      	push	{r4, lr}
 80031ae:	3901      	subs	r1, #1
 80031b0:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80031b4:	4604      	mov	r4, r0
 80031b6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80031ba:	b123      	cbz	r3, 80031c6 <Sscan::checkName(char const*, char const*)+0x1a>
 80031bc:	b10a      	cbz	r2, 80031c2 <Sscan::checkName(char const*, char const*)+0x16>
 80031be:	4293      	cmp	r3, r2
 80031c0:	d0f6      	beq.n	80031b0 <Sscan::checkName(char const*, char const*)+0x4>
 80031c2:	2000      	movs	r0, #0
 80031c4:	e006      	b.n	80031d4 <Sscan::checkName(char const*, char const*)+0x28>
 80031c6:	2a3d      	cmp	r2, #61	; 0x3d
 80031c8:	d1fb      	bne.n	80031c2 <Sscan::checkName(char const*, char const*)+0x16>
 80031ca:	7860      	ldrb	r0, [r4, #1]
 80031cc:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 80031d0:	d000      	beq.n	80031d4 <Sscan::checkName(char const*, char const*)+0x28>
 80031d2:	1c60      	adds	r0, r4, #1
 80031d4:	bd10      	pop	{r4, pc}
	...

080031d8 <Display::PrintInfo() [clone .isra.0]>:
 80031d8:	b910      	cbnz	r0, 80031e0 <Display::PrintInfo() [clone .isra.0]+0x8>
 80031da:	4803      	ldr	r0, [pc, #12]	; (80031e8 <Display::PrintInfo() [clone .isra.0]+0x10>)
 80031dc:	f000 bbda 	b.w	8003994 <puts>
 80031e0:	6803      	ldr	r3, [r0, #0]
 80031e2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80031e4:	4718      	bx	r3
 80031e6:	bf00      	nop
 80031e8:	08005312 	stmdaeq	r0, {r1, r4, r8, r9, ip, lr}

080031ec <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 80031ec:	b513      	push	{r0, r1, r4, lr}
 80031ee:	4604      	mov	r4, r0
 80031f0:	0a13      	lsrs	r3, r2, #8
 80031f2:	7800      	ldrb	r0, [r0, #0]
 80031f4:	f88d 1004 	strb.w	r1, [sp, #4]
 80031f8:	f88d 3005 	strb.w	r3, [sp, #5]
 80031fc:	f88d 2006 	strb.w	r2, [sp, #6]
 8003200:	f001 fa40 	bl	8004684 <gd32_i2c_set_address>
 8003204:	6860      	ldr	r0, [r4, #4]
 8003206:	f001 fa35 	bl	8004674 <gd32_i2c_set_baudrate>
 800320a:	2103      	movs	r1, #3
 800320c:	a801      	add	r0, sp, #4
 800320e:	f001 fa3f 	bl	8004690 <gd32_i2c_write>
 8003212:	b002      	add	sp, #8
 8003214:	bd10      	pop	{r4, pc}

08003216 <HAL_I2C::IsConnected_(unsigned char, unsigned long)>:
 8003216:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003218:	460d      	mov	r5, r1
 800321a:	4604      	mov	r4, r0
 800321c:	f001 fa32 	bl	8004684 <gd32_i2c_set_address>
 8003220:	4628      	mov	r0, r5
 8003222:	f001 fa27 	bl	8004674 <gd32_i2c_set_baudrate>
 8003226:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800322a:	2b07      	cmp	r3, #7
 800322c:	d902      	bls.n	8003234 <HAL_I2C::IsConnected_(unsigned char, unsigned long)+0x1e>
 800322e:	3c50      	subs	r4, #80	; 0x50
 8003230:	2c0f      	cmp	r4, #15
 8003232:	d809      	bhi.n	8003248 <HAL_I2C::IsConnected_(unsigned char, unsigned long)+0x32>
 8003234:	2101      	movs	r1, #1
 8003236:	f10d 0007 	add.w	r0, sp, #7
 800323a:	f001 fa8f 	bl	800475c <gd32_i2c_read>
 800323e:	fab0 f080 	clz	r0, r0
 8003242:	0940      	lsrs	r0, r0, #5
 8003244:	b003      	add	sp, #12
 8003246:	bd30      	pop	{r4, r5, pc}
 8003248:	2100      	movs	r1, #0
 800324a:	4608      	mov	r0, r1
 800324c:	f001 fa20 	bl	8004690 <gd32_i2c_write>
 8003250:	e7f5      	b.n	800323e <HAL_I2C::IsConnected_(unsigned char, unsigned long)+0x28>

08003252 <Display::Detect7Segment()>:
 8003252:	b513      	push	{r0, r1, r4, lr}
 8003254:	68c1      	ldr	r1, [r0, #12]
 8003256:	4604      	mov	r4, r0
 8003258:	7a00      	ldrb	r0, [r0, #8]
 800325a:	f7ff ffdc 	bl	8003216 <HAL_I2C::IsConnected_(unsigned char, unsigned long)>
 800325e:	7460      	strb	r0, [r4, #17]
 8003260:	b170      	cbz	r0, 8003280 <Display::Detect7Segment()+0x2e>
 8003262:	2200      	movs	r2, #0
 8003264:	f104 0008 	add.w	r0, r4, #8
 8003268:	4611      	mov	r1, r2
 800326a:	9001      	str	r0, [sp, #4]
 800326c:	f7ff ffbe 	bl	80031ec <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8003270:	7c63      	ldrb	r3, [r4, #17]
 8003272:	9801      	ldr	r0, [sp, #4]
 8003274:	b123      	cbz	r3, 8003280 <Display::Detect7Segment()+0x2e>
 8003276:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 800327a:	2112      	movs	r1, #18
 800327c:	f7ff ffb6 	bl	80031ec <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8003280:	b002      	add	sp, #8
 8003282:	bd10      	pop	{r4, pc}

08003284 <Display::Detect(display::Type)>:
 8003284:	2902      	cmp	r1, #2
 8003286:	b538      	push	{r3, r4, r5, lr}
 8003288:	4604      	mov	r4, r0
 800328a:	d014      	beq.n	80032b6 <Display::Detect(display::Type)+0x32>
 800328c:	2904      	cmp	r1, #4
 800328e:	d01b      	beq.n	80032c8 <Display::Detect(display::Type)+0x44>
 8003290:	69e0      	ldr	r0, [r4, #28]
 8003292:	b168      	cbz	r0, 80032b0 <Display::Detect(display::Type)+0x2c>
 8003294:	6803      	ldr	r3, [r0, #0]
 8003296:	689b      	ldr	r3, [r3, #8]
 8003298:	4798      	blx	r3
 800329a:	69e3      	ldr	r3, [r4, #28]
 800329c:	b9b0      	cbnz	r0, 80032cc <Display::Detect(display::Type)+0x48>
 800329e:	b11b      	cbz	r3, 80032a8 <Display::Detect(display::Type)+0x24>
 80032a0:	681a      	ldr	r2, [r3, #0]
 80032a2:	4618      	mov	r0, r3
 80032a4:	6852      	ldr	r2, [r2, #4]
 80032a6:	4790      	blx	r2
 80032a8:	2300      	movs	r3, #0
 80032aa:	61e3      	str	r3, [r4, #28]
 80032ac:	2304      	movs	r3, #4
 80032ae:	6023      	str	r3, [r4, #0]
 80032b0:	2300      	movs	r3, #0
 80032b2:	6163      	str	r3, [r4, #20]
 80032b4:	e011      	b.n	80032da <Display::Detect(display::Type)+0x56>
 80032b6:	2020      	movs	r0, #32
 80032b8:	f000 fac8 	bl	800384c <operator new(unsigned int)>
 80032bc:	2100      	movs	r1, #0
 80032be:	4605      	mov	r5, r0
 80032c0:	f000 f8be 	bl	8003440 <Ssd1306::Ssd1306(TOledPanel)>
 80032c4:	61e5      	str	r5, [r4, #28]
 80032c6:	e7e3      	b.n	8003290 <Display::Detect(display::Type)+0xc>
 80032c8:	6001      	str	r1, [r0, #0]
 80032ca:	e7e1      	b.n	8003290 <Display::Detect(display::Type)+0xc>
 80032cc:	681a      	ldr	r2, [r3, #0]
 80032ce:	4618      	mov	r0, r3
 80032d0:	68d2      	ldr	r2, [r2, #12]
 80032d2:	4790      	blx	r2
 80032d4:	69e3      	ldr	r3, [r4, #28]
 80032d6:	2b00      	cmp	r3, #0
 80032d8:	d0ea      	beq.n	80032b0 <Display::Detect(display::Type)+0x2c>
 80032da:	bd38      	pop	{r3, r4, r5, pc}

080032dc <Display::Display()>:
 80032dc:	2304      	movs	r3, #4
 80032de:	b510      	push	{r4, lr}
 80032e0:	6003      	str	r3, [r0, #0]
 80032e2:	4b10      	ldr	r3, [pc, #64]	; (8003324 <Display::Display()+0x48>)
 80032e4:	4a10      	ldr	r2, [pc, #64]	; (8003328 <Display::Display()+0x4c>)
 80032e6:	681b      	ldr	r3, [r3, #0]
 80032e8:	6043      	str	r3, [r0, #4]
 80032ea:	2321      	movs	r3, #33	; 0x21
 80032ec:	7203      	strb	r3, [r0, #8]
 80032ee:	4b0f      	ldr	r3, [pc, #60]	; (800332c <Display::Display()+0x50>)
 80032f0:	60c3      	str	r3, [r0, #12]
 80032f2:	2300      	movs	r3, #0
 80032f4:	8203      	strh	r3, [r0, #16]
 80032f6:	6142      	str	r2, [r0, #20]
 80032f8:	61c3      	str	r3, [r0, #28]
 80032fa:	227f      	movs	r2, #127	; 0x7f
 80032fc:	4b0c      	ldr	r3, [pc, #48]	; (8003330 <Display::Display()+0x54>)
 80032fe:	8302      	strh	r2, [r0, #24]
 8003300:	4604      	mov	r4, r0
 8003302:	2102      	movs	r1, #2
 8003304:	6018      	str	r0, [r3, #0]
 8003306:	f7ff ffbd 	bl	8003284 <Display::Detect(display::Type)>
 800330a:	4620      	mov	r0, r4
 800330c:	f7ff ffa1 	bl	8003252 <Display::Detect7Segment()>
 8003310:	69e3      	ldr	r3, [r4, #28]
 8003312:	b10b      	cbz	r3, 8003318 <Display::Display()+0x3c>
 8003314:	f000 fa18 	bl	8003748 <display::timeout::gpio_init()>
 8003318:	69e0      	ldr	r0, [r4, #28]
 800331a:	f7ff ff5d 	bl	80031d8 <Display::PrintInfo() [clone .isra.0]>
 800331e:	4620      	mov	r0, r4
 8003320:	bd10      	pop	{r4, pc}
 8003322:	bf00      	nop
 8003324:	200027b4 			; <UNDEFINED> instruction: 0x200027b4
 8003328:	000493e0 	andeq	r9, r4, r0, ror #7
 800332c:	00061a80 	andeq	r1, r6, r0, lsl #21
 8003330:	20002714 	andcs	r2, r0, r4, lsl r7

08003334 <Ssd1306::~Ssd1306()>:
 8003334:	4770      	bx	lr

08003336 <Ssd1306::SetCursor(unsigned long)>:
 8003336:	4770      	bx	lr

08003338 <Ssd1306::PrintInfo()>:
 8003338:	b410      	push	{r4}
 800333a:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800333e:	7e44      	ldrb	r4, [r0, #25]
 8003340:	4904      	ldr	r1, [pc, #16]	; (8003354 <Ssd1306::PrintInfo()+0x1c>)
 8003342:	4805      	ldr	r0, [pc, #20]	; (8003358 <Ssd1306::PrintInfo()+0x20>)
 8003344:	2c00      	cmp	r4, #0
 8003346:	bf08      	it	eq
 8003348:	4601      	moveq	r1, r0
 800334a:	4804      	ldr	r0, [pc, #16]	; (800335c <Ssd1306::PrintInfo()+0x24>)
 800334c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003350:	f7fd bb92 	b.w	8000a78 <printf>
 8003354:	08005323 	stmdaeq	r0, {r0, r1, r5, r8, r9, ip, lr}
 8003358:	0800532a 	stmdaeq	r0, {r1, r3, r5, r8, r9, ip, lr}
 800335c:	08005332 	stmdaeq	r0, {r1, r4, r5, r8, r9, ip, lr}

08003360 <Ssd1306::~Ssd1306()>:
 8003360:	b510      	push	{r4, lr}
 8003362:	4604      	mov	r4, r0
 8003364:	f000 fa70 	bl	8003848 <operator delete(void*)>
 8003368:	4620      	mov	r0, r4
 800336a:	bd10      	pop	{r4, pc}

0800336c <HAL_I2C::Setup()>:
 800336c:	b510      	push	{r4, lr}
 800336e:	4604      	mov	r4, r0
 8003370:	7800      	ldrb	r0, [r0, #0]
 8003372:	f001 f987 	bl	8004684 <gd32_i2c_set_address>
 8003376:	6860      	ldr	r0, [r4, #4]
 8003378:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800337c:	f001 b97a 	b.w	8004674 <gd32_i2c_set_baudrate>

08003380 <Ssd1306::PutChar(int)>:
 8003380:	b510      	push	{r4, lr}
 8003382:	3920      	subs	r1, #32
 8003384:	295f      	cmp	r1, #95	; 0x5f
 8003386:	f100 0010 	add.w	r0, r0, #16
 800338a:	bf94      	ite	ls
 800338c:	460c      	movls	r4, r1
 800338e:	2400      	movhi	r4, #0
 8003390:	f7ff ffec 	bl	800336c <HAL_I2C::Setup()>
 8003394:	4804      	ldr	r0, [pc, #16]	; (80033a8 <Ssd1306::PutChar(int)+0x28>)
 8003396:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 800339a:	4420      	add	r0, r4
 800339c:	2107      	movs	r1, #7
 800339e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80033a2:	f001 b975 	b.w	8004690 <gd32_i2c_write>
 80033a6:	bf00      	nop
 80033a8:	08005344 	stmdaeq	r0, {r2, r6, r8, r9, ip, lr}

080033ac <Ssd1306::PutString(char const*)>:
 80033ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80033ae:	4604      	mov	r4, r0
 80033b0:	460e      	mov	r6, r1
 80033b2:	460f      	mov	r7, r1
 80033b4:	463d      	mov	r5, r7
 80033b6:	f817 1b01 	ldrb.w	r1, [r7], #1
 80033ba:	b939      	cbnz	r1, 80033cc <Ssd1306::PutString(char const*)+0x20>
 80033bc:	7b23      	ldrb	r3, [r4, #12]
 80033be:	b123      	cbz	r3, 80033ca <Ssd1306::PutString(char const*)+0x1e>
 80033c0:	7321      	strb	r1, [r4, #12]
 80033c2:	1bad      	subs	r5, r5, r6
 80033c4:	6863      	ldr	r3, [r4, #4]
 80033c6:	42ab      	cmp	r3, r5
 80033c8:	d804      	bhi.n	80033d4 <Ssd1306::PutString(char const*)+0x28>
 80033ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80033cc:	4620      	mov	r0, r4
 80033ce:	f7ff ffd7 	bl	8003380 <Ssd1306::PutChar(int)>
 80033d2:	e7ef      	b.n	80033b4 <Ssd1306::PutString(char const*)+0x8>
 80033d4:	2120      	movs	r1, #32
 80033d6:	4620      	mov	r0, r4
 80033d8:	f7ff ffd2 	bl	8003380 <Ssd1306::PutChar(int)>
 80033dc:	3501      	adds	r5, #1
 80033de:	e7f1      	b.n	80033c4 <Ssd1306::PutString(char const*)+0x18>

080033e0 <Ssd1306::Text(char const*, unsigned long)>:
 80033e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80033e2:	6843      	ldr	r3, [r0, #4]
 80033e4:	429a      	cmp	r2, r3
 80033e6:	bf28      	it	cs
 80033e8:	461a      	movcs	r2, r3
 80033ea:	4604      	mov	r4, r0
 80033ec:	4615      	mov	r5, r2
 80033ee:	460e      	mov	r6, r1
 80033f0:	188f      	adds	r7, r1, r2
 80033f2:	42be      	cmp	r6, r7
 80033f4:	d107      	bne.n	8003406 <Ssd1306::Text(char const*, unsigned long)+0x26>
 80033f6:	7b23      	ldrb	r3, [r4, #12]
 80033f8:	b123      	cbz	r3, 8003404 <Ssd1306::Text(char const*, unsigned long)+0x24>
 80033fa:	2300      	movs	r3, #0
 80033fc:	7323      	strb	r3, [r4, #12]
 80033fe:	6863      	ldr	r3, [r4, #4]
 8003400:	42ab      	cmp	r3, r5
 8003402:	d806      	bhi.n	8003412 <Ssd1306::Text(char const*, unsigned long)+0x32>
 8003404:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003406:	f816 1b01 	ldrb.w	r1, [r6], #1
 800340a:	4620      	mov	r0, r4
 800340c:	f7ff ffb8 	bl	8003380 <Ssd1306::PutChar(int)>
 8003410:	e7ef      	b.n	80033f2 <Ssd1306::Text(char const*, unsigned long)+0x12>
 8003412:	2120      	movs	r1, #32
 8003414:	4620      	mov	r0, r4
 8003416:	f7ff ffb3 	bl	8003380 <Ssd1306::PutChar(int)>
 800341a:	3501      	adds	r5, #1
 800341c:	e7ef      	b.n	80033fe <Ssd1306::Text(char const*, unsigned long)+0x1e>

0800341e <Ssd1306::InitMembers()>:
 800341e:	2315      	movs	r3, #21
 8003420:	6043      	str	r3, [r0, #4]
 8003422:	7e03      	ldrb	r3, [r0, #24]
 8003424:	b13b      	cbz	r3, 8003436 <Ssd1306::InitMembers()+0x18>
 8003426:	3b01      	subs	r3, #1
 8003428:	2b01      	cmp	r3, #1
 800342a:	d907      	bls.n	800343c <Ssd1306::InitMembers()+0x1e>
 800342c:	2308      	movs	r3, #8
 800342e:	2204      	movs	r2, #4
 8003430:	6083      	str	r3, [r0, #8]
 8003432:	61c2      	str	r2, [r0, #28]
 8003434:	4770      	bx	lr
 8003436:	2308      	movs	r3, #8
 8003438:	461a      	mov	r2, r3
 800343a:	e7f9      	b.n	8003430 <Ssd1306::InitMembers()+0x12>
 800343c:	2304      	movs	r3, #4
 800343e:	e7fb      	b.n	8003438 <Ssd1306::InitMembers()+0x1a>

08003440 <Ssd1306::Ssd1306(TOledPanel)>:
 8003440:	b510      	push	{r4, lr}
 8003442:	4c07      	ldr	r4, [pc, #28]	; (8003460 <Ssd1306::Ssd1306(TOledPanel)+0x20>)
 8003444:	6004      	str	r4, [r0, #0]
 8003446:	2200      	movs	r2, #0
 8003448:	243c      	movs	r4, #60	; 0x3c
 800344a:	7302      	strb	r2, [r0, #12]
 800344c:	7404      	strb	r4, [r0, #16]
 800344e:	7642      	strb	r2, [r0, #25]
 8003450:	4c04      	ldr	r4, [pc, #16]	; (8003464 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8003452:	4a05      	ldr	r2, [pc, #20]	; (8003468 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8003454:	6144      	str	r4, [r0, #20]
 8003456:	7601      	strb	r1, [r0, #24]
 8003458:	6010      	str	r0, [r2, #0]
 800345a:	f7ff ffe0 	bl	800341e <Ssd1306::InitMembers()>
 800345e:	bd10      	pop	{r4, pc}
 8003460:	0800561c 	stmdaeq	r0, {r2, r3, r4, r9, sl, ip, lr}
 8003464:	00061a80 	andeq	r1, r6, r0, lsl #21
 8003468:	200027a0 	andcs	r2, r0, r0, lsr #15

0800346c <Ssd1306::SendCommand(unsigned char)>:
 800346c:	b507      	push	{r0, r1, r2, lr}
 800346e:	2300      	movs	r3, #0
 8003470:	3010      	adds	r0, #16
 8003472:	f88d 3004 	strb.w	r3, [sp, #4]
 8003476:	f88d 1005 	strb.w	r1, [sp, #5]
 800347a:	f7ff ff77 	bl	800336c <HAL_I2C::Setup()>
 800347e:	2102      	movs	r1, #2
 8003480:	a801      	add	r0, sp, #4
 8003482:	f001 f905 	bl	8004690 <gd32_i2c_write>
 8003486:	b003      	add	sp, #12
 8003488:	f85d fb04 	ldr.w	pc, [sp], #4

0800348c <Ssd1306::SetCursorPos(unsigned long, unsigned long)>:
 800348c:	2914      	cmp	r1, #20
 800348e:	b570      	push	{r4, r5, r6, lr}
 8003490:	4605      	mov	r5, r0
 8003492:	4616      	mov	r6, r2
 8003494:	d81d      	bhi.n	80034d2 <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x46>
 8003496:	6883      	ldr	r3, [r0, #8]
 8003498:	4293      	cmp	r3, r2
 800349a:	d91a      	bls.n	80034d2 <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x46>
 800349c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80034a0:	7e43      	ldrb	r3, [r0, #25]
 80034a2:	004c      	lsls	r4, r1, #1
 80034a4:	b2e4      	uxtb	r4, r4
 80034a6:	b10b      	cbz	r3, 80034ac <Ssd1306::SetCursorPos(unsigned long, unsigned long)+0x20>
 80034a8:	3404      	adds	r4, #4
 80034aa:	b2e4      	uxtb	r4, r4
 80034ac:	f004 010e 	and.w	r1, r4, #14
 80034b0:	4628      	mov	r0, r5
 80034b2:	0924      	lsrs	r4, r4, #4
 80034b4:	f7ff ffda 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 80034b8:	f044 0110 	orr.w	r1, r4, #16
 80034bc:	4628      	mov	r0, r5
 80034be:	f7ff ffd5 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 80034c2:	f066 014f 	orn	r1, r6, #79	; 0x4f
 80034c6:	4628      	mov	r0, r5
 80034c8:	b2c9      	uxtb	r1, r1
 80034ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80034ce:	f7ff bfcd 	b.w	800346c <Ssd1306::SendCommand(unsigned char)>
 80034d2:	bd70      	pop	{r4, r5, r6, pc}

080034d4 <Ssd1306::TextLine(unsigned long, char const*, unsigned long)>:
 80034d4:	b5e0      	push	{r5, r6, r7, lr}
 80034d6:	461f      	mov	r7, r3
 80034d8:	6883      	ldr	r3, [r0, #8]
 80034da:	428b      	cmp	r3, r1
 80034dc:	4605      	mov	r5, r0
 80034de:	4616      	mov	r6, r2
 80034e0:	d30b      	bcc.n	80034fa <Ssd1306::TextLine(unsigned long, char const*, unsigned long)+0x26>
 80034e2:	1e4a      	subs	r2, r1, #1
 80034e4:	b2d2      	uxtb	r2, r2
 80034e6:	2100      	movs	r1, #0
 80034e8:	f7ff ffd0 	bl	800348c <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 80034ec:	463a      	mov	r2, r7
 80034ee:	4631      	mov	r1, r6
 80034f0:	4628      	mov	r0, r5
 80034f2:	e8bd 40e0 	ldmia.w	sp!, {r5, r6, r7, lr}
 80034f6:	f7ff bf73 	b.w	80033e0 <Ssd1306::Text(char const*, unsigned long)>
 80034fa:	bde0      	pop	{r5, r6, r7, pc}

080034fc <Ssd1306::ClearLine(unsigned long)>:
 80034fc:	6883      	ldr	r3, [r0, #8]
 80034fe:	428b      	cmp	r3, r1
 8003500:	b513      	push	{r0, r1, r4, lr}
 8003502:	4604      	mov	r4, r0
 8003504:	d315      	bcc.n	8003532 <Ssd1306::ClearLine(unsigned long)+0x36>
 8003506:	1e4a      	subs	r2, r1, #1
 8003508:	b2d2      	uxtb	r2, r2
 800350a:	2100      	movs	r1, #0
 800350c:	9201      	str	r2, [sp, #4]
 800350e:	f7ff ffbd 	bl	800348c <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 8003512:	f104 0010 	add.w	r0, r4, #16
 8003516:	f7ff ff29 	bl	800336c <HAL_I2C::Setup()>
 800351a:	2181      	movs	r1, #129	; 0x81
 800351c:	4806      	ldr	r0, [pc, #24]	; (8003538 <Ssd1306::ClearLine(unsigned long)+0x3c>)
 800351e:	f001 f8b7 	bl	8004690 <gd32_i2c_write>
 8003522:	9a01      	ldr	r2, [sp, #4]
 8003524:	2100      	movs	r1, #0
 8003526:	4620      	mov	r0, r4
 8003528:	b002      	add	sp, #8
 800352a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800352e:	f7ff bfad 	b.w	800348c <Ssd1306::SetCursorPos(unsigned long, unsigned long)>
 8003532:	b002      	add	sp, #8
 8003534:	bd10      	pop	{r4, pc}
 8003536:	bf00      	nop
 8003538:	20002718 	andcs	r2, r0, r8, lsl r7

0800353c <Ssd1306::SetSleep(bool)>:
 800353c:	b111      	cbz	r1, 8003544 <Ssd1306::SetSleep(bool)+0x8>
 800353e:	21ae      	movs	r1, #174	; 0xae
 8003540:	f7ff bf94 	b.w	800346c <Ssd1306::SendCommand(unsigned char)>
 8003544:	21af      	movs	r1, #175	; 0xaf
 8003546:	e7fb      	b.n	8003540 <Ssd1306::SetSleep(bool)+0x4>

08003548 <Ssd1306::SetContrast(unsigned char)>:
 8003548:	b538      	push	{r3, r4, r5, lr}
 800354a:	4604      	mov	r4, r0
 800354c:	460d      	mov	r5, r1
 800354e:	2181      	movs	r1, #129	; 0x81
 8003550:	f7ff ff8c 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 8003554:	4629      	mov	r1, r5
 8003556:	4620      	mov	r0, r4
 8003558:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800355c:	f7ff bf86 	b.w	800346c <Ssd1306::SendCommand(unsigned char)>

08003560 <Ssd1306::SetFlipVertically(bool)>:
 8003560:	b510      	push	{r4, lr}
 8003562:	4604      	mov	r4, r0
 8003564:	b141      	cbz	r1, 8003578 <Ssd1306::SetFlipVertically(bool)+0x18>
 8003566:	21a0      	movs	r1, #160	; 0xa0
 8003568:	f7ff ff80 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 800356c:	21c0      	movs	r1, #192	; 0xc0
 800356e:	4620      	mov	r0, r4
 8003570:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003574:	f7ff bf7a 	b.w	800346c <Ssd1306::SendCommand(unsigned char)>
 8003578:	21a1      	movs	r1, #161	; 0xa1
 800357a:	f7ff ff77 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 800357e:	21c8      	movs	r1, #200	; 0xc8
 8003580:	e7f5      	b.n	800356e <Ssd1306::SetFlipVertically(bool)+0xe>
	...

08003584 <Ssd1306::CheckSH1106()>:
 8003584:	b530      	push	{r4, r5, lr}
 8003586:	2100      	movs	r1, #0
 8003588:	b087      	sub	sp, #28
 800358a:	4604      	mov	r4, r0
 800358c:	f7ff ff6e 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 8003590:	2190      	movs	r1, #144	; 0x90
 8003592:	4620      	mov	r0, r4
 8003594:	f7ff ff6a 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 8003598:	21b0      	movs	r1, #176	; 0xb0
 800359a:	4620      	mov	r0, r4
 800359c:	f7ff ff66 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 80035a0:	4b21      	ldr	r3, [pc, #132]	; (8003628 <Ssd1306::CheckSH1106()+0xa4>)
 80035a2:	f104 0510 	add.w	r5, r4, #16
 80035a6:	6818      	ldr	r0, [r3, #0]
 80035a8:	9002      	str	r0, [sp, #8]
 80035aa:	791b      	ldrb	r3, [r3, #4]
 80035ac:	f88d 300c 	strb.w	r3, [sp, #12]
 80035b0:	4628      	mov	r0, r5
 80035b2:	f7ff fedb 	bl	800336c <HAL_I2C::Setup()>
 80035b6:	2105      	movs	r1, #5
 80035b8:	a802      	add	r0, sp, #8
 80035ba:	f001 f869 	bl	8004690 <gd32_i2c_write>
 80035be:	2100      	movs	r1, #0
 80035c0:	4620      	mov	r0, r4
 80035c2:	f7ff ff53 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 80035c6:	2190      	movs	r1, #144	; 0x90
 80035c8:	4620      	mov	r0, r4
 80035ca:	f7ff ff4f 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 80035ce:	21b0      	movs	r1, #176	; 0xb0
 80035d0:	4620      	mov	r0, r4
 80035d2:	f7ff ff4b 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 80035d6:	2300      	movs	r3, #0
 80035d8:	4628      	mov	r0, r5
 80035da:	9304      	str	r3, [sp, #16]
 80035dc:	f88d 3014 	strb.w	r3, [sp, #20]
 80035e0:	f7ff fec4 	bl	800336c <HAL_I2C::Setup()>
 80035e4:	2340      	movs	r3, #64	; 0x40
 80035e6:	2101      	movs	r1, #1
 80035e8:	a801      	add	r0, sp, #4
 80035ea:	f88d 3004 	strb.w	r3, [sp, #4]
 80035ee:	f001 f84f 	bl	8004690 <gd32_i2c_write>
 80035f2:	4628      	mov	r0, r5
 80035f4:	f7ff feba 	bl	800336c <HAL_I2C::Setup()>
 80035f8:	2105      	movs	r1, #5
 80035fa:	a804      	add	r0, sp, #16
 80035fc:	f001 f8ae 	bl	800475c <gd32_i2c_read>
 8003600:	aa02      	add	r2, sp, #8
 8003602:	a904      	add	r1, sp, #16
 8003604:	2004      	movs	r0, #4
 8003606:	3801      	subs	r0, #1
 8003608:	d201      	bcs.n	800360e <Ssd1306::CheckSH1106()+0x8a>
 800360a:	2300      	movs	r3, #0
 800360c:	e006      	b.n	800361c <Ssd1306::CheckSH1106()+0x98>
 800360e:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8003612:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8003616:	42ab      	cmp	r3, r5
 8003618:	d0f5      	beq.n	8003606 <Ssd1306::CheckSH1106()+0x82>
 800361a:	1b5b      	subs	r3, r3, r5
 800361c:	fab3 f383 	clz	r3, r3
 8003620:	095b      	lsrs	r3, r3, #5
 8003622:	7663      	strb	r3, [r4, #25]
 8003624:	b007      	add	sp, #28
 8003626:	bd30      	pop	{r4, r5, pc}
 8003628:	0800533e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, r9, ip, lr}

0800362c <Ssd1306::Cls()>:
 800362c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003630:	7e46      	ldrb	r6, [r0, #25]
 8003632:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8003694 <Ssd1306::Cls()+0x68>
 8003636:	00b6      	lsls	r6, r6, #2
 8003638:	b2f7      	uxtb	r7, r6
 800363a:	4604      	mov	r4, r0
 800363c:	2500      	movs	r5, #0
 800363e:	f047 0810 	orr.w	r8, r7, #16
 8003642:	69e3      	ldr	r3, [r4, #28]
 8003644:	42ab      	cmp	r3, r5
 8003646:	4639      	mov	r1, r7
 8003648:	4620      	mov	r0, r4
 800364a:	d80b      	bhi.n	8003664 <Ssd1306::Cls()+0x38>
 800364c:	f7ff ff0e 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 8003650:	4641      	mov	r1, r8
 8003652:	4620      	mov	r0, r4
 8003654:	f7ff ff0a 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 8003658:	4620      	mov	r0, r4
 800365a:	21b0      	movs	r1, #176	; 0xb0
 800365c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003660:	f7ff bf04 	b.w	800346c <Ssd1306::SendCommand(unsigned char)>
 8003664:	f7ff ff02 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 8003668:	4641      	mov	r1, r8
 800366a:	4620      	mov	r0, r4
 800366c:	f7ff fefe 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 8003670:	f065 014f 	orn	r1, r5, #79	; 0x4f
 8003674:	b2c9      	uxtb	r1, r1
 8003676:	4620      	mov	r0, r4
 8003678:	f7ff fef8 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 800367c:	f104 0010 	add.w	r0, r4, #16
 8003680:	f7ff fe74 	bl	800336c <HAL_I2C::Setup()>
 8003684:	f106 0181 	add.w	r1, r6, #129	; 0x81
 8003688:	4648      	mov	r0, r9
 800368a:	f001 f801 	bl	8004690 <gd32_i2c_write>
 800368e:	3501      	adds	r5, #1
 8003690:	e7d7      	b.n	8003642 <Ssd1306::Cls()+0x16>
 8003692:	bf00      	nop
 8003694:	20002718 	andcs	r2, r0, r8, lsl r7

08003698 <Ssd1306::Start()>:
 8003698:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800369a:	7c04      	ldrb	r4, [r0, #16]
 800369c:	6946      	ldr	r6, [r0, #20]
 800369e:	4605      	mov	r5, r0
 80036a0:	4620      	mov	r0, r4
 80036a2:	f000 ffef 	bl	8004684 <gd32_i2c_set_address>
 80036a6:	4630      	mov	r0, r6
 80036a8:	f000 ffe4 	bl	8004674 <gd32_i2c_set_baudrate>
 80036ac:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80036b0:	2b07      	cmp	r3, #7
 80036b2:	d902      	bls.n	80036ba <Ssd1306::Start()+0x22>
 80036b4:	3c50      	subs	r4, #80	; 0x50
 80036b6:	2c0f      	cmp	r4, #15
 80036b8:	d80f      	bhi.n	80036da <Ssd1306::Start()+0x42>
 80036ba:	2101      	movs	r1, #1
 80036bc:	f10d 0007 	add.w	r0, sp, #7
 80036c0:	f001 f84c 	bl	800475c <gd32_i2c_read>
 80036c4:	fab0 f480 	clz	r4, r0
 80036c8:	0964      	lsrs	r4, r4, #5
 80036ca:	b34c      	cbz	r4, 8003720 <Ssd1306::Start()+0x88>
 80036cc:	7e2e      	ldrb	r6, [r5, #24]
 80036ce:	b14e      	cbz	r6, 80036e4 <Ssd1306::Start()+0x4c>
 80036d0:	3e01      	subs	r6, #1
 80036d2:	2e01      	cmp	r6, #1
 80036d4:	d927      	bls.n	8003726 <Ssd1306::Start()+0x8e>
 80036d6:	2400      	movs	r4, #0
 80036d8:	e022      	b.n	8003720 <Ssd1306::Start()+0x88>
 80036da:	2100      	movs	r1, #0
 80036dc:	4608      	mov	r0, r1
 80036de:	f000 ffd7 	bl	8004690 <gd32_i2c_write>
 80036e2:	e7ef      	b.n	80036c4 <Ssd1306::Start()+0x2c>
 80036e4:	4f15      	ldr	r7, [pc, #84]	; (800373c <Ssd1306::Start()+0xa4>)
 80036e6:	f817 1b01 	ldrb.w	r1, [r7], #1
 80036ea:	4628      	mov	r0, r5
 80036ec:	3601      	adds	r6, #1
 80036ee:	f7ff febd 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 80036f2:	2e18      	cmp	r6, #24
 80036f4:	d1f7      	bne.n	80036e6 <Ssd1306::Start()+0x4e>
 80036f6:	4a12      	ldr	r2, [pc, #72]	; (8003740 <Ssd1306::Start()+0xa8>)
 80036f8:	2300      	movs	r3, #0
 80036fa:	4611      	mov	r1, r2
 80036fc:	4618      	mov	r0, r3
 80036fe:	3301      	adds	r3, #1
 8003700:	2b86      	cmp	r3, #134	; 0x86
 8003702:	f802 0b01 	strb.w	r0, [r2], #1
 8003706:	d1fa      	bne.n	80036fe <Ssd1306::Start()+0x66>
 8003708:	2340      	movs	r3, #64	; 0x40
 800370a:	700b      	strb	r3, [r1, #0]
 800370c:	4628      	mov	r0, r5
 800370e:	f7ff ff39 	bl	8003584 <Ssd1306::CheckSH1106()>
 8003712:	4628      	mov	r0, r5
 8003714:	f7ff ff8a 	bl	800362c <Ssd1306::Cls()>
 8003718:	21af      	movs	r1, #175	; 0xaf
 800371a:	4628      	mov	r0, r5
 800371c:	f7ff fea6 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 8003720:	4620      	mov	r0, r4
 8003722:	b003      	add	sp, #12
 8003724:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003726:	4f07      	ldr	r7, [pc, #28]	; (8003744 <Ssd1306::Start()+0xac>)
 8003728:	2600      	movs	r6, #0
 800372a:	f817 1b01 	ldrb.w	r1, [r7], #1
 800372e:	4628      	mov	r0, r5
 8003730:	3601      	adds	r6, #1
 8003732:	f7ff fe9b 	bl	800346c <Ssd1306::SendCommand(unsigned char)>
 8003736:	2e18      	cmp	r6, #24
 8003738:	d1f7      	bne.n	800372a <Ssd1306::Start()+0x92>
 800373a:	e7dc      	b.n	80036f6 <Ssd1306::Start()+0x5e>
 800373c:	080055fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, ip, lr}
 8003740:	20002718 	andcs	r2, r0, r8, lsl r7
 8003744:	080055e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl, ip, lr}

08003748 <display::timeout::gpio_init()>:
 8003748:	4770      	bx	lr

0800374a <console_putc>:
 800374a:	f000 bee5 	b.w	8004518 <uart0_putc>

0800374e <console_puts>:
 800374e:	f000 b9b3 	b.w	8003ab8 <uart0_puts>
	...

08003754 <console_error>:
 8003754:	b510      	push	{r4, lr}
 8003756:	4604      	mov	r4, r0
 8003758:	4805      	ldr	r0, [pc, #20]	; (8003770 <console_error+0x1c>)
 800375a:	f000 f9ad 	bl	8003ab8 <uart0_puts>
 800375e:	4620      	mov	r0, r4
 8003760:	f000 f9aa 	bl	8003ab8 <uart0_puts>
 8003764:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003768:	4802      	ldr	r0, [pc, #8]	; (8003774 <console_error+0x20>)
 800376a:	f000 b9a5 	b.w	8003ab8 <uart0_puts>
 800376e:	bf00      	nop
 8003770:	08005666 	stmdaeq	r0, {r1, r2, r5, r6, r9, sl, ip, lr}
 8003774:	08005654 	stmdaeq	r0, {r2, r4, r6, r9, sl, ip, lr}

08003778 <Hardware::Hardware()>:
 8003778:	b530      	push	{r4, r5, lr}
 800377a:	2306      	movs	r3, #6
 800377c:	2400      	movs	r4, #0
 800377e:	6043      	str	r3, [r0, #4]
 8003780:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8003784:	e9c0 3403 	strd	r3, r4, [r0, #12]
 8003788:	4b2d      	ldr	r3, [pc, #180]	; (8003840 <Hardware::Hardware()+0xc8>)
 800378a:	7004      	strb	r4, [r0, #0]
 800378c:	b091      	sub	sp, #68	; 0x44
 800378e:	7204      	strb	r4, [r0, #8]
 8003790:	6144      	str	r4, [r0, #20]
 8003792:	6018      	str	r0, [r3, #0]
 8003794:	4605      	mov	r5, r0
 8003796:	f7fc fccb 	bl	8000130 <console_init>
 800379a:	f000 f859 	bl	8003850 <__libc_init_array>
 800379e:	f000 f99b 	bl	8003ad8 <systick_config>
 80037a2:	f001 f969 	bl	8004a78 <udelay_init()>
 80037a6:	f000 fed7 	bl	8004558 <gd32_adc_init()>
 80037aa:	f000 ff2f 	bl	800460c <gd32_i2c_begin>
 80037ae:	f240 7004 	movw	r0, #1796	; 0x704
 80037b2:	f000 fc31 	bl	8004018 <rcu_periph_clock_enable>
 80037b6:	4823      	ldr	r0, [pc, #140]	; (8003844 <Hardware::Hardware()+0xcc>)
 80037b8:	f000 fcf2 	bl	80041a0 <timer_deinit>
 80037bc:	2377      	movs	r3, #119	; 0x77
 80037be:	a903      	add	r1, sp, #12
 80037c0:	f8ad 300c 	strh.w	r3, [sp, #12]
 80037c4:	481f      	ldr	r0, [pc, #124]	; (8003844 <Hardware::Hardware()+0xcc>)
 80037c6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80037ca:	9305      	str	r3, [sp, #20]
 80037cc:	f000 fd4a 	bl	8004264 <timer_init>
 80037d0:	481c      	ldr	r0, [pc, #112]	; (8003844 <Hardware::Hardware()+0xcc>)
 80037d2:	f000 fd85 	bl	80042e0 <timer_enable>
 80037d6:	f240 701b 	movw	r0, #1819	; 0x71b
 80037da:	f000 fc1d 	bl	8004018 <rcu_periph_clock_enable>
 80037de:	f240 701c 	movw	r0, #1820	; 0x71c
 80037e2:	f000 fc19 	bl	8004018 <rcu_periph_clock_enable>
 80037e6:	f000 fc0f 	bl	8004008 <pmu_backup_write_enable>
 80037ea:	4621      	mov	r1, r4
 80037ec:	2002      	movs	r0, #2
 80037ee:	f000 fa27 	bl	8003c40 <bkp_write_data>
 80037f2:	2208      	movs	r2, #8
 80037f4:	2309      	movs	r3, #9
 80037f6:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 80037fa:	a807      	add	r0, sp, #28
 80037fc:	237b      	movs	r3, #123	; 0x7b
 80037fe:	930c      	str	r3, [sp, #48]	; 0x30
 8003800:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003804:	9407      	str	r4, [sp, #28]
 8003806:	940f      	str	r4, [sp, #60]	; 0x3c
 8003808:	f000 f8f2 	bl	80039f0 <mktime>
 800380c:	4621      	mov	r1, r4
 800380e:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8003812:	a801      	add	r0, sp, #4
 8003814:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8003818:	f000 f936 	bl	8003a88 <settimeofday>
 800381c:	f504 3488 	add.w	r4, r4, #69632	; 0x11000
 8003820:	f240 6004 	movw	r0, #1540	; 0x604
 8003824:	f000 fbf8 	bl	8004018 <rcu_periph_clock_enable>
 8003828:	4620      	mov	r0, r4
 800382a:	2301      	movs	r3, #1
 800382c:	2203      	movs	r2, #3
 800382e:	2110      	movs	r1, #16
 8003830:	f000 fb64 	bl	8003efc <gpio_init>
 8003834:	2301      	movs	r3, #1
 8003836:	4628      	mov	r0, r5
 8003838:	6163      	str	r3, [r4, #20]
 800383a:	b011      	add	sp, #68	; 0x44
 800383c:	bd30      	pop	{r4, r5, pc}
 800383e:	bf00      	nop
 8003840:	200027a4 	andcs	r2, r0, r4, lsr #15
 8003844:	40001000 	andmi	r1, r0, r0

08003848 <operator delete(void*)>:
 8003848:	f000 b852 	b.w	80038f0 <free>

0800384c <operator new(unsigned int)>:
 800384c:	f000 b822 	b.w	8003894 <malloc>

08003850 <__libc_init_array>:
 8003850:	b570      	push	{r4, r5, r6, lr}
 8003852:	4d0c      	ldr	r5, [pc, #48]	; (8003884 <__libc_init_array+0x34>)
 8003854:	4c0c      	ldr	r4, [pc, #48]	; (8003888 <__libc_init_array+0x38>)
 8003856:	1b64      	subs	r4, r4, r5
 8003858:	10a4      	asrs	r4, r4, #2
 800385a:	2600      	movs	r6, #0
 800385c:	42a6      	cmp	r6, r4
 800385e:	d107      	bne.n	8003870 <__libc_init_array+0x20>
 8003860:	4d0a      	ldr	r5, [pc, #40]	; (800388c <__libc_init_array+0x3c>)
 8003862:	4c0b      	ldr	r4, [pc, #44]	; (8003890 <__libc_init_array+0x40>)
 8003864:	1b64      	subs	r4, r4, r5
 8003866:	10a4      	asrs	r4, r4, #2
 8003868:	2600      	movs	r6, #0
 800386a:	42a6      	cmp	r6, r4
 800386c:	d105      	bne.n	800387a <__libc_init_array+0x2a>
 800386e:	bd70      	pop	{r4, r5, r6, pc}
 8003870:	f855 3b04 	ldr.w	r3, [r5], #4
 8003874:	4798      	blx	r3
 8003876:	3601      	adds	r6, #1
 8003878:	e7f0      	b.n	800385c <__libc_init_array+0xc>
 800387a:	f855 3b04 	ldr.w	r3, [r5], #4
 800387e:	4798      	blx	r3
 8003880:	3601      	adds	r6, #1
 8003882:	e7f2      	b.n	800386a <__libc_init_array+0x1a>
 8003884:	08004e40 	stmdaeq	r0, {r6, r9, sl, fp, lr}
 8003888:	08004e40 	stmdaeq	r0, {r6, r9, sl, fp, lr}
 800388c:	08004e40 	stmdaeq	r0, {r6, r9, sl, fp, lr}
 8003890:	08004e40 	stmdaeq	r0, {r6, r9, sl, fp, lr}

08003894 <malloc>:
 8003894:	b510      	push	{r4, lr}
 8003896:	b1d8      	cbz	r0, 80038d0 <malloc+0x3c>
 8003898:	4a11      	ldr	r2, [pc, #68]	; (80038e0 <malloc+0x4c>)
 800389a:	6811      	ldr	r1, [r2, #0]
 800389c:	b971      	cbnz	r1, 80038bc <malloc+0x28>
 800389e:	4911      	ldr	r1, [pc, #68]	; (80038e4 <malloc+0x50>)
 80038a0:	4c11      	ldr	r4, [pc, #68]	; (80038e8 <malloc+0x54>)
 80038a2:	680b      	ldr	r3, [r1, #0]
 80038a4:	f100 021b 	add.w	r2, r0, #27
 80038a8:	f022 020f 	bic.w	r2, r2, #15
 80038ac:	441a      	add	r2, r3
 80038ae:	42a2      	cmp	r2, r4
 80038b0:	d80f      	bhi.n	80038d2 <malloc+0x3e>
 80038b2:	600a      	str	r2, [r1, #0]
 80038b4:	4a0d      	ldr	r2, [pc, #52]	; (80038ec <malloc+0x58>)
 80038b6:	e9c3 2000 	strd	r2, r0, [r3]
 80038ba:	e005      	b.n	80038c8 <malloc+0x34>
 80038bc:	4288      	cmp	r0, r1
 80038be:	d90a      	bls.n	80038d6 <malloc+0x42>
 80038c0:	3208      	adds	r2, #8
 80038c2:	e7ea      	b.n	800389a <malloc+0x6>
 80038c4:	6899      	ldr	r1, [r3, #8]
 80038c6:	6051      	str	r1, [r2, #4]
 80038c8:	2200      	movs	r2, #0
 80038ca:	609a      	str	r2, [r3, #8]
 80038cc:	f103 000c 	add.w	r0, r3, #12
 80038d0:	bd10      	pop	{r4, pc}
 80038d2:	2000      	movs	r0, #0
 80038d4:	e7fc      	b.n	80038d0 <malloc+0x3c>
 80038d6:	6853      	ldr	r3, [r2, #4]
 80038d8:	2b00      	cmp	r3, #0
 80038da:	d1f3      	bne.n	80038c4 <malloc+0x30>
 80038dc:	4608      	mov	r0, r1
 80038de:	e7de      	b.n	800389e <malloc+0xa>
 80038e0:	20001018 	andcs	r1, r0, r8, lsl r0
 80038e4:	20001014 	andcs	r1, r0, r4, lsl r0
 80038e8:	200037bc 			; <UNDEFINED> instruction: 0x200037bc
 80038ec:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

080038f0 <free>:
 80038f0:	b138      	cbz	r0, 8003902 <free+0x12>
 80038f2:	f850 2c0c 	ldr.w	r2, [r0, #-12]
 80038f6:	4b09      	ldr	r3, [pc, #36]	; (800391c <free+0x2c>)
 80038f8:	429a      	cmp	r2, r3
 80038fa:	d102      	bne.n	8003902 <free+0x12>
 80038fc:	4b08      	ldr	r3, [pc, #32]	; (8003920 <free+0x30>)
 80038fe:	681a      	ldr	r2, [r3, #0]
 8003900:	b902      	cbnz	r2, 8003904 <free+0x14>
 8003902:	4770      	bx	lr
 8003904:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8003908:	4291      	cmp	r1, r2
 800390a:	d105      	bne.n	8003918 <free+0x28>
 800390c:	685a      	ldr	r2, [r3, #4]
 800390e:	f840 2c04 	str.w	r2, [r0, #-4]
 8003912:	380c      	subs	r0, #12
 8003914:	6058      	str	r0, [r3, #4]
 8003916:	4770      	bx	lr
 8003918:	3308      	adds	r3, #8
 800391a:	e7f0      	b.n	80038fe <free+0xe>
 800391c:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8003920:	20001018 	andcs	r1, r0, r8, lsl r0

08003924 <memmove>:
 8003924:	4288      	cmp	r0, r1
 8003926:	b510      	push	{r4, lr}
 8003928:	eb01 0302 	add.w	r3, r1, r2
 800392c:	d208      	bcs.n	8003940 <memmove+0x1c>
 800392e:	1e42      	subs	r2, r0, #1
 8003930:	4299      	cmp	r1, r3
 8003932:	d100      	bne.n	8003936 <memmove+0x12>
 8003934:	bd10      	pop	{r4, pc}
 8003936:	f811 4b01 	ldrb.w	r4, [r1], #1
 800393a:	f802 4f01 	strb.w	r4, [r2, #1]!
 800393e:	e7f7      	b.n	8003930 <memmove+0xc>
 8003940:	4402      	add	r2, r0
 8003942:	4601      	mov	r1, r0
 8003944:	428a      	cmp	r2, r1
 8003946:	d0f5      	beq.n	8003934 <memmove+0x10>
 8003948:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800394c:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8003950:	e7f8      	b.n	8003944 <memmove+0x20>

08003952 <memset>:
 8003952:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003954:	b1c2      	cbz	r2, 8003988 <memset+0x36>
 8003956:	b2c9      	uxtb	r1, r1
 8003958:	4603      	mov	r3, r0
 800395a:	075c      	lsls	r4, r3, #29
 800395c:	d110      	bne.n	8003980 <memset+0x2e>
 800395e:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8003962:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 8003966:	f022 0407 	bic.w	r4, r2, #7
 800396a:	463d      	mov	r5, r7
 800396c:	441c      	add	r4, r3
 800396e:	461e      	mov	r6, r3
 8003970:	42a6      	cmp	r6, r4
 8003972:	d10a      	bne.n	800398a <memset+0x38>
 8003974:	441a      	add	r2, r3
 8003976:	4294      	cmp	r4, r2
 8003978:	d006      	beq.n	8003988 <memset+0x36>
 800397a:	f804 1b01 	strb.w	r1, [r4], #1
 800397e:	e7fa      	b.n	8003976 <memset+0x24>
 8003980:	3a01      	subs	r2, #1
 8003982:	f803 1b01 	strb.w	r1, [r3], #1
 8003986:	d1e8      	bne.n	800395a <memset+0x8>
 8003988:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800398a:	f846 7b08 	str.w	r7, [r6], #8
 800398e:	f846 5c04 	str.w	r5, [r6, #-4]
 8003992:	e7ed      	b.n	8003970 <memset+0x1e>

08003994 <puts>:
 8003994:	b508      	push	{r3, lr}
 8003996:	f7ff feda 	bl	800374e <console_puts>
 800399a:	200a      	movs	r0, #10
 800399c:	f7ff fed5 	bl	800374a <console_putc>
 80039a0:	2001      	movs	r0, #1
 80039a2:	bd08      	pop	{r3, pc}

080039a4 <isleapyear>:
 80039a4:	2264      	movs	r2, #100	; 0x64
 80039a6:	fb90 f3f2 	sdiv	r3, r0, r2
 80039aa:	fb02 0313 	mls	r3, r2, r3, r0
 80039ae:	b94b      	cbnz	r3, 80039c4 <isleapyear+0x20>
 80039b0:	f44f 73c8 	mov.w	r3, #400	; 0x190
 80039b4:	fb90 f2f3 	sdiv	r2, r0, r3
 80039b8:	fb03 0012 	mls	r0, r3, r2, r0
 80039bc:	fab0 f080 	clz	r0, r0
 80039c0:	0940      	lsrs	r0, r0, #5
 80039c2:	4770      	bx	lr
 80039c4:	f010 0f03 	tst.w	r0, #3
 80039c8:	bf0c      	ite	eq
 80039ca:	2001      	moveq	r0, #1
 80039cc:	2000      	movne	r0, #0
 80039ce:	4770      	bx	lr

080039d0 <getdaysofmonth>:
 80039d0:	b510      	push	{r4, lr}
 80039d2:	4604      	mov	r4, r0
 80039d4:	2c01      	cmp	r4, #1
 80039d6:	4608      	mov	r0, r1
 80039d8:	d102      	bne.n	80039e0 <getdaysofmonth+0x10>
 80039da:	f7ff ffe3 	bl	80039a4 <isleapyear>
 80039de:	b918      	cbnz	r0, 80039e8 <getdaysofmonth+0x18>
 80039e0:	4b02      	ldr	r3, [pc, #8]	; (80039ec <getdaysofmonth+0x1c>)
 80039e2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80039e6:	bd10      	pop	{r4, pc}
 80039e8:	201d      	movs	r0, #29
 80039ea:	e7fc      	b.n	80039e6 <getdaysofmonth+0x16>
 80039ec:	08005680 	stmdaeq	r0, {r7, r9, sl, ip, lr}

080039f0 <mktime>:
 80039f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80039f4:	4604      	mov	r4, r0
 80039f6:	2800      	cmp	r0, #0
 80039f8:	d043      	beq.n	8003a82 <mktime+0x92>
 80039fa:	6941      	ldr	r1, [r0, #20]
 80039fc:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8003a00:	2b45      	cmp	r3, #69	; 0x45
 8003a02:	d83e      	bhi.n	8003a82 <mktime+0x92>
 8003a04:	2600      	movs	r6, #0
 8003a06:	f240 75b2 	movw	r5, #1970	; 0x7b2
 8003a0a:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 8003a0e:	f240 186d 	movw	r8, #365	; 0x16d
 8003a12:	42af      	cmp	r7, r5
 8003a14:	da24      	bge.n	8003a60 <mktime+0x70>
 8003a16:	6927      	ldr	r7, [r4, #16]
 8003a18:	2f0b      	cmp	r7, #11
 8003a1a:	d832      	bhi.n	8003a82 <mktime+0x92>
 8003a1c:	2500      	movs	r5, #0
 8003a1e:	42af      	cmp	r7, r5
 8003a20:	d129      	bne.n	8003a76 <mktime+0x86>
 8003a22:	68e5      	ldr	r5, [r4, #12]
 8003a24:	2d00      	cmp	r5, #0
 8003a26:	dd2c      	ble.n	8003a82 <mktime+0x92>
 8003a28:	4638      	mov	r0, r7
 8003a2a:	f7ff ffd1 	bl	80039d0 <getdaysofmonth>
 8003a2e:	4285      	cmp	r5, r0
 8003a30:	dc27      	bgt.n	8003a82 <mktime+0x92>
 8003a32:	3d01      	subs	r5, #1
 8003a34:	2318      	movs	r3, #24
 8003a36:	4435      	add	r5, r6
 8003a38:	435d      	muls	r5, r3
 8003a3a:	68a3      	ldr	r3, [r4, #8]
 8003a3c:	2b17      	cmp	r3, #23
 8003a3e:	d820      	bhi.n	8003a82 <mktime+0x92>
 8003a40:	442b      	add	r3, r5
 8003a42:	213c      	movs	r1, #60	; 0x3c
 8003a44:	fb01 f203 	mul.w	r2, r1, r3
 8003a48:	6863      	ldr	r3, [r4, #4]
 8003a4a:	2b3b      	cmp	r3, #59	; 0x3b
 8003a4c:	d819      	bhi.n	8003a82 <mktime+0x92>
 8003a4e:	6820      	ldr	r0, [r4, #0]
 8003a50:	4413      	add	r3, r2
 8003a52:	283b      	cmp	r0, #59	; 0x3b
 8003a54:	fb01 f303 	mul.w	r3, r1, r3
 8003a58:	d813      	bhi.n	8003a82 <mktime+0x92>
 8003a5a:	4418      	add	r0, r3
 8003a5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003a60:	4628      	mov	r0, r5
 8003a62:	f7ff ff9f 	bl	80039a4 <isleapyear>
 8003a66:	2800      	cmp	r0, #0
 8003a68:	bf14      	ite	ne
 8003a6a:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8003a6e:	4643      	moveq	r3, r8
 8003a70:	441e      	add	r6, r3
 8003a72:	3501      	adds	r5, #1
 8003a74:	e7cd      	b.n	8003a12 <mktime+0x22>
 8003a76:	4628      	mov	r0, r5
 8003a78:	f7ff ffaa 	bl	80039d0 <getdaysofmonth>
 8003a7c:	3501      	adds	r5, #1
 8003a7e:	4406      	add	r6, r0
 8003a80:	e7cd      	b.n	8003a1e <mktime+0x2e>
 8003a82:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003a86:	e7e9      	b.n	8003a5c <mktime+0x6c>

08003a88 <settimeofday>:
 8003a88:	4b07      	ldr	r3, [pc, #28]	; (8003aa8 <settimeofday+0x20>)
 8003a8a:	4908      	ldr	r1, [pc, #32]	; (8003aac <settimeofday+0x24>)
 8003a8c:	681a      	ldr	r2, [r3, #0]
 8003a8e:	4b08      	ldr	r3, [pc, #32]	; (8003ab0 <settimeofday+0x28>)
 8003a90:	b510      	push	{r4, lr}
 8003a92:	601a      	str	r2, [r3, #0]
 8003a94:	6843      	ldr	r3, [r0, #4]
 8003a96:	6804      	ldr	r4, [r0, #0]
 8003a98:	4806      	ldr	r0, [pc, #24]	; (8003ab4 <settimeofday+0x2c>)
 8003a9a:	17da      	asrs	r2, r3, #31
 8003a9c:	fbc4 3200 	smlal	r3, r2, r4, r0
 8003aa0:	e9c1 3200 	strd	r3, r2, [r1]
 8003aa4:	2000      	movs	r0, #0
 8003aa6:	bd10      	pop	{r4, pc}
 8003aa8:	200027b4 			; <UNDEFINED> instruction: 0x200027b4
 8003aac:	200027a8 	andcs	r2, r0, r8, lsr #15
 8003ab0:	200027b0 			; <UNDEFINED> instruction: 0x200027b0
 8003ab4:	000f4240 	andeq	r4, pc, r0, asr #4

08003ab8 <uart0_puts>:
 8003ab8:	b510      	push	{r4, lr}
 8003aba:	1e44      	subs	r4, r0, #1
 8003abc:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8003ac0:	b903      	cbnz	r3, 8003ac4 <uart0_puts+0xc>
 8003ac2:	bd10      	pop	{r4, pc}
 8003ac4:	2b0a      	cmp	r3, #10
 8003ac6:	d102      	bne.n	8003ace <uart0_puts+0x16>
 8003ac8:	200d      	movs	r0, #13
 8003aca:	f000 fd25 	bl	8004518 <uart0_putc>
 8003ace:	7820      	ldrb	r0, [r4, #0]
 8003ad0:	f000 fd22 	bl	8004518 <uart0_putc>
 8003ad4:	e7f2      	b.n	8003abc <uart0_puts+0x4>
	...

08003ad8 <systick_config>:
 8003ad8:	4b0c      	ldr	r3, [pc, #48]	; (8003b0c <systick_config+0x34>)
 8003ada:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8003ade:	681b      	ldr	r3, [r3, #0]
 8003ae0:	fbb3 f3f2 	udiv	r3, r3, r2
 8003ae4:	3b01      	subs	r3, #1
 8003ae6:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003aea:	d20d      	bcs.n	8003b08 <systick_config+0x30>
 8003aec:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8003af0:	21f0      	movs	r1, #240	; 0xf0
 8003af2:	6153      	str	r3, [r2, #20]
 8003af4:	4b06      	ldr	r3, [pc, #24]	; (8003b10 <systick_config+0x38>)
 8003af6:	2007      	movs	r0, #7
 8003af8:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8003afc:	2100      	movs	r1, #0
 8003afe:	6191      	str	r1, [r2, #24]
 8003b00:	6110      	str	r0, [r2, #16]
 8003b02:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8003b06:	4770      	bx	lr
 8003b08:	e7fe      	b.n	8003b08 <systick_config+0x30>
 8003b0a:	bf00      	nop
 8003b0c:	20001080 	andcs	r1, r0, r0, lsl #1
 8003b10:	e000ed00 	and	lr, r0, r0, lsl #26

08003b14 <SysTick_Handler>:
 8003b14:	4a02      	ldr	r2, [pc, #8]	; (8003b20 <SysTick_Handler+0xc>)
 8003b16:	6813      	ldr	r3, [r2, #0]
 8003b18:	3301      	adds	r3, #1
 8003b1a:	6013      	str	r3, [r2, #0]
 8003b1c:	4770      	bx	lr
 8003b1e:	bf00      	nop
 8003b20:	200027b4 			; <UNDEFINED> instruction: 0x200027b4

08003b24 <SystemInit>:
 8003b24:	4a43      	ldr	r2, [pc, #268]	; (8003c34 <SystemInit+0x110>)
 8003b26:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8003b2a:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003b2e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8003b32:	4b41      	ldr	r3, [pc, #260]	; (8003c38 <SystemInit+0x114>)
 8003b34:	681a      	ldr	r2, [r3, #0]
 8003b36:	f042 0201 	orr.w	r2, r2, #1
 8003b3a:	601a      	str	r2, [r3, #0]
 8003b3c:	685a      	ldr	r2, [r3, #4]
 8003b3e:	b082      	sub	sp, #8
 8003b40:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003b44:	605a      	str	r2, [r3, #4]
 8003b46:	2200      	movs	r2, #0
 8003b48:	9201      	str	r2, [sp, #4]
 8003b4a:	f644 611f 	movw	r1, #19999	; 0x4e1f
 8003b4e:	9a01      	ldr	r2, [sp, #4]
 8003b50:	428a      	cmp	r2, r1
 8003b52:	d922      	bls.n	8003b9a <SystemInit+0x76>
 8003b54:	685a      	ldr	r2, [r3, #4]
 8003b56:	f022 0203 	bic.w	r2, r2, #3
 8003b5a:	605a      	str	r2, [r3, #4]
 8003b5c:	681a      	ldr	r2, [r3, #0]
 8003b5e:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8003b62:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8003b66:	601a      	str	r2, [r3, #0]
 8003b68:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 8003b6c:	609a      	str	r2, [r3, #8]
 8003b6e:	681a      	ldr	r2, [r3, #0]
 8003b70:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003b74:	601a      	str	r2, [r3, #0]
 8003b76:	2200      	movs	r2, #0
 8003b78:	605a      	str	r2, [r3, #4]
 8003b7a:	62da      	str	r2, [r3, #44]	; 0x2c
 8003b7c:	681a      	ldr	r2, [r3, #0]
 8003b7e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8003b82:	601a      	str	r2, [r3, #0]
 8003b84:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003b88:	6819      	ldr	r1, [r3, #0]
 8003b8a:	0388      	lsls	r0, r1, #14
 8003b8c:	d401      	bmi.n	8003b92 <SystemInit+0x6e>
 8003b8e:	3a01      	subs	r2, #1
 8003b90:	d1fa      	bne.n	8003b88 <SystemInit+0x64>
 8003b92:	681a      	ldr	r2, [r3, #0]
 8003b94:	0391      	lsls	r1, r2, #14
 8003b96:	d404      	bmi.n	8003ba2 <SystemInit+0x7e>
 8003b98:	e7fe      	b.n	8003b98 <SystemInit+0x74>
 8003b9a:	9a01      	ldr	r2, [sp, #4]
 8003b9c:	3201      	adds	r2, #1
 8003b9e:	9201      	str	r2, [sp, #4]
 8003ba0:	e7d5      	b.n	8003b4e <SystemInit+0x2a>
 8003ba2:	69da      	ldr	r2, [r3, #28]
 8003ba4:	4925      	ldr	r1, [pc, #148]	; (8003c3c <SystemInit+0x118>)
 8003ba6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003baa:	61da      	str	r2, [r3, #28]
 8003bac:	680a      	ldr	r2, [r1, #0]
 8003bae:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8003bb2:	600a      	str	r2, [r1, #0]
 8003bb4:	685a      	ldr	r2, [r3, #4]
 8003bb6:	605a      	str	r2, [r3, #4]
 8003bb8:	685a      	ldr	r2, [r3, #4]
 8003bba:	605a      	str	r2, [r3, #4]
 8003bbc:	685a      	ldr	r2, [r3, #4]
 8003bbe:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003bc2:	605a      	str	r2, [r3, #4]
 8003bc4:	685a      	ldr	r2, [r3, #4]
 8003bc6:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8003bca:	605a      	str	r2, [r3, #4]
 8003bcc:	685a      	ldr	r2, [r3, #4]
 8003bce:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
 8003bd2:	605a      	str	r2, [r3, #4]
 8003bd4:	685a      	ldr	r2, [r3, #4]
 8003bd6:	f022 4290 	bic.w	r2, r2, #1207959552	; 0x48000000
 8003bda:	f422 1270 	bic.w	r2, r2, #3932160	; 0x3c0000
 8003bde:	605a      	str	r2, [r3, #4]
 8003be0:	685a      	ldr	r2, [r3, #4]
 8003be2:	f042 6203 	orr.w	r2, r2, #137363456	; 0x8300000
 8003be6:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003bea:	605a      	str	r2, [r3, #4]
 8003bec:	681a      	ldr	r2, [r3, #0]
 8003bee:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8003bf2:	601a      	str	r2, [r3, #0]
 8003bf4:	681a      	ldr	r2, [r3, #0]
 8003bf6:	0192      	lsls	r2, r2, #6
 8003bf8:	d5fc      	bpl.n	8003bf4 <SystemInit+0xd0>
 8003bfa:	680a      	ldr	r2, [r1, #0]
 8003bfc:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8003c00:	600a      	str	r2, [r1, #0]
 8003c02:	4a0e      	ldr	r2, [pc, #56]	; (8003c3c <SystemInit+0x118>)
 8003c04:	6851      	ldr	r1, [r2, #4]
 8003c06:	03c8      	lsls	r0, r1, #15
 8003c08:	d5fc      	bpl.n	8003c04 <SystemInit+0xe0>
 8003c0a:	6811      	ldr	r1, [r2, #0]
 8003c0c:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
 8003c10:	6011      	str	r1, [r2, #0]
 8003c12:	6851      	ldr	r1, [r2, #4]
 8003c14:	0389      	lsls	r1, r1, #14
 8003c16:	d5fc      	bpl.n	8003c12 <SystemInit+0xee>
 8003c18:	685a      	ldr	r2, [r3, #4]
 8003c1a:	f022 0203 	bic.w	r2, r2, #3
 8003c1e:	605a      	str	r2, [r3, #4]
 8003c20:	685a      	ldr	r2, [r3, #4]
 8003c22:	f042 0202 	orr.w	r2, r2, #2
 8003c26:	605a      	str	r2, [r3, #4]
 8003c28:	685a      	ldr	r2, [r3, #4]
 8003c2a:	0712      	lsls	r2, r2, #28
 8003c2c:	d5fc      	bpl.n	8003c28 <SystemInit+0x104>
 8003c2e:	b002      	add	sp, #8
 8003c30:	4770      	bx	lr
 8003c32:	bf00      	nop
 8003c34:	e000ed00 	and	lr, r0, r0, lsl #26
 8003c38:	40021000 	andmi	r1, r2, r0
 8003c3c:	40007000 	andmi	r7, r0, r0

08003c40 <bkp_write_data>:
 8003c40:	f1a0 030b 	sub.w	r3, r0, #11
 8003c44:	2b1f      	cmp	r3, #31
 8003c46:	d804      	bhi.n	8003c52 <bkp_write_data+0x12>
 8003c48:	4b07      	ldr	r3, [pc, #28]	; (8003c68 <bkp_write_data+0x28>)
 8003c4a:	4403      	add	r3, r0
 8003c4c:	009b      	lsls	r3, r3, #2
 8003c4e:	8019      	strh	r1, [r3, #0]
 8003c50:	4770      	bx	lr
 8003c52:	1e43      	subs	r3, r0, #1
 8003c54:	2b09      	cmp	r3, #9
 8003c56:	bf9f      	itttt	ls
 8003c58:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8003c5c:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8003c60:	0080      	lslls	r0, r0, #2
 8003c62:	8001      	strhls	r1, [r0, #0]
 8003c64:	4770      	bx	lr
 8003c66:	bf00      	nop
 8003c68:	10001b05 	andne	r1, r0, r5, lsl #22

08003c6c <dma_deinit>:
 8003c6c:	4b0c      	ldr	r3, [pc, #48]	; (8003ca0 <dma_deinit+0x34>)
 8003c6e:	4298      	cmp	r0, r3
 8003c70:	d102      	bne.n	8003c78 <dma_deinit+0xc>
 8003c72:	2904      	cmp	r1, #4
 8003c74:	d900      	bls.n	8003c78 <dma_deinit+0xc>
 8003c76:	e7fe      	b.n	8003c76 <dma_deinit+0xa>
 8003c78:	2314      	movs	r3, #20
 8003c7a:	fb03 0301 	mla	r3, r3, r1, r0
 8003c7e:	0089      	lsls	r1, r1, #2
 8003c80:	689a      	ldr	r2, [r3, #8]
 8003c82:	f022 0201 	bic.w	r2, r2, #1
 8003c86:	609a      	str	r2, [r3, #8]
 8003c88:	2200      	movs	r2, #0
 8003c8a:	609a      	str	r2, [r3, #8]
 8003c8c:	60da      	str	r2, [r3, #12]
 8003c8e:	611a      	str	r2, [r3, #16]
 8003c90:	615a      	str	r2, [r3, #20]
 8003c92:	6842      	ldr	r2, [r0, #4]
 8003c94:	230f      	movs	r3, #15
 8003c96:	408b      	lsls	r3, r1
 8003c98:	4313      	orrs	r3, r2
 8003c9a:	6043      	str	r3, [r0, #4]
 8003c9c:	4770      	bx	lr
 8003c9e:	bf00      	nop
 8003ca0:	40020400 	andmi	r0, r2, r0, lsl #8

08003ca4 <dma_init>:
 8003ca4:	4b1b      	ldr	r3, [pc, #108]	; (8003d14 <dma_init+0x70>)
 8003ca6:	4298      	cmp	r0, r3
 8003ca8:	b510      	push	{r4, lr}
 8003caa:	d102      	bne.n	8003cb2 <dma_init+0xe>
 8003cac:	2904      	cmp	r1, #4
 8003cae:	d900      	bls.n	8003cb2 <dma_init+0xe>
 8003cb0:	e7fe      	b.n	8003cb0 <dma_init+0xc>
 8003cb2:	2314      	movs	r3, #20
 8003cb4:	fb03 0101 	mla	r1, r3, r1, r0
 8003cb8:	6813      	ldr	r3, [r2, #0]
 8003cba:	610b      	str	r3, [r1, #16]
 8003cbc:	6893      	ldr	r3, [r2, #8]
 8003cbe:	614b      	str	r3, [r1, #20]
 8003cc0:	8a13      	ldrh	r3, [r2, #16]
 8003cc2:	60cb      	str	r3, [r1, #12]
 8003cc4:	68d4      	ldr	r4, [r2, #12]
 8003cc6:	6853      	ldr	r3, [r2, #4]
 8003cc8:	6888      	ldr	r0, [r1, #8]
 8003cca:	4323      	orrs	r3, r4
 8003ccc:	6954      	ldr	r4, [r2, #20]
 8003cce:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8003cd2:	4323      	orrs	r3, r4
 8003cd4:	4303      	orrs	r3, r0
 8003cd6:	608b      	str	r3, [r1, #8]
 8003cd8:	7e13      	ldrb	r3, [r2, #24]
 8003cda:	2b01      	cmp	r3, #1
 8003cdc:	688b      	ldr	r3, [r1, #8]
 8003cde:	bf0c      	ite	eq
 8003ce0:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8003ce4:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8003ce8:	608b      	str	r3, [r1, #8]
 8003cea:	7e53      	ldrb	r3, [r2, #25]
 8003cec:	2b01      	cmp	r3, #1
 8003cee:	688b      	ldr	r3, [r1, #8]
 8003cf0:	bf0c      	ite	eq
 8003cf2:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8003cf6:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8003cfa:	608b      	str	r3, [r1, #8]
 8003cfc:	7e93      	ldrb	r3, [r2, #26]
 8003cfe:	b923      	cbnz	r3, 8003d0a <dma_init+0x66>
 8003d00:	688b      	ldr	r3, [r1, #8]
 8003d02:	f023 0310 	bic.w	r3, r3, #16
 8003d06:	608b      	str	r3, [r1, #8]
 8003d08:	bd10      	pop	{r4, pc}
 8003d0a:	688b      	ldr	r3, [r1, #8]
 8003d0c:	f043 0310 	orr.w	r3, r3, #16
 8003d10:	e7f9      	b.n	8003d06 <dma_init+0x62>
 8003d12:	bf00      	nop
 8003d14:	40020400 	andmi	r0, r2, r0, lsl #8

08003d18 <dma_circulation_disable>:
 8003d18:	4b06      	ldr	r3, [pc, #24]	; (8003d34 <dma_circulation_disable+0x1c>)
 8003d1a:	4298      	cmp	r0, r3
 8003d1c:	d102      	bne.n	8003d24 <dma_circulation_disable+0xc>
 8003d1e:	2904      	cmp	r1, #4
 8003d20:	d900      	bls.n	8003d24 <dma_circulation_disable+0xc>
 8003d22:	e7fe      	b.n	8003d22 <dma_circulation_disable+0xa>
 8003d24:	2314      	movs	r3, #20
 8003d26:	4359      	muls	r1, r3
 8003d28:	3008      	adds	r0, #8
 8003d2a:	580b      	ldr	r3, [r1, r0]
 8003d2c:	f023 0320 	bic.w	r3, r3, #32
 8003d30:	500b      	str	r3, [r1, r0]
 8003d32:	4770      	bx	lr
 8003d34:	40020400 	andmi	r0, r2, r0, lsl #8

08003d38 <dma_memory_to_memory_disable>:
 8003d38:	4b06      	ldr	r3, [pc, #24]	; (8003d54 <dma_memory_to_memory_disable+0x1c>)
 8003d3a:	4298      	cmp	r0, r3
 8003d3c:	d102      	bne.n	8003d44 <dma_memory_to_memory_disable+0xc>
 8003d3e:	2904      	cmp	r1, #4
 8003d40:	d900      	bls.n	8003d44 <dma_memory_to_memory_disable+0xc>
 8003d42:	e7fe      	b.n	8003d42 <dma_memory_to_memory_disable+0xa>
 8003d44:	2314      	movs	r3, #20
 8003d46:	4359      	muls	r1, r3
 8003d48:	3008      	adds	r0, #8
 8003d4a:	580b      	ldr	r3, [r1, r0]
 8003d4c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8003d50:	500b      	str	r3, [r1, r0]
 8003d52:	4770      	bx	lr
 8003d54:	40020400 	andmi	r0, r2, r0, lsl #8

08003d58 <dma_flag_clear>:
 8003d58:	6843      	ldr	r3, [r0, #4]
 8003d5a:	0089      	lsls	r1, r1, #2
 8003d5c:	408a      	lsls	r2, r1
 8003d5e:	431a      	orrs	r2, r3
 8003d60:	6042      	str	r2, [r0, #4]
 8003d62:	4770      	bx	lr

08003d64 <dma_interrupt_flag_get>:
 8003d64:	2a04      	cmp	r2, #4
 8003d66:	b510      	push	{r4, lr}
 8003d68:	d012      	beq.n	8003d90 <dma_interrupt_flag_get+0x2c>
 8003d6a:	2a08      	cmp	r2, #8
 8003d6c:	d01b      	beq.n	8003da6 <dma_interrupt_flag_get+0x42>
 8003d6e:	2a02      	cmp	r2, #2
 8003d70:	d124      	bne.n	8003dbc <dma_interrupt_flag_get+0x58>
 8003d72:	6803      	ldr	r3, [r0, #0]
 8003d74:	008c      	lsls	r4, r1, #2
 8003d76:	40a2      	lsls	r2, r4
 8003d78:	401a      	ands	r2, r3
 8003d7a:	2314      	movs	r3, #20
 8003d7c:	fb03 0301 	mla	r3, r3, r1, r0
 8003d80:	689b      	ldr	r3, [r3, #8]
 8003d82:	f003 0302 	and.w	r3, r3, #2
 8003d86:	b1d2      	cbz	r2, 8003dbe <dma_interrupt_flag_get+0x5a>
 8003d88:	1e18      	subs	r0, r3, #0
 8003d8a:	bf18      	it	ne
 8003d8c:	2001      	movne	r0, #1
 8003d8e:	bd10      	pop	{r4, pc}
 8003d90:	6803      	ldr	r3, [r0, #0]
 8003d92:	008c      	lsls	r4, r1, #2
 8003d94:	40a2      	lsls	r2, r4
 8003d96:	401a      	ands	r2, r3
 8003d98:	2314      	movs	r3, #20
 8003d9a:	fb03 0301 	mla	r3, r3, r1, r0
 8003d9e:	689b      	ldr	r3, [r3, #8]
 8003da0:	f003 0304 	and.w	r3, r3, #4
 8003da4:	e7ef      	b.n	8003d86 <dma_interrupt_flag_get+0x22>
 8003da6:	6803      	ldr	r3, [r0, #0]
 8003da8:	008c      	lsls	r4, r1, #2
 8003daa:	40a2      	lsls	r2, r4
 8003dac:	401a      	ands	r2, r3
 8003dae:	2314      	movs	r3, #20
 8003db0:	fb03 0101 	mla	r1, r3, r1, r0
 8003db4:	688b      	ldr	r3, [r1, #8]
 8003db6:	f003 0308 	and.w	r3, r3, #8
 8003dba:	e7e4      	b.n	8003d86 <dma_interrupt_flag_get+0x22>
 8003dbc:	e7fe      	b.n	8003dbc <dma_interrupt_flag_get+0x58>
 8003dbe:	4610      	mov	r0, r2
 8003dc0:	e7e5      	b.n	8003d8e <dma_interrupt_flag_get+0x2a>

08003dc2 <dma_interrupt_flag_clear>:
 8003dc2:	f7ff bfc9 	b.w	8003d58 <dma_flag_clear>
	...

08003dc8 <dma_interrupt_disable>:
 8003dc8:	4b06      	ldr	r3, [pc, #24]	; (8003de4 <dma_interrupt_disable+0x1c>)
 8003dca:	4298      	cmp	r0, r3
 8003dcc:	d102      	bne.n	8003dd4 <dma_interrupt_disable+0xc>
 8003dce:	2904      	cmp	r1, #4
 8003dd0:	d900      	bls.n	8003dd4 <dma_interrupt_disable+0xc>
 8003dd2:	e7fe      	b.n	8003dd2 <dma_interrupt_disable+0xa>
 8003dd4:	2314      	movs	r3, #20
 8003dd6:	4359      	muls	r1, r3
 8003dd8:	3008      	adds	r0, #8
 8003dda:	580b      	ldr	r3, [r1, r0]
 8003ddc:	ea23 0202 	bic.w	r2, r3, r2
 8003de0:	500a      	str	r2, [r1, r0]
 8003de2:	4770      	bx	lr
 8003de4:	40020400 	andmi	r0, r2, r0, lsl #8

08003de8 <fmc_bank0_unlock>:
 8003de8:	4b04      	ldr	r3, [pc, #16]	; (8003dfc <fmc_bank0_unlock+0x14>)
 8003dea:	691a      	ldr	r2, [r3, #16]
 8003dec:	0612      	lsls	r2, r2, #24
 8003dee:	bf41      	itttt	mi
 8003df0:	4a03      	ldrmi	r2, [pc, #12]	; (8003e00 <fmc_bank0_unlock+0x18>)
 8003df2:	605a      	strmi	r2, [r3, #4]
 8003df4:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8003df8:	605a      	strmi	r2, [r3, #4]
 8003dfa:	4770      	bx	lr
 8003dfc:	40022000 	andmi	r2, r2, r0
 8003e00:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08003e04 <fmc_bank1_unlock>:
 8003e04:	4b04      	ldr	r3, [pc, #16]	; (8003e18 <fmc_bank1_unlock+0x14>)
 8003e06:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003e08:	0612      	lsls	r2, r2, #24
 8003e0a:	bf41      	itttt	mi
 8003e0c:	4a03      	ldrmi	r2, [pc, #12]	; (8003e1c <fmc_bank1_unlock+0x18>)
 8003e0e:	645a      	strmi	r2, [r3, #68]	; 0x44
 8003e10:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8003e14:	645a      	strmi	r2, [r3, #68]	; 0x44
 8003e16:	4770      	bx	lr
 8003e18:	40022000 	andmi	r2, r2, r0
 8003e1c:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08003e20 <fmc_bank0_lock>:
 8003e20:	4a02      	ldr	r2, [pc, #8]	; (8003e2c <fmc_bank0_lock+0xc>)
 8003e22:	6913      	ldr	r3, [r2, #16]
 8003e24:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003e28:	6113      	str	r3, [r2, #16]
 8003e2a:	4770      	bx	lr
 8003e2c:	40022000 	andmi	r2, r2, r0

08003e30 <fmc_bank1_lock>:
 8003e30:	4a02      	ldr	r2, [pc, #8]	; (8003e3c <fmc_bank1_lock+0xc>)
 8003e32:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8003e34:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003e38:	6513      	str	r3, [r2, #80]	; 0x50
 8003e3a:	4770      	bx	lr
 8003e3c:	40022000 	andmi	r2, r2, r0

08003e40 <fmc_bank0_state_get>:
 8003e40:	4b07      	ldr	r3, [pc, #28]	; (8003e60 <fmc_bank0_state_get+0x20>)
 8003e42:	68da      	ldr	r2, [r3, #12]
 8003e44:	07d1      	lsls	r1, r2, #31
 8003e46:	d407      	bmi.n	8003e58 <fmc_bank0_state_get+0x18>
 8003e48:	68da      	ldr	r2, [r3, #12]
 8003e4a:	06d2      	lsls	r2, r2, #27
 8003e4c:	d406      	bmi.n	8003e5c <fmc_bank0_state_get+0x1c>
 8003e4e:	68d8      	ldr	r0, [r3, #12]
 8003e50:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8003e54:	0040      	lsls	r0, r0, #1
 8003e56:	4770      	bx	lr
 8003e58:	2001      	movs	r0, #1
 8003e5a:	4770      	bx	lr
 8003e5c:	2003      	movs	r0, #3
 8003e5e:	4770      	bx	lr
 8003e60:	40022000 	andmi	r2, r2, r0

08003e64 <fmc_bank1_state_get>:
 8003e64:	4b07      	ldr	r3, [pc, #28]	; (8003e84 <fmc_bank1_state_get+0x20>)
 8003e66:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8003e68:	07d1      	lsls	r1, r2, #31
 8003e6a:	d407      	bmi.n	8003e7c <fmc_bank1_state_get+0x18>
 8003e6c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8003e6e:	06d2      	lsls	r2, r2, #27
 8003e70:	d406      	bmi.n	8003e80 <fmc_bank1_state_get+0x1c>
 8003e72:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003e74:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8003e78:	0040      	lsls	r0, r0, #1
 8003e7a:	4770      	bx	lr
 8003e7c:	2001      	movs	r0, #1
 8003e7e:	4770      	bx	lr
 8003e80:	2003      	movs	r0, #3
 8003e82:	4770      	bx	lr
 8003e84:	40022000 	andmi	r2, r2, r0

08003e88 <fwdgt_enable>:
 8003e88:	4b02      	ldr	r3, [pc, #8]	; (8003e94 <fwdgt_enable+0xc>)
 8003e8a:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8003e8e:	601a      	str	r2, [r3, #0]
 8003e90:	4770      	bx	lr
 8003e92:	bf00      	nop
 8003e94:	40003000 	andmi	r3, r0, r0

08003e98 <fwdgt_counter_reload>:
 8003e98:	4b02      	ldr	r3, [pc, #8]	; (8003ea4 <fwdgt_counter_reload+0xc>)
 8003e9a:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8003e9e:	601a      	str	r2, [r3, #0]
 8003ea0:	4770      	bx	lr
 8003ea2:	bf00      	nop
 8003ea4:	40003000 	andmi	r3, r0, r0

08003ea8 <fwdgt_config>:
 8003ea8:	4a12      	ldr	r2, [pc, #72]	; (8003ef4 <fwdgt_config+0x4c>)
 8003eaa:	b510      	push	{r4, lr}
 8003eac:	f245 5355 	movw	r3, #21845	; 0x5555
 8003eb0:	4c11      	ldr	r4, [pc, #68]	; (8003ef8 <fwdgt_config+0x50>)
 8003eb2:	6013      	str	r3, [r2, #0]
 8003eb4:	68d3      	ldr	r3, [r2, #12]
 8003eb6:	3c01      	subs	r4, #1
 8003eb8:	f003 0301 	and.w	r3, r3, #1
 8003ebc:	d013      	beq.n	8003ee6 <fwdgt_config+0x3e>
 8003ebe:	2b00      	cmp	r3, #0
 8003ec0:	d1f8      	bne.n	8003eb4 <fwdgt_config+0xc>
 8003ec2:	6051      	str	r1, [r2, #4]
 8003ec4:	490c      	ldr	r1, [pc, #48]	; (8003ef8 <fwdgt_config+0x50>)
 8003ec6:	4a0b      	ldr	r2, [pc, #44]	; (8003ef4 <fwdgt_config+0x4c>)
 8003ec8:	68d3      	ldr	r3, [r2, #12]
 8003eca:	3901      	subs	r1, #1
 8003ecc:	f003 0302 	and.w	r3, r3, #2
 8003ed0:	d00d      	beq.n	8003eee <fwdgt_config+0x46>
 8003ed2:	2b00      	cmp	r3, #0
 8003ed4:	d1f8      	bne.n	8003ec8 <fwdgt_config+0x20>
 8003ed6:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8003eda:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8003ede:	6090      	str	r0, [r2, #8]
 8003ee0:	6013      	str	r3, [r2, #0]
 8003ee2:	2001      	movs	r0, #1
 8003ee4:	e002      	b.n	8003eec <fwdgt_config+0x44>
 8003ee6:	2b00      	cmp	r3, #0
 8003ee8:	d0eb      	beq.n	8003ec2 <fwdgt_config+0x1a>
 8003eea:	2000      	movs	r0, #0
 8003eec:	bd10      	pop	{r4, pc}
 8003eee:	2b00      	cmp	r3, #0
 8003ef0:	d1fb      	bne.n	8003eea <fwdgt_config+0x42>
 8003ef2:	e7f0      	b.n	8003ed6 <fwdgt_config+0x2e>
 8003ef4:	40003000 	andmi	r3, r0, r0
 8003ef8:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08003efc <gpio_init>:
 8003efc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003f00:	06cd      	lsls	r5, r1, #27
 8003f02:	f001 040f 	and.w	r4, r1, #15
 8003f06:	d508      	bpl.n	8003f1a <gpio_init+0x1e>
 8003f08:	2a04      	cmp	r2, #4
 8003f0a:	bf01      	itttt	eq
 8003f0c:	6bc2      	ldreq	r2, [r0, #60]	; 0x3c
 8003f0e:	431a      	orreq	r2, r3
 8003f10:	f044 0403 	orreq.w	r4, r4, #3
 8003f14:	63c2      	streq	r2, [r0, #60]	; 0x3c
 8003f16:	bf18      	it	ne
 8003f18:	4314      	orrne	r4, r2
 8003f1a:	2500      	movs	r5, #0
 8003f1c:	f04f 0c01 	mov.w	ip, #1
 8003f20:	f04f 0e0f 	mov.w	lr, #15
 8003f24:	fa0c f605 	lsl.w	r6, ip, r5
 8003f28:	401e      	ands	r6, r3
 8003f2a:	d00d      	beq.n	8003f48 <gpio_init+0x4c>
 8003f2c:	00aa      	lsls	r2, r5, #2
 8003f2e:	6807      	ldr	r7, [r0, #0]
 8003f30:	fa0e f802 	lsl.w	r8, lr, r2
 8003f34:	ea27 0708 	bic.w	r7, r7, r8
 8003f38:	fa04 f202 	lsl.w	r2, r4, r2
 8003f3c:	2928      	cmp	r1, #40	; 0x28
 8003f3e:	ea42 0207 	orr.w	r2, r2, r7
 8003f42:	d122      	bne.n	8003f8a <gpio_init+0x8e>
 8003f44:	6146      	str	r6, [r0, #20]
 8003f46:	6002      	str	r2, [r0, #0]
 8003f48:	3501      	adds	r5, #1
 8003f4a:	2d08      	cmp	r5, #8
 8003f4c:	d1ea      	bne.n	8003f24 <gpio_init+0x28>
 8003f4e:	2600      	movs	r6, #0
 8003f50:	f04f 0c01 	mov.w	ip, #1
 8003f54:	f04f 0e0f 	mov.w	lr, #15
 8003f58:	f106 0208 	add.w	r2, r6, #8
 8003f5c:	fa0c f202 	lsl.w	r2, ip, r2
 8003f60:	401a      	ands	r2, r3
 8003f62:	d00d      	beq.n	8003f80 <gpio_init+0x84>
 8003f64:	00b5      	lsls	r5, r6, #2
 8003f66:	6847      	ldr	r7, [r0, #4]
 8003f68:	fa0e f805 	lsl.w	r8, lr, r5
 8003f6c:	ea27 0708 	bic.w	r7, r7, r8
 8003f70:	fa04 f505 	lsl.w	r5, r4, r5
 8003f74:	2928      	cmp	r1, #40	; 0x28
 8003f76:	ea45 0507 	orr.w	r5, r5, r7
 8003f7a:	d10a      	bne.n	8003f92 <gpio_init+0x96>
 8003f7c:	6142      	str	r2, [r0, #20]
 8003f7e:	6045      	str	r5, [r0, #4]
 8003f80:	3601      	adds	r6, #1
 8003f82:	2e08      	cmp	r6, #8
 8003f84:	d1e8      	bne.n	8003f58 <gpio_init+0x5c>
 8003f86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003f8a:	2948      	cmp	r1, #72	; 0x48
 8003f8c:	bf08      	it	eq
 8003f8e:	6106      	streq	r6, [r0, #16]
 8003f90:	e7d9      	b.n	8003f46 <gpio_init+0x4a>
 8003f92:	2948      	cmp	r1, #72	; 0x48
 8003f94:	bf08      	it	eq
 8003f96:	6102      	streq	r2, [r0, #16]
 8003f98:	e7f1      	b.n	8003f7e <gpio_init+0x82>

08003f9a <gpio_input_bit_get>:
 8003f9a:	6883      	ldr	r3, [r0, #8]
 8003f9c:	420b      	tst	r3, r1
 8003f9e:	bf14      	ite	ne
 8003fa0:	2001      	movne	r0, #1
 8003fa2:	2000      	moveq	r0, #0
 8003fa4:	4770      	bx	lr
	...

08003fa8 <gpio_pin_remap_config>:
 8003fa8:	2800      	cmp	r0, #0
 8003faa:	4a16      	ldr	r2, [pc, #88]	; (8004004 <gpio_pin_remap_config+0x5c>)
 8003fac:	b530      	push	{r4, r5, lr}
 8003fae:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8003fb2:	bfb4      	ite	lt
 8003fb4:	69d3      	ldrlt	r3, [r2, #28]
 8003fb6:	6853      	ldrge	r3, [r2, #4]
 8003fb8:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8003fbc:	b284      	uxth	r4, r0
 8003fbe:	d110      	bne.n	8003fe2 <gpio_pin_remap_config+0x3a>
 8003fc0:	6855      	ldr	r5, [r2, #4]
 8003fc2:	f025 65e0 	bic.w	r5, r5, #117440512	; 0x7000000
 8003fc6:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8003fca:	6055      	str	r5, [r2, #4]
 8003fcc:	b119      	cbz	r1, 8003fd6 <gpio_pin_remap_config+0x2e>
 8003fce:	0d42      	lsrs	r2, r0, #21
 8003fd0:	0112      	lsls	r2, r2, #4
 8003fd2:	4094      	lsls	r4, r2
 8003fd4:	4323      	orrs	r3, r4
 8003fd6:	4a0b      	ldr	r2, [pc, #44]	; (8004004 <gpio_pin_remap_config+0x5c>)
 8003fd8:	2800      	cmp	r0, #0
 8003fda:	bfb4      	ite	lt
 8003fdc:	61d3      	strlt	r3, [r2, #28]
 8003fde:	6053      	strge	r3, [r2, #4]
 8003fe0:	bd30      	pop	{r4, r5, pc}
 8003fe2:	02c2      	lsls	r2, r0, #11
 8003fe4:	bf55      	itete	pl
 8003fe6:	0d42      	lsrpl	r2, r0, #21
 8003fe8:	2203      	movmi	r2, #3
 8003fea:	0112      	lslpl	r2, r2, #4
 8003fec:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8003ff0:	bf4c      	ite	mi
 8003ff2:	40aa      	lslmi	r2, r5
 8003ff4:	fa04 f202 	lslpl.w	r2, r4, r2
 8003ff8:	ea23 0302 	bic.w	r3, r3, r2
 8003ffc:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8004000:	e7e4      	b.n	8003fcc <gpio_pin_remap_config+0x24>
 8004002:	bf00      	nop
 8004004:	40010000 	andmi	r0, r1, r0

08004008 <pmu_backup_write_enable>:
 8004008:	4a02      	ldr	r2, [pc, #8]	; (8004014 <pmu_backup_write_enable+0xc>)
 800400a:	6813      	ldr	r3, [r2, #0]
 800400c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004010:	6013      	str	r3, [r2, #0]
 8004012:	4770      	bx	lr
 8004014:	40007000 	andmi	r7, r0, r0

08004018 <rcu_periph_clock_enable>:
 8004018:	0983      	lsrs	r3, r0, #6
 800401a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800401e:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8004022:	f000 001f 	and.w	r0, r0, #31
 8004026:	6819      	ldr	r1, [r3, #0]
 8004028:	2201      	movs	r2, #1
 800402a:	4082      	lsls	r2, r0
 800402c:	430a      	orrs	r2, r1
 800402e:	601a      	str	r2, [r3, #0]
 8004030:	4770      	bx	lr

08004032 <rcu_periph_clock_disable>:
 8004032:	0983      	lsrs	r3, r0, #6
 8004034:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8004038:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 800403c:	f000 001f 	and.w	r0, r0, #31
 8004040:	681a      	ldr	r2, [r3, #0]
 8004042:	2101      	movs	r1, #1
 8004044:	4081      	lsls	r1, r0
 8004046:	ea22 0201 	bic.w	r2, r2, r1
 800404a:	601a      	str	r2, [r3, #0]
 800404c:	4770      	bx	lr

0800404e <rcu_periph_reset_enable>:
 800404e:	f7ff bfe3 	b.w	8004018 <rcu_periph_clock_enable>

08004052 <rcu_periph_reset_disable>:
 8004052:	f7ff bfee 	b.w	8004032 <rcu_periph_clock_disable>
	...

08004058 <rcu_adc_clock_config>:
 8004058:	4913      	ldr	r1, [pc, #76]	; (80040a8 <rcu_adc_clock_config+0x50>)
 800405a:	684b      	ldr	r3, [r1, #4]
 800405c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800405e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004062:	b510      	push	{r4, lr}
 8004064:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8004068:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 800406c:	280b      	cmp	r0, #11
 800406e:	d809      	bhi.n	8004084 <rcu_adc_clock_config+0x2c>
 8004070:	e8df f000 	tbb	[pc, r0]
 8004074:	06060606 	streq	r0, [r6], -r6, lsl #12
 8004078:	0b080b08 	bleq	8206ca0 <_sidata+0x2015f0>
 800407c:	12121212 	andsne	r1, r2, #536870913	; 0x20000001
 8004080:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8004084:	604b      	str	r3, [r1, #4]
 8004086:	62ca      	str	r2, [r1, #44]	; 0x2c
 8004088:	bd10      	pop	{r4, pc}
 800408a:	4c08      	ldr	r4, [pc, #32]	; (80040ac <rcu_adc_clock_config+0x54>)
 800408c:	ea04 3080 	and.w	r0, r4, r0, lsl #14
 8004090:	4303      	orrs	r3, r0
 8004092:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004096:	e7f5      	b.n	8004084 <rcu_adc_clock_config+0x2c>
 8004098:	4c05      	ldr	r4, [pc, #20]	; (80040b0 <rcu_adc_clock_config+0x58>)
 800409a:	ea04 3080 	and.w	r0, r4, r0, lsl #14
 800409e:	4303      	orrs	r3, r0
 80040a0:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 80040a4:	e7ee      	b.n	8004084 <rcu_adc_clock_config+0x2c>
 80040a6:	bf00      	nop
 80040a8:	40021000 	andmi	r1, r2, r0
 80040ac:	fffec000 			; <UNDEFINED> instruction: 0xfffec000
 80040b0:	fffcc000 			; <UNDEFINED> instruction: 0xfffcc000

080040b4 <rcu_clock_freq_get>:
 80040b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80040b6:	4b35      	ldr	r3, [pc, #212]	; (800418c <rcu_clock_freq_get+0xd8>)
 80040b8:	b089      	sub	sp, #36	; 0x24
 80040ba:	4604      	mov	r4, r0
 80040bc:	ad04      	add	r5, sp, #16
 80040be:	f103 0610 	add.w	r6, r3, #16
 80040c2:	461f      	mov	r7, r3
 80040c4:	6818      	ldr	r0, [r3, #0]
 80040c6:	6859      	ldr	r1, [r3, #4]
 80040c8:	462a      	mov	r2, r5
 80040ca:	c203      	stmia	r2!, {r0, r1}
 80040cc:	3308      	adds	r3, #8
 80040ce:	42b3      	cmp	r3, r6
 80040d0:	4615      	mov	r5, r2
 80040d2:	d1f7      	bne.n	80040c4 <rcu_clock_freq_get+0x10>
 80040d4:	6938      	ldr	r0, [r7, #16]
 80040d6:	6871      	ldr	r1, [r6, #4]
 80040d8:	4a2d      	ldr	r2, [pc, #180]	; (8004190 <rcu_clock_freq_get+0xdc>)
 80040da:	466b      	mov	r3, sp
 80040dc:	c303      	stmia	r3!, {r0, r1}
 80040de:	c303      	stmia	r3!, {r0, r1}
 80040e0:	6853      	ldr	r3, [r2, #4]
 80040e2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80040e6:	2b02      	cmp	r3, #2
 80040e8:	d143      	bne.n	8004172 <rcu_clock_freq_get+0xbe>
 80040ea:	6853      	ldr	r3, [r2, #4]
 80040ec:	03df      	lsls	r7, r3, #15
 80040ee:	d538      	bpl.n	8004162 <rcu_clock_freq_get+0xae>
 80040f0:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80040f2:	4928      	ldr	r1, [pc, #160]	; (8004194 <rcu_clock_freq_get+0xe0>)
 80040f4:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 80040f8:	4b27      	ldr	r3, [pc, #156]	; (8004198 <rcu_clock_freq_get+0xe4>)
 80040fa:	bf18      	it	ne
 80040fc:	4619      	movne	r1, r3
 80040fe:	6853      	ldr	r3, [r2, #4]
 8004100:	039e      	lsls	r6, r3, #14
 8004102:	d500      	bpl.n	8004106 <rcu_clock_freq_get+0x52>
 8004104:	0849      	lsrs	r1, r1, #1
 8004106:	6853      	ldr	r3, [r2, #4]
 8004108:	6850      	ldr	r0, [r2, #4]
 800410a:	0105      	lsls	r5, r0, #4
 800410c:	6850      	ldr	r0, [r2, #4]
 800410e:	f3c3 4383 	ubfx	r3, r3, #18, #4
 8004112:	bf48      	it	mi
 8004114:	f043 0310 	orrmi.w	r3, r3, #16
 8004118:	0040      	lsls	r0, r0, #1
 800411a:	d524      	bpl.n	8004166 <rcu_clock_freq_get+0xb2>
 800411c:	f043 0320 	orr.w	r3, r3, #32
 8004120:	2b3f      	cmp	r3, #63	; 0x3f
 8004122:	d124      	bne.n	800416e <rcu_clock_freq_get+0xba>
 8004124:	fb01 f003 	mul.w	r0, r1, r3
 8004128:	6853      	ldr	r3, [r2, #4]
 800412a:	6851      	ldr	r1, [r2, #4]
 800412c:	6852      	ldr	r2, [r2, #4]
 800412e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8004132:	3320      	adds	r3, #32
 8004134:	446b      	add	r3, sp
 8004136:	f3c1 2102 	ubfx	r1, r1, #8, #3
 800413a:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 800413e:	3120      	adds	r1, #32
 8004140:	3220      	adds	r2, #32
 8004142:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8004146:	4469      	add	r1, sp
 8004148:	446a      	add	r2, sp
 800414a:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 800414e:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8004152:	fa20 f303 	lsr.w	r3, r0, r3
 8004156:	2c03      	cmp	r4, #3
 8004158:	d816      	bhi.n	8004188 <rcu_clock_freq_get+0xd4>
 800415a:	e8df f004 	tbb	[pc, r4]
 800415e:	120f0c0d 	andne	r0, pc, #3328	; 0xd00
 8004162:	490e      	ldr	r1, [pc, #56]	; (800419c <rcu_clock_freq_get+0xe8>)
 8004164:	e7cf      	b.n	8004106 <rcu_clock_freq_get+0x52>
 8004166:	2b0e      	cmp	r3, #14
 8004168:	d801      	bhi.n	800416e <rcu_clock_freq_get+0xba>
 800416a:	3302      	adds	r3, #2
 800416c:	e7da      	b.n	8004124 <rcu_clock_freq_get+0x70>
 800416e:	3301      	adds	r3, #1
 8004170:	e7d8      	b.n	8004124 <rcu_clock_freq_get+0x70>
 8004172:	4808      	ldr	r0, [pc, #32]	; (8004194 <rcu_clock_freq_get+0xe0>)
 8004174:	e7d8      	b.n	8004128 <rcu_clock_freq_get+0x74>
 8004176:	4618      	mov	r0, r3
 8004178:	b009      	add	sp, #36	; 0x24
 800417a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800417c:	fa23 f001 	lsr.w	r0, r3, r1
 8004180:	e7fa      	b.n	8004178 <rcu_clock_freq_get+0xc4>
 8004182:	fa23 f002 	lsr.w	r0, r3, r2
 8004186:	e7f7      	b.n	8004178 <rcu_clock_freq_get+0xc4>
 8004188:	2000      	movs	r0, #0
 800418a:	e7f5      	b.n	8004178 <rcu_clock_freq_get+0xc4>
 800418c:	08004e40 	stmdaeq	r0, {r6, r9, sl, fp, lr}
 8004190:	40021000 	andmi	r1, r2, r0
 8004194:	007a1200 	rsbseq	r1, sl, r0, lsl #4
 8004198:	02dc6c00 	sbcseq	r6, ip, #0, 24
 800419c:	003d0900 	eorseq	r0, sp, r0, lsl #18

080041a0 <timer_deinit>:
 80041a0:	b508      	push	{r3, lr}
 80041a2:	4b2d      	ldr	r3, [pc, #180]	; (8004258 <timer_deinit+0xb8>)
 80041a4:	4298      	cmp	r0, r3
 80041a6:	d048      	beq.n	800423a <timer_deinit+0x9a>
 80041a8:	d816      	bhi.n	80041d8 <timer_deinit+0x38>
 80041aa:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80041ae:	4298      	cmp	r0, r3
 80041b0:	d03c      	beq.n	800422c <timer_deinit+0x8c>
 80041b2:	d807      	bhi.n	80041c4 <timer_deinit+0x24>
 80041b4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80041b8:	d02a      	beq.n	8004210 <timer_deinit+0x70>
 80041ba:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80041be:	4298      	cmp	r0, r3
 80041c0:	d02d      	beq.n	800421e <timer_deinit+0x7e>
 80041c2:	bd08      	pop	{r3, pc}
 80041c4:	4b25      	ldr	r3, [pc, #148]	; (800425c <timer_deinit+0xbc>)
 80041c6:	4298      	cmp	r0, r3
 80041c8:	d1fb      	bne.n	80041c2 <timer_deinit+0x22>
 80041ca:	f240 4003 	movw	r0, #1027	; 0x403
 80041ce:	f7ff ff3e 	bl	800404e <rcu_periph_reset_enable>
 80041d2:	f240 4003 	movw	r0, #1027	; 0x403
 80041d6:	e017      	b.n	8004208 <timer_deinit+0x68>
 80041d8:	4b21      	ldr	r3, [pc, #132]	; (8004260 <timer_deinit+0xc0>)
 80041da:	4298      	cmp	r0, r3
 80041dc:	d00e      	beq.n	80041fc <timer_deinit+0x5c>
 80041de:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80041e2:	4298      	cmp	r0, r3
 80041e4:	d030      	beq.n	8004248 <timer_deinit+0xa8>
 80041e6:	f5a3 3390 	sub.w	r3, r3, #73728	; 0x12000
 80041ea:	4298      	cmp	r0, r3
 80041ec:	d1e9      	bne.n	80041c2 <timer_deinit+0x22>
 80041ee:	f240 4005 	movw	r0, #1029	; 0x405
 80041f2:	f7ff ff2c 	bl	800404e <rcu_periph_reset_enable>
 80041f6:	f240 4005 	movw	r0, #1029	; 0x405
 80041fa:	e005      	b.n	8004208 <timer_deinit+0x68>
 80041fc:	f240 300b 	movw	r0, #779	; 0x30b
 8004200:	f7ff ff25 	bl	800404e <rcu_periph_reset_enable>
 8004204:	f240 300b 	movw	r0, #779	; 0x30b
 8004208:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800420c:	f7ff bf21 	b.w	8004052 <rcu_periph_reset_disable>
 8004210:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8004214:	f7ff ff1b 	bl	800404e <rcu_periph_reset_enable>
 8004218:	f44f 6080 	mov.w	r0, #1024	; 0x400
 800421c:	e7f4      	b.n	8004208 <timer_deinit+0x68>
 800421e:	f240 4001 	movw	r0, #1025	; 0x401
 8004222:	f7ff ff14 	bl	800404e <rcu_periph_reset_enable>
 8004226:	f240 4001 	movw	r0, #1025	; 0x401
 800422a:	e7ed      	b.n	8004208 <timer_deinit+0x68>
 800422c:	f240 4002 	movw	r0, #1026	; 0x402
 8004230:	f7ff ff0d 	bl	800404e <rcu_periph_reset_enable>
 8004234:	f240 4002 	movw	r0, #1026	; 0x402
 8004238:	e7e6      	b.n	8004208 <timer_deinit+0x68>
 800423a:	f240 4004 	movw	r0, #1028	; 0x404
 800423e:	f7ff ff06 	bl	800404e <rcu_periph_reset_enable>
 8004242:	f240 4004 	movw	r0, #1028	; 0x404
 8004246:	e7df      	b.n	8004208 <timer_deinit+0x68>
 8004248:	f240 300d 	movw	r0, #781	; 0x30d
 800424c:	f7ff feff 	bl	800404e <rcu_periph_reset_enable>
 8004250:	f240 300d 	movw	r0, #781	; 0x30d
 8004254:	e7d8      	b.n	8004208 <timer_deinit+0x68>
 8004256:	bf00      	nop
 8004258:	40001000 	andmi	r1, r0, r0
 800425c:	40000c00 	andmi	r0, r0, r0, lsl #24
 8004260:	40012c00 	andmi	r2, r1, r0, lsl #24

08004264 <timer_init>:
 8004264:	880b      	ldrh	r3, [r1, #0]
 8004266:	6283      	str	r3, [r0, #40]	; 0x28
 8004268:	4b1a      	ldr	r3, [pc, #104]	; (80042d4 <timer_init+0x70>)
 800426a:	4298      	cmp	r0, r3
 800426c:	d007      	beq.n	800427e <timer_init+0x1a>
 800426e:	f420 6340 	bic.w	r3, r0, #3072	; 0xc00
 8004272:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004276:	d002      	beq.n	800427e <timer_init+0x1a>
 8004278:	4b17      	ldr	r3, [pc, #92]	; (80042d8 <timer_init+0x74>)
 800427a:	4298      	cmp	r0, r3
 800427c:	d10b      	bne.n	8004296 <timer_init+0x32>
 800427e:	6803      	ldr	r3, [r0, #0]
 8004280:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004284:	6003      	str	r3, [r0, #0]
 8004286:	6802      	ldr	r2, [r0, #0]
 8004288:	884b      	ldrh	r3, [r1, #2]
 800428a:	4313      	orrs	r3, r2
 800428c:	6003      	str	r3, [r0, #0]
 800428e:	6802      	ldr	r2, [r0, #0]
 8004290:	888b      	ldrh	r3, [r1, #4]
 8004292:	4313      	orrs	r3, r2
 8004294:	6003      	str	r3, [r0, #0]
 8004296:	688b      	ldr	r3, [r1, #8]
 8004298:	62c3      	str	r3, [r0, #44]	; 0x2c
 800429a:	4b10      	ldr	r3, [pc, #64]	; (80042dc <timer_init+0x78>)
 800429c:	4298      	cmp	r0, r3
 800429e:	d003      	beq.n	80042a8 <timer_init+0x44>
 80042a0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80042a4:	4298      	cmp	r0, r3
 80042a6:	d104      	bne.n	80042b2 <timer_init+0x4e>
 80042a8:	6943      	ldr	r3, [r0, #20]
 80042aa:	f043 0301 	orr.w	r3, r3, #1
 80042ae:	6143      	str	r3, [r0, #20]
 80042b0:	4770      	bx	lr
 80042b2:	6803      	ldr	r3, [r0, #0]
 80042b4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80042b8:	6003      	str	r3, [r0, #0]
 80042ba:	6802      	ldr	r2, [r0, #0]
 80042bc:	88cb      	ldrh	r3, [r1, #6]
 80042be:	4313      	orrs	r3, r2
 80042c0:	6003      	str	r3, [r0, #0]
 80042c2:	4b04      	ldr	r3, [pc, #16]	; (80042d4 <timer_init+0x70>)
 80042c4:	4298      	cmp	r0, r3
 80042c6:	d002      	beq.n	80042ce <timer_init+0x6a>
 80042c8:	4b03      	ldr	r3, [pc, #12]	; (80042d8 <timer_init+0x74>)
 80042ca:	4298      	cmp	r0, r3
 80042cc:	d1ec      	bne.n	80042a8 <timer_init+0x44>
 80042ce:	7b0b      	ldrb	r3, [r1, #12]
 80042d0:	6303      	str	r3, [r0, #48]	; 0x30
 80042d2:	e7e9      	b.n	80042a8 <timer_init+0x44>
 80042d4:	40012c00 	andmi	r2, r1, r0, lsl #24
 80042d8:	40013400 	andmi	r3, r1, r0, lsl #8
 80042dc:	40001000 	andmi	r1, r0, r0

080042e0 <timer_enable>:
 80042e0:	6803      	ldr	r3, [r0, #0]
 80042e2:	f043 0301 	orr.w	r3, r3, #1
 80042e6:	6003      	str	r3, [r0, #0]
 80042e8:	4770      	bx	lr

080042ea <timer_interrupt_enable>:
 80042ea:	68c3      	ldr	r3, [r0, #12]
 80042ec:	4319      	orrs	r1, r3
 80042ee:	60c1      	str	r1, [r0, #12]
 80042f0:	4770      	bx	lr

080042f2 <timer_interrupt_flag_clear>:
 80042f2:	43c9      	mvns	r1, r1
 80042f4:	6101      	str	r1, [r0, #16]
 80042f6:	4770      	bx	lr

080042f8 <timer_flag_clear>:
 80042f8:	43c9      	mvns	r1, r1
 80042fa:	6101      	str	r1, [r0, #16]
 80042fc:	4770      	bx	lr

080042fe <timer_channel_output_mode_config>:
 80042fe:	2903      	cmp	r1, #3
 8004300:	d81a      	bhi.n	8004338 <timer_channel_output_mode_config+0x3a>
 8004302:	e8df f001 	tbb	[pc, r1]
 8004306:	1a120a02 	bne	8486b16 <_sidata+0x481466>
 800430a:	6983      	ldr	r3, [r0, #24]
 800430c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004310:	6183      	str	r3, [r0, #24]
 8004312:	6983      	ldr	r3, [r0, #24]
 8004314:	4313      	orrs	r3, r2
 8004316:	6183      	str	r3, [r0, #24]
 8004318:	4770      	bx	lr
 800431a:	6983      	ldr	r3, [r0, #24]
 800431c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004320:	6183      	str	r3, [r0, #24]
 8004322:	6983      	ldr	r3, [r0, #24]
 8004324:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8004328:	e7f5      	b.n	8004316 <timer_channel_output_mode_config+0x18>
 800432a:	69c3      	ldr	r3, [r0, #28]
 800432c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004330:	61c3      	str	r3, [r0, #28]
 8004332:	69c3      	ldr	r3, [r0, #28]
 8004334:	4313      	orrs	r3, r2
 8004336:	61c3      	str	r3, [r0, #28]
 8004338:	4770      	bx	lr
 800433a:	69c3      	ldr	r3, [r0, #28]
 800433c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004340:	61c3      	str	r3, [r0, #28]
 8004342:	69c3      	ldr	r3, [r0, #28]
 8004344:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8004348:	e7f5      	b.n	8004336 <timer_channel_output_mode_config+0x38>

0800434a <timer_channel_output_pulse_value_config>:
 800434a:	2903      	cmp	r1, #3
 800434c:	d80a      	bhi.n	8004364 <timer_channel_output_pulse_value_config+0x1a>
 800434e:	e8df f001 	tbb	[pc, r1]
 8004352:	08060402 	stmdaeq	r6, {r1, sl}
 8004356:	6342      	str	r2, [r0, #52]	; 0x34
 8004358:	4770      	bx	lr
 800435a:	6382      	str	r2, [r0, #56]	; 0x38
 800435c:	4770      	bx	lr
 800435e:	63c2      	str	r2, [r0, #60]	; 0x3c
 8004360:	4770      	bx	lr
 8004362:	6402      	str	r2, [r0, #64]	; 0x40
 8004364:	4770      	bx	lr
	...

08004368 <usart_deinit>:
 8004368:	b508      	push	{r3, lr}
 800436a:	4b1d      	ldr	r3, [pc, #116]	; (80043e0 <usart_deinit+0x78>)
 800436c:	4298      	cmp	r0, r3
 800436e:	d028      	beq.n	80043c2 <usart_deinit+0x5a>
 8004370:	d808      	bhi.n	8004384 <usart_deinit+0x1c>
 8004372:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8004376:	4298      	cmp	r0, r3
 8004378:	d015      	beq.n	80043a6 <usart_deinit+0x3e>
 800437a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800437e:	4298      	cmp	r0, r3
 8004380:	d018      	beq.n	80043b4 <usart_deinit+0x4c>
 8004382:	bd08      	pop	{r3, pc}
 8004384:	4b17      	ldr	r3, [pc, #92]	; (80043e4 <usart_deinit+0x7c>)
 8004386:	4298      	cmp	r0, r3
 8004388:	d022      	beq.n	80043d0 <usart_deinit+0x68>
 800438a:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 800438e:	4298      	cmp	r0, r3
 8004390:	d1f7      	bne.n	8004382 <usart_deinit+0x1a>
 8004392:	f240 300e 	movw	r0, #782	; 0x30e
 8004396:	f7ff fe5a 	bl	800404e <rcu_periph_reset_enable>
 800439a:	f240 300e 	movw	r0, #782	; 0x30e
 800439e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80043a2:	f7ff be56 	b.w	8004052 <rcu_periph_reset_disable>
 80043a6:	f240 4011 	movw	r0, #1041	; 0x411
 80043aa:	f7ff fe50 	bl	800404e <rcu_periph_reset_enable>
 80043ae:	f240 4011 	movw	r0, #1041	; 0x411
 80043b2:	e7f4      	b.n	800439e <usart_deinit+0x36>
 80043b4:	f240 4012 	movw	r0, #1042	; 0x412
 80043b8:	f7ff fe49 	bl	800404e <rcu_periph_reset_enable>
 80043bc:	f240 4012 	movw	r0, #1042	; 0x412
 80043c0:	e7ed      	b.n	800439e <usart_deinit+0x36>
 80043c2:	f240 4013 	movw	r0, #1043	; 0x413
 80043c6:	f7ff fe42 	bl	800404e <rcu_periph_reset_enable>
 80043ca:	f240 4013 	movw	r0, #1043	; 0x413
 80043ce:	e7e6      	b.n	800439e <usart_deinit+0x36>
 80043d0:	f240 4014 	movw	r0, #1044	; 0x414
 80043d4:	f7ff fe3b 	bl	800404e <rcu_periph_reset_enable>
 80043d8:	f240 4014 	movw	r0, #1044	; 0x414
 80043dc:	e7df      	b.n	800439e <usart_deinit+0x36>
 80043de:	bf00      	nop
 80043e0:	40004c00 	andmi	r4, r0, r0, lsl #24
 80043e4:	40005000 	andmi	r5, r0, r0

080043e8 <usart_baudrate_set>:
 80043e8:	b538      	push	{r3, r4, r5, lr}
 80043ea:	4b11      	ldr	r3, [pc, #68]	; (8004430 <usart_baudrate_set+0x48>)
 80043ec:	4298      	cmp	r0, r3
 80043ee:	4604      	mov	r4, r0
 80043f0:	460d      	mov	r5, r1
 80043f2:	d01b      	beq.n	800442c <usart_baudrate_set+0x44>
 80043f4:	d809      	bhi.n	800440a <usart_baudrate_set+0x22>
 80043f6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80043fa:	4298      	cmp	r0, r3
 80043fc:	d016      	beq.n	800442c <usart_baudrate_set+0x44>
 80043fe:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004402:	4298      	cmp	r0, r3
 8004404:	d012      	beq.n	800442c <usart_baudrate_set+0x44>
 8004406:	2000      	movs	r0, #0
 8004408:	e009      	b.n	800441e <usart_baudrate_set+0x36>
 800440a:	4b0a      	ldr	r3, [pc, #40]	; (8004434 <usart_baudrate_set+0x4c>)
 800440c:	4298      	cmp	r0, r3
 800440e:	d00d      	beq.n	800442c <usart_baudrate_set+0x44>
 8004410:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8004414:	4298      	cmp	r0, r3
 8004416:	d1f6      	bne.n	8004406 <usart_baudrate_set+0x1e>
 8004418:	2003      	movs	r0, #3
 800441a:	f7ff fe4b 	bl	80040b4 <rcu_clock_freq_get>
 800441e:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 8004422:	fbb3 f1f5 	udiv	r1, r3, r5
 8004426:	b289      	uxth	r1, r1
 8004428:	60a1      	str	r1, [r4, #8]
 800442a:	bd38      	pop	{r3, r4, r5, pc}
 800442c:	2002      	movs	r0, #2
 800442e:	e7f4      	b.n	800441a <usart_baudrate_set+0x32>
 8004430:	40004c00 	andmi	r4, r0, r0, lsl #24
 8004434:	40005000 	andmi	r5, r0, r0

08004438 <usart_parity_config>:
 8004438:	68c3      	ldr	r3, [r0, #12]
 800443a:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 800443e:	60c3      	str	r3, [r0, #12]
 8004440:	68c3      	ldr	r3, [r0, #12]
 8004442:	4319      	orrs	r1, r3
 8004444:	60c1      	str	r1, [r0, #12]
 8004446:	4770      	bx	lr

08004448 <usart_word_length_set>:
 8004448:	68c3      	ldr	r3, [r0, #12]
 800444a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800444e:	60c3      	str	r3, [r0, #12]
 8004450:	68c3      	ldr	r3, [r0, #12]
 8004452:	4319      	orrs	r1, r3
 8004454:	60c1      	str	r1, [r0, #12]
 8004456:	4770      	bx	lr

08004458 <usart_stop_bit_set>:
 8004458:	6903      	ldr	r3, [r0, #16]
 800445a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800445e:	6103      	str	r3, [r0, #16]
 8004460:	6903      	ldr	r3, [r0, #16]
 8004462:	4319      	orrs	r1, r3
 8004464:	6101      	str	r1, [r0, #16]
 8004466:	4770      	bx	lr

08004468 <usart_transmit_config>:
 8004468:	68c3      	ldr	r3, [r0, #12]
 800446a:	f023 0308 	bic.w	r3, r3, #8
 800446e:	4319      	orrs	r1, r3
 8004470:	60c1      	str	r1, [r0, #12]
 8004472:	4770      	bx	lr

08004474 <usart_receive_config>:
 8004474:	68c3      	ldr	r3, [r0, #12]
 8004476:	f023 0304 	bic.w	r3, r3, #4
 800447a:	4319      	orrs	r1, r3
 800447c:	60c1      	str	r1, [r0, #12]
 800447e:	4770      	bx	lr

08004480 <usart_hardware_flow_rts_config>:
 8004480:	6943      	ldr	r3, [r0, #20]
 8004482:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004486:	4319      	orrs	r1, r3
 8004488:	6141      	str	r1, [r0, #20]
 800448a:	4770      	bx	lr

0800448c <usart_hardware_flow_cts_config>:
 800448c:	6943      	ldr	r3, [r0, #20]
 800448e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8004492:	4319      	orrs	r1, r3
 8004494:	6141      	str	r1, [r0, #20]
 8004496:	4770      	bx	lr

08004498 <usart_dma_transmit_config>:
 8004498:	6943      	ldr	r3, [r0, #20]
 800449a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800449e:	4319      	orrs	r1, r3
 80044a0:	6141      	str	r1, [r0, #20]
 80044a2:	4770      	bx	lr

080044a4 <usart_flag_get>:
 80044a4:	098b      	lsrs	r3, r1, #6
 80044a6:	f001 011f 	and.w	r1, r1, #31
 80044aa:	5818      	ldr	r0, [r3, r0]
 80044ac:	40c8      	lsrs	r0, r1
 80044ae:	f000 0001 	and.w	r0, r0, #1
 80044b2:	4770      	bx	lr

080044b4 <usart_flag_clear>:
 80044b4:	b510      	push	{r4, lr}
 80044b6:	098c      	lsrs	r4, r1, #6
 80044b8:	2201      	movs	r2, #1
 80044ba:	5823      	ldr	r3, [r4, r0]
 80044bc:	f001 011f 	and.w	r1, r1, #31
 80044c0:	408a      	lsls	r2, r1
 80044c2:	ea23 0302 	bic.w	r3, r3, r2
 80044c6:	5023      	str	r3, [r4, r0]
 80044c8:	bd10      	pop	{r4, pc}

080044ca <usart_interrupt_enable>:
 80044ca:	098a      	lsrs	r2, r1, #6
 80044cc:	b510      	push	{r4, lr}
 80044ce:	f001 011f 	and.w	r1, r1, #31
 80044d2:	5814      	ldr	r4, [r2, r0]
 80044d4:	2301      	movs	r3, #1
 80044d6:	408b      	lsls	r3, r1
 80044d8:	4323      	orrs	r3, r4
 80044da:	5013      	str	r3, [r2, r0]
 80044dc:	bd10      	pop	{r4, pc}

080044de <usart_interrupt_disable>:
 80044de:	f7ff bfe9 	b.w	80044b4 <usart_flag_clear>

080044e2 <usart_interrupt_flag_clear>:
 80044e2:	b510      	push	{r4, lr}
 80044e4:	0d8c      	lsrs	r4, r1, #22
 80044e6:	2201      	movs	r2, #1
 80044e8:	5823      	ldr	r3, [r4, r0]
 80044ea:	f3c1 4104 	ubfx	r1, r1, #16, #5
 80044ee:	408a      	lsls	r2, r1
 80044f0:	ea23 0302 	bic.w	r3, r3, r2
 80044f4:	5023      	str	r3, [r4, r0]
 80044f6:	bd10      	pop	{r4, pc}

080044f8 <uart0_init>:
 80044f8:	b507      	push	{r0, r1, r2, lr}
 80044fa:	2301      	movs	r3, #1
 80044fc:	9300      	str	r3, [sp, #0]
 80044fe:	4805      	ldr	r0, [pc, #20]	; (8004514 <uart0_init+0x1c>)
 8004500:	2300      	movs	r3, #0
 8004502:	2208      	movs	r2, #8
 8004504:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8004508:	f000 f9cc 	bl	80048a4 <gd32_uart_begin>
 800450c:	b003      	add	sp, #12
 800450e:	f85d fb04 	ldr.w	pc, [sp], #4
 8004512:	bf00      	nop
 8004514:	40013800 	andmi	r3, r1, r0, lsl #16

08004518 <uart0_putc>:
 8004518:	280a      	cmp	r0, #10
 800451a:	b538      	push	{r3, r4, r5, lr}
 800451c:	4604      	mov	r4, r0
 800451e:	d10a      	bne.n	8004536 <uart0_putc+0x1e>
 8004520:	4d0b      	ldr	r5, [pc, #44]	; (8004550 <uart0_putc+0x38>)
 8004522:	2107      	movs	r1, #7
 8004524:	4628      	mov	r0, r5
 8004526:	f7ff ffbd 	bl	80044a4 <usart_flag_get>
 800452a:	2800      	cmp	r0, #0
 800452c:	d0f9      	beq.n	8004522 <uart0_putc+0xa>
 800452e:	4b09      	ldr	r3, [pc, #36]	; (8004554 <uart0_putc+0x3c>)
 8004530:	220d      	movs	r2, #13
 8004532:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 8004536:	4d06      	ldr	r5, [pc, #24]	; (8004550 <uart0_putc+0x38>)
 8004538:	2107      	movs	r1, #7
 800453a:	4628      	mov	r0, r5
 800453c:	f7ff ffb2 	bl	80044a4 <usart_flag_get>
 8004540:	2800      	cmp	r0, #0
 8004542:	d0f9      	beq.n	8004538 <uart0_putc+0x20>
 8004544:	4b03      	ldr	r3, [pc, #12]	; (8004554 <uart0_putc+0x3c>)
 8004546:	b2e4      	uxtb	r4, r4
 8004548:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 800454c:	bd38      	pop	{r3, r4, r5, pc}
 800454e:	bf00      	nop
 8004550:	40013800 	andmi	r3, r1, r0, lsl #16
 8004554:	40013000 	andmi	r3, r1, r0

08004558 <gd32_adc_init()>:
 8004558:	b510      	push	{r4, lr}
 800455a:	f240 6009 	movw	r0, #1545	; 0x609
 800455e:	4c21      	ldr	r4, [pc, #132]	; (80045e4 <gd32_adc_init()+0x8c>)
 8004560:	f7ff fd5a 	bl	8004018 <rcu_periph_clock_enable>
 8004564:	2005      	movs	r0, #5
 8004566:	f7ff fd77 	bl	8004058 <rcu_adc_clock_config>
 800456a:	4620      	mov	r0, r4
 800456c:	2201      	movs	r2, #1
 800456e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004572:	f000 fae1 	bl	8004b38 <adc_special_function_config>
 8004576:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 800457a:	4620      	mov	r0, r4
 800457c:	2102      	movs	r1, #2
 800457e:	f000 fb72 	bl	8004c66 <adc_external_trigger_source_config>
 8004582:	2100      	movs	r1, #0
 8004584:	4620      	mov	r0, r4
 8004586:	f000 faff 	bl	8004b88 <adc_data_alignment_config>
 800458a:	2000      	movs	r0, #0
 800458c:	f000 fac4 	bl	8004b18 <adc_mode_config>
 8004590:	2202      	movs	r2, #2
 8004592:	4611      	mov	r1, r2
 8004594:	4620      	mov	r0, r4
 8004596:	f000 fb00 	bl	8004b9a <adc_channel_length_config>
 800459a:	4620      	mov	r0, r4
 800459c:	2307      	movs	r3, #7
 800459e:	2210      	movs	r2, #16
 80045a0:	2100      	movs	r1, #0
 80045a2:	f000 fb17 	bl	8004bd4 <adc_inserted_channel_config>
 80045a6:	2307      	movs	r3, #7
 80045a8:	4620      	mov	r0, r4
 80045aa:	2211      	movs	r2, #17
 80045ac:	2101      	movs	r1, #1
 80045ae:	f000 fb11 	bl	8004bd4 <adc_inserted_channel_config>
 80045b2:	2201      	movs	r2, #1
 80045b4:	2102      	movs	r1, #2
 80045b6:	4620      	mov	r0, r4
 80045b8:	f000 fb3a 	bl	8004c30 <adc_external_trigger_config>
 80045bc:	f000 faa2 	bl	8004b04 <adc_tempsensor_vrefint_enable>
 80045c0:	4620      	mov	r0, r4
 80045c2:	f000 fa85 	bl	8004ad0 <adc_enable>
 80045c6:	2100      	movs	r1, #0
 80045c8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80045cc:	f000 fa68 	bl	8004aa0 <udelay(unsigned long, unsigned long)>
 80045d0:	4620      	mov	r0, r4
 80045d2:	f000 fa85 	bl	8004ae0 <adc_calibration_enable>
 80045d6:	4620      	mov	r0, r4
 80045d8:	2102      	movs	r1, #2
 80045da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80045de:	f000 bb53 	b.w	8004c88 <adc_software_trigger_enable>
 80045e2:	bf00      	nop
 80045e4:	40012400 	andmi	r2, r1, r0, lsl #8

080045e8 <_stop() [clone .isra.0]>:
 80045e8:	b508      	push	{r3, lr}
 80045ea:	4806      	ldr	r0, [pc, #24]	; (8004604 <_stop() [clone .isra.0]+0x1c>)
 80045ec:	f000 fc02 	bl	8004df4 <i2c_stop_on_bus>
 80045f0:	4905      	ldr	r1, [pc, #20]	; (8004608 <_stop() [clone .isra.0]+0x20>)
 80045f2:	f640 73ff 	movw	r3, #4095	; 0xfff
 80045f6:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 80045fa:	0592      	lsls	r2, r2, #22
 80045fc:	d501      	bpl.n	8004602 <_stop() [clone .isra.0]+0x1a>
 80045fe:	3b01      	subs	r3, #1
 8004600:	d1f9      	bne.n	80045f6 <_stop() [clone .isra.0]+0xe>
 8004602:	bd08      	pop	{r3, pc}
 8004604:	40005400 	andmi	r5, r0, r0, lsl #8
 8004608:	40005000 	andmi	r5, r0, r0

0800460c <gd32_i2c_begin>:
 800460c:	b508      	push	{r3, lr}
 800460e:	f240 7015 	movw	r0, #1813	; 0x715
 8004612:	f7ff fd01 	bl	8004018 <rcu_periph_clock_enable>
 8004616:	f240 6003 	movw	r0, #1539	; 0x603
 800461a:	f7ff fcfd 	bl	8004018 <rcu_periph_clock_enable>
 800461e:	f240 6003 	movw	r0, #1539	; 0x603
 8004622:	f7ff fcf9 	bl	8004018 <rcu_periph_clock_enable>
 8004626:	4810      	ldr	r0, [pc, #64]	; (8004668 <gd32_i2c_begin+0x5c>)
 8004628:	f44f 7380 	mov.w	r3, #256	; 0x100
 800462c:	2203      	movs	r2, #3
 800462e:	211c      	movs	r1, #28
 8004630:	f7ff fc64 	bl	8003efc <gpio_init>
 8004634:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004638:	2203      	movs	r2, #3
 800463a:	480b      	ldr	r0, [pc, #44]	; (8004668 <gd32_i2c_begin+0x5c>)
 800463c:	211c      	movs	r1, #28
 800463e:	f7ff fc5d 	bl	8003efc <gpio_init>
 8004642:	2101      	movs	r1, #1
 8004644:	2002      	movs	r0, #2
 8004646:	f7ff fcaf 	bl	8003fa8 <gpio_pin_remap_config>
 800464a:	4908      	ldr	r1, [pc, #32]	; (800466c <gd32_i2c_begin+0x60>)
 800464c:	4808      	ldr	r0, [pc, #32]	; (8004670 <gd32_i2c_begin+0x64>)
 800464e:	2200      	movs	r2, #0
 8004650:	f000 fb28 	bl	8004ca4 <i2c_clock_config>
 8004654:	4806      	ldr	r0, [pc, #24]	; (8004670 <gd32_i2c_begin+0x64>)
 8004656:	f000 fbc3 	bl	8004de0 <i2c_enable>
 800465a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800465e:	4804      	ldr	r0, [pc, #16]	; (8004670 <gd32_i2c_begin+0x64>)
 8004660:	2101      	movs	r1, #1
 8004662:	f000 bba3 	b.w	8004dac <i2c_ack_config>
 8004666:	bf00      	nop
 8004668:	40010c00 	andmi	r0, r1, r0, lsl #24
 800466c:	00061a80 	andeq	r1, r6, r0, lsl #21
 8004670:	40005400 	andmi	r5, r0, r0, lsl #8

08004674 <gd32_i2c_set_baudrate>:
 8004674:	4601      	mov	r1, r0
 8004676:	2200      	movs	r2, #0
 8004678:	4801      	ldr	r0, [pc, #4]	; (8004680 <gd32_i2c_set_baudrate+0xc>)
 800467a:	f000 bb13 	b.w	8004ca4 <i2c_clock_config>
 800467e:	bf00      	nop
 8004680:	40005400 	andmi	r5, r0, r0, lsl #8

08004684 <gd32_i2c_set_address>:
 8004684:	4b01      	ldr	r3, [pc, #4]	; (800468c <gd32_i2c_set_address+0x8>)
 8004686:	0040      	lsls	r0, r0, #1
 8004688:	7018      	strb	r0, [r3, #0]
 800468a:	4770      	bx	lr
 800468c:	200027b8 			; <UNDEFINED> instruction: 0x200027b8

08004690 <gd32_i2c_write>:
 8004690:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004692:	4e30      	ldr	r6, [pc, #192]	; (8004754 <gd32_i2c_write+0xc4>)
 8004694:	4604      	mov	r4, r0
 8004696:	460f      	mov	r7, r1
 8004698:	f640 75ff 	movw	r5, #4095	; 0xfff
 800469c:	f240 6101 	movw	r1, #1537	; 0x601
 80046a0:	4630      	mov	r0, r6
 80046a2:	f000 fbb1 	bl	8004e08 <i2c_flag_get>
 80046a6:	b9b0      	cbnz	r0, 80046d6 <gd32_i2c_write+0x46>
 80046a8:	482a      	ldr	r0, [pc, #168]	; (8004754 <gd32_i2c_write+0xc4>)
 80046aa:	4e2a      	ldr	r6, [pc, #168]	; (8004754 <gd32_i2c_write+0xc4>)
 80046ac:	f000 fb9d 	bl	8004dea <i2c_start_on_bus>
 80046b0:	f640 75ff 	movw	r5, #4095	; 0xfff
 80046b4:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80046b8:	4630      	mov	r0, r6
 80046ba:	f000 fba5 	bl	8004e08 <i2c_flag_get>
 80046be:	b190      	cbz	r0, 80046e6 <gd32_i2c_write+0x56>
 80046c0:	4b25      	ldr	r3, [pc, #148]	; (8004758 <gd32_i2c_write+0xc8>)
 80046c2:	4824      	ldr	r0, [pc, #144]	; (8004754 <gd32_i2c_write+0xc4>)
 80046c4:	7819      	ldrb	r1, [r3, #0]
 80046c6:	4e23      	ldr	r6, [pc, #140]	; (8004754 <gd32_i2c_write+0xc4>)
 80046c8:	f06f 0201 	mvn.w	r2, #1
 80046cc:	f000 fb80 	bl	8004dd0 <i2c_master_addressing>
 80046d0:	f640 75ff 	movw	r5, #4095	; 0xfff
 80046d4:	e00c      	b.n	80046f0 <gd32_i2c_write+0x60>
 80046d6:	3d01      	subs	r5, #1
 80046d8:	d1e0      	bne.n	800469c <gd32_i2c_write+0xc>
 80046da:	f7ff ff85 	bl	80045e8 <_stop() [clone .isra.0]>
 80046de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80046e2:	4240      	negs	r0, r0
 80046e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80046e6:	3d01      	subs	r5, #1
 80046e8:	d1e4      	bne.n	80046b4 <gd32_i2c_write+0x24>
 80046ea:	e7f6      	b.n	80046da <gd32_i2c_write+0x4a>
 80046ec:	3d01      	subs	r5, #1
 80046ee:	d0f4      	beq.n	80046da <gd32_i2c_write+0x4a>
 80046f0:	f240 5101 	movw	r1, #1281	; 0x501
 80046f4:	4630      	mov	r0, r6
 80046f6:	f000 fb87 	bl	8004e08 <i2c_flag_get>
 80046fa:	2800      	cmp	r0, #0
 80046fc:	d0f6      	beq.n	80046ec <gd32_i2c_write+0x5c>
 80046fe:	4815      	ldr	r0, [pc, #84]	; (8004754 <gd32_i2c_write+0xc4>)
 8004700:	4e14      	ldr	r6, [pc, #80]	; (8004754 <gd32_i2c_write+0xc4>)
 8004702:	f240 5101 	movw	r1, #1281	; 0x501
 8004706:	f000 fb87 	bl	8004e18 <i2c_flag_clear>
 800470a:	f640 75ff 	movw	r5, #4095	; 0xfff
 800470e:	f240 5107 	movw	r1, #1287	; 0x507
 8004712:	4630      	mov	r0, r6
 8004714:	f000 fb78 	bl	8004e08 <i2c_flag_get>
 8004718:	2801      	cmp	r0, #1
 800471a:	d107      	bne.n	800472c <gd32_i2c_write+0x9c>
 800471c:	4e0d      	ldr	r6, [pc, #52]	; (8004754 <gd32_i2c_write+0xc4>)
 800471e:	4427      	add	r7, r4
 8004720:	42a7      	cmp	r7, r4
 8004722:	d106      	bne.n	8004732 <gd32_i2c_write+0xa2>
 8004724:	f7ff ff60 	bl	80045e8 <_stop() [clone .isra.0]>
 8004728:	2000      	movs	r0, #0
 800472a:	e7da      	b.n	80046e2 <gd32_i2c_write+0x52>
 800472c:	3d01      	subs	r5, #1
 800472e:	d1ee      	bne.n	800470e <gd32_i2c_write+0x7e>
 8004730:	e7d3      	b.n	80046da <gd32_i2c_write+0x4a>
 8004732:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004736:	4630      	mov	r0, r6
 8004738:	f000 fb61 	bl	8004dfe <i2c_data_transmit>
 800473c:	f640 75ff 	movw	r5, #4095	; 0xfff
 8004740:	f240 5102 	movw	r1, #1282	; 0x502
 8004744:	4630      	mov	r0, r6
 8004746:	f000 fb5f 	bl	8004e08 <i2c_flag_get>
 800474a:	2800      	cmp	r0, #0
 800474c:	d1e8      	bne.n	8004720 <gd32_i2c_write+0x90>
 800474e:	3d01      	subs	r5, #1
 8004750:	d1f6      	bne.n	8004740 <gd32_i2c_write+0xb0>
 8004752:	e7c2      	b.n	80046da <gd32_i2c_write+0x4a>
 8004754:	40005400 	andmi	r5, r0, r0, lsl #8
 8004758:	200027b8 			; <UNDEFINED> instruction: 0x200027b8

0800475c <gd32_i2c_read>:
 800475c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004760:	4f4d      	ldr	r7, [pc, #308]	; (8004898 <gd32_i2c_read+0x13c>)
 8004762:	4680      	mov	r8, r0
 8004764:	460c      	mov	r4, r1
 8004766:	f640 76ff 	movw	r6, #4095	; 0xfff
 800476a:	f240 6101 	movw	r1, #1537	; 0x601
 800476e:	4638      	mov	r0, r7
 8004770:	f000 fb4a 	bl	8004e08 <i2c_flag_get>
 8004774:	4605      	mov	r5, r0
 8004776:	bb08      	cbnz	r0, 80047bc <gd32_i2c_read+0x60>
 8004778:	2c02      	cmp	r4, #2
 800477a:	d103      	bne.n	8004784 <gd32_i2c_read+0x28>
 800477c:	4601      	mov	r1, r0
 800477e:	4846      	ldr	r0, [pc, #280]	; (8004898 <gd32_i2c_read+0x13c>)
 8004780:	f000 fb1d 	bl	8004dbe <i2c_ackpos_config>
 8004784:	4844      	ldr	r0, [pc, #272]	; (8004898 <gd32_i2c_read+0x13c>)
 8004786:	4f44      	ldr	r7, [pc, #272]	; (8004898 <gd32_i2c_read+0x13c>)
 8004788:	f000 fb2f 	bl	8004dea <i2c_start_on_bus>
 800478c:	f640 76ff 	movw	r6, #4095	; 0xfff
 8004790:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8004794:	4638      	mov	r0, r7
 8004796:	f000 fb37 	bl	8004e08 <i2c_flag_get>
 800479a:	b1a8      	cbz	r0, 80047c8 <gd32_i2c_read+0x6c>
 800479c:	4b3f      	ldr	r3, [pc, #252]	; (800489c <gd32_i2c_read+0x140>)
 800479e:	483e      	ldr	r0, [pc, #248]	; (8004898 <gd32_i2c_read+0x13c>)
 80047a0:	7819      	ldrb	r1, [r3, #0]
 80047a2:	2201      	movs	r2, #1
 80047a4:	f000 fb14 	bl	8004dd0 <i2c_master_addressing>
 80047a8:	2c02      	cmp	r4, #2
 80047aa:	d803      	bhi.n	80047b4 <gd32_i2c_read+0x58>
 80047ac:	483a      	ldr	r0, [pc, #232]	; (8004898 <gd32_i2c_read+0x13c>)
 80047ae:	2100      	movs	r1, #0
 80047b0:	f000 fafc 	bl	8004dac <i2c_ack_config>
 80047b4:	4f38      	ldr	r7, [pc, #224]	; (8004898 <gd32_i2c_read+0x13c>)
 80047b6:	f640 76ff 	movw	r6, #4095	; 0xfff
 80047ba:	e00a      	b.n	80047d2 <gd32_i2c_read+0x76>
 80047bc:	3e01      	subs	r6, #1
 80047be:	d1d4      	bne.n	800476a <gd32_i2c_read+0xe>
 80047c0:	f7ff ff12 	bl	80045e8 <_stop() [clone .isra.0]>
 80047c4:	2504      	movs	r5, #4
 80047c6:	e04d      	b.n	8004864 <gd32_i2c_read+0x108>
 80047c8:	3e01      	subs	r6, #1
 80047ca:	d1e1      	bne.n	8004790 <gd32_i2c_read+0x34>
 80047cc:	e7f8      	b.n	80047c0 <gd32_i2c_read+0x64>
 80047ce:	3e01      	subs	r6, #1
 80047d0:	d0f6      	beq.n	80047c0 <gd32_i2c_read+0x64>
 80047d2:	f240 5101 	movw	r1, #1281	; 0x501
 80047d6:	4638      	mov	r0, r7
 80047d8:	f000 fb16 	bl	8004e08 <i2c_flag_get>
 80047dc:	2800      	cmp	r0, #0
 80047de:	d0f6      	beq.n	80047ce <gd32_i2c_read+0x72>
 80047e0:	482d      	ldr	r0, [pc, #180]	; (8004898 <gd32_i2c_read+0x13c>)
 80047e2:	f240 5101 	movw	r1, #1281	; 0x501
 80047e6:	f000 fb17 	bl	8004e18 <i2c_flag_clear>
 80047ea:	2c01      	cmp	r4, #1
 80047ec:	d102      	bne.n	80047f4 <gd32_i2c_read+0x98>
 80047ee:	482a      	ldr	r0, [pc, #168]	; (8004898 <gd32_i2c_read+0x13c>)
 80047f0:	f000 fb00 	bl	8004df4 <i2c_stop_on_bus>
 80047f4:	4e28      	ldr	r6, [pc, #160]	; (8004898 <gd32_i2c_read+0x13c>)
 80047f6:	f640 77ff 	movw	r7, #4095	; 0xfff
 80047fa:	e022      	b.n	8004842 <gd32_i2c_read+0xe6>
 80047fc:	2c03      	cmp	r4, #3
 80047fe:	d134      	bne.n	800486a <gd32_i2c_read+0x10e>
 8004800:	f640 79ff 	movw	r9, #4095	; 0xfff
 8004804:	e002      	b.n	800480c <gd32_i2c_read+0xb0>
 8004806:	f1b9 0901 	subs.w	r9, r9, #1
 800480a:	d0d9      	beq.n	80047c0 <gd32_i2c_read+0x64>
 800480c:	f240 5102 	movw	r1, #1282	; 0x502
 8004810:	4630      	mov	r0, r6
 8004812:	f000 faf9 	bl	8004e08 <i2c_flag_get>
 8004816:	2800      	cmp	r0, #0
 8004818:	d0f5      	beq.n	8004806 <gd32_i2c_read+0xaa>
 800481a:	2100      	movs	r1, #0
 800481c:	4630      	mov	r0, r6
 800481e:	f000 fac5 	bl	8004dac <i2c_ack_config>
 8004822:	f240 5106 	movw	r1, #1286	; 0x506
 8004826:	4630      	mov	r0, r6
 8004828:	f000 faee 	bl	8004e08 <i2c_flag_get>
 800482c:	b138      	cbz	r0, 800483e <gd32_i2c_read+0xe2>
 800482e:	4630      	mov	r0, r6
 8004830:	f000 fae7 	bl	8004e02 <i2c_data_receive>
 8004834:	f808 0b01 	strb.w	r0, [r8], #1
 8004838:	3c01      	subs	r4, #1
 800483a:	f640 77ff 	movw	r7, #4095	; 0xfff
 800483e:	3f01      	subs	r7, #1
 8004840:	d0be      	beq.n	80047c0 <gd32_i2c_read+0x64>
 8004842:	2c00      	cmp	r4, #0
 8004844:	d1da      	bne.n	80047fc <gd32_i2c_read+0xa0>
 8004846:	4916      	ldr	r1, [pc, #88]	; (80048a0 <gd32_i2c_read+0x144>)
 8004848:	f640 73ff 	movw	r3, #4095	; 0xfff
 800484c:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8004850:	0592      	lsls	r2, r2, #22
 8004852:	d41d      	bmi.n	8004890 <gd32_i2c_read+0x134>
 8004854:	4810      	ldr	r0, [pc, #64]	; (8004898 <gd32_i2c_read+0x13c>)
 8004856:	2101      	movs	r1, #1
 8004858:	f000 faa8 	bl	8004dac <i2c_ack_config>
 800485c:	480e      	ldr	r0, [pc, #56]	; (8004898 <gd32_i2c_read+0x13c>)
 800485e:	2101      	movs	r1, #1
 8004860:	f000 faad 	bl	8004dbe <i2c_ackpos_config>
 8004864:	4628      	mov	r0, r5
 8004866:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800486a:	2c02      	cmp	r4, #2
 800486c:	d1d9      	bne.n	8004822 <gd32_i2c_read+0xc6>
 800486e:	f640 79ff 	movw	r9, #4095	; 0xfff
 8004872:	e002      	b.n	800487a <gd32_i2c_read+0x11e>
 8004874:	f1b9 0901 	subs.w	r9, r9, #1
 8004878:	d0a2      	beq.n	80047c0 <gd32_i2c_read+0x64>
 800487a:	f240 5102 	movw	r1, #1282	; 0x502
 800487e:	4630      	mov	r0, r6
 8004880:	f000 fac2 	bl	8004e08 <i2c_flag_get>
 8004884:	2800      	cmp	r0, #0
 8004886:	d0f5      	beq.n	8004874 <gd32_i2c_read+0x118>
 8004888:	4630      	mov	r0, r6
 800488a:	f000 fab3 	bl	8004df4 <i2c_stop_on_bus>
 800488e:	e7c8      	b.n	8004822 <gd32_i2c_read+0xc6>
 8004890:	3b01      	subs	r3, #1
 8004892:	d1db      	bne.n	800484c <gd32_i2c_read+0xf0>
 8004894:	e796      	b.n	80047c4 <gd32_i2c_read+0x68>
 8004896:	bf00      	nop
 8004898:	40005400 	andmi	r5, r0, r0, lsl #8
 800489c:	200027b8 			; <UNDEFINED> instruction: 0x200027b8
 80048a0:	40005000 	andmi	r5, r0, r0

080048a4 <gd32_uart_begin>:
 80048a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80048a6:	461e      	mov	r6, r3
 80048a8:	4b63      	ldr	r3, [pc, #396]	; (8004a38 <gd32_uart_begin+0x194>)
 80048aa:	4298      	cmp	r0, r3
 80048ac:	4604      	mov	r4, r0
 80048ae:	460f      	mov	r7, r1
 80048b0:	4615      	mov	r5, r2
 80048b2:	d03b      	beq.n	800492c <gd32_uart_begin+0x88>
 80048b4:	d80a      	bhi.n	80048cc <gd32_uart_begin+0x28>
 80048b6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80048ba:	4298      	cmp	r0, r3
 80048bc:	d02f      	beq.n	800491e <gd32_uart_begin+0x7a>
 80048be:	f240 7012 	movw	r0, #1810	; 0x712
 80048c2:	f7ff fba9 	bl	8004018 <rcu_periph_clock_enable>
 80048c6:	f240 6004 	movw	r0, #1540	; 0x604
 80048ca:	e008      	b.n	80048de <gd32_uart_begin+0x3a>
 80048cc:	4b5b      	ldr	r3, [pc, #364]	; (8004a3c <gd32_uart_begin+0x198>)
 80048ce:	4298      	cmp	r0, r3
 80048d0:	d02f      	beq.n	8004932 <gd32_uart_begin+0x8e>
 80048d2:	f240 600e 	movw	r0, #1550	; 0x60e
 80048d6:	f7ff fb9f 	bl	8004018 <rcu_periph_clock_enable>
 80048da:	f240 6003 	movw	r0, #1539	; 0x603
 80048de:	f7ff fb9b 	bl	8004018 <rcu_periph_clock_enable>
 80048e2:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80048e6:	f7ff fb97 	bl	8004018 <rcu_periph_clock_enable>
 80048ea:	4b53      	ldr	r3, [pc, #332]	; (8004a38 <gd32_uart_begin+0x194>)
 80048ec:	429c      	cmp	r4, r3
 80048ee:	f000 8084 	beq.w	80049fa <gd32_uart_begin+0x156>
 80048f2:	d829      	bhi.n	8004948 <gd32_uart_begin+0xa4>
 80048f4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80048f8:	429c      	cmp	r4, r3
 80048fa:	d071      	beq.n	80049e0 <gd32_uart_begin+0x13c>
 80048fc:	4850      	ldr	r0, [pc, #320]	; (8004a40 <gd32_uart_begin+0x19c>)
 80048fe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004902:	2203      	movs	r2, #3
 8004904:	2118      	movs	r1, #24
 8004906:	f7ff faf9 	bl	8003efc <gpio_init>
 800490a:	484d      	ldr	r0, [pc, #308]	; (8004a40 <gd32_uart_begin+0x19c>)
 800490c:	2104      	movs	r1, #4
 800490e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8004912:	2203      	movs	r2, #3
 8004914:	f7ff faf2 	bl	8003efc <gpio_init>
 8004918:	484a      	ldr	r0, [pc, #296]	; (8004a44 <gd32_uart_begin+0x1a0>)
 800491a:	2101      	movs	r1, #1
 800491c:	e025      	b.n	800496a <gd32_uart_begin+0xc6>
 800491e:	f240 7011 	movw	r0, #1809	; 0x711
 8004922:	f7ff fb79 	bl	8004018 <rcu_periph_clock_enable>
 8004926:	f240 6002 	movw	r0, #1538	; 0x602
 800492a:	e7d8      	b.n	80048de <gd32_uart_begin+0x3a>
 800492c:	f240 7013 	movw	r0, #1811	; 0x713
 8004930:	e7c7      	b.n	80048c2 <gd32_uart_begin+0x1e>
 8004932:	f240 7014 	movw	r0, #1812	; 0x714
 8004936:	f7ff fb6f 	bl	8004018 <rcu_periph_clock_enable>
 800493a:	f240 6004 	movw	r0, #1540	; 0x604
 800493e:	f7ff fb6b 	bl	8004018 <rcu_periph_clock_enable>
 8004942:	f240 6005 	movw	r0, #1541	; 0x605
 8004946:	e7ca      	b.n	80048de <gd32_uart_begin+0x3a>
 8004948:	4b3c      	ldr	r3, [pc, #240]	; (8004a3c <gd32_uart_begin+0x198>)
 800494a:	429c      	cmp	r4, r3
 800494c:	d062      	beq.n	8004a14 <gd32_uart_begin+0x170>
 800494e:	483e      	ldr	r0, [pc, #248]	; (8004a48 <gd32_uart_begin+0x1a4>)
 8004950:	2340      	movs	r3, #64	; 0x40
 8004952:	2203      	movs	r2, #3
 8004954:	2118      	movs	r1, #24
 8004956:	f7ff fad1 	bl	8003efc <gpio_init>
 800495a:	483b      	ldr	r0, [pc, #236]	; (8004a48 <gd32_uart_begin+0x1a4>)
 800495c:	2104      	movs	r1, #4
 800495e:	2380      	movs	r3, #128	; 0x80
 8004960:	2203      	movs	r2, #3
 8004962:	f7ff facb 	bl	8003efc <gpio_init>
 8004966:	2101      	movs	r1, #1
 8004968:	2004      	movs	r0, #4
 800496a:	f7ff fb1d 	bl	8003fa8 <gpio_pin_remap_config>
 800496e:	4620      	mov	r0, r4
 8004970:	f7ff fcfa 	bl	8004368 <usart_deinit>
 8004974:	68e3      	ldr	r3, [r4, #12]
 8004976:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800497a:	60e3      	str	r3, [r4, #12]
 800497c:	4639      	mov	r1, r7
 800497e:	4620      	mov	r0, r4
 8004980:	f7ff fd32 	bl	80043e8 <usart_baudrate_set>
 8004984:	f1a5 0309 	sub.w	r3, r5, #9
 8004988:	4259      	negs	r1, r3
 800498a:	4159      	adcs	r1, r3
 800498c:	0309      	lsls	r1, r1, #12
 800498e:	4620      	mov	r0, r4
 8004990:	f7ff fd5a 	bl	8004448 <usart_word_length_set>
 8004994:	9906      	ldr	r1, [sp, #24]
 8004996:	1e8a      	subs	r2, r1, #2
 8004998:	4251      	negs	r1, r2
 800499a:	4151      	adcs	r1, r2
 800499c:	0349      	lsls	r1, r1, #13
 800499e:	4620      	mov	r0, r4
 80049a0:	f7ff fd5a 	bl	8004458 <usart_stop_bit_set>
 80049a4:	2e01      	cmp	r6, #1
 80049a6:	d041      	beq.n	8004a2c <gd32_uart_begin+0x188>
 80049a8:	2e02      	cmp	r6, #2
 80049aa:	d142      	bne.n	8004a32 <gd32_uart_begin+0x18e>
 80049ac:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80049b0:	4620      	mov	r0, r4
 80049b2:	f7ff fd41 	bl	8004438 <usart_parity_config>
 80049b6:	2100      	movs	r1, #0
 80049b8:	4620      	mov	r0, r4
 80049ba:	f7ff fd61 	bl	8004480 <usart_hardware_flow_rts_config>
 80049be:	2100      	movs	r1, #0
 80049c0:	4620      	mov	r0, r4
 80049c2:	f7ff fd63 	bl	800448c <usart_hardware_flow_cts_config>
 80049c6:	2104      	movs	r1, #4
 80049c8:	4620      	mov	r0, r4
 80049ca:	f7ff fd53 	bl	8004474 <usart_receive_config>
 80049ce:	2108      	movs	r1, #8
 80049d0:	4620      	mov	r0, r4
 80049d2:	f7ff fd49 	bl	8004468 <usart_transmit_config>
 80049d6:	68e3      	ldr	r3, [r4, #12]
 80049d8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80049dc:	60e3      	str	r3, [r4, #12]
 80049de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80049e0:	481a      	ldr	r0, [pc, #104]	; (8004a4c <gd32_uart_begin+0x1a8>)
 80049e2:	2304      	movs	r3, #4
 80049e4:	2203      	movs	r2, #3
 80049e6:	2118      	movs	r1, #24
 80049e8:	f7ff fa88 	bl	8003efc <gpio_init>
 80049ec:	4817      	ldr	r0, [pc, #92]	; (8004a4c <gd32_uart_begin+0x1a8>)
 80049ee:	2308      	movs	r3, #8
 80049f0:	2203      	movs	r2, #3
 80049f2:	2104      	movs	r1, #4
 80049f4:	f7ff fa82 	bl	8003efc <gpio_init>
 80049f8:	e7b9      	b.n	800496e <gd32_uart_begin+0xca>
 80049fa:	4811      	ldr	r0, [pc, #68]	; (8004a40 <gd32_uart_begin+0x19c>)
 80049fc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004a00:	2203      	movs	r2, #3
 8004a02:	2118      	movs	r1, #24
 8004a04:	f7ff fa7a 	bl	8003efc <gpio_init>
 8004a08:	480d      	ldr	r0, [pc, #52]	; (8004a40 <gd32_uart_begin+0x19c>)
 8004a0a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8004a0e:	2203      	movs	r2, #3
 8004a10:	2104      	movs	r1, #4
 8004a12:	e7ef      	b.n	80049f4 <gd32_uart_begin+0x150>
 8004a14:	480a      	ldr	r0, [pc, #40]	; (8004a40 <gd32_uart_begin+0x19c>)
 8004a16:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004a1a:	2203      	movs	r2, #3
 8004a1c:	2118      	movs	r1, #24
 8004a1e:	f7ff fa6d 	bl	8003efc <gpio_init>
 8004a22:	2304      	movs	r3, #4
 8004a24:	480a      	ldr	r0, [pc, #40]	; (8004a50 <gd32_uart_begin+0x1ac>)
 8004a26:	2203      	movs	r2, #3
 8004a28:	4619      	mov	r1, r3
 8004a2a:	e7e3      	b.n	80049f4 <gd32_uart_begin+0x150>
 8004a2c:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8004a30:	e7be      	b.n	80049b0 <gd32_uart_begin+0x10c>
 8004a32:	2100      	movs	r1, #0
 8004a34:	e7bc      	b.n	80049b0 <gd32_uart_begin+0x10c>
 8004a36:	bf00      	nop
 8004a38:	40004c00 	andmi	r4, r0, r0, lsl #24
 8004a3c:	40005000 	andmi	r5, r0, r0
 8004a40:	40011000 	andmi	r1, r1, r0
 8004a44:	00140010 	andseq	r0, r4, r0, lsl r0
 8004a48:	40010c00 	andmi	r0, r1, r0, lsl #24
 8004a4c:	40010800 	andmi	r0, r1, r0, lsl #16
 8004a50:	40011400 	andmi	r1, r1, r0, lsl #8

08004a54 <mac_address_get(unsigned char*)>:
 8004a54:	4a07      	ldr	r2, [pc, #28]	; (8004a74 <mac_address_get(unsigned char*)+0x20>)
 8004a56:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8004a5a:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8004a5e:	7042      	strb	r2, [r0, #1]
 8004a60:	0e1a      	lsrs	r2, r3, #24
 8004a62:	7082      	strb	r2, [r0, #2]
 8004a64:	0c1a      	lsrs	r2, r3, #16
 8004a66:	2102      	movs	r1, #2
 8004a68:	70c2      	strb	r2, [r0, #3]
 8004a6a:	0a1a      	lsrs	r2, r3, #8
 8004a6c:	7001      	strb	r1, [r0, #0]
 8004a6e:	7102      	strb	r2, [r0, #4]
 8004a70:	7143      	strb	r3, [r0, #5]
 8004a72:	4770      	bx	lr
 8004a74:	1ffff000 	svcne	0x00fff000

08004a78 <udelay_init()>:
 8004a78:	4a07      	ldr	r2, [pc, #28]	; (8004a98 <udelay_init()+0x20>)
 8004a7a:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8004a7e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004a82:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8004a86:	4b05      	ldr	r3, [pc, #20]	; (8004a9c <udelay_init()+0x24>)
 8004a88:	2200      	movs	r2, #0
 8004a8a:	605a      	str	r2, [r3, #4]
 8004a8c:	681a      	ldr	r2, [r3, #0]
 8004a8e:	f042 0201 	orr.w	r2, r2, #1
 8004a92:	601a      	str	r2, [r3, #0]
 8004a94:	4770      	bx	lr
 8004a96:	bf00      	nop
 8004a98:	e000ed00 	and	lr, r0, r0, lsl #26
 8004a9c:	e0001000 	and	r1, r0, r0

08004aa0 <udelay(unsigned long, unsigned long)>:
 8004aa0:	2378      	movs	r3, #120	; 0x78
 8004aa2:	b530      	push	{r4, r5, lr}
 8004aa4:	4358      	muls	r0, r3
 8004aa6:	b909      	cbnz	r1, 8004aac <udelay(unsigned long, unsigned long)+0xc>
 8004aa8:	4b08      	ldr	r3, [pc, #32]	; (8004acc <udelay(unsigned long, unsigned long)+0x2c>)
 8004aaa:	6859      	ldr	r1, [r3, #4]
 8004aac:	4c07      	ldr	r4, [pc, #28]	; (8004acc <udelay(unsigned long, unsigned long)+0x2c>)
 8004aae:	2300      	movs	r3, #0
 8004ab0:	6862      	ldr	r2, [r4, #4]
 8004ab2:	4291      	cmp	r1, r2
 8004ab4:	d0fc      	beq.n	8004ab0 <udelay(unsigned long, unsigned long)+0x10>
 8004ab6:	bf2a      	itet	cs
 8004ab8:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8004abc:	189b      	addcc	r3, r3, r2
 8004abe:	195b      	addcs	r3, r3, r5
 8004ac0:	1a5b      	subs	r3, r3, r1
 8004ac2:	4283      	cmp	r3, r0
 8004ac4:	d300      	bcc.n	8004ac8 <udelay(unsigned long, unsigned long)+0x28>
 8004ac6:	bd30      	pop	{r4, r5, pc}
 8004ac8:	4611      	mov	r1, r2
 8004aca:	e7f1      	b.n	8004ab0 <udelay(unsigned long, unsigned long)+0x10>
 8004acc:	e0001000 	and	r1, r0, r0

08004ad0 <adc_enable>:
 8004ad0:	6883      	ldr	r3, [r0, #8]
 8004ad2:	07db      	lsls	r3, r3, #31
 8004ad4:	bf5e      	ittt	pl
 8004ad6:	6883      	ldrpl	r3, [r0, #8]
 8004ad8:	f043 0301 	orrpl.w	r3, r3, #1
 8004adc:	6083      	strpl	r3, [r0, #8]
 8004ade:	4770      	bx	lr

08004ae0 <adc_calibration_enable>:
 8004ae0:	6883      	ldr	r3, [r0, #8]
 8004ae2:	f043 0308 	orr.w	r3, r3, #8
 8004ae6:	f100 0208 	add.w	r2, r0, #8
 8004aea:	6083      	str	r3, [r0, #8]
 8004aec:	6813      	ldr	r3, [r2, #0]
 8004aee:	0719      	lsls	r1, r3, #28
 8004af0:	d4fc      	bmi.n	8004aec <adc_calibration_enable+0xc>
 8004af2:	6883      	ldr	r3, [r0, #8]
 8004af4:	f043 0304 	orr.w	r3, r3, #4
 8004af8:	6083      	str	r3, [r0, #8]
 8004afa:	6813      	ldr	r3, [r2, #0]
 8004afc:	075b      	lsls	r3, r3, #29
 8004afe:	d4fc      	bmi.n	8004afa <adc_calibration_enable+0x1a>
 8004b00:	4770      	bx	lr
	...

08004b04 <adc_tempsensor_vrefint_enable>:
 8004b04:	4a03      	ldr	r2, [pc, #12]	; (8004b14 <adc_tempsensor_vrefint_enable+0x10>)
 8004b06:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8004b0a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8004b0e:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8004b12:	4770      	bx	lr
 8004b14:	40012000 	andmi	r2, r1, r0

08004b18 <adc_mode_config>:
 8004b18:	4b06      	ldr	r3, [pc, #24]	; (8004b34 <adc_mode_config+0x1c>)
 8004b1a:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8004b1e:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8004b22:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8004b26:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8004b2a:	4310      	orrs	r0, r2
 8004b2c:	f8c3 0404 	str.w	r0, [r3, #1028]	; 0x404
 8004b30:	4770      	bx	lr
 8004b32:	bf00      	nop
 8004b34:	40012000 	andmi	r2, r1, r0

08004b38 <adc_special_function_config>:
 8004b38:	b510      	push	{r4, lr}
 8004b3a:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8004b3e:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8004b42:	f001 0102 	and.w	r1, r1, #2
 8004b46:	b17a      	cbz	r2, 8004b68 <adc_special_function_config+0x30>
 8004b48:	b11b      	cbz	r3, 8004b52 <adc_special_function_config+0x1a>
 8004b4a:	6843      	ldr	r3, [r0, #4]
 8004b4c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004b50:	6043      	str	r3, [r0, #4]
 8004b52:	b11c      	cbz	r4, 8004b5c <adc_special_function_config+0x24>
 8004b54:	6843      	ldr	r3, [r0, #4]
 8004b56:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8004b5a:	6043      	str	r3, [r0, #4]
 8004b5c:	b119      	cbz	r1, 8004b66 <adc_special_function_config+0x2e>
 8004b5e:	6883      	ldr	r3, [r0, #8]
 8004b60:	f043 0302 	orr.w	r3, r3, #2
 8004b64:	6083      	str	r3, [r0, #8]
 8004b66:	bd10      	pop	{r4, pc}
 8004b68:	b11b      	cbz	r3, 8004b72 <adc_special_function_config+0x3a>
 8004b6a:	6843      	ldr	r3, [r0, #4]
 8004b6c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004b70:	6043      	str	r3, [r0, #4]
 8004b72:	b11c      	cbz	r4, 8004b7c <adc_special_function_config+0x44>
 8004b74:	6843      	ldr	r3, [r0, #4]
 8004b76:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8004b7a:	6043      	str	r3, [r0, #4]
 8004b7c:	2900      	cmp	r1, #0
 8004b7e:	d0f2      	beq.n	8004b66 <adc_special_function_config+0x2e>
 8004b80:	6883      	ldr	r3, [r0, #8]
 8004b82:	f023 0302 	bic.w	r3, r3, #2
 8004b86:	e7ed      	b.n	8004b64 <adc_special_function_config+0x2c>

08004b88 <adc_data_alignment_config>:
 8004b88:	6883      	ldr	r3, [r0, #8]
 8004b8a:	b119      	cbz	r1, 8004b94 <adc_data_alignment_config+0xc>
 8004b8c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8004b90:	6083      	str	r3, [r0, #8]
 8004b92:	4770      	bx	lr
 8004b94:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004b98:	e7fa      	b.n	8004b90 <adc_data_alignment_config+0x8>

08004b9a <adc_channel_length_config>:
 8004b9a:	2901      	cmp	r1, #1
 8004b9c:	d002      	beq.n	8004ba4 <adc_channel_length_config+0xa>
 8004b9e:	2902      	cmp	r1, #2
 8004ba0:	d00c      	beq.n	8004bbc <adc_channel_length_config+0x22>
 8004ba2:	4770      	bx	lr
 8004ba4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8004ba6:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8004baa:	62c3      	str	r3, [r0, #44]	; 0x2c
 8004bac:	3a01      	subs	r2, #1
 8004bae:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8004bb0:	0512      	lsls	r2, r2, #20
 8004bb2:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8004bb6:	431a      	orrs	r2, r3
 8004bb8:	62c2      	str	r2, [r0, #44]	; 0x2c
 8004bba:	4770      	bx	lr
 8004bbc:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8004bbe:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8004bc2:	6383      	str	r3, [r0, #56]	; 0x38
 8004bc4:	3a01      	subs	r2, #1
 8004bc6:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8004bc8:	0512      	lsls	r2, r2, #20
 8004bca:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8004bce:	431a      	orrs	r2, r3
 8004bd0:	6382      	str	r2, [r0, #56]	; 0x38
 8004bd2:	4770      	bx	lr

08004bd4 <adc_inserted_channel_config>:
 8004bd4:	b530      	push	{r4, r5, lr}
 8004bd6:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8004bd8:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8004bda:	f3c5 5501 	ubfx	r5, r5, #20, #2
 8004bde:	3103      	adds	r1, #3
 8004be0:	1b49      	subs	r1, r1, r5
 8004be2:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8004be6:	251f      	movs	r5, #31
 8004be8:	408d      	lsls	r5, r1
 8004bea:	ea24 0405 	bic.w	r4, r4, r5
 8004bee:	fa02 f101 	lsl.w	r1, r2, r1
 8004bf2:	4321      	orrs	r1, r4
 8004bf4:	2a09      	cmp	r2, #9
 8004bf6:	6381      	str	r1, [r0, #56]	; 0x38
 8004bf8:	d80a      	bhi.n	8004c10 <adc_inserted_channel_config+0x3c>
 8004bfa:	6901      	ldr	r1, [r0, #16]
 8004bfc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8004c00:	2407      	movs	r4, #7
 8004c02:	4094      	lsls	r4, r2
 8004c04:	ea21 0104 	bic.w	r1, r1, r4
 8004c08:	4093      	lsls	r3, r2
 8004c0a:	430b      	orrs	r3, r1
 8004c0c:	6103      	str	r3, [r0, #16]
 8004c0e:	bd30      	pop	{r4, r5, pc}
 8004c10:	2a11      	cmp	r2, #17
 8004c12:	d8fc      	bhi.n	8004c0e <adc_inserted_channel_config+0x3a>
 8004c14:	2103      	movs	r1, #3
 8004c16:	f06f 051d 	mvn.w	r5, #29
 8004c1a:	fb11 5202 	smlabb	r2, r1, r2, r5
 8004c1e:	68c4      	ldr	r4, [r0, #12]
 8004c20:	2107      	movs	r1, #7
 8004c22:	4091      	lsls	r1, r2
 8004c24:	ea24 0101 	bic.w	r1, r4, r1
 8004c28:	4093      	lsls	r3, r2
 8004c2a:	430b      	orrs	r3, r1
 8004c2c:	60c3      	str	r3, [r0, #12]
 8004c2e:	e7ee      	b.n	8004c0e <adc_inserted_channel_config+0x3a>

08004c30 <adc_external_trigger_config>:
 8004c30:	f001 0301 	and.w	r3, r1, #1
 8004c34:	f001 0102 	and.w	r1, r1, #2
 8004c38:	b152      	cbz	r2, 8004c50 <adc_external_trigger_config+0x20>
 8004c3a:	b11b      	cbz	r3, 8004c44 <adc_external_trigger_config+0x14>
 8004c3c:	6883      	ldr	r3, [r0, #8]
 8004c3e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004c42:	6083      	str	r3, [r0, #8]
 8004c44:	b119      	cbz	r1, 8004c4e <adc_external_trigger_config+0x1e>
 8004c46:	6883      	ldr	r3, [r0, #8]
 8004c48:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004c4c:	6083      	str	r3, [r0, #8]
 8004c4e:	4770      	bx	lr
 8004c50:	b11b      	cbz	r3, 8004c5a <adc_external_trigger_config+0x2a>
 8004c52:	6883      	ldr	r3, [r0, #8]
 8004c54:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8004c58:	6083      	str	r3, [r0, #8]
 8004c5a:	2900      	cmp	r1, #0
 8004c5c:	d0f7      	beq.n	8004c4e <adc_external_trigger_config+0x1e>
 8004c5e:	6883      	ldr	r3, [r0, #8]
 8004c60:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8004c64:	e7f2      	b.n	8004c4c <adc_external_trigger_config+0x1c>

08004c66 <adc_external_trigger_source_config>:
 8004c66:	2901      	cmp	r1, #1
 8004c68:	d002      	beq.n	8004c70 <adc_external_trigger_source_config+0xa>
 8004c6a:	2902      	cmp	r1, #2
 8004c6c:	d008      	beq.n	8004c80 <adc_external_trigger_source_config+0x1a>
 8004c6e:	4770      	bx	lr
 8004c70:	6883      	ldr	r3, [r0, #8]
 8004c72:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8004c76:	6083      	str	r3, [r0, #8]
 8004c78:	6883      	ldr	r3, [r0, #8]
 8004c7a:	4313      	orrs	r3, r2
 8004c7c:	6083      	str	r3, [r0, #8]
 8004c7e:	4770      	bx	lr
 8004c80:	6883      	ldr	r3, [r0, #8]
 8004c82:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004c86:	e7f6      	b.n	8004c76 <adc_external_trigger_source_config+0x10>

08004c88 <adc_software_trigger_enable>:
 8004c88:	07ca      	lsls	r2, r1, #31
 8004c8a:	bf42      	ittt	mi
 8004c8c:	6883      	ldrmi	r3, [r0, #8]
 8004c8e:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8004c92:	6083      	strmi	r3, [r0, #8]
 8004c94:	078b      	lsls	r3, r1, #30
 8004c96:	bf42      	ittt	mi
 8004c98:	6883      	ldrmi	r3, [r0, #8]
 8004c9a:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8004c9e:	6083      	strmi	r3, [r0, #8]
 8004ca0:	4770      	bx	lr
	...

08004ca4 <i2c_clock_config>:
 8004ca4:	b570      	push	{r4, r5, r6, lr}
 8004ca6:	4604      	mov	r4, r0
 8004ca8:	4616      	mov	r6, r2
 8004caa:	460d      	mov	r5, r1
 8004cac:	b901      	cbnz	r1, 8004cb0 <i2c_clock_config+0xc>
 8004cae:	e7fe      	b.n	8004cae <i2c_clock_config+0xa>
 8004cb0:	2002      	movs	r0, #2
 8004cb2:	f7ff f9ff 	bl	80040b4 <rcu_clock_freq_get>
 8004cb6:	4a39      	ldr	r2, [pc, #228]	; (8004d9c <i2c_clock_config+0xf8>)
 8004cb8:	4939      	ldr	r1, [pc, #228]	; (8004da0 <i2c_clock_config+0xfc>)
 8004cba:	fbb0 f1f1 	udiv	r1, r0, r1
 8004cbe:	4290      	cmp	r0, r2
 8004cc0:	bf34      	ite	cc
 8004cc2:	460b      	movcc	r3, r1
 8004cc4:	233c      	movcs	r3, #60	; 0x3c
 8004cc6:	6862      	ldr	r2, [r4, #4]
 8004cc8:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8004ccc:	431a      	orrs	r2, r3
 8004cce:	6062      	str	r2, [r4, #4]
 8004cd0:	4a34      	ldr	r2, [pc, #208]	; (8004da4 <i2c_clock_config+0x100>)
 8004cd2:	4295      	cmp	r5, r2
 8004cd4:	d816      	bhi.n	8004d04 <i2c_clock_config+0x60>
 8004cd6:	3101      	adds	r1, #1
 8004cd8:	293b      	cmp	r1, #59	; 0x3b
 8004cda:	d90d      	bls.n	8004cf8 <i2c_clock_config+0x54>
 8004cdc:	233c      	movs	r3, #60	; 0x3c
 8004cde:	6223      	str	r3, [r4, #32]
 8004ce0:	006d      	lsls	r5, r5, #1
 8004ce2:	fbb0 f0f5 	udiv	r0, r0, r5
 8004ce6:	2804      	cmp	r0, #4
 8004ce8:	69e3      	ldr	r3, [r4, #28]
 8004cea:	bf38      	it	cc
 8004cec:	2004      	movcc	r0, #4
 8004cee:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8004cf2:	4318      	orrs	r0, r3
 8004cf4:	61e0      	str	r0, [r4, #28]
 8004cf6:	bd70      	pop	{r4, r5, r6, pc}
 8004cf8:	2902      	cmp	r1, #2
 8004cfa:	d801      	bhi.n	8004d00 <i2c_clock_config+0x5c>
 8004cfc:	2302      	movs	r3, #2
 8004cfe:	e7ee      	b.n	8004cde <i2c_clock_config+0x3a>
 8004d00:	6221      	str	r1, [r4, #32]
 8004d02:	e7ed      	b.n	8004ce0 <i2c_clock_config+0x3c>
 8004d04:	4a28      	ldr	r2, [pc, #160]	; (8004da8 <i2c_clock_config+0x104>)
 8004d06:	4295      	cmp	r5, r2
 8004d08:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004d0c:	d824      	bhi.n	8004d58 <i2c_clock_config+0xb4>
 8004d0e:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8004d12:	4353      	muls	r3, r2
 8004d14:	fbb3 f3f1 	udiv	r3, r3, r1
 8004d18:	3301      	adds	r3, #1
 8004d1a:	6223      	str	r3, [r4, #32]
 8004d1c:	b9a6      	cbnz	r6, 8004d48 <i2c_clock_config+0xa4>
 8004d1e:	eb05 0345 	add.w	r3, r5, r5, lsl #1
 8004d22:	fbb0 f0f3 	udiv	r0, r0, r3
 8004d26:	69e3      	ldr	r3, [r4, #28]
 8004d28:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8004d2c:	61e3      	str	r3, [r4, #28]
 8004d2e:	f3c0 030b 	ubfx	r3, r0, #0, #12
 8004d32:	b90b      	cbnz	r3, 8004d38 <i2c_clock_config+0x94>
 8004d34:	f040 0001 	orr.w	r0, r0, #1
 8004d38:	69e3      	ldr	r3, [r4, #28]
 8004d3a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004d3e:	61e3      	str	r3, [r4, #28]
 8004d40:	69e3      	ldr	r3, [r4, #28]
 8004d42:	4303      	orrs	r3, r0
 8004d44:	61e3      	str	r3, [r4, #28]
 8004d46:	e7d6      	b.n	8004cf6 <i2c_clock_config+0x52>
 8004d48:	2319      	movs	r3, #25
 8004d4a:	436b      	muls	r3, r5
 8004d4c:	fbb0 f0f3 	udiv	r0, r0, r3
 8004d50:	69e3      	ldr	r3, [r4, #28]
 8004d52:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004d56:	e7e9      	b.n	8004d2c <i2c_clock_config+0x88>
 8004d58:	2278      	movs	r2, #120	; 0x78
 8004d5a:	4353      	muls	r3, r2
 8004d5c:	fbb3 f3f1 	udiv	r3, r3, r1
 8004d60:	3301      	adds	r3, #1
 8004d62:	6223      	str	r3, [r4, #32]
 8004d64:	b996      	cbnz	r6, 8004d8c <i2c_clock_config+0xe8>
 8004d66:	69e3      	ldr	r3, [r4, #28]
 8004d68:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8004d6c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004d70:	fbb0 f0f5 	udiv	r0, r0, r5
 8004d74:	61e3      	str	r3, [r4, #28]
 8004d76:	69e3      	ldr	r3, [r4, #28]
 8004d78:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004d7c:	61e3      	str	r3, [r4, #28]
 8004d7e:	69e3      	ldr	r3, [r4, #28]
 8004d80:	4303      	orrs	r3, r0
 8004d82:	61e3      	str	r3, [r4, #28]
 8004d84:	2301      	movs	r3, #1
 8004d86:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 8004d8a:	e7b4      	b.n	8004cf6 <i2c_clock_config+0x52>
 8004d8c:	2319      	movs	r3, #25
 8004d8e:	435d      	muls	r5, r3
 8004d90:	69e3      	ldr	r3, [r4, #28]
 8004d92:	fbb0 f0f5 	udiv	r0, r0, r5
 8004d96:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004d9a:	e7eb      	b.n	8004d74 <i2c_clock_config+0xd0>
 8004d9c:	03938700 	orrseq	r8, r3, #0, 14
 8004da0:	000f4240 	andeq	r4, pc, r0, asr #4
 8004da4:	000186a0 	andeq	r8, r1, r0, lsr #13
 8004da8:	00061a80 	andeq	r1, r6, r0, lsl #21

08004dac <i2c_ack_config>:
 8004dac:	6803      	ldr	r3, [r0, #0]
 8004dae:	2901      	cmp	r1, #1
 8004db0:	bf0c      	ite	eq
 8004db2:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8004db6:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8004dba:	6003      	str	r3, [r0, #0]
 8004dbc:	4770      	bx	lr

08004dbe <i2c_ackpos_config>:
 8004dbe:	6803      	ldr	r3, [r0, #0]
 8004dc0:	b919      	cbnz	r1, 8004dca <i2c_ackpos_config+0xc>
 8004dc2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8004dc6:	6003      	str	r3, [r0, #0]
 8004dc8:	4770      	bx	lr
 8004dca:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004dce:	e7fa      	b.n	8004dc6 <i2c_ackpos_config+0x8>

08004dd0 <i2c_master_addressing>:
 8004dd0:	3202      	adds	r2, #2
 8004dd2:	bf0c      	ite	eq
 8004dd4:	f021 0101 	biceq.w	r1, r1, #1
 8004dd8:	f041 0101 	orrne.w	r1, r1, #1
 8004ddc:	6101      	str	r1, [r0, #16]
 8004dde:	4770      	bx	lr

08004de0 <i2c_enable>:
 8004de0:	6803      	ldr	r3, [r0, #0]
 8004de2:	f043 0301 	orr.w	r3, r3, #1
 8004de6:	6003      	str	r3, [r0, #0]
 8004de8:	4770      	bx	lr

08004dea <i2c_start_on_bus>:
 8004dea:	6803      	ldr	r3, [r0, #0]
 8004dec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004df0:	6003      	str	r3, [r0, #0]
 8004df2:	4770      	bx	lr

08004df4 <i2c_stop_on_bus>:
 8004df4:	6803      	ldr	r3, [r0, #0]
 8004df6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004dfa:	6003      	str	r3, [r0, #0]
 8004dfc:	4770      	bx	lr

08004dfe <i2c_data_transmit>:
 8004dfe:	6101      	str	r1, [r0, #16]
 8004e00:	4770      	bx	lr

08004e02 <i2c_data_receive>:
 8004e02:	6900      	ldr	r0, [r0, #16]
 8004e04:	b2c0      	uxtb	r0, r0
 8004e06:	4770      	bx	lr

08004e08 <i2c_flag_get>:
 8004e08:	098b      	lsrs	r3, r1, #6
 8004e0a:	f001 011f 	and.w	r1, r1, #31
 8004e0e:	5818      	ldr	r0, [r3, r0]
 8004e10:	40c8      	lsrs	r0, r1
 8004e12:	f000 0001 	and.w	r0, r0, #1
 8004e16:	4770      	bx	lr

08004e18 <i2c_flag_clear>:
 8004e18:	f240 5301 	movw	r3, #1281	; 0x501
 8004e1c:	4299      	cmp	r1, r3
 8004e1e:	b510      	push	{r4, lr}
 8004e20:	d102      	bne.n	8004e28 <i2c_flag_clear+0x10>
 8004e22:	6943      	ldr	r3, [r0, #20]
 8004e24:	6983      	ldr	r3, [r0, #24]
 8004e26:	bd10      	pop	{r4, pc}
 8004e28:	098c      	lsrs	r4, r1, #6
 8004e2a:	2201      	movs	r2, #1
 8004e2c:	5823      	ldr	r3, [r4, r0]
 8004e2e:	f001 011f 	and.w	r1, r1, #31
 8004e32:	408a      	lsls	r2, r1
 8004e34:	ea23 0302 	bic.w	r3, r3, r2
 8004e38:	5023      	str	r3, [r4, r0]
 8004e3a:	e7f4      	b.n	8004e26 <i2c_flag_clear+0xe>

08004e3c <_etext>:
 8004e3c:	0000      	movs	r0, r0
	...

Disassembly of section .rodata:

08004e40 <deviceLabel-0x100>:
	...
 8004e48:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8004e4c:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8004e50:	00000000 	andeq	r0, r0, r0
 8004e54:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8004e58:	2074634f 	rsbscs	r6, r4, pc, asr #6
 8004e5c:	32203820 	eorcc	r3, r0, #32, 16	; 0x200000
 8004e60:	00333230 	eorseq	r3, r3, r0, lsr r2
 8004e64:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8004e68:	33303346 	teqcc	r0, #402653185	; 0x18000001
 8004e6c:	5b004352 	blpl	8015bbc <_sidata+0x1050c>
 8004e70:	5d732556 	cfldr64pl	mvdx2, [r3, #-344]!	; 0xfffffea8
 8004e74:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8004e78:	706d6f43 	rsbvc	r6, sp, r3, asr #30
 8004e7c:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 8004e80:	206e6f20 	rsbcs	r6, lr, r0, lsr #30
 8004e84:	61207325 			; <UNDEFINED> instruction: 0x61207325
 8004e88:	73252074 			; <UNDEFINED> instruction: 0x73252074
 8004e8c:	3131000a 	teqcc	r1, sl
 8004e90:	3a35323a 	bcc	8d51780 <_sidata+0xd4c0d0>
 8004e94:	52003734 	andpl	r3, r0, #52, 14	; 0xd00000
 8004e98:	43204d44 			; <UNDEFINED> instruction: 0x43204d44
 8004e9c:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 8004ea0:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 8004ea4:	69772072 	ldmdbvs	r7!, {r1, r4, r5, r6, sp}^
 8004ea8:	55206874 	strpl	r6, [r0, #-2164]!	; 0xfffff78c
 8004eac:	5b204253 	blpl	8815800 <_sidata+0x810150>
 8004eb0:	706d6f43 	rsbvc	r6, sp, r3, asr #30
 8004eb4:	62697461 	rsbvs	r7, r9, #1627389952	; 0x61000000
 8004eb8:	7720656c 	strvc	r6, [r0, -ip, ror #10]!
 8004ebc:	20687469 	rsbcs	r7, r8, r9, ror #8
 8004ec0:	74746e45 	ldrbtvc	r6, [r4], #-3653	; 0xfffff1bb
 8004ec4:	55206365 	strpl	r6, [r0, #-869]!	; 0xfffffc9b
 8004ec8:	50204253 	eorpl	r4, r0, r3, asr r2
 8004ecc:	70206f72 	eorvc	r6, r0, r2, ror pc
 8004ed0:	6f746f72 	svcvs	0x00746f72
 8004ed4:	5d6c6f63 	stclpl	15, cr6, [ip, #-396]!	; 0xfffffe74
 8004ed8:	6957202c 	ldmdbvs	r7, {r2, r3, r5, sp}^
 8004edc:	74656764 	strbtvc	r6, [r5], #-1892	; 0xfffff89c
 8004ee0:	646f6d20 	strbtvs	r6, [pc], #-3360	; 8004ee8 <__init_array_end+0xa8>
 8004ee4:	203a2065 	eorscs	r2, sl, r5, rrx
 8004ee8:	28206425 	stmdacs	r0!, {r0, r2, r5, sl, sp, lr}
 8004eec:	0a297325 	beq	8a61b88 <_sidata+0xa5c4d8>
 8004ef0:	76654400 	strbtvc	r4, [r5], -r0, lsl #8
 8004ef4:	20656369 	rsbcs	r6, r5, r9, ror #6
 8004ef8:	44495555 	strbmi	r5, [r9], #-1365	; 0xfffffaab
 8004efc:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8004f00:	2578322e 	ldrbcs	r3, [r8, #-558]!	; 0xfffffdd2
 8004f04:	3a78322e 	bcc	9e117c4 <_sidata+0x1e0c114>
 8004f08:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8004f0c:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8004f10:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8004f14:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8004f18:	4c00202c 	stcmi	0, cr2, [r0], {44}	; 0x2c
 8004f1c:	6c656261 	sfmvs	f6, 2, [r5], #-388	; 0xfffffe7c
 8004f20:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8004f24:	0a732a2e 	beq	9ccf7e4 <_sidata+0x1cca134>
 8004f28:	33444700 	movtcc	r4, #18176	; 0x4700
 8004f2c:	30314632 	eorscc	r4, r1, r2, lsr r6
 8004f30:	20435233 	subcs	r5, r3, r3, lsr r2
 8004f34:	20584d44 	subscs	r4, r8, r4, asr #26
 8004f38:	20425355 	subcs	r5, r2, r5, asr r3
 8004f3c:	006f7250 	rsbeq	r7, pc, r0, asr r2	; <UNPREDICTABLE>

08004f40 <deviceLabel>:
 8004f40:	08004f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, lr}
 8004f44:	00000016 	andeq	r0, r0, r6, lsl r0

08004f48 <SOFTWARE_VERSION>:
 8004f48:	00302e32 	eorseq	r2, r0, r2, lsr lr

08004f4c <widget_mode_names>:
 8004f4c:	5f584d44 	svcpl	0x00584d44
 8004f50:	004d4452 	subeq	r4, sp, r2, asr r4
 8004f54:	00000000 	andeq	r0, r0, r0
 8004f58:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8004f64:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8004f70:	5f4d4452 	svcpl	0x004d4452
 8004f74:	46494e53 			; <UNDEFINED> instruction: 0x46494e53
 8004f78:	00524546 	subseq	r4, r2, r6, asr #10
 8004f7c:	5f544547 	svcpl	0x00544547
 8004f80:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 8004f84:	505f5445 	subspl	r5, pc, r5, asr #8
 8004f88:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 8004f8c:	45525f53 	ldrbmi	r5, [r2, #-3923]	; 0xfffff0ad
 8004f90:	00594c50 	subseq	r4, r9, r0, asr ip
 8004f94:	5f544553 	svcpl	0x00544553
 8004f98:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 8004f9c:	505f5445 	subspl	r5, pc, r5, asr #8
 8004fa0:	4d415241 	sfmmi	f5, 2, [r1, #-260]	; 0xfffffefc
 8004fa4:	45520053 	ldrbmi	r0, [r2, #-83]	; 0xffffffad
 8004fa8:	56494543 	strbpl	r4, [r9], -r3, asr #10
 8004fac:	445f4445 	ldrbmi	r4, [pc], #-1093	; 8004fb4 <widget_mode_names+0x68>
 8004fb0:	505f584d 	subspl	r5, pc, sp, asr #16
 8004fb4:	454b4341 	strbmi	r4, [fp, #-833]	; 0xfffffcbf
 8004fb8:	65530054 	ldrbvs	r0, [r3, #-84]	; 0xffffffac
 8004fbc:	4420646e 	strtmi	r6, [r0], #-1134	; 0xfffffb92
 8004fc0:	6420584d 	strtvs	r5, [r0], #-2125	; 0xfffff7b3
 8004fc4:	20617461 	rsbcs	r7, r1, r1, ror #8
 8004fc8:	48206f74 	stmdami	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}
 8004fcc:	2c54534f 	mrrccs	3, 4, r5, r4, cr15
 8004fd0:	00642520 	rsbeq	r2, r4, r0, lsr #10
 8004fd4:	5054554f 	subspl	r5, r4, pc, asr #10
 8004fd8:	4f5f5455 	svcmi	0x005f5455
 8004fdc:	5f594c4e 	svcpl	0x00594c4e
 8004fe0:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 8004fe4:	584d445f 	stmdapl	sp, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8004fe8:	4341505f 	movtmi	r5, #4191	; 0x105f
 8004fec:	5f54454b 	svcpl	0x0054454b
 8004ff0:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 8004ff4:	00545345 	subseq	r5, r4, r5, asr #6
 8004ff8:	444e4553 	strbmi	r4, [lr], #-1363	; 0xfffffaad
 8004ffc:	4d44525f 	sfmmi	f5, 2, [r4, #-380]	; 0xfffffe84
 8005000:	4341505f 	movtmi	r5, #4191	; 0x105f
 8005004:	5f54454b 	svcpl	0x0054454b
 8005008:	55514552 	ldrbpl	r4, [r1, #-1362]	; 0xfffffaae
 800500c:	00545345 	subseq	r5, r4, r5, asr #6
 8005010:	45434552 	strbmi	r4, [r3, #-1362]	; 0xfffffaae
 8005014:	5f455649 	svcpl	0x00455649
 8005018:	5f584d44 	svcpl	0x00584d44
 800501c:	435f4e4f 	cmpmi	pc, #1264	; 0x4f0
 8005020:	474e4148 	strbmi	r4, [lr, -r8, asr #2]
 8005024:	45520045 	ldrbmi	r0, [r2, #-69]	; 0xffffffbb
 8005028:	56494543 	strbpl	r4, [r9], -r3, asr #10
 800502c:	445f4445 	ldrbmi	r4, [pc], #-1093	; 8005034 <widget_mode_names+0xe8>
 8005030:	435f584d 	cmpmi	pc, #5046272	; 0x4d0000
 8005034:	545f534f 	ldrbpl	r5, [pc], #-847	; 800503c <widget_mode_names+0xf0>
 8005038:	00455059 	subeq	r5, r5, r9, asr r0
 800503c:	746e6553 	strbtvc	r6, [lr], #-1363	; 0xfffffaad
 8005040:	61686320 	cmnvs	r8, r0, lsr #6
 8005044:	6465676e 	strbtvs	r6, [r5], #-1902	; 0xfffff892
 8005048:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 800504c:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 8005050:	6f742061 	svcvs	0x00742061
 8005054:	534f4820 	movtpl	r4, #63520	; 0xf820
 8005058:	45530054 	ldrbmi	r0, [r3, #-84]	; 0xffffffac
 800505c:	525f444e 	subspl	r4, pc, #1308622848	; 0x4e000000
 8005060:	445f4d44 	ldrbmi	r4, [pc], #-3396	; 8005068 <widget_mode_names+0x11c>
 8005064:	4f435349 	svcmi	0x00435349
 8005068:	59524556 	ldmdbpl	r2, {r1, r2, r4, r6, r8, sl, lr}^
 800506c:	5145525f 	cmppl	r5, pc, asr r2
 8005070:	54534555 	ldrbpl	r4, [r3], #-1365	; 0xfffffaab
 8005074:	6e655300 	cdpvs	3, 6, cr5, cr5, cr0, {0}
 8005078:	44522064 	ldrbmi	r2, [r2], #-100	; 0xffffff9c
 800507c:	6164204d 	cmnvs	r4, sp, asr #32
 8005080:	74206174 	strtvc	r6, [r0], #-372	; 0xfffffe8c
 8005084:	4f48206f 	svcmi	0x0048206f
 8005088:	202c5453 	eorcs	r5, ip, r3, asr r4
 800508c:	64253a6c 	strtvs	r3, [r5], #-2668	; 0xfffff594
 8005090:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 8005094:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
 8005098:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
 800509c:	43455200 	movtmi	r5, #20992	; 0x5200
 80050a0:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 80050a4:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 80050a8:	41505f4d 	cmpmi	r0, sp, asr #30
 80050ac:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 80050b0:	3a435320 	bcc	90d9d38 <_sidata+0x10d4688>
 80050b4:	43437830 	movtmi	r7, #14384	; 0x3830
 80050b8:	43455200 	movtmi	r5, #20992	; 0x5200
 80050bc:	45564945 	ldrbmi	r4, [r6, #-2373]	; 0xfffff6bb
 80050c0:	44525f44 	ldrbmi	r5, [r2], #-3908	; 0xfffff0bc
 80050c4:	41505f4d 	cmpmi	r0, sp, asr #30
 80050c8:	54454b43 	strbpl	r4, [r5], #-2883	; 0xfffff4bd
 80050cc:	3a435320 	bcc	90d9d54 <_sidata+0x10d46a4>
 80050d0:	45467830 	strbmi	r7, [r6, #-2096]	; 0xfffff7d0
 80050d4:	4e414d00 	cdpmi	13, 4, cr4, cr1, cr0, {0}
 80050d8:	43414655 	movtmi	r4, #5717	; 0x1655
 80050dc:	45525554 	ldrbmi	r5, [r2, #-1364]	; 0xfffffaac
 80050e0:	414c5f52 	cmpmi	ip, r2, asr pc
 80050e4:	004c4542 	subeq	r4, ip, r2, asr #10
 80050e8:	5f544547 	svcpl	0x00544547
 80050ec:	47444957 	smlsldmi	r4, r4, r7, r9	; <UNPREDICTABLE>
 80050f0:	4e5f5445 	cdpmi	4, 5, cr5, cr15, cr5, {2}
 80050f4:	5f454d41 	svcpl	0x00454d41
 80050f8:	4542414c 	strbmi	r4, [r2, #-332]	; 0xfffffeb4
 80050fc:	3a4c004c 	bcc	9305234 <_sidata+0x12ffb84>
 8005100:	253a6425 	ldrcs	r6, [sl, #-1061]!	; 0xfffffbdb
 8005104:	64252864 	strtvs	r2, [r5], #-2148	; 0xfffff79c
 8005108:	 	ldmdbvs	r7!, {r0, r3, r5}^

0800510a <WidgetParamsConst::WIDGET_MODE>:
 800510a:	67646977 			; <UNDEFINED> instruction: 0x67646977
 800510e:	6d5f7465 	cfldrdvs	mvd7, [pc, #-404]	; 8004f80 <widget_mode_names+0x34>
 8005112:	0065646f 	rsbeq	r6, r5, pc, ror #8

08005116 <WidgetParamsConst::DMXUSBPRO_MAB_TIME>:
 8005116:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 800511a:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 800511e:	616d5f6f 	cmnvs	sp, pc, ror #30
 8005122:	69745f62 	ldmdbvs	r4!, {r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 8005126:	 	strvs	r6, [r0], #-1389	; 0xfffffa93

08005129 <WidgetParamsConst::DMXUSBPRO_BREAK_TIME>:
 8005129:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 800512d:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8005131:	72625f6f 	rsbvc	r5, r2, #444	; 0x1bc
 8005135:	5f6b6165 	svcpl	0x006b6165
 8005139:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

0800513e <WidgetParamsConst::DMXUSBPRO_REFRESH_RATE>:
 800513e:	75786d64 	ldrbvc	r6, [r8, #-3428]!	; 0xfffff29c
 8005142:	72706273 	rsbsvc	r6, r0, #805306375	; 0x30000007
 8005146:	65725f6f 	ldrbvs	r5, [r2, #-3951]!	; 0xfffff091
 800514a:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 800514e:	61725f68 	cmnvs	r2, r8, ror #30
 8005152:	 	strvs	r6, [r0], #-1396	; 0xfffffa8c

08005155 <WidgetParamsConst::DMX_SEND_TO_HOST_THROTTLE>:
 8005155:	5f786d64 	svcpl	0x00786d64
 8005159:	646e6573 	strbtvs	r6, [lr], #-1395	; 0xfffffa8d
 800515d:	5f6f745f 	svcpl	0x006f745f
 8005161:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8005165:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
 8005169:	6c74746f 	cfldrdvs	mvd7, [r4], #-444	; 0xfffffe44
 800516d:	46210065 	strtmi	r0, [r1], -r5, rrx
 8005171:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8005175:	43202164 			; <UNDEFINED> instruction: 0x43202164
 8005179:	6f6e6e61 	svcvs	0x006e6e61
 800517d:	65732074 	ldrbvs	r2, [r3, #-116]!	; 0xffffff8c
 8005181:	7420646e 	strtvc	r6, [r0], #-1134	; 0xfffffb92
 8005185:	6f68206f 	svcvs	0x0068206f
 8005189:	53007473 	movwpl	r7, #1139	; 0x473
 800518d:	20646e65 	rsbcs	r6, r4, r5, ror #28
 8005191:	20584d44 	subscs	r4, r8, r4, asr #26
 8005195:	61746164 	cmnvs	r4, r4, ror #2
 8005199:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 800519d:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
 80051a1:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 80051a5:	53006425 	movwpl	r6, #1061	; 0x425
 80051a9:	20646e65 	rsbcs	r6, r4, r5, ror #28
 80051ad:	204d4452 	subcs	r4, sp, r2, asr r4
 80051b1:	61746164 	cmnvs	r4, r4, ror #2
 80051b5:	206f7420 	rsbcs	r7, pc, r0, lsr #8
 80051b9:	54534f48 	ldrbpl	r4, [r3], #-3912	; 0xfffff0b8
 80051bd:	44000000 	strmi	r0, [r0], #-0
 80051c1:	4144584d 	cmpmi	r4, sp, asr #16
 80051c5:	553a4154 	ldrpl	r4, [sl, #-340]!	; 0xfffffeac
 80051c9:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
 80051cd:	 	subseq	r0, r0, r2, lsr r0

080051cf <RDMConst::MANUFACTURER_ID>:
 80051cf:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

080051d1 <RDMConst::MANUFACTURER_NAME>:
 80051d1:	70747468 	rsbsvc	r7, r4, r8, ror #8
 80051d5:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 80051d9:	6f2e7777 	svcvs	0x002e7777
 80051dd:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 80051e1:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 80051e5:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 80051e9:	0067726f 	rsbeq	r7, r7, pc, ror #4

080051ed <DEVICE_LABEL>:
 80051ed:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 80051f1:	33303346 	teqcc	r0, #402653185	; 0x18000001
 80051f5:	52204352 	eorpl	r4, r0, #1207959553	; 0x48000001
 80051f9:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 80051fd:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8005201:	6f6c0065 	svcvs	0x006c0065
 8005205:	 	andvs	r0, r0, r0

08005208 <s_aStorSize>:
 8005208:	00000060 	andeq	r0, r0, r0, rrx
 800520c:	00000020 	andeq	r0, r0, r0, lsr #32
 8005210:	00000040 	andeq	r0, r0, r0, asr #32
 8005214:	00000040 	andeq	r0, r0, r0, asr #32
 8005218:	00000020 	andeq	r0, r0, r0, lsr #32
 800521c:	00000020 	andeq	r0, r0, r0, lsr #32
 8005220:	000001e0 	andeq	r0, r0, r0, ror #3
 8005224:	00000040 	andeq	r0, r0, r0, asr #32
 8005228:	00000020 	andeq	r0, r0, r0, lsr #32
 800522c:	00000060 	andeq	r0, r0, r0, rrx
 8005230:	00000030 	andeq	r0, r0, r0, lsr r0
 8005234:	00000020 	andeq	r0, r0, r0, lsr #32
 8005238:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 800523c:	00000030 	andeq	r0, r0, r0, lsr r0
 8005240:	00000040 	andeq	r0, r0, r0, asr #32
 8005244:	00000020 	andeq	r0, r0, r0, lsr #32
 8005248:	00000060 	andeq	r0, r0, r0, rrx
 800524c:	00000020 	andeq	r0, r0, r0, lsr #32
 8005250:	00000400 	andeq	r0, r0, r0, lsl #8
 8005254:	00000020 	andeq	r0, r0, r0, lsr #32
 8005258:	00000020 	andeq	r0, r0, r0, lsr #32
 800525c:	00000040 	andeq	r0, r0, r0, asr #32
 8005260:	00000060 	andeq	r0, r0, r0, rrx
 8005264:	00000020 	andeq	r0, r0, r0, lsr #32
 8005268:	00000020 	andeq	r0, r0, r0, lsr #32
 800526c:	00000140 	andeq	r0, r0, r0, asr #2

08005270 <s_aSignature>:
 8005270:	01567641 	cmpeq	r6, r1, asr #12

08005274 <vtable for StoreRDMDevice>:
	...
 800527c:	08002d3f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, sl, fp, sp}
 8005280:	08002dad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, sl, fp, sp}
 8005284:	08002d45 	stmdaeq	r0, {r0, r2, r6, r8, sl, fp, sp}
 8005288:	08002dc1 	stmdaeq	r0, {r0, r6, r7, r8, sl, fp, sp}
 800528c:	08002d69 	stmdaeq	r0, {r0, r3, r5, r6, r8, sl, fp, sp}
 8005290:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8005294:	00000000 	andeq	r0, r0, r0
 8005298:	08002d41 	stmdaeq	r0, {r0, r6, r8, sl, fp, sp}
 800529c:	08002db9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, sl, fp, sp}
 80052a0:	08002da5 	stmdaeq	r0, {r0, r2, r5, r7, r8, sl, fp, sp}

080052a4 <vtable for StoreWidget>:
	...
 80052ac:	08002df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, sp}
 80052b0:	08002e25 	stmdaeq	r0, {r0, r2, r5, r9, sl, fp, sp}
 80052b4:	08002e01 	stmdaeq	r0, {r0, r9, sl, fp, sp}
 80052b8:	08002e39 	stmdaeq	r0, {r0, r3, r4, r5, r9, sl, fp, sp}
 80052bc:	080018cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, fp, ip}
 80052c0:	08001901 	stmdaeq	r0, {r0, r8, fp, ip}
 80052c4:	08001935 	stmdaeq	r0, {r0, r2, r4, r5, r8, fp, ip}
 80052c8:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80052cc:	00000000 	andeq	r0, r0, r0
 80052d0:	08002dfb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r8, sl, fp, sp}
 80052d4:	08002e31 	stmdaeq	r0, {r0, r4, r5, r9, sl, fp, sp}
 80052d8:	080018f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, fp, ip}
 80052dc:	0800192d 	stmdaeq	r0, {r0, r2, r3, r5, r8, fp, ip}
 80052e0:	08001961 	stmdaeq	r0, {r0, r5, r6, r8, fp, ip}
 80052e4:	3a434d46 	bcc	90d8804 <_sidata+0x10d3154>
 80052e8:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 80052ec:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 80052f0:	73252064 			; <UNDEFINED> instruction: 0x73252064
 80052f4:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 80052f8:	6f742068 	svcvs	0x00742068
 80052fc:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8005300:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8005304:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8005308:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 800530c:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8005310:	6f4e000a 	svcvs	0x004e000a
 8005314:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8005318:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 800531c:	756f6620 	strbvc	r6, [pc, #-1568]!	; 8004d04 <i2c_clock_config+0x60>
 8005320:	5300646e 	movwpl	r6, #1134	; 0x46e
 8005324:	30313148 	eorscc	r3, r1, r8, asr #2
 8005328:	53530036 	cmppl	r3, #54	; 0x36
 800532c:	30333144 	eorscc	r3, r3, r4, asr #2
 8005330:	73250036 			; <UNDEFINED> instruction: 0x73250036
 8005334:	64252820 	strtvs	r2, [r5], #-2080	; 0xfffff7e0
 8005338:	2964252c 	stmdbcs	r4!, {r2, r3, r5, r8, sl, sp}^
 800533c:	aa40000a 	bge	900536c <_sidata+0xfffcbc>
 8005340:	00eeaaee 	rsceq	sl, lr, lr, ror #21

08005344 <_OledFont8x6>:
 8005344:	00000040 	andeq	r0, r0, r0, asr #32
 8005348:	40000000 	andmi	r0, r0, r0
 800534c:	005f0000 	subseq	r0, pc, r0
 8005350:	00400000 	subeq	r0, r0, r0
 8005354:	00070007 	andeq	r0, r7, r7
 8005358:	7f144000 	svcvc	0x00144000
 800535c:	00147f14 	andseq	r7, r4, r4, lsl pc
 8005360:	7f2a2440 	svcvc	0x002a2440
 8005364:	4000122a 	andmi	r1, r0, sl, lsr #4
 8005368:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 800536c:	36400062 	strbcc	r0, [r0], -r2, rrx
 8005370:	50205649 	eorpl	r5, r0, r9, asr #12
 8005374:	08004000 	stmdaeq	r0, {lr}
 8005378:	00000307 	andeq	r0, r0, r7, lsl #6
 800537c:	221c0040 	andscs	r0, ip, #64	; 0x40
 8005380:	40000041 	andmi	r0, r0, r1, asr #32
 8005384:	1c224100 	stfnes	f4, [r2], #-0
 8005388:	2a400000 	bcs	9005390 <_sidata+0xfffce0>
 800538c:	2a1c7f1c 	bcs	8725004 <_sidata+0x71f954>
 8005390:	08084000 	stmdaeq	r8, {lr}
 8005394:	0008083e 	andeq	r0, r8, lr, lsr r8
 8005398:	70800040 	addvc	r0, r0, r0, asr #32
 800539c:	40000030 	andmi	r0, r0, r0, lsr r0
 80053a0:	08080808 	stmdaeq	r8, {r3, fp}
 80053a4:	00400008 	subeq	r0, r0, r8
 80053a8:	00606000 	rsbeq	r6, r0, r0
 80053ac:	10204000 	eorne	r4, r0, r0
 80053b0:	00020408 	andeq	r0, r2, r8, lsl #8
 80053b4:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 80053b8:	40003e45 	andmi	r3, r0, r5, asr #28
 80053bc:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 80053c0:	72400000 	subvc	r0, r0, #0
 80053c4:	46494949 	strbmi	r4, [r9], -r9, asr #18
 80053c8:	41214000 			; <UNDEFINED> instruction: 0x41214000
 80053cc:	00334d49 	eorseq	r4, r3, r9, asr #26
 80053d0:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 80053d4:	4000107f 	andmi	r1, r0, pc, ror r0
 80053d8:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 80053dc:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 80053e0:	3149494a 	cmpcc	r9, sl, asr #18
 80053e4:	21414000 	mrscs	r4, (UNDEF: 65)
 80053e8:	00070911 	andeq	r0, r7, r1, lsl r9
 80053ec:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 80053f0:	40003649 	andmi	r3, r0, r9, asr #12
 80053f4:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 80053f8:	0040001e 	subeq	r0, r0, lr, lsl r0
 80053fc:	00001400 	andeq	r1, r0, r0, lsl #8
 8005400:	40004000 	andmi	r4, r0, r0
 8005404:	00000034 	andeq	r0, r0, r4, lsr r0
 8005408:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 800540c:	40004122 	andmi	r4, r0, r2, lsr #2
 8005410:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8005414:	00400014 	subeq	r0, r0, r4, lsl r0
 8005418:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 800541c:	01024000 	mrseq	r4, (UNDEF: 2)
 8005420:	00060959 	andeq	r0, r6, r9, asr r9
 8005424:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8005428:	40004e59 	andmi	r4, r0, r9, asr lr
 800542c:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8005430:	7f40007c 	svcvc	0x0040007c
 8005434:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8005438:	413e4000 	teqmi	lr, r0
 800543c:	00224141 	eoreq	r4, r2, r1, asr #2
 8005440:	41417f40 	cmpmi	r1, r0, asr #30
 8005444:	40003e41 	andmi	r3, r0, r1, asr #28
 8005448:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 800544c:	7f400041 	svcvc	0x00400041
 8005450:	01090909 	tsteq	r9, r9, lsl #18
 8005454:	413e4000 	teqmi	lr, r0
 8005458:	00735141 	rsbseq	r5, r3, r1, asr #2
 800545c:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8005460:	40007f08 	andmi	r7, r0, r8, lsl #30
 8005464:	417f4100 	cmnmi	pc, r0, lsl #2
 8005468:	20400000 	subcs	r0, r0, r0
 800546c:	013f4140 	teqeq	pc, r0, asr #2
 8005470:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8005474:	00412214 	subeq	r2, r1, r4, lsl r2
 8005478:	40407f40 	submi	r7, r0, r0, asr #30
 800547c:	40004040 	andmi	r4, r0, r0, asr #32
 8005480:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8005484:	7f40007f 	svcvc	0x0040007f
 8005488:	7f100804 	svcvc	0x00100804
 800548c:	413e4000 	teqmi	lr, r0
 8005490:	003e4141 	eorseq	r4, lr, r1, asr #2
 8005494:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8005498:	40000609 	andmi	r0, r0, r9, lsl #12
 800549c:	2151413e 	cmpcs	r1, lr, lsr r1
 80054a0:	7f40005e 	svcvc	0x0040005e
 80054a4:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 80054a8:	49264000 	stmdbmi	r6!, {lr}
 80054ac:	00324949 	eorseq	r4, r2, r9, asr #18
 80054b0:	7f010340 	svcvc	0x00010340
 80054b4:	40000301 	andmi	r0, r0, r1, lsl #6
 80054b8:	4040403f 	submi	r4, r0, pc, lsr r0
 80054bc:	1f40003f 	svcne	0x0040003f
 80054c0:	1f204020 	svcne	0x00204020
 80054c4:	403f4000 	eorsmi	r4, pc, r0
 80054c8:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 80054cc:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 80054d0:	40006314 	andmi	r6, r0, r4, lsl r3
 80054d4:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 80054d8:	61400003 	cmpvs	r0, r3
 80054dc:	434d4959 	movtmi	r4, #55641	; 0xd959
 80054e0:	7f004000 	svcvc	0x00004000
 80054e4:	00414141 	subeq	r4, r1, r1, asr #2
 80054e8:	08040240 	stmdaeq	r4, {r6, r9}
 80054ec:	40002010 	andmi	r2, r0, r0, lsl r0
 80054f0:	41414100 	mrsmi	r4, (UNDEF: 81)
 80054f4:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 80054f8:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 80054fc:	40404000 	submi	r4, r0, r0
 8005500:	00404040 	subeq	r4, r0, r0, asr #32
 8005504:	07030040 	streq	r0, [r3, -r0, asr #32]
 8005508:	40000008 	andmi	r0, r0, r8
 800550c:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8005510:	7f400040 	svcvc	0x00400040
 8005514:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8005518:	44384000 	ldrtmi	r4, [r8], #-0
 800551c:	00284444 	eoreq	r4, r8, r4, asr #8
 8005520:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8005524:	40007f28 	andmi	r7, r0, r8, lsr #30
 8005528:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 800552c:	00400018 	subeq	r0, r0, r8, lsl r0
 8005530:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8005534:	a4184000 	ldrge	r4, [r8], #-0
 8005538:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 800553c:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8005540:	40007804 	andmi	r7, r0, r4, lsl #16
 8005544:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8005548:	20400000 	subcs	r0, r0, r0
 800554c:	003d4040 	eorseq	r4, sp, r0, asr #32
 8005550:	107f4000 	rsbsne	r4, pc, r0
 8005554:	00004428 	andeq	r4, r0, r8, lsr #8
 8005558:	7f410040 	svcvc	0x00410040
 800555c:	40000040 	andmi	r0, r0, r0, asr #32
 8005560:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8005564:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8005568:	78040408 	stmdavc	r4, {r3, sl}
 800556c:	44384000 	ldrtmi	r4, [r8], #-0
 8005570:	00384444 	eorseq	r4, r8, r4, asr #8
 8005574:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8005578:	40001824 	andmi	r1, r0, r4, lsr #16
 800557c:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8005580:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8005584:	08040408 	stmdaeq	r4, {r3, sl}
 8005588:	54484000 	strbpl	r4, [r8], #-0
 800558c:	00245454 	eoreq	r5, r4, r4, asr r4
 8005590:	3f040440 	svccc	0x00040440
 8005594:	40002444 	andmi	r2, r0, r4, asr #8
 8005598:	2040403c 	subcs	r4, r0, ip, lsr r0
 800559c:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 80055a0:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 80055a4:	403c4000 	eorsmi	r4, ip, r0
 80055a8:	003c4030 	eorseq	r4, ip, r0, lsr r0
 80055ac:	10284440 	eorne	r4, r8, r0, asr #8
 80055b0:	40004428 	andmi	r4, r0, r8, lsr #8
 80055b4:	9090904c 	addsls	r9, r0, ip, asr #32
 80055b8:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 80055bc:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 80055c0:	08004000 	stmdaeq	r0, {lr}
 80055c4:	00004136 	andeq	r4, r0, r6, lsr r1
 80055c8:	77000040 	strvc	r0, [r0, -r0, asr #32]
 80055cc:	40000000 	andmi	r0, r0, r0
 80055d0:	08364100 	ldmdaeq	r6!, {r8, lr}
 80055d4:	02400000 	subeq	r0, r0, #0
 80055d8:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 80055dc:	263c4000 	ldrtcs	r4, [ip], -r0
 80055e0:	003c2623 	eorseq	r2, ip, r3, lsr #12

080055e4 <oled_128x32_init>:
 80055e4:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 80055e8:	4000d31f 	andmi	sp, r0, pc, lsl r3
 80055ec:	0020148d 	eoreq	r1, r0, sp, lsl #9
 80055f0:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 80055f4:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 80055f8:	a6a440db 	ssatge	r4, #5, fp, asr #1

080055fc <oled_128x64_init>:
 80055fc:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8005600:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8005604:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8005608:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 800560c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8005610:	a6a440db 	ssatge	r4, #5, fp, asr #1

08005614 <vtable for Ssd1306>:
	...
 800561c:	08003335 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, ip, sp}
 8005620:	08003361 	stmdaeq	r0, {r0, r5, r6, r8, r9, ip, sp}
 8005624:	08003699 	stmdaeq	r0, {r0, r3, r4, r7, r9, sl, ip, sp}
 8005628:	0800362d 	stmdaeq	r0, {r0, r2, r3, r5, r9, sl, ip, sp}
 800562c:	080034fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, ip, sp}
 8005630:	08003381 	stmdaeq	r0, {r0, r7, r8, r9, ip, sp}
 8005634:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8005638:	080034d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, sl, ip, sp}
 800563c:	0800348d 	stmdaeq	r0, {r0, r2, r3, r7, sl, ip, sp}
 8005640:	08003337 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, ip, sp}
 8005644:	0800353d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, sl, ip, sp}
 8005648:	08003549 	stmdaeq	r0, {r0, r3, r6, r8, sl, ip, sp}
 800564c:	08003561 	stmdaeq	r0, {r0, r5, r6, r8, sl, ip, sp}
 8005650:	08003339 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, ip, sp}
 8005654:	37335b1b 			; <UNDEFINED> instruction: 0x37335b1b
 8005658:	5b1b006d 	blpl	86c5814 <_sidata+0x6c0164>
 800565c:	006d3034 	rsbeq	r3, sp, r4, lsr r0
 8005660:	30335b1b 	eorscc	r5, r3, fp, lsl fp
 8005664:	5b1b006d 	blpl	86c5820 <_sidata+0x6c0170>
 8005668:	006d3133 	rsbeq	r3, sp, r3, lsr r1
 800566c:	32335b1b 	eorscc	r5, r3, #27648	; 0x6c00
 8005670:	5b1b006d 	blpl	86c582c <_sidata+0x6c017c>
 8005674:	006d3333 	rsbeq	r3, sp, r3, lsr r3
 8005678:	39335b1b 	ldmdbcc	r3!, {r0, r1, r3, r4, r8, r9, fp, ip, lr}
 800567c:	0000006d 	andeq	r0, r0, sp, rrx

08005680 <days_of_month>:
 8005680:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005684:	0000001c 	andeq	r0, r0, ip, lsl r0
 8005688:	0000001f 	andeq	r0, r0, pc, lsl r0
 800568c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005690:	0000001f 	andeq	r0, r0, pc, lsl r0
 8005694:	0000001e 	andeq	r0, r0, lr, lsl r0
 8005698:	0000001f 	andeq	r0, r0, pc, lsl r0
 800569c:	0000001f 	andeq	r0, r0, pc, lsl r0
 80056a0:	0000001e 	andeq	r0, r0, lr, lsl r0
 80056a4:	0000001f 	andeq	r0, r0, pc, lsl r0
 80056a8:	0000001e 	andeq	r0, r0, lr, lsl r0
 80056ac:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .stack:

20000000 <_sp-0x1000>:
	...

Disassembly of section .data:

20001000 <WidgetConfiguration::s_nMabTime>:
20001000:	 	andeq	r0, r4, #16384	; 0x4000

20001001 <WidgetConfiguration::s_nBreakTime>:
20001001:	 	stmdacs	r2, {r0, r3, sl}

20001002 <WidgetConfiguration::s_nFirmwareLsb>:
20001002:	 			; <UNDEFINED> instruction: 0x01280204

20001003 <WidgetConfiguration::s_nFirmwareMsb>:
20001003:	 	andeq	r2, r1, r2, lsl #16

20001004 <WidgetConfiguration::s_nRefreshRate>:
20001004:	 	andeq	r0, r0, r8, lsr #2

20001005 <WidgetConfiguration::s_aDeviceTypeId>:
20001005:	 	stceq	0, cr0, [r0], {1}

20001008 <s_nDmxTransmitMabTime>:
20001008:	0000000c 	andeq	r0, r0, ip

2000100c <s_nDmxTransmitBreakTime>:
2000100c:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>

20001010 <s_nDmxTransmitInterTime>:
20001010:	000008c0 	andeq	r0, r0, r0, asr #17

20001014 <next_block>:
20001014:	200027bc 			; <UNDEFINED> instruction: 0x200027bc

20001018 <s_block_bucket>:
20001018:	00000010 	andeq	r0, r0, r0, lsl r0
2000101c:	00000000 	andeq	r0, r0, r0
20001020:	00000020 	andeq	r0, r0, r0, lsr #32
20001024:	00000000 	andeq	r0, r0, r0
20001028:	00000040 	andeq	r0, r0, r0, asr #32
2000102c:	00000000 	andeq	r0, r0, r0
20001030:	00000060 	andeq	r0, r0, r0, rrx
20001034:	00000000 	andeq	r0, r0, r0
20001038:	00000080 	andeq	r0, r0, r0, lsl #1
2000103c:	00000000 	andeq	r0, r0, r0
20001040:	00000100 	andeq	r0, r0, r0, lsl #2
20001044:	00000000 	andeq	r0, r0, r0
20001048:	00000140 	andeq	r0, r0, r0, asr #2
2000104c:	00000000 	andeq	r0, r0, r0
20001050:	00000180 	andeq	r0, r0, r0, lsl #3
20001054:	00000000 	andeq	r0, r0, r0
20001058:	00000200 	andeq	r0, r0, r0, lsl #4
2000105c:	00000000 	andeq	r0, r0, r0
20001060:	00000300 	andeq	r0, r0, r0, lsl #6
20001064:	00000000 	andeq	r0, r0, r0
20001068:	00000400 	andeq	r0, r0, r0, lsl #8
2000106c:	00000000 	andeq	r0, r0, r0
20001070:	00000500 	andeq	r0, r0, r0, lsl #10
	...

20001080 <SystemCoreClock>:
20001080:	07270e00 	streq	r0, [r7, -r0, lsl #28]!

Disassembly of section .bss:

20001088 <outptr>:
20001088:	00000000 	andeq	r0, r0, r0

2000108c <Widget::s_pThis>:
2000108c:	00000000 	andeq	r0, r0, r0

20001090 <micros()::nMicrosPrevious>:
20001090:	00000000 	andeq	r0, r0, r0

20001094 <micros()::nResult>:
20001094:	00000000 	andeq	r0, r0, r0

20001098 <s_RxBuffer>:
	...

200012a8 <s_TxBuffer>:
	...

200014b4 <sv_PortState>:
200014b4:	00000000 	andeq	r0, r0, r0

200014b8 <s_RxDmxPrevious>:
	...

200016bc <sv_nRxDmxPackets>:
	...

200016cc <Dmx::s_pThis>:
200016cc:	00000000 	andeq	r0, r0, r0

200016d0 <gv_RdmDataReceiveEnd>:
200016d0:	00000000 	andeq	r0, r0, r0

200016d4 <Network::s_pThis>:
200016d4:	00000000 	andeq	r0, r0, r0

200016d8 <ConfigStore::s_nWaitMillis>:
200016d8:	00000000 	andeq	r0, r0, r0

200016dc <ConfigStore::s_SpiFlashData>:
	...

200026dc <ConfigStore::s_nStartAddress>:
200026dc:	00000000 	andeq	r0, r0, r0

200026e0 <ConfigStore::s_bHaveFlashChip>:
200026e0:	00000000 	andeq	r0, r0, r0

200026e4 <ConfigStore::s_nSpiFlashStoreSize>:
200026e4:	00000000 	andeq	r0, r0, r0

200026e8 <ConfigStore::s_State>:
200026e8:	00000000 	andeq	r0, r0, r0

200026ec <ConfigStore::s_pThis>:
200026ec:	00000000 	andeq	r0, r0, r0

200026f0 <StoreRDMDevice::s_pThis>:
200026f0:	00000000 	andeq	r0, r0, r0

200026f4 <StoreWidget::s_pThis>:
200026f4:	00000000 	andeq	r0, r0, r0

200026f8 <FlashCode::s_pThis>:
200026f8:	00000000 	andeq	r0, r0, r0

200026fc <flashcode::s_nAddress>:
200026fc:	00000000 	andeq	r0, r0, r0

20002700 <flashcode::s_State>:
20002700:	00000000 	andeq	r0, r0, r0

20002704 <flashcode::s_nPage>:
20002704:	00000000 	andeq	r0, r0, r0

20002708 <flashcode::s_pData>:
20002708:	00000000 	andeq	r0, r0, r0

2000270c <flashcode::s_isBank0>:
2000270c:	00000000 	andeq	r0, r0, r0

20002710 <flashcode::s_nLength>:
20002710:	00000000 	andeq	r0, r0, r0

20002714 <Display::s_pThis>:
20002714:	00000000 	andeq	r0, r0, r0

20002718 <_ClearBuffer>:
	...

200027a0 <Ssd1306::s_pThis>:
200027a0:	00000000 	andeq	r0, r0, r0

200027a4 <Hardware::s_pThis>:
200027a4:	00000000 	andeq	r0, r0, r0

200027a8 <s_micros>:
	...

200027b0 <set_timer>:
200027b0:	00000000 	andeq	r0, r0, r0

200027b4 <s_nSysTickMillis>:
200027b4:	00000000 	andeq	r0, r0, r0

200027b8 <s_nAddress>:
200027b8:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

200027bc <heap_low>:
	...
